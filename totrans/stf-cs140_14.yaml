- en: File System Crash Recovery
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统崩溃恢复
- en: Lecture Notes for CS 140
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: CS 140课程讲义
- en: Spring 2014
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 春季2014
- en: John Ousterhout
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 约翰·奥斯特豪特
- en: 'Readings for this topic from *Operating Systems: Principles and Practice*:
    Chapter 14 up through Section 14.1.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从《操作系统：原理与实践》这个主题的阅读材料：第14章直到第14.1节。
- en: 'The problem: crashes can happen anywhere, even in the middle of critical sections:'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：崩溃可能发生在任何地方，甚至在关键部分的中间：
- en: 'Lost data: information cached in main memory may not have been written to disk
    yet.'
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 丢失数据：在主存储器中缓存的信息可能尚未写入磁盘。
- en: 'E.g. original Unix: up to 30 seconds worth of changes'
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如原始Unix：最多30秒的更改
- en: 'Inconsistency:'
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不一致：
- en: If a modification affects multiple blocks, a crash could occur when some of
    the blocks have been written to disk but not the others.
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果修改涉及多个块，当一些块已写入磁盘但其他块尚未写入时，可能会发生崩溃。
- en: 'Examples:'
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例子：
- en: 'Adding block to file: free list was updated to indicate block in use, but file
    descriptor wasn''t yet written to point to block.'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加块到文件：空闲列表已更新以指示块正在使用，但文件描述符尚未写入指向块。
- en: 'Creating link to a file: new directory entry refers to file descriptor, but
    reference count wasn''t updated in file descriptor.'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建文件的链接：新目录条目引用文件描述符，但文件描述符中的引用计数未更新。
- en: Ideally, we'd like something like an atomic operation where multi-block operations
    happen either in their entirety or not at all.
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理想情况下，我们希望像原子操作一样，多块操作要么完全发生，要么根本不发生。
- en: 'Approach #1: check consistency during reboot, repair problems'
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方法#1：在重新启动期间检查一致性，修复问题
- en: 'Example: Unix fsck ("file system check")'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：Unix fsck（"文件系统检查"）
- en: During every system boot fsck is executed.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每次系统启动时都会执行fsck。
- en: Checks to see if disk was shut down cleanly; if so, no more work to do.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查磁盘是否干净关闭；如果是，则无需进行更多工作。
- en: If disk didn't shut down cleanly (e.g., system crash, power failure, etc.),
    then scan disk contents, identify inconsistencies, repair them.
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果磁盘没有干净关闭（例如，系统崩溃、断电等），则扫描磁盘内容，识别不一致之处，修复它们。
- en: 'Example: block in file and also in free list'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：文件中的块也在空闲列表中
- en: 'Example: reference count for a file descriptor doesn''t match the number of
    links in directories'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：文件描述符的引用计数与目录中的链接数不匹配
- en: 'Example: block in two different files'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：块在两个不同的文件中
- en: 'Example: file descriptor has a reference count > 0 but is not referenced in
    any directory.'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：文件描述符的引用计数> 0，但在任何目录中都没有引用。
- en: 'Limitations of fsck:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fsck的限制：
- en: Restores disk to consistency, but doesn't prevent loss of information; system
    could end up unusable.
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恢复磁盘一致性，但不能防止信息丢失；系统最终可能无法使用。
- en: 'Security issues: a block could migrate from the password file to some other
    random file.'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全问题：一个块可能从密码文件迁移到其他随机文件。
- en: 'Can take a long time: 1.5 hours to read every block in a medium-size disk today.
    Can''t restart system until fsck completes. As disks get larger, recovery time
    increases.'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能需要很长时间：今天读取中等大小磁盘中的每个块需要1.5小时。在fsck完成之前无法重新启动系统。随着磁盘变大，恢复时间会增加。
- en: 'Approach #2: ordered writes'
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方法#2：有序写入
- en: Prevent certain kinds of inconsistencies by making updates in a particular order.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过按特定顺序进行更新来防止某些类型的不一致。
- en: For example, when adding a block to a file, first write back the free list so
    that it no longer contains the file's new block.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，当向文件添加块时，首先写回空闲列表，以便它不再包含文件的新块。
- en: Then write the file descriptor, referring to the new block.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后编写文件描述符，参考新块。
- en: What can we say about the system state after a crash?
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 崩溃后系统状态如何？
- en: 'In general:'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般来说：
- en: Never write a pointer before initializing the block it points to (e.g., indirect
    block).
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在初始化指向的块之前永远不要写入指针（例如，间接块）。
- en: Never reuse a resource (inode, disk block, etc.) before nullifying all existing
    pointers to it.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在将所有现有指针置空之前，永远不要重复使用资源（inode、磁盘块等）。
- en: Never clear last pointer to a live resource before setting new pointer (e.g.
    mv).
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在设置新指针之前，永远不要清除对活动资源的最后一个指针（例如mv）。
- en: 'Result: no need to wait for fsck when rebooting'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果：重新启动时无需等待fsck
- en: 'Problems:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：
- en: Can leak resources (run fsck in background to reclaim leaked resources).
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能会泄漏资源（在后台运行fsck以回收泄漏的资源）。
- en: Requires lots of synchronous metadata writes, which slows down file operations.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要大量同步元数据写入，这会减慢文件操作速度。
- en: 'Improvement:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进：
- en: Don't actually write the blocks synchronously, but record dependencies in the
    buffer cache.
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上不同步写入块，而是在缓冲区缓存中记录依赖关系。
- en: For example, after adding a block to a file add dependency between file descriptor
    block and free list block.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，在向文件添加块后，在文件描述符块和空闲列表块之间添加依赖关系。
- en: When it's time to write the file descriptor back to disk, make sure that the
    free list block has been written first.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当需要将文件描述符写回磁盘时，请确保空闲列表块已经被首先写入。
- en: 'Tricky to get right: potentially end up with circular dependencies between
    blocks.'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 很难做到正确：可能最终出现块之间的循环依赖。
- en: 'Approach #3: write-ahead logging'
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方法#3：预写式日志记录
- en: Also called *journaling file systems*
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 也称为*日志文件系统*。
- en: Implemented in Linux ext3 and NTFS (Windows).
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Linux ext3和NTFS（Windows）中实现。
- en: Similar in function to logs in database systems; allows inconsistencies to be
    corrected quickly during reboots
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与数据库系统中的日志类似；允许在重新启动期间快速纠正不一致性。
- en: Before performing an operation, record information about the operation in a
    special append-only log file; flush this info to disk before modifying any other
    blocks.
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在执行操作之前，在一个特殊的只追加日志文件中记录有关操作的信息；在修改任何其他块之前将此信息刷新到磁盘。
- en: 'Example: adding a block to a file'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：向文件添加一个块
- en: 'Log entry: "I''m about to add block 99421 to file descriptor 862 at block index
    93"'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志条目：“我将在块索引93处向文件描述符862添加块99421”
- en: Then the actual block updates can be carried out later.
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后实际块更新可以稍后进行。
- en: If a crash occurs, replay the log to make sure all updates are completed on
    disk.
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果发生崩溃，请重放日志以确保所有更新都已在磁盘上完成。
- en: Guarantees that once an operation is started, it will eventually complete.
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保证一旦操作开始，它最终会完成。
- en: 'Problem: log grows over time, so recovery could be slow.'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题：日志随时间增长，因此恢复可能很慢。
- en: 'Solution: checkpoint'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案：检查点
- en: Occasionally stop and flush all dirty blocks to disk.
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 偶尔停止并刷新所有脏块到磁盘。
- en: Once this is done, the log can be cleared.
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦完成此操作，日志就可以被清除。
- en: Typically the log is used only for metadata (free list, file descriptors, indirect
    blocks), not for actual file data.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常日志仅用于元数据（空闲列表、文件描述符、间接块），而不用于实际文件数据。
- en: 'Logging advantages:'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志记录的优势：
- en: Recovery much faster.
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恢复速度更快。
- en: Eliminate inconsistencies such as blocks confused between files.
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消除诸如在文件之间混淆的块之类的不一致性。
- en: Log can be localized in one area of disk, so writes are faster (no seeks).
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志可以在磁盘的一个区域中本地化，因此写入速度更快（无需寻道）。
- en: Metadata writes can be delayed a long time, for better performance.
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元数据写入可以延迟很长时间，以获得更好的性能。
- en: 'Logging disadvantages:'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志记录的缺点：
- en: Synchronous disk write before every metadata operation.
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个元数据操作之前同步磁盘写入。
- en: Remaining problems
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 仍然存在问题
- en: Can still lose recently-written data after crash
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在崩溃后仍然可能丢失最近写入的数据
- en: 'Solution: apps can use fsync to force data to disk.'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案：应用程序可以使用fsync强制数据写入磁盘。
- en: Disks fail
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘故障
- en: One of the greatest causes of problems in large datacenters
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大型数据中心中问题的最大原因之一
- en: 'Solution: replication or backup copies (e.g., on tape)'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案：复制或备份副本（例如，磁带上）
- en: 'Disk writes are not atomic:'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘写入不是原子性的：
- en: If a block is being written at the time of the crash, it may be left in inconsistent
    state (neither old contents nor new).
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在崩溃时正在写入块，则可能会使其处于不一致状态（既不是旧内容也不是新内容）。
- en: At the level of sectors, inconsistencies are detectable; after crash, sector
    will be either
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在扇区级别，不一致性是可检测的；崩溃后，扇区将是
- en: Old contents
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旧内容
- en: New contents
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新内容
- en: Unreadable trash
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法读取的垃圾
- en: 'But, blocks are typically multiple sectors. After crash:'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是，块通常是多个扇区。崩溃后：
- en: Sectors 0-5 of block may have new contents.
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 块的第0-5扇区可能包含新内容。
- en: Sectors 6-7 of block may have old contents.
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 块的第6-7扇区可能包含旧内容。
- en: 'Example: appending to log'
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：追加到日志
- en: If adding new log entries to an existing log block, crash could cause old info
    in the block to be lost.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果向现有日志块添加新的日志条目，崩溃可能导致块中的旧信息丢失。
- en: 'Solution:'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案：
- en: Replicated log writes (if crash corrupts one of the logs, the other will still
    be safe).
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制日志写入（如果崩溃损坏其中一个日志，则另一个仍将是安全的）。
- en: Add checksums and/or versions to detect incomplete writes.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加校验和和/或版本以检测不完整的写入。
- en: 'Conclusions:'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结论：
- en: To get highest performance, must give up some crash recovery capability.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了获得最高性能，必须放弃一些崩溃恢复能力。
- en: Must decide what kinds of failures you want to recover from.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须决定要从中恢复哪些类型的故障。
