- en: F# syntax in 60 seconds
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: F#语法在60秒内
- en: F# syntax in 60 seconds
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: F#语法在60秒内
- en: Here is a very quick overview on how to read F# code for newcomers unfamiliar
    with the syntax.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个非常快速的概述，介绍如何阅读F#代码，适用于对语法不熟悉的新手。
- en: It is obviously not very detailed but should be enough so that you can read
    and get the gist of the upcoming examples in this series. Don't worry if you don't
    understand all of it, as I will give more detailed explanations when we get to
    the actual code examples.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 显然这并不是非常详细，但应该足以让您能够阅读并理解本系列中即将出现的示例的要点。如果您不明白所有内容，也不必担心，因为当我们到达实际的代码示例时，我会给出更详细的解释。
- en: 'The two major differences between F# syntax and a standard C-like syntax are:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: F#语法与标准的C语法之间的两个主要区别是：
- en: Curly braces are not used to delimit blocks of code. Instead, indentation is
    used (Python is similar this way).
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不使用花括号来界定代码块。相反，使用缩进（Python在这方面类似）。
- en: Whitespace is used to separate parameters rather than commas.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用空格而不是逗号来分隔参数。
- en: 'Some people find the F# syntax off-putting. If you are one of them, consider
    this quote:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人觉得F#语法让人反感。如果您是其中之一，请考虑这句话：
- en: '"Optimising your notation to not confuse people in the first 10 minutes of
    seeing it but to hinder readability ever after is a really bad mistake." (David
    MacIver, via [a post about Scala syntax](http://rickyclarkson.blogspot.co.uk/2008/01/in-defence-of-0l-in-scala.html)).'
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “优化您的记法以避免在看到它的头10分钟内使人困惑，但以后降低可读性是一个非常糟糕的错误。”（David MacIver，通过 [有关Scala语法的文章](http://rickyclarkson.blogspot.co.uk/2008/01/in-defence-of-0l-in-scala.html)）。
- en: Personally, I think that the F# syntax is very clear and straightforward when
    you get used to it. In many ways, it is simpler than the C# syntax, with fewer
    keywords and special cases.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我认为一旦你习惯了，F# 语法就非常清晰和直接。在许多方面，它比C#语法更简单，关键字和特殊情况更少。
- en: The example code below is a simple F# script that demonstrates most of the concepts
    that you need on a regular basis.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的示例代码是一个简单的F#脚本，演示了您在日常工作中需要的大部分概念。
- en: 'I would encourage you to test this code interactively and play with it a bit!
    Either:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我鼓励您进行交互式测试并稍微玩弄一下这段代码！要么：
- en: Type this into a F# script file (with .fsx extension) and send it to the interactive
    window. See the ["installing and using F#"](index3.html) page for details.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将此键入到一个F#脚本文件中（扩展名为 .fsx），然后将其发送到交互窗口。有关详细信息，请参阅["安装和使用 F#"](index3.html)页面。
- en: Alternatively, try running this code in the interactive window. Remember to
    always use `;;` at the end to tell the interpreter that you are done entering
    and ready to evaluate.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者，尝试在交互窗口中运行此代码。记得总是在结尾使用 `;;` 来告诉解释器你输入完毕并且准备好评估了。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: And with that, let's start by comparing some simple F# code with the equivalent
    C# code.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个基础，让我们开始比较一些简单的F#代码与相应的C#代码。
