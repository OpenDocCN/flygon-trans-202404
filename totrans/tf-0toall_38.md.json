["```\n%matplotlib inline\nimport numpy as np\nimport tensorflow as tf\nimport matplotlib.pyplot as plt \n```", "```\nsess = tf.InteractiveSession()\nimage = np.array([[[[1],[2],[3]],\n                   [[4],[5],[6]], \n                   [[7],[8],[9]]]], dtype=np.float32)\nprint(image.shape)\nplt.imshow(image.reshape(3,3), cmap='Greys') \n```", "```\n(1, 3, 3, 1)\n\n<matplotlib.image.AxesImage at 0x10db29e10> \n```", "```\n# print(\"imag:\\n\", image)\nprint(\"image.shape\", image.shape)\nweight = tf.constant([[[[1.]],[[1.]]],\n                      [[[1.]],[[1.]]]])\nprint(\"weight.shape\", weight.shape)\nconv2d = tf.nn.conv2d(image, weight, strides=[1, 1, 1, 1], padding='VALID')\nconv2d_img = conv2d.eval()\nprint(\"conv2d_img.shape\", conv2d_img.shape)\nconv2d_img = np.swapaxes(conv2d_img, 0, 3)\nfor i, one_img in enumerate(conv2d_img):\n    print(one_img.reshape(2,2))\n    plt.subplot(1,2,i+1), plt.imshow(one_img.reshape(2,2), cmap='gray') \n```", "```\nimage.shape (1, 3, 3, 1)\nweight.shape (2, 2, 1, 1)\nconv2d_img.shape (1, 2, 2, 1)\n[[ 12\\.  16.]\n [ 24\\.  28.]] \n```", "```\n# print(\"imag:\\n\", image)\nprint(\"image.shape\", image.shape)\n\nweight = tf.constant([[[[1.]],[[1.]]],\n                      [[[1.]],[[1.]]]])\nprint(\"weight.shape\", weight.shape)\nconv2d = tf.nn.conv2d(image, weight, strides=[1, 1, 1, 1], padding='SAME')\nconv2d_img = conv2d.eval()\nprint(\"conv2d_img.shape\", conv2d_img.shape)\nconv2d_img = np.swapaxes(conv2d_img, 0, 3)\nfor i, one_img in enumerate(conv2d_img):\n    print(one_img.reshape(3,3))\n    plt.subplot(1,2,i+1), plt.imshow(one_img.reshape(3,3), cmap='gray') \n```", "```\nimage.shape (1, 3, 3, 1)\nweight.shape (2, 2, 1, 1)\nconv2d_img.shape (1, 3, 3, 1)\n[[ 12\\.  16\\.   9.]\n [ 24\\.  28\\.  15.]\n [ 15\\.  17\\.   9.]] \n```", "```\n# print(\"imag:\\n\", image)\nprint(\"image.shape\", image.shape)\n\nweight = tf.constant([[[[1.,10.,-1.]],[[1.,10.,-1.]]],\n                      [[[1.,10.,-1.]],[[1.,10.,-1.]]]])\nprint(\"weight.shape\", weight.shape)\nconv2d = tf.nn.conv2d(image, weight, strides=[1, 1, 1, 1], padding='SAME')\nconv2d_img = conv2d.eval()\nprint(\"conv2d_img.shape\", conv2d_img.shape)\nconv2d_img = np.swapaxes(conv2d_img, 0, 3)\nfor i, one_img in enumerate(conv2d_img):\n    print(one_img.reshape(3,3))\n    plt.subplot(1,3,i+1), plt.imshow(one_img.reshape(3,3), cmap='gray') \n```", "```\nimage.shape (1, 3, 3, 1)\nweight.shape (2, 2, 1, 3)\nconv2d_img.shape (1, 3, 3, 3)\n[[ 12\\.  16\\.   9.]\n [ 24\\.  28\\.  15.]\n [ 15\\.  17\\.   9.]]\n[[ 120\\.  160\\.   90.]\n [ 240\\.  280\\.  150.]\n [ 150\\.  170\\.   90.]]\n[[-12\\. -16\\.  -9.]\n [-24\\. -28\\. -15.]\n [-15\\. -17\\.  -9.]] \n```", "```\nimage = np.array([[[[4],[3]],\n                    [[2],[1]]]], dtype=np.float32)\npool = tf.nn.max_pool(image, ksize=[1, 2, 2, 1],\n                    strides=[1, 1, 1, 1], padding='VALID')\nprint(pool.shape)\nprint(pool.eval()) \n```", "```\n(1, 1, 1, 1)\n[[[[ 4.]]]] \n```", "```\nimage = np.array([[[[4],[3]],\n                    [[2],[1]]]], dtype=np.float32)\npool = tf.nn.max_pool(image, ksize=[1, 2, 2, 1],\n                    strides=[1, 1, 1, 1], padding='SAME')\nprint(pool.shape)\nprint(pool.eval()) \n```", "```\n(1, 2, 2, 1)\n[[[[ 4.]\n   [ 3.]]\n\n  [[ 2.]\n   [ 1.]]]] \n```", "```\nfrom tensorflow.examples.tutorials.mnist import input_data\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n# Check out https://www.tensorflow.org/get_started/mnist/beginners for\n# more information about the mnist dataset \n```", "```\nExtracting MNIST_data/train-images-idx3-ubyte.gz\nExtracting MNIST_data/train-labels-idx1-ubyte.gz\nExtracting MNIST_data/t10k-images-idx3-ubyte.gz\nExtracting MNIST_data/t10k-labels-idx1-ubyte.gz \n```", "```\nimg = mnist.train.images[0].reshape(28,28)\nplt.imshow(img, cmap='gray') \n```", "```\n<matplotlib.image.AxesImage at 0x1152b2048> \n```", "```\nsess = tf.InteractiveSession()\n\nimg = img.reshape(-1,28,28,1)\nW1 = tf.Variable(tf.random_normal([3, 3, 1, 5], stddev=0.01))\nconv2d = tf.nn.conv2d(img, W1, strides=[1, 2, 2, 1], padding='SAME')\nprint(conv2d)\nsess.run(tf.global_variables_initializer())\nconv2d_img = conv2d.eval()\nconv2d_img = np.swapaxes(conv2d_img, 0, 3)\nfor i, one_img in enumerate(conv2d_img):\n    plt.subplot(1,5,i+1), plt.imshow(one_img.reshape(14,14), cmap='gray') \n```", "```\nTensor(\"Conv2D_3:0\", shape=(1, 14, 14, 5), dtype=float32) \n```", "```\npool = tf.nn.max_pool(conv2d, ksize=[1, 2, 2, 1], strides=[\n                        1, 2, 2, 1], padding='SAME')\nprint(pool)\nsess.run(tf.global_variables_initializer())\npool_img = pool.eval()\npool_img = np.swapaxes(pool_img, 0, 3)\nfor i, one_img in enumerate(pool_img):\n    plt.subplot(1,5,i+1), plt.imshow(one_img.reshape(7, 7), cmap='gray') \n```", "```\nTensor(\"MaxPool_2:0\", shape=(1, 7, 7, 5), dtype=float32) \n```"]