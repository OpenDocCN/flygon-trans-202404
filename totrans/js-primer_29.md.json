["```\nconst map = new Map();\nconsole.log(map.size); // => 0 \n```", "```\nconst map = new Map([[\"key1\", \"value1\"], [\"key2\", \"value2\"]]);\n// 2\u3064\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3067\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u308b\nconsole.log(map.size); // => 2 \n```", "```\nconst map = new Map();\n// \u65b0\u3057\u3044\u8981\u7d20\u306e\u8ffd\u52a0\nmap.set(\"key\", \"value1\");\nconsole.log(map.size); // => 1\nconsole.log(map.get(\"key\")); // => \"value1\"\n// \u8981\u7d20\u306e\u4e0a\u66f8\u304d\nmap.set(\"key\", \"value2\");\nconsole.log(map.get(\"key\")); // => \"value2\"\n// \u30ad\u30fc\u306e\u5b58\u5728\u78ba\u8a8d\nconsole.log(map.has(\"key\")); // => true\nconsole.log(map.has(\"foo\")); // => false \n```", "```\nconst map = new Map();\nmap.set(\"key1\", \"value1\");\nmap.set(\"key2\", \"value2\");\nconsole.log(map.size); // => 2\nmap.delete(\"key1\");\nconsole.log(map.size); // => 1\nmap.clear();\nconsole.log(map.size); // => 0 \n```", "```\nconst map = new Map([[\"key1\", \"value1\"], [\"key2\", \"value2\"]]);\nconst results = [];\nmap.forEach((value, key) => {\n    results.push(`${key}:${value}`);\n});\nconsole.log(results); // => [\"key1:value1\",\"key2:value2\"] \n```", "```\nconst map = new Map([[\"key1\", \"value1\"], [\"key2\", \"value2\"]]);\nconst keys = [];\n// keys\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024(Iterator)\u3092\u53cd\u5fa9\u51e6\u7406\u3059\u308b\nfor (const key of map.keys()) {\n    keys.push(key);\n}\nconsole.log(keys); // => [\"key1\",\"key2\"]\n// keys\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024(Iterator)\u304b\u3089\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\nconst keysArray = Array.from(map.keys());\nconsole.log(keysArray); // => [\"key1\",\"key2\"] \n```", "```\nconst map = new Map([[\"key1\", \"value1\"], [\"key2\", \"value2\"]]);\nconst entries = [];\nfor (const [key, value] of map.entries()) {\n    entries.push(`${key}:${value}`);\n}\nconsole.log(entries); // => [\"key1:value1\",\"key2:value2\"] \n```", "```\nconst map = new Map([[\"key1\", \"value1\"], [\"key2\", \"value2\"]]);\nconst results = [];\nfor (const [key, value] of map) {\n    results.push(`${key}:${value}`);\n}\nconsole.log(results); // => [\"key1:value1\",\"key2:value2\"] \n```", "```\nconst map = {};\n// \u30de\u30c3\u30d7\u304c\u30ad\u30fc\u3092\u6301\u3064\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\nfunction has(key) {\n    return typeof map[key] !== \"undefined\";\n}\nconsole.log(has(\"foo\")); // => false\n// Object\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u5b58\u5728\u3059\u308b\nconsole.log(has(\"constructor\")); // => true \n```", "```\n// \u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c8\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9\nclass ShoppingCart {\n    constructor() {\n        // \u5546\u54c1\u3068\u305d\u306e\u6570\u3092\u6301\u3064\u30de\u30c3\u30d7\n        this.items = new Map();\n    }\n    // \u30ab\u30fc\u30c8\u306b\u5546\u54c1\u3092\u8ffd\u52a0\u3059\u308b\n    addItem(item) {\n        // `item`\u304c\u306a\u3044\u5834\u5408\u306f`undefined`\u3092\u8fd4\u3059\u305f\u3081\u3001Nullish coalescing\u6f14\u7b97\u5b50(`??`)\u3092\u4f7f\u3044\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066`0`\u3092\u8a2d\u5b9a\u3059\u308b\n        const count = this.items.get(item) ?? 0;\n        this.items.set(item, count + 1);\n    }\n    // \u30ab\u30fc\u30c8\u5185\u306e\u5408\u8a08\u91d1\u984d\u3092\u8fd4\u3059\n    getTotalPrice() {\n        return Array.from(this.items).reduce((total, [item, count]) => {\n            return total + item.price * count;\n        }, 0);\n    }\n    // \u30ab\u30fc\u30c8\u306e\u4e2d\u8eab\u3092\u6587\u5b57\u5217\u306b\u3057\u3066\u8fd4\u3059\n    toString() {\n        return Array.from(this.items).map(([item, count]) => {\n            return `${item.name}:${count}`;\n        }).join(\",\");\n    }\n}\nconst shoppingCart = new ShoppingCart();\n// \u5546\u54c1\u4e00\u89a7\nconst shopItems = [\n    { name: \"\u307f\u304b\u3093\", price: 100 },\n    { name: \"\u30ea\u30f3\u30b4\", price: 200 },\n];\n\n// \u30ab\u30fc\u30c8\u306b\u5546\u54c1\u3092\u8ffd\u52a0\u3059\u308b\nshoppingCart.addItem(shopItems[0]);\nshoppingCart.addItem(shopItems[0]);\nshoppingCart.addItem(shopItems[1]);\n\n// \u5408\u8a08\u91d1\u984d\u3092\u8868\u793a\u3059\u308b\nconsole.log(shoppingCart.getTotalPrice()); // => 400\n// \u30ab\u30fc\u30c8\u306e\u4e2d\u8eab\u3092\u8868\u793a\u3059\u308b\nconsole.log(shoppingCart.toString()); // => \"\u307f\u304b\u3093:2,\u30ea\u30f3\u30b4:1\" \n```", "```\n// URL\u3068Object\u306e\u30de\u30c3\u30d7\u3092\u53d7\u3051\u53d6\u3063\u3066POST\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u95a2\u6570\nfunction sendPOSTRequest(url, data) {\n    // fetch\u3092\u4f7f\u3063\u3066POST\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\n    fetch(url, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n    }).catch((error) => {\n        console.error(error);\n    });\n}\n\n// form\u306esubmit\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u95a2\u6570\nfunction onLoginFormSubmit(event) {\n    const form = event.target;\n    const data = {\n        userName: form.elements.userName,\n        password: form.elements.password,\n    };\n    sendPOSTRequest(\"/api/login\", data);\n} \n```", "```\nconst map = new WeakMap();\n// \u30ad\u30fc\u3068\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nlet obj = {};\n// {} \u3078\u306e\u53c2\u7167\u3092\u30ad\u30fc\u306b\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\nmap.set(obj, \"value\");\n// {} \u3078\u306e\u53c2\u7167\u3092\u7834\u68c4\u3059\u308b\nobj = null;\n// GC\u304c\u767a\u751f\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067WeakMap\u304b\u3089\u5024\u304c\u7834\u68c4\u3055\u308c\u308b \n```", "```\n// \u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u7ba1\u7406\u3059\u308b\u30de\u30c3\u30d7\nconst listenersMap = new WeakMap();\n\nclass EventEmitter {\n    addListener(listener) {\n        // this(\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)\u306b\u3072\u3082\u3065\u3044\u305f\u30ea\u30b9\u30ca\u30fc\u306e\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\n        const listeners = listenersMap.get(this) ?? [];\n        const newListeners = listeners.concat(listener);\n        // this \u3092\u30ad\u30fc\u306b\u3057\u3066\u3001\u65b0\u3057\u3044\u30ea\u30b9\u30ca\u30fc\u306e\u914d\u5217\u3092\u30bb\u30c3\u30c8\u3059\u308b\n        listenersMap.set(this, newListeners);\n    }\n    // ...EventEmitter\u306b\u306f\u4ed6\u306b\u3082\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u304c\u7701\u7565...\n}\n\n// `event`\u306f`EventEmitter`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u306e\u53c2\u7167\u3092\u3082\u3064\nlet event = new EventEmitter();\n// `EventEmitter`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u8ffd\u52a0\u3059\u308b\nevent.addListener(() => {\n    // `EventEmitter`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u7d10\u3065\u304f\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u306e\u51e6\u7406\n});\n// `event`\u3078`null`\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u3001`EventEmitter`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u306e\u53c2\u7167\u304c\u306a\u304f\u306a\u308b\n// \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3069\u3053\u304b\u3089\u3082\u53c2\u7167\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u305f\u3081\u3001\u7d10\u3065\u3044\u3066\u3044\u305f\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u304c\u81ea\u52d5\u7684\u306b\u89e3\u653e\u3055\u308c\u308b\nevent = null; \n```", "```\nconst cache = new WeakMap();\n\nfunction getHeight(element) {\n    if (cache.has(element)) {\n        return cache.get(element);\n    }\n    const height = element.getBoundingClientRect().height;\n    // element\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u9ad8\u3055\u3092\u3072\u3082\u3065\u3051\u3066\u4fdd\u5b58\u3057\u3066\u3044\u308b\n    cache.set(element, height);\n    return height;\n} \n```", "```\nconst map = new Map();\nmap.set(NaN, \"value\");\n// NaN\u306f===\u3067\u6bd4\u8f03\u3057\u305f\u5834\u5408\u306f\u5e38\u306bfalse\nconsole.log(NaN === NaN); // => false\n// Map\u306fNaN\u540c\u58eb\u3092\u6bd4\u8f03\u3067\u304d\u308b\nconsole.log(map.has(NaN)); // => true\nconsole.log(map.get(NaN)); // => \"value\" \n```", "```\nconst set = new Set();\nconsole.log(set.size); // => 0 \n```", "```\n// \"value2\"\u304c\u91cd\u8907\u3059\u308b\u305f\u3081\u3001\u7247\u65b9\u306f\u7121\u8996\u3055\u308c\u308b\nconst set = new Set([\"value1\", \"value2\", \"value2\"]);\n// \u30bb\u30c3\u30c8\u306e\u30b5\u30a4\u30ba\u306f2\u306b\u306a\u308b\nconsole.log(set.size); // => 2 \n```", "```\nconst set = new Set();\n// \u5024\u306e\u8ffd\u52a0\nset.add(\"a\");\nconsole.log(set.size); // => 1\n// \u91cd\u8907\u3059\u308b\u5024\u306f\u8ffd\u52a0\u3055\u308c\u306a\u3044\nset.add(\"a\");\nconsole.log(set.size); // => 1\n// \u5024\u306e\u5b58\u5728\u78ba\u8a8d\nconsole.log(set.has(\"a\")); // => true\nconsole.log(set.has(\"b\")); // => false \n```", "```\nconst set = new Set();\nset.add(\"a\");\nset.add(\"b\");\nconsole.log(set.size); // => 2\nset.delete(\"a\");\nconsole.log(set.size); // => 1\nset.clear();\nconsole.log(set.size); // => 0 \n```", "```\nconst set = new Set([\"a\", \"b\"]);\nconst results = [];\nset.forEach((value) => {\n    results.push(value);\n});\nconsole.log(results); // => [\"a\",\"b\"] \n```", "```\nconst set = new Set([\"a\", \"b\"]);\n// keys\u3067\u5217\u6319\nconst keysResults = [];\nfor (const value of set.keys()) {\n    keysResults.push(value);\n}\nconsole.log(keysResults); // => [\"a\",\"b\"]\n// entries\u3067\u5217\u6319\nconst entryResults = [];\nfor (const entry of set.entries()) {\n    // entry\u306f[\u5024, \u5024]\u3068\u3044\u3046\u914d\u5217\n    entryResults.push(entry);\n}\nconsole.log(entryResults); // => [[\"a\",\"a\"], [\"b\", \"b\"]] \n```", "```\nconst set = new Set([\"a\", \"b\"]);\nconst results = [];\nfor (const value of set) {\n    results.push(value);\n}\nconsole.log(results); // => [\"a\",\"b\"] \n```"]