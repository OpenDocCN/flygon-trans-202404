["```\n<WAE> ::= <num>\u00a0 \u00a0 \u00a0 \u00a0 | { + <WAE> <WAE> }\u00a0 \u00a0 \u00a0 \u00a0 | { - <WAE> <WAE> }\u00a0 \u00a0 \u00a0 \u00a0 | { * <WAE> <WAE> }\u00a0 \u00a0 \u00a0 \u00a0 | { / <WAE> <WAE> }\u00a0 \u00a0 \u00a0 \u00a0 | { with { <id> <WAE> } <WAE> }\u00a0 \u00a0 \u00a0 \u00a0 | <id>\n```", "```\n(define-type WAE\u00a0 [Num\u00a0 Number]\u00a0 [Add\u00a0 WAE WAE]\u00a0 [Sub\u00a0 WAE WAE]\u00a0 [Mul\u00a0 WAE WAE]\u00a0 [Div\u00a0 WAE WAE]\u00a0 [Id\u00a0  Symbol]\u00a0 [With Symbol WAE WAE])\n```", "```\n(: parse-sexpr : Sexpr -> WAE);; parses s-expressions into WAEs(define (parse-sexpr sexpr)\u00a0 (match sexpr\u00a0 \u00a0 [(number: n)\u00a0 \u00a0 (Num n)]\u00a0 \u00a0 [(symbol: name) (Id name)]\u00a0 \u00a0 [(list 'with (list (symbol: name) named) body)\u00a0 \u00a0  (With name (parse-sexpr named) (parse-sexpr body))]\u00a0 \u00a0 [(list '+ lhs rhs) (Add (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [(list '- lhs rhs) (Sub (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [(list '* lhs rhs) (Mul (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [(list '/ lhs rhs) (Div (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [else (error 'parse-sexpr \"bad syntax in ~s\" sexpr)]))\n```", "```\n{* 1 2 3}{foo 5 6}{with x 5 {* x 8}}{with {5 x} {* x 8}}\n```", "```\n(: parse-sexpr : Sexpr -> WAE);; parses s-expressions into WAEs(define (parse-sexpr sexpr)\u00a0 (match sexpr\u00a0 \u00a0 [(number: n)\u00a0 \u00a0 (Num n)]\u00a0 \u00a0 [(symbol: name) (Id name)]\u00a0 \u00a0 [(list 'with (list (symbol: name) named) body)\u00a0 \u00a0  (With name (parse-sexpr named) (parse-sexpr body))]\u00a0 \u00a0 [(cons 'with more)\u00a0 \u00a0  (error 'parse-sexpr \"bad `with' syntax in ~s\" sexpr)]\u00a0 \u00a0 [(list '+ lhs rhs) (Add (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [(list '- lhs rhs) (Sub (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [(list '* lhs rhs) (Mul (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [(list '/ lhs rhs) (Div (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [else (error 'parse-sexpr \"bad syntax in ~s\" sexpr)]))\n```", "```\n(: parse-sexpr : Sexpr -> WAE);; parses s-expressions into WAEs(define (parse-sexpr sexpr)\u00a0 (match sexpr\u00a0 \u00a0 [(number: n)\u00a0 \u00a0 (Num n)]\u00a0 \u00a0 [(symbol: name) (Id name)]\u00a0 \u00a0 [(cons 'with more)\u00a0 \u00a0  ;; go in here for all sexpr that begin with a 'with\u00a0 \u00a0  (match sexpr\u00a0 \u00a0 \u00a0  [(list 'with (list (symbol: name) named) body)\u00a0 \u00a0 \u00a0 \u00a0 (With name (parse-sexpr named) (parse-sexpr body))]\u00a0 \u00a0 \u00a0  [else (error 'parse-sexpr \"bad `with' syntax in ~s\" sexpr)])]\u00a0 \u00a0 [(list '+ lhs rhs) (Add (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [(list '- lhs rhs) (Sub (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [(list '* lhs rhs) (Mul (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [(list '/ lhs rhs) (Div (parse-sexpr lhs) (parse-sexpr rhs))]\u00a0 \u00a0 [else (error 'parse-sexpr \"bad syntax in ~s\" sexpr)]))\n```", "```\n> (With 'x\u00a0 \u00a0 \u00a0 (Num 2)\u00a0 \u00a0 \u00a0 (Add (Id 'x) (Num 4)))\n> ```", "```\n> (With 'x (Num 2)\u00a0 (Add (Id 'x) (Num 4)))\n> ```", "```\n> {with {x 2}\u00a0 {+ x 4}}\n> ```", "```\n> {con {x 2} {+ x 4}}{ha\u00a0 {x 2} {+ x 4}}\n> ```"]