["```\n// C# example\nvar list = new int[] { 1,2,3} \n```", "```\n// F# example\nlet list = [1;2;3] // semicolons \n```", "```\n// C# example \nint myFunc(int x, int y, int z) { ... function body ...} \n```", "```\n// F# example \nlet myFunc (x:int) (y:int) (z:int) :int = ... function body ...\nlet myFunc x y z = ... function body ... \n```", "```\nlet someName = // the definition \n```", "```\ntype someName = // the definition \n```", "```\n// C# example \nvar variableName = 42\nvariableName = variableName + 1 \n```", "```\n// F# example \nlet mutable variableName = 42\nvariableName <- variableName + 1 \n```", "```\nlet mutable variableName = 42     // Bound to 42 on declaration\nvariableName <- variableName + 1  // Mutated (reassigned)\nvariableName = variableName + 1   // Comparison not assignment! \n```", "```\nlet variableName = 42             // Bound to 42 on declaration\nvariableName <> 43                // Comparison will return true.\nvariableName != 43                // Error FS0020. \n```", "```\nusing System;\nusing System.Collections.Generic;\n\nnamespace PortingToFsharp\n{\n    public class Squarer\n    {\n        public int Square(int input) {\n            var result = input * input;\n            return result;\n        }\n\n        public void PrintSquare(int input) {\n            var result = this.Square(input);\n            Console.WriteLine(\"Input={0}. Result={1}\", \n              input, result);\n        }\n    } \n```", "```\ntype myClassName() = \n   ... code ... \n```", "```\nint Square(int input) { ... code ...} \n```", "```\nlet Square (input:int) :int =  ... code ... \n```", "```\nlet Square input =  ... code ... \n```", "```\nvoid PrintSquare(int input) { ... code ...} \n```", "```\nlet PrintSquare (input:int) :unit =  ... code ... \n```", "```\nlet PrintSquare input =  ... code ... \n```", "```\n// C# variable declaration\nvar result = input * input; \n```", "```\n// F# value declaration\nlet result = input * input \n```", "```\n// C# example \nint unassignedVariable; //valid \n```", "```\n// F# example \nlet unassignedVariable // not valid \n```", "```\n// C# example \nint variableName = 42; \n```", "```\n// F# example \nlet variableName:int = 42 \n```", "```\n// define a method/function \nint Square(int input) { ... code  ...}\n\n// call it\nvar result = Square(input); \n```", "```\n// define a function \nlet Square input = ... code ...\n\n// call it\nlet result = Square input \n```", "```\npublic int Square(int input) {\n    var result = input * input;\n    return result;   //explicit \"return\" keyword\n} \n```", "```\nlet Square input = \n    let result = input * input\n    result        // implicit \"return\" value \n```", "```\nusing System;\nusing System.Collections.Generic;\n\nnamespace PortingToFsharp\n{\n    public class Squarer\n    {\n        public int Square(int input) {\n            var result = input * input;\n            return result;\n        }\n\n        public void PrintSquare(int input) {\n            var result = this.Square(input);\n            Console.WriteLine(\"Input={0}. Result={1}\", \n              input, result);\n        }\n    } \n```", "```\nnamespace PortingToFsharp\n\nopen System\nopen System.Collections.Generic\n\ntype Squarer() =  \n\n    let Square input = \n        let result = input * input\n        result\n\n    let PrintSquare input = \n        let result = Square input\n        printf \"Input=%i. Result=%i\" input result \n```"]