["```\nincrement.jsjs`function  increment(num) {  return num +  1;}``console.log(increment(999));`\n\n```", "```\nsh`$ node increment.js1000`\n```", "```\nsh`$ node increment.js1000`\n```", "```\nincrement.jsjs`function  increment(num) {  return num +  1;}``console.log(increment(\"999\"));//                    ^^^^^`\n\n```", "```\nsh`$ node increment.js9991`\n```", "```\nsh`$ node increment.js9991`\n```", "```\nsh`mv increment.js increment.ts`\n```", "```\nsh`mv increment.js increment.ts`\n```", "```\nincrement.tsts`function  <data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(<data-lsp lsp=\"(parameter) num: number\">num</data-lsp>:  number) {//                 ^^^^^^^^\u578b\u6ce8\u91c8  return <data-lsp lsp=\"(parameter) num: number\">num</data-lsp> +  1;}<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(\"999\"));`\n```", "```\nincrement.tsts`function <data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(<data-lsp lsp=\"(parameter) num: number\">num</data-lsp>:  number) {//                 ^^^^^^^^\u578b\u6ce8\u91c8  return <data-lsp lsp=\"(parameter) num: number\">num</data-lsp> +  1;}<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(\"999\"));`\n```", "```\nsh`tsc increment.ts`\n```", "```\nsh`tsc increment.ts`\n```", "```\nts`<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(<data-err>\"999\"</data-err>));Argument of type 'string' is not assignable to parameter of type 'number'.2345Argument of type 'string' is not assignable to parameter of type 'number'.`\n```", "```\nts`<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(<data-err>\"999\"</data-err>));Argument of type 'string' is not assignable to parameter of type 'number'.2345Argument of type 'string' is not assignable to parameter of type 'number'.`\n```", "```\nincrement.tsts`function  <data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(<data-lsp lsp=\"(parameter) num: number\">num</data-lsp>:  number) {  return <data-lsp lsp=\"(parameter) num: number\">num</data-lsp> +  1;}<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(999));//                    ^^^\u76f4\u3059\u7b87\u6240`\n```", "```\nincrement.tsts`function <data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(<data-lsp lsp=\"(parameter) num: number\">num</data-lsp>:  number) {  return <data-lsp lsp=\"(parameter) num: number\">num</data-lsp> +  1;}<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"function increment(num: number): number\">increment</data-lsp>(999));//                    ^^^\u76f4\u3059\u7b87\u6240`\n```", "```\nsh`tsc increment.ts`\n```", "```\nsh`tsc increment.ts`\n```", "```\nincrement.jsts`function  increment(num) {  return num +  1;}console.log(increment(999));`\n```", "```\nincrement.jsts`function increment(num) {  return num +  1;}console.log(increment(999));`\n```", "```\n\n```", "```\n\n```"]