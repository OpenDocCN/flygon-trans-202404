- en: Code Is Design
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码即设计
- en: Code Is Design
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码即设计
- en: 'Imagine waking up tomorrow and learning the construction industry has made
    the breakthrough of the century. Millions of cheap, incredibly fast robots can
    fabricate materials out of thin air, have a near-zero power cost, and can repair
    themselves. And it gets better: Given an unambiguous blueprint for a construction
    project, the robots can build it without human intervention, all at negligible
    cost.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，明天醒来，得知建筑行业取得了世纪突破。数百万台廉价、速度极快的机器人可以从空气中制造材料，功耗接近零，并且可以自我修复。更美好的是：只要有一个明确的建筑项目蓝图，机器人就可以在无需人类干预的情况下进行建造，而且成本微乎其微。
- en: One can imagine the impact on the construction industry, but what would happen
    upstream? How would the behavior of architects and designers change if construction
    costs were negligible? Today, physical and computer models are built and rigorously
    tested before investing in construction. Would we bother if the construction was
    essentially free? If a design collapses, no big deal — just find out what went
    wrong and have our magical robots build another one. There are further implications.
    With models obsolete, unfinished designs evolve by repeatedly building and improving
    upon an approximation of the end goal. A casual observer may have trouble distinguishing
    an unfinished design from a finished product.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 人们可以想象一下这对建筑行业的影响，但上游会发生什么？如果建筑成本可以忽略不计，建筑师和设计师的行为会如何改变？今天，在投资建筑之前，我们会建立和严格测试物理模型和计算机模型。如果建筑几乎是免费的，我们还会费心吗？如果一个设计崩溃了，没什么大不了的
    —— 只需找出问题所在，让我们的魔法机器人再建一个就行了。还有进一步的影响。随着模型过时，未完成的设计通过反复建立和改进逼近最终目标。一个普通观察者可能很难区分一个未完成的设计和一个成品。
- en: Our ability to predict time lines will fade away. Construction costs are more
    easily calculated than design costs — we know the approximate cost of installing
    a girder, and how many girders we need. As predictable tasks shrink toward zero,
    the less predictable design time starts to dominate. Results are produced more
    quickly, but reliable time lines slip away.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们预测时间的能力将逐渐消失。建筑成本比设计成本更容易计算 —— 我们知道安装一根梁的大致成本，以及我们需要多少根梁。随着可预测的任务趋近于零，不可预测的设计时间开始占主导地位。结果产生得更快，但可靠的时间表却消失了。
- en: Of course, the pressures of a competitive economy still apply. With construction
    costs eliminated, a company that can quickly complete a design gains an edge in
    the market. Getting design done fast becomes the central push of engineering firms.
    Inevitably, someone not deeply familiar with the design will see an unvalidated
    version, see the market advantage of releasing early, and say "This looks good
    enough."
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，竞争激烈的经济压力仍然存在。随着建筑成本的消除，能够快速完成设计的公司在市场上占据优势。快速完成设计成为工程公司的核心推动力。不可避免地，一些对设计不是非常熟悉的人会看到一个未经验证的版本，看到提前发布的市场优势，然后说：“这看起来足够好。”
- en: 'Some life-or-death projects will be more diligent, but in many cases consumers
    learn to suffer through the incomplete design. Companies can always send out our
    magic robots to ''patch'' the broken buildings and vehicles they sell. All of
    this points to a startlingly counterintuitive conclusion: Our sole premise was
    a dramatic reduction in construction costs, with the result that *quality got
    worse*.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一些生死攸关的项目会更加勤奋，但在许多情况下，消费者学会了忍受不完整的设计。公司总是可以派出我们的魔法机器人来“修补”他们销售的破损建筑和车辆。所有这些都指向了一个令人震惊的违反直觉的结论：我们唯一的前提是建筑成本的大幅降低，结果是
    *质量变差*。
- en: 'It shouldn''t surprise us the above story has played out in software. If we
    accept that code is design — a creative process rather than a mechanical one —
    the *software crisis* is explained. We now have a *design crisis*: The demand
    for quality, validated designs exceeds our capacity to create them. The pressure
    to use incomplete design is strong.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的故事在软件领域发生并不奇怪。如果我们接受代码即设计 —— 一个创造性的过程而不是机械性的过程 —— 那么 *软件危机* 就得到了解释。现在我们面临着
    *设计危机*：对质量、经过验证的设计的需求超过了我们的创造能力。使用不完整设计的压力很大。
- en: 'Fortunately, this model also offers clues on how we can get better. Physical
    simulations equate to automated testing; software design isn''t complete until
    it is validated with a brutal battery of tests. To make such tests more effective
    we are finding ways to rein in the huge state space of large systems. Improved
    languages and design practices give us hope. Finally, there is one inescapable
    fact: Great designs are produced by great designers dedicating themselves to the
    mastery of their craft. Code is no different.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，这个模型还提供了改进的线索。物理模拟相当于自动化测试；软件设计直到经过残酷的一系列测试才算完成。为了使这些测试更加有效，我们正在寻找方法来控制大型系统的庞大状态空间。改进的语言和设计实践给了我们希望。最后，有一个不可避免的事实：伟大的设计是由致力于掌握他们的技艺的伟大设计师创造的。代码也不例外。
- en: By [Ryan Brush](http://programmer.97things.oreilly.com/wiki/index.php/Ryan_Brush)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：[Ryan Brush](http://programmer.97things.oreilly.com/wiki/index.php/Ryan_Brush)
