- en: io.Reader interface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: io.Reader接口
- en: io.Reader interface
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: io.Reader接口
- en: '`io.Reader` interface is a basic and very frequently-used interface:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`io.Reader`接口是一个基本且非常常用的接口：'
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For every type who satisfies the `io.Reader` interface, you can imagine it's
    a pipe. Someone writes contents into one end of the pipe, and you can use `Read()`
    method which the type has provided to read content from the other end of the pipe.
    No matter it is a common file, a network socket, and so on. Only if it is compatible
    with `io.Reader` interface, I can read content of it.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每种满足`io.Reader`接口的类型，你可以想象它是一个管道。有人向管道的一端写入内容，你可以使用类型提供的`Read()`方法从管道的另一端读取内容。无论是普通文件、网络套接字等等。只要兼容`io.Reader`接口，我就可以读取它的内容。
- en: 'Let''s see an example:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can see after issuing a `read()` call, there are `3` scenarios need to
    be considered:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在发出`read()`调用后，可以看到有`3`种情况需要考虑：
- en: '(1) `n > 0`: read valid contents; process it;'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: (1) `n > 0`：读取有效内容；处理它；
- en: '(2) `n == 0 && err != nil`: if `err` is `io.EOF`, it means all the content
    have been read, and there is nothing left; else something unexpected happened,
    need to do special operations;'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: (2) `n == 0 && err != nil`：如果`err`是`io.EOF`，表示所有内容都已经被读取，没有剩余内容；否则发生了意外情况，需要进行特殊操作；
- en: '(3) `n == 0 && err == nil`: according to [io package document](https://golang.org/pkg/io/#Reader),
    it means nothing happened, so no need to do anything.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: (3) `n == 0 && err == nil`：根据[io包文档](https://golang.org/pkg/io/#Reader)，表示没有发生任何事情，因此不需要做任何操作。
- en: 'Create a `test.txt` file which only contains `5` bytes:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个只包含`5`字节的`test.txt`文件：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Executing the program, and the result is like this:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 执行程序，结果如下：
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Reference:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：
- en: '[io package document](https://golang.org/pkg/io/#Reader).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[io包文档](https://golang.org/pkg/io/#Reader)。'
