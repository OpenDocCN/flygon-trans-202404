["```\n        Send( prop1, req{ REQUEST, ... );\n        Send( prop2, getres2, ... );\n        // Use the resources and release them\n        ```", "```\n        Send( prop2, getres2, ... );\n        Send( prop1, getres1, ... );\n        // Use the resources and release them\n        ```", "```\n        FOREVER {\n           Receive( &clientTid, req, ... );\n           switch ( req.type ) {\n           case REQUEST:\n              if( available ) { \n                 Reply( clientTid, \"use-it\", ... );\n                 available = false;\n              }\n              else enqueue( clientTid );\n           case RELEASE:\n              available = true;\n              Reply( clientTid, \"thanks\", ... );\n              if( !empty( Q ) ) {\n                 available = false;\n                 Reply( dequeue( ), \"use-it\", ... );\n              }\n           }\n        }\n        ```", "```\n    FOREVER {\n       Receive( &clientTid, req, ... );\n       switch ( req-type ) {\n       case REQUEST:\n          if( available ) { \n             Reply( clientTid, \"use-it\", ... );\n             available = false;\n          }\n          else Reply( clientTid, \"sorry\", ...);\n       case RELEASE:\n          available = true;\n          Reply( clientTid, \"thanks\", ... );\n       }\n    }\n    ```", "```\n    for ( Send( prop1, get-res1, result1 ) && Send( prop2, get-res2, result2 );\n          !((result1 && result2) || time-out( )) ; ) {\n       if ( !result1 ) Send( prop1, get-res1, result1 );\n       if ( !result2 ) Send( prop2, get-res2, result2 );\n    }\n    // Use the resources\n    ```", "```\n   for ( Send( prop1, get-res1, result1 ) && Send( prop2, get-res2, result2 );\n         !(result1 && result2) || !time-out( ); \n         Send( prop1, get-res1, result1 ) && Send( prop2, get-res2, result2 ) {\n      if ( result2 ) Send( prop2, release-res2, ... );\n      if ( result1 ) Send( prop1, release-res1, ... );\n      Delay ( random( ) );\n   {\n```", "```\n   for ( Send( prop, get-res, result );\n         !result && !time-out( ); \n         Send( prop, get-res, result ) Delay ( random( ) );\n   }\n```"]