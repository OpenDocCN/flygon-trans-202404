- en: '| [![Hawaii](../Images/dba259bd7bdf0e51fe26e0ce0cb7e5fc.jpg)](/http://philip.greenspun.com/images/pcd4235/trees-34.4.jpg)
    |'
  id: totrans-0
  prefs: []
  type: TYPE_TB
  zh: '| [![夏威夷](../Images/dba259bd7bdf0e51fe26e0ce0cb7e5fc.jpg)](/http://philip.greenspun.com/images/pcd4235/trees-34.4.jpg)
    |'
- en: Trees in Oracle SQL
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Oracle SQL 中的树
- en: part of [SQL for Web Nerds](index.html) by [Philip Greenspun](http://philip.greenspun.com/)
    |
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[SQL for Web Nerds](index.html) 的一部分，由 [Philip Greenspun](http://philip.greenspun.com/)
    著'
- en: '* * *'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[![A tree in Canyon de Chelly](../Images/5c0e7c5b1bc555ab5e82bd442e822596.jpg)](/http://philip.greenspun.com/images/pcd2148/canyon-de-chelly-tree-5.4.jpg)
    On its face, the relational database management system would appear to be a very
    poor tool for representing and manipulating trees. This chapter is designed to
    accomplish the following things:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[![在夏利峡谷的树](../Images/5c0e7c5b1bc555ab5e82bd442e822596.jpg)](/http://philip.greenspun.com/images/pcd2148/canyon-de-chelly-tree-5.4.jpg)
    表面上看，关系型数据库管理系统似乎是表示和操作树的非常糟糕的工具。本章旨在实现以下目标：'
- en: show you that a row in an SQL database can be thought of as an object
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向你展示 SQL 数据库中的一行可以被视为一个对象
- en: show you that a pointer from one object to another can be represented by storing
    an integer key in a regular database column
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向你展示从一个对象到另一个对象的指针可以通过在常规数据库列中存储整数键来表示
- en: demonstrate the Oracle tree extensions (CONNECT BY ... PRIOR)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演示 Oracle 的树扩展（CONNECT BY ... PRIOR）
- en: show you how to work around the limitations of CONNECT BY with PL/SQL
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向您展示如何通过 PL/SQL 解决 CONNECT BY 的限制
- en: The canonical example of trees in Oracle is the org chart.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle 中树的典型示例是组织图。
- en: '[PRE0]'
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[![Joshua Tree National Park](../Images/97a384ca26084f87d1b3e02d1b9051f8.jpg)](/http://philip.greenspun.com/images/pcd0278/joshua-tree-78.tcl)
    The integers in the `supervisor_id` are actually pointers to other rows in the
    `corporate_slaves` table. Need to display an org chart? With only standard SQL
    available, you''d write a program in the client language (e.g., C, Lisp, Perl,
    or Tcl) to do the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[![约书亚树国家公园](../Images/97a384ca26084f87d1b3e02d1b9051f8.jpg)](/http://philip.greenspun.com/images/pcd0278/joshua-tree-78.tcl)
    `supervisor_id` 中的整数实际上是指向 `corporate_slaves` 表中其他行的指针。需要显示组织图表吗？只有标准 SQL 可用，您将使用客户端语言（例如
    C、Lisp、Perl 或 Tcl）编写程序来执行以下操作：'
- en: query Oracle to find the employee `where supervisor_id is null`, call this `$big_kahuna_id`
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询 Oracle，找到雇员 `where supervisor_id is null`，将其称为 `$big_kahuna_id`
- en: query Oracle to find those employees whose `supervisor_id = $big_kahuna_id`
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询 Oracle，找到那些 `supervisor_id = $big_kahuna_id` 的雇员
- en: for each subordinate, query Oracle again to find their subordinates.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个下属，再次查询 Oracle 以找到他们的下属。
- en: repeat until no subordinates found, then back up one level
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 反复执行直到找不到下属，然后回溯到上一级
- en: 'With the Oracle CONNECT BY clause, you can get all the rows out at once:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Oracle CONNECT BY 子句，您可以一次获取所有行：
- en: '[PRE1]'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This seems a little strange. It looks as though Oracle has produced all possible
    trees and subtrees. Let''s add a START WITH clause:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来有点奇怪。看起来 Oracle 已经生成了所有可能的树和子树。让我们添加一个 START WITH 子句：
- en: '[PRE2]'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[![Trees at sunrise.  Big Sur, California.](../Images/68b59ea96fe1033693f439a534e1e58a.jpg)](/http://philip.greenspun.com/images/pcd3448/big-sur-trees-74.tcl)
    Notice that we''ve used a subquery in the START WITH clause to find out who is/are
    the big kahuna(s). For the rest of this example, we''ll just hard-code in the
    `slave_id` 1 for brevity.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[![日出时的树。加利福尼亚州的大瑟尔](../Images/68b59ea96fe1033693f439a534e1e58a.jpg)](/http://philip.greenspun.com/images/pcd3448/big-sur-trees-74.tcl)
    请注意，我们在 START WITH 子句中使用了一个子查询来找出谁是大领导。在接下来的例子中，我们将只为简洁起见硬编码 `slave_id` 1。'
- en: 'Though these folks are in the correct order, it is kind of tough to tell from
    the preceding report who works for whom. Oracle provides a magic pseudo-column
    that is meaningful only when a query includes a CONNECT BY. The pseudo-column
    is `level`:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些人是按正确的顺序排列的，但从前面的报告中很难看出谁为谁工作。Oracle 提供了一个神奇的伪列，只有当查询包含 CONNECT BY 时才有意义。该伪列是
    `level`：
- en: '[PRE3]'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `level` column can be used for indentation. Here we will use the concatenation
    operator (`||`) to add spaces in front of the name column:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`level` 列可用于缩进。在这里，我们将使用连接运算符 (`||`) 在名字列前添加空格：'
- en: '[PRE4]'
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you want to limit your report, you can use standard WHERE clauses:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想限制你的报告，你可以使用标准的 WHERE 子句：
- en: '[PRE5]'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Suppose that you want people at the same level to sort alphabetically. Sadly,
    the ORDER BY clause doesn''t work so great in conjunction with CONNECT BY:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您希望同一级别的人按字母顺序排序。不幸的是，ORDER BY 子句与 CONNECT BY 结合使用效果不是很好：
- en: '[PRE6]'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE6]'
- en: SQL is a set-oriented language. In the result of a CONNECT BY query, it is precisely
    the order that has value. Thus it doesn't make much sense to also have an ORDER
    BY clause.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 是一种面向集合的语言。在 CONNECT BY 查询的结果中，顺序是有价值的。因此，也没有必要使用 ORDER BY 子句。
- en: JOIN doesn't work with CONNECT BY
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JOIN 与 CONNECT BY 不兼容
- en: '[![Carlingford, Ireland.](../Images/7f044a9d1d84560f4e5193335b07becb.jpg)](/http://philip.greenspun.com/images/pcd1120/carlingford-83.tcl)
    If we try to build a report showing each employee and his or her supervisor''s
    name, we are treated to one of Oracle''s few informative error messages:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[![爱尔兰卡林福德。](../Images/7f044a9d1d84560f4e5193335b07becb.jpg)](/http://philip.greenspun.com/images/pcd1120/carlingford-83.tcl)
    如果我们尝试构建一个报告，显示每个员工及其主管的姓名，我们将看到 Oracle 提供的少数几个信息丰富的错误消息之一：'
- en: '[PRE7]'
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We can work around this particular problem by creating a view:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过创建一个视图来解决这个特���问题：
- en: '[PRE8]'
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Notice that we''ve had to rename `level` so that we didn''t end up with a view
    column named after a reserved word. The view works just like the raw query:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们不得不重命名 `level`，以免最终得到一个以保留字命名的视图列。视图的工作方式与原始查询相同：
- en: '[PRE9]'
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE9]'
- en: but we can JOIN now
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 但是现在我们可以进行 JOIN 操作了
- en: '[PRE10]'
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If you have sharp eyes, you'll notice that we've actually OUTER JOINed so that
    our results don't exclude the big boss.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有敏锐的眼睛，您会注意到我们实际上进行了 OUTER JOIN，这样我们的结果不会排除大老板。
- en: Select-list subqueries *do* work with CONNECT BY
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Select-list 子查询 *可以* 与 CONNECT BY 一起使用
- en: 'Instead of the VIEW and JOIN, we could have added a subquery to the select
    list:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 与 VIEW 和 JOIN 不同，我们可以在选择列表中添加子查询：
- en: '[PRE11]'
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The general rule in Oracle is that you can have a subquery that returns a single
    row anywhere in the select list.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Oracle 中的一般规则是，您可以在选择列表中的任何地方有一个返回单行的子查询。
- en: Does this person work for me?
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这个人是为我工作的吗？
- en: 'Suppose that you''ve built an intranet Web service. There are things that your
    software should show to an employee''s boss (or boss''s boss) that it shouldn''t
    show to a subordinate or peer. Here we try to figure out if the VP Marketing (#2)
    has supervisory authority over Jane Nerd (#7):'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已经构建了一个企业内部 Web 服务。有些内容您的软件应该向员工的老板（或老板的老板）展示，而不应该向下属或同事展示。在这里，我们试图弄清楚市场副总裁（#2）是否对简·纳德（#7）具有监督权限：
- en: '[PRE12]'
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Apparently not. Notice that we start with the VP Marketing (#2) and stipulate
    `level > 1` to be sure that we will never conclude that someone supervises him
    or herself. Let''s ask if the Big Boss Man (#1) has authority over Jane Nerd:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 显然不是。请注意，我们从市场副总裁（#2）开始，并规定 `level > 1` 以确保我们永远不会得出某人监督自己的结论。让我们问一下大老板（#1）是否对简·纳德有权：
- en: '[PRE13]'
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Even though Big Boss Man isn''t Jane Nerd''s direct supervisor, asking Oracle
    to compute the relevant subtree yields us the correct result. In the ArsDigita
    Community System Intranet module, we decided that this computation was too important
    to be left as a query in individual Web pages. We centralized the question in
    a PL/SQL procedure:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 即使大老板不是简·纳德的直接主管，要求 Oracle 计算相关子树仍然给我们带来了正确的结果。在 ArsDigita Community System
    Intranet 模块中，我们决定这个计算太重要，不能仅作为个别网页中的查询。我们将问题集中在一个 PL/SQL 过程中：
- en: '[PRE14]'
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Family trees
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 家族谱系
- en: 'What if the graph is a little more complicated than employee-supervisor? For
    example, suppose that you are representing a family tree. Even without allowing
    for divorce and remarriage, exotic South African fertility clinics, etc., we still
    need more than one pointer for each node:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果图表比员工-主管关系更复杂怎么办？例如，假设您正在表示一个家族谱系。即使不考虑离婚和再婚、南非异国情调的生育诊所等，我们仍然需要为每个节点添加多个指针：
- en: '[PRE15]'
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In applying the lessons from the employee examples, the most obvious problem
    that we face now is whether to follow the mother or the father pointers:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用员工示例中的教训时，我们现在面临的最明显问题是要遵循母亲还是父亲的指针：
- en: '[PRE16]'
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Here''s what the official Oracle docs have to say about CONNECT BY:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这是官方 Oracle 文档对 CONNECT BY 的说法：
- en: 'specifies the relationship between parent rows and child rows of the hierarchy.
    condition can be any condition as described in "Conditions". However, some part
    of the condition must use the PRIOR operator to refer to the parent row. The part
    of the condition containing the PRIOR operator must have one of the following
    forms:'
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 指定层次结构的父行和子行之间的关系。条件可以是 "Conditions" 中描述的任何条件。然而，条件的某部分必须使用 PRIOR 运算符来引用父行。包含
    PRIOR 运算符的条件部分必须具有以下形式之一：
- en: ''
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'There is nothing that says `comparison_operator` has to be merely the equals
    sign. Let''s start again with my mom''s father but CONNECT BY more than one column:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 没有规定 `comparison_operator` 必须仅仅是等号。让我们再次从我妈的爸爸开始，但是 CONNECT BY 可以使用多个列：
- en: '[PRE18]'
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Instead of arbitrarily starting with Grandpa Nick, let''s ask Oracle to show
    us all the trees that start with a person whose parents are unknown:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是随意从 Nick 爷爷开始，让我们让 Oracle 显示所有以父母未知的人开始的树：
- en: '[PRE19]'
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE19]'
- en: PL/SQL instead of JOIN
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PL/SQL 而不是 JOIN
- en: '[![Tree branch at Glen Ellis Falls on Rt. 16 in New Hampshire](../Images/854aa475d933949e060b89fab3f871fb.jpg)](/http://philip.greenspun.com/images/pcd4537/glen-ellis-tree-branch-86.tcl)
    The preceding report is interesting but confusing because it is hard to tell where
    the trees meet in marriage. As noted above, you can''t do a JOIN with a CONNECT
    BY. We demonstrated the workaround of burying the CONNECT BY in a view. A more
    general workaround is using PL/SQL:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[![新罕布什尔州16号公路Glen Ellis瀑布上的树枝](../Images/854aa475d933949e060b89fab3f871fb.jpg)](/http://philip.greenspun.com/images/pcd4537/glen-ellis-tree-branch-86.tcl)
    上述报告很有趣，但令人困惑，因为很难看出树在哪里结婚。如上所述，您不能使用 CONNECT BY 进行 JOIN。我们演示了将 CONNECT BY 嵌入视图中的解决方法。一个更通用的解决方法是使用
    PL/SQL：'
- en: '[PRE20]'
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE20]'
- en: PL/SQL instead of JOIN and GROUP BY
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PL/SQL 而不是 JOIN 和 GROUP BY
- en: 'Suppose that in addition to displaying the family tree in a Web page, we also
    want to show a flag when a story about a family member is available. First we
    need a way to represent stories:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 假设除了在网页中显示家谱之外，我们还想在有关家庭成员的故事可用时显示一个标志。首先，我们需要一种表示故事的方式：
- en: '[PRE21]'
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'To show the number of stories alongside a family member''s listing, we would
    typically do an OUTER JOIN and then GROUP BY the columns other than the `count(family_story_id)`.
    In order not to disturb the CONNECT BY, however, we create another PL/SQL function:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示家庭成员列表旁边的故事数量，我们通常会进行 OUTER JOIN，然后按除了`count(family_story_id)`之外的列进行 GROUP
    BY。然而，为了不干扰 CONNECT BY，我们创建另一个 PL/SQL 函数：
- en: '[PRE22]'
  id: totrans-71
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[![Tree at Point Lobos.  California Coast, just south of Carmel.](../Images/2661480edc82974485e0402ec8e62c36.jpg)](/http://philip.greenspun.com/images/pcd1628/point-lobos-tree-25.tcl)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Point Lobos 的树。加利福尼亚海岸，卡梅尔以南。](../Images/2661480edc82974485e0402ec8e62c36.jpg)](/http://philip.greenspun.com/images/pcd1628/point-lobos-tree-25.tcl)'
- en: Working Backwards
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 逆向工作
- en: What does it look like to start at the youngest generation and work back?
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 从最年轻的一代开始逆向工作是什么样子？
- en: '[PRE23]'
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We ought to be able to view all the trees starting from all the leaves but
    Oracle seems to be exhibiting strange behavior:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该能够查看所有从叶子开始的树，但是 Oracle 似乎表现出奇怪的行为：
- en: '[PRE24]'
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE24]'
- en: What's wrong? If we try the subquery by itself, we get a reasonable result.
    Here are all the `relative_id`s that appear in the `mother` or `father` column
    at least once.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 出了什么问题？如果我们单独尝试子查���，我们会得到一个合理的结果。这里是至少在`mother`或`father`列中出现一次的所有`relative_id`s。
- en: '[PRE25]'
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The answer lies in that extra blank line at the bottom. There is a NULL in
    this result set. Experimentation reveals that Oracle behaves asymmetrically with
    NULLs and IN and NOT IN:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 答案就在底部的额外空行中。在这个结果集中有一个 NULL。实验表明 Oracle 在处理 NULL 和 IN 和 NOT IN 时表现不对称：
- en: '[PRE26]'
  id: totrans-81
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The answer is buried in the Oracle documentation of NOT IN: "Evaluates to FALSE
    if any member of the set is NULL." The correct query in this case?'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 答案隐藏在 Oracle 的 NOT IN 文档中："如果集合中的任何成员为 NULL，则评估为 FALSE。" 在这种情况下正确的查询是？
- en: '[PRE27]'
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Performance and Tuning
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 性能和调优
- en: '[![Elke in a tree. Victoria, British Columbia 1993.](../Images/d0ecdf1255d115893a8467f5fe102a3b.jpg)](/http://philip.greenspun.com/images/pcd1676/elke-in-tree-60.tcl)
    Oracle is not getting any help from the Tree Fairy in producing results from a
    CONNECT BY. If you don''t want tree queries to take O(N^2) time, you need to build
    indices that let Oracle very quickly answer questions of the form "What are all
    the children of Parent X?"'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Elke 爬树。1993年，不列颠哥伦比亚省维多利亚。](../Images/d0ecdf1255d115893a8467f5fe102a3b.jpg)](/http://philip.greenspun.com/images/pcd1676/elke-in-tree-60.tcl)
    Oracle 在从 CONNECT BY 生成结果时没有得到树精灵的帮助。如果您不希望树查询花费 O(N^2) 的时间，您需要构建索引，让 Oracle 能够非常快速地回答形式为
    "Parent X 的所有子代是什么？" 的问题。'
- en: 'For the corporate slaves table, you''d want two concatenated indices:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对于公司奴隶表，您可能需要两个连接的索引：
- en: '[PRE28]'
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Reference
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参考
- en: '[![A tree in Petrified Forest (north-central Arizona).](../Images/f1b7d98722df8dbb7623892de8f25ed4.jpg)](/http://philip.greenspun.com/images/pcd2148/petrified-forest-tree-15.4.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[![亚利桑那州北部石化森林中的一棵树。](../Images/f1b7d98722df8dbb7623892de8f25ed4.jpg)](/http://philip.greenspun.com/images/pcd2148/petrified-forest-tree-15.4.jpg)'
- en: '[SQL Reference section on CONNECT BY](http://www.oradoc.com/keyword/connectby)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[CONNECT BY 的 SQL 参考部分](http://www.oradoc.com/keyword/connectby)'
- en: '[PL/SQL User''s Guide and Reference](http://www.oradoc.com/keyword/plsql)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PL/SQL 用户指南和参考资料](http://www.oradoc.com/keyword/plsql)'
- en: Gratuitous Photos
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 无谓的照片
- en: '[![Joshua Tree National Park](../Images/1f0d0c6eee96f6a84f60d35d393c4191.jpg)](/http://philip.greenspun.com/images/pcd0278/joshua-tree-79.tcl)[![Mojave
    Desert.  Joshua Tree National Park](../Images/9b08cfb566eb1f00efdf10239a602367.jpg)](/http://philip.greenspun.com/images/pcd0278/joshua-tree-40.tcl)[![Florence''s
    Boboli Gardens](../Images/54834a9c8884d134064fa29de60e6711.jpg)](/http://philip.greenspun.com/images/pcd0800/boboli-tree-lane-72.tcl)[![Maple
    trees near Peacham, Vermont](../Images/6e1e9cfaefc1189511de3cb39c3cdb76.jpg)](/http://philip.greenspun.com/images/pcd2488/maple-trees-12.tcl)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[![约书亚树国家公园](../Images/1f0d0c6eee96f6a84f60d35d393c4191.jpg)](/http://philip.greenspun.com/images/pcd0278/joshua-tree-79.tcl)[![莫哈韦沙漠。约书亚树国家公园](../Images/9b08cfb566eb1f00efdf10239a602367.jpg)](/http://philip.greenspun.com/images/pcd0278/joshua-tree-40.tcl)[![佛罗伦萨的博博利花园](../Images/54834a9c8884d134064fa29de60e6711.jpg)](/http://philip.greenspun.com/images/pcd0800/boboli-tree-lane-72.tcl)[![佛蒙特州皮查姆附近的枫树](../Images/6e1e9cfaefc1189511de3cb39c3cdb76.jpg)](/http://philip.greenspun.com/images/pcd2488/maple-trees-12.tcl)'
- en: '[![Joshua Tree.  Joshua Tree National Park.](../Images/5469b36b6fffc84d1f298390a61d1b10.jpg)](/http://philip.greenspun.com/images/pcd4228/joshua-tree-10.4.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[![约书亚树。约书亚树国家公园。](../Images/5469b36b6fffc84d1f298390a61d1b10.jpg)](/http://philip.greenspun.com/images/pcd4228/joshua-tree-10.4.jpg)'
- en: 'Next: [dates](dates.html)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个：[日期](dates.html)
- en: '* * *'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[philg@mit.edu](http://philip.greenspun.com/)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[philg@mit.edu](http://philip.greenspun.com/)'
- en: Reader's Comments
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 读者评论
- en: Oracle9i does CONNECT BY on joins. It also adds an "ORDER SIBLINGS BY" clause,
    fixing the omission that prevents you from ordering each level of the query.
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Oracle9i在连接上执行CONNECT BY。它还添加了一个"ORDER SIBLINGS BY"子句，修复了阻止您对查询的每个级别进行排序的遗漏。
- en: ''
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Couldn't find the article at Dartmouth :(, it looked really interesting!
  id: totrans-101
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在Dartmouth找不到这篇文章:(，看起来真的很有趣！
- en: ''
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Andrew Wolfe](/shared/community-member?user_id=260484), March 24, 2004
  id: totrans-103
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [Andrew Wolfe](/shared/community-member?user_id=260484), March 24, 2004
- en: Interested readers should check out Joe Celko's nested set model for representing
    trees in SQL. No need to be locked into proprietary SQL dialects and probably
    a couple of orders of magnitude faster to query!
  id: totrans-104
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 感兴趣的读者应该查看Joe Celko关于在SQL中表示树的嵌套集模型。不需要被锁定在专有的SQL方言中，而且查询速度可能快上几个数量级！
- en: ''
  id: totrans-105
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Here's some links...
  id: totrans-106
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这里有一些链接...
- en: ''
  id: totrans-107
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: + http://www.intelligententerprise.com/001020/celko.jhtml
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: + http://www.intelligententerprise.com/001020/celko.jhtml
- en: + http://www.dbmsmag.com/9603d06.html
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: + http://www.dbmsmag.com/9603d06.html
- en: + http://www.dbmsmag.com/9604d06.html
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: + http://www.dbmsmag.com/9604d06.html
- en: + http://www.dbmsmag.com/9605d06.html
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: + http://www.dbmsmag.com/9605d06.html
- en: + http://www.dbmsmag.com/9606d06.html
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: + http://www.dbmsmag.com/9606d06.html
- en: + http://www.sqlteam.com/Forums/topic.asp?TOPIC_ID=14099
  id: totrans-113
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: + http://www.sqlteam.com/Forums/topic.asp?TOPIC_ID=14099
- en: + http://www.dbazine.com/oracle/or-articles/tropashko4
  id: totrans-114
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: + http://www.dbazine.com/oracle/or-articles/tropashko4
- en: + http://mrnaz.com/static/articles/trees_in_sql_tutorial/mptt_overview.php
  id: totrans-115
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: + http://mrnaz.com/static/articles/trees_in_sql_tutorial/mptt_overview.php
- en: ''
  id: totrans-116
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Regards, Mattster
  id: totrans-117
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 致敬，Mattster
- en: ''
  id: totrans-118
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Matt Anon](/shared/community-member?user_id=280913), April 3, 2007
  id: totrans-119
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [Matt Anon](/shared/community-member?user_id=280913), April 3, 2007
- en: '[Add a comment](/comments/add?page_id=4604)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[添加评论](/comments/add?page_id=4604)'
- en: Related Links
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关链接
- en: '[representing an m-ary tree in sql](http://www.cs.dartmouth.edu/~apd/archives/000019.html)-
    This method allows for very fast retrieval of descendants and modification of
    an m-ary tree. no self-referencing or nested select statements are necessary to
    retrieve some or all descendants. the labelling of nodes is such that it allows
    very simple and fast querying for DFS order of nodes. it was partially inspired
    by huffman encoding.   (contributed by [Anthony D''Auria](/shared/community-member?user_id=242782))'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在SQL中表示m叉树](http://www.cs.dartmouth.edu/~apd/archives/000019.html)- 这种方法允许非常快速地检索后代和修改m叉树。不需要自引用或嵌套的选择语句来检索一些或所有后代。节点的标记使得可以非常简单快速地查询节点的DFS顺序。它在某种程度上受到哈夫曼编码的启发。
    （由[Anthony D''Auria](/shared/community-member?user_id=242782)贡献）'
- en: '[Dead link](http://web.archive.org/web/*/http://www.cs.dartmouth.edu/~apd/archives/000019.html)-
    The link above to Dartmouth college appears to be dead, but Web Archive kept a
    copy of the page   (contributed by [Tom Lebr](/shared/community-member?user_id=261924))'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[失效链接](http://web.archive.org/web/*/http://www.cs.dartmouth.edu/~apd/archives/000019.html)-
    上面的链接到达特茅斯学院的链接似乎已经失效，但Web Archive保存了页面的副本 （由[Tom Lebr](/shared/community-member?user_id=261924)贡献）'
- en: '[Add a link](/links/add?page_id=4604)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[添加链接](/links/add?page_id=4604)'
