["```\n(define Y\u00a0 (lambda (f)\u00a0 \u00a0 ((lambda (x) (f (x x)))\u00a0 \u00a0  (lambda (x) (f (x x))))))\n```", "```\n> (define (Y f) (f (Y f)))\n> ```", "```\n((lambda (x) (x x)) (lambda (x) (x x)))\n```", "```\nI will say the next sentence twice:\u00a0 \"I will say the next sentence twice\".\n```", "```\nI will say the next sentence twice:\u00a0 \"I will hop on one foot and then say the next sentence twice\".\n```", "```\nfact0 == (fact-core 777)\n```", "```\nfact1 == (fact-core fact0) == (fact-core (fact-core 777))\n```", "```\nfact2 == (fact-core fact1)\n```", "```\nfact-n == (fact-core (fact-core (fact-core ... 777)))\n```", "```\nfact = fact-infinity == (fact-core (fact-core ...infinitely...))\n```", "```\nfact = (fact-core (fact-core ...infinitely...))\u00a0 \u00a0  = (fact-core fact)\n```", "```\nfact = (fact-core fact)\n```", "```\n0 = (sin 0)\n```", "```\n(make-recursive f) = (f (make-recursive f))\n```", "```\n(Y f) = (f (Y f))\n```", "```\n(Y f) = (f (Y f)) = (f (f (Y f))) = (f (f (f (Y f)))) = ...\u00a0 \u00a0 \u00a0 = (f (f (f ...)))\n```", "```\n(Y fact-core) = (fact-core (fact-core ...infinitely...))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 = fact\n```"]