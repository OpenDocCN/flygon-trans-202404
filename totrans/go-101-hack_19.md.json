["```\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    s := []int{1, 1, 2, 2, 3, 3, 3}\n    m := make(map[int]int)\n\n    for _, v := range s {\n        m[v]++\n    }\n\n    for key, value := range m {\n        fmt.Printf(\"%d occurs %d times\\n\", key, value)\n    }\n} \n```", "```\n3 occurs 3 times\n1 occurs 2 times\n2 occurs 2 times \n```", "```\n2 occurs 2 times\n3 occurs 3 times\n1 occurs 2 times \n```", "```\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    m := make(map[int]bool)\n\n    m[0] = false\n    m[1] = true\n\n    fmt.Println(m[0], m[1], m[2])\n} \n```", "```\nfalse true false \n```", "```\nvalue, ok := map[key] \n```", "```\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc check(m map[int]struct{}, k int) {\n    if _, ok := m[k]; ok {\n        fmt.Printf(\"%d is a valid key\\n\", k)\n    }\n}\nfunc main() {\n    m := make(map[int]struct{})\n    m[0] = struct{}{}\n    m[1] = struct{}{}\n\n    for  i := 0; i <=2; i++ {\n        check(m, i)\n    }\n} \n```", "```\n0 is a valid key\n1 is a valid key \n```", "```\ndelete(map, key) \n```"]