["```\nfunc append(slice []Type, elems ...Type) []Type \n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main()  {\n    var s []int = []int{1, 2}\n    fmt.Println(s)\n\n    s1 := make([]int, len(s) + 1)\n    s1[0] = 0\n    copy(s1[1:], s)\n    s = s1\n    fmt.Println(s)\n\n} \n```", "```\n[1 2]\n[0 1 2] \n```", "```\ns = append([]int{0}, s...) \n```", "```\nfunc Prepend(v interface{}, slice []interface{}) []interface{}{\n    return append([]interface{}{v}, slice...)\n} \n```"]