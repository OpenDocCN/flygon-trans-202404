["```\n# cat test.txt\nabcd\nefg\nhijk\nlmn \n```", "```\npackage main\n\nimport (\n        \"bufio\"\n        \"fmt\"\n        \"io\"\n        \"log\"\n        \"os\"\n)\n\nfunc main() {\n        f, err := os.Open(\"test.txt\")\n        if err != nil {\n                log.Fatal(err)\n        }\n\n        r := bufio.NewReader(f)\n        for {\n                if s, err := r.ReadSlice('\\n'); err == nil || err == io.EOF {\n                        fmt.Printf(\"%s\", s)\n                        if err == io.EOF {\n                                break\n                        }\n                } else {\n                        log.Fatal(err)\n                }\n\n        }\n} \n```", "```\nf, err := os.Open(\"test.txt\") \n```", "```\nr := bufio.NewReader(f) \n```", "```\nfor {\n    if s, err := r.ReadSlice('\\n'); err == nil || err == io.EOF {\n        fmt.Printf(\"%s\", s)\n        if err == io.EOF {\n            break\n        }\n    } else {\n        log.Fatal(err)\n    }\n\n} \n```", "```\nabcd\nefg\nhijk\nlmn \n```", "```\npackage main\n\nimport (\n        \"bufio\"\n        \"fmt\"\n        \"log\"\n        \"os\"\n)\n\nfunc main() {\n        f, err := os.Open(\"test.txt\")\n        if err != nil {\n                log.Fatal(err)\n        }\n\n        s := bufio.NewScanner(f)\n\n        for s.Scan() {\n                fmt.Println(s.Text())\n        }\n} \n```", "```\ns := bufio.NewScanner(f) \n```", "```\nfor s.Scan() {\n    fmt.Println(s.Text())\n} \n```", "```\npackage main\n\nimport (\n        \"bufio\"\n        \"fmt\"\n        \"log\"\n        \"os\"\n)\n\nfunc main() {\n        f, err := os.Open(\"test.txt\")\n        if err != nil {\n                log.Fatal(err)\n        }\n\n        s := bufio.NewScanner(f)\n        split := func(data []byte, atEOF bool) (advance int, token []byte, err error) {\n                for i := 0; i < len(data); i++ {\n                        if data[i] == 'h' {\n                                return i + 1, data[:i], nil\n                        }\n                }\n\n                return 0, data, bufio.ErrFinalToken\n        }\n        s.Split(split)\n        for s.Scan() {\n                fmt.Println(s.Text())\n        }\n} \n```", "```\nabcd\nefg\n\nijk\nlmn \n```"]