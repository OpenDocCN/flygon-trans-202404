- en: Heroku
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Heroku
- en: Heroku
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Heroku
- en: The following are basic steps needed to quickly set up a Node.js app with Express
    and deploy to Heroku.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是快速设置一个带有 Express 的 Node.js 应用程序并部署到 Heroku 所需的基本步骤。
- en: Step 1 - Heroku account
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 1 - Heroku 帐户
- en: Make sure you have a Heroku account set up
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已经设置好了 Heroku 帐户。
- en: Step 2 - Install Heroku Toolbelt
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 2 - 安装 Heroku Toolbelt
- en: Download and install the tool belt package specific for your OS
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并安装适用于你的操作系统的工具包
- en: OSX
  id: totrans-7
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: OSX
- en: '[https://toolbelt.heroku.com/osx](https://toolbelt.heroku.com/osx)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://toolbelt.heroku.com/osx](https://toolbelt.heroku.com/osx)'
- en: Windows
  id: totrans-9
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Windows
- en: '[https://toolbelt.heroku.com/windows](https://toolbelt.heroku.com/windows)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://toolbelt.heroku.com/windows](https://toolbelt.heroku.com/windows)'
- en: Linux
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Linux
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Step 3 - Log into you account
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 3 - 登录你的帐户
- en: Once toolbelt is installed, you should be able to access your account
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完工具包后，你应该能够访问你的帐户
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: That's pretty much about it. Pass these steps and you are ready to DEPLOY THE
    CODES!
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。通过这些步骤，你就准备好部署代码了！
- en: Deploy the codes
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署代码
- en: Deploy your first app
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署你的第一个应用程序
- en: At this point, you should have an app that works locally on your computer. The
    following steps outline updates you need to make in order to deploy the codes.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你应该有一个在本地计算机上运行的应用程序。以下步骤概述了你需要进行的更新以部署代码。
- en: Update package.json
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新 package.json
- en: In this step, we need to add some code to the `package.json` file so that we
    can run the app from a remote server.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步中，我们需要向`package.json`文件中添加一些代码，以便我们可以从远程服务器运行应用程序。
- en: 'Right now, there is a good chance that the file will look like this:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此刻，文件很可能看起来像这样：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'At the end of the `dependencies": { ... }` object, you need to add a comma
    `,` so that we can add more code. First let''s add the `main` keyword:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '在`dependencies": { ... }`对象的末尾，你需要添加一个逗号`,`以便我们可以添加更多代码。首先让我们添加`main`关键字：'
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Notice the trailing comma? This is because we are going to add more stuff.
    After that, add in the `engines` object and the specific engines we need to run
    this app:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到末尾的逗号了吗？这是因为我们将添加更多内容。之后，添加`engines`对象和我们运行此应用程序所需的特定引擎：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You should have something that looks like the following:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该有类似以下的东西：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Don't forget the Grunt + Bower
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不要忘记 Grunt + Bower
- en: If at this time you do not have any of the Grunt packages or Bower in the `dependenciess`
    object, we need to get that in there.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此时你的`dependenciess`对象中没有任何 Grunt 包或 Bower 包，我们需要将它们添加进去。
- en: 'You can either add them manually to the `package.json` file or dun:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以手动将它们添加到`package.json`文件中，或者运行：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Something that you probably don't have is the ability for the deployed server
    to run the Grunt tasks. For this we need Grunt-CLI.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能没有的一件事是部署服务器运行 Grunt 任务的能力。为此，我们需要 Grunt-CLI。
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Right about now, you should be looking pretty good.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 此刻，你应该看起来相当不错。
- en: Postinstall instructions
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装后的说明
- en: When we deploy the codes to Heroku, we have to tell it to run some commands,
    basically install the Bower packages and run the Grunt tasks. To do this, we need
    to add the instructions within the `scripts` object of the `package.json` file.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将代码部署到 Heroku 时，我们必须告诉它运行一些命令，基本上安装 Bower 包并运行 Grunt 任务。为此，我们需要在`package.json`文件的`scripts`对象中添加说明。
- en: 'Directly under the `"start": "node ./bin/www"`, add:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '在`"start": "node ./bin/www"`的下面，添加：'
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: There, now we have everything that Heroku needs to install the packages and
    run the scripts.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经为 Heroku 提供了安装包和运行脚本所需的一切。
- en: Add the Procfile
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加 Procfile
- en: This is a file that Heroku needs in order to start the app.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Heroku 启动应用程序所需的文件。
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Add the following code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 添加以下代码：
- en: '[PRE10]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Heroku will use this to kick start the app.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Heroku 将使用此代码来启动应用程序。
- en: Make this a Git repo
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将其设置为 Git 存储库
- en: It is important to make this a git repo BEFORE you create the Heroku server.
    **WAIT!** Before you go all crazy on the Git, there are some things we need to
    do.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建 Heroku 服务器之前，重要的是将其设置为 git 存储库。**等等！**在进行 Git 操作之前，我们需要做一些事情。
- en: You should have a `.gitignore` file in your repo at this point. open that up
    and make sure you are ignoring all the `node_modules`, all the `bower_components`
    and anything in the `/stylesheets/*.css` spectrum.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你的存储库中应该有一个`.gitignore`文件。打开它并确保你忽略所有的`node_modules`，所有的`bower_components`以及`/stylesheets/*.css`范围内的任何内容。
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Great. Now you can `git init` your repo.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了。现在你可以`git init`你的存储库。
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: It is not required at this time to make this a Github repo, but you may want
    to do this if you make this a real app.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 此时不需要将其设置为 Github 存储库，但如果你将其制作成一个真正的应用程序，可能会想要这样做。
- en: Deploy the codes
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署代码
- en: 'This is pretty hard here. Make sure to follow the commands specifically:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这里相当困难。确保按照指令具体执行：
- en: '[PRE13]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Rejoice
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 庆祝
- en: 'If all is well, you should see a return like this:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你应该看到这样的返回：
- en: '[PRE14]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Go to that URL and REJOICE!!!!!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 前往该网址并**庆祝**！！！
