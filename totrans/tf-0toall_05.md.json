["```\n# Lab 3 Minimizing Cost\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\ntf.set_random_seed(777)  # for reproducibility\n\nX = [1, 2, 3]\nY = [1, 2, 3]\n\nW = tf.placeholder(tf.float32)\n\n# Our hypothesis for linear model X * W\nhypothesis = X * W\n\n# cost/loss function\ncost = tf.reduce_mean(tf.square(hypothesis - Y))\n\n# Launch the graph in a session.\nsess = tf.Session()\n\n# Variables for plotting cost function\nW_history = []\ncost_history = []\n\nfor i in range(-30, 50):\n    curr_W = i * 0.1\n    curr_cost = sess.run(cost, feed_dict={W: curr_W})\n    W_history.append(curr_W)\n    cost_history.append(curr_cost)\n\n# Show the cost function\nplt.plot(W_history, cost_history)\nplt.show() \n```"]