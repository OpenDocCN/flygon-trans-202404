["```\n((A -> B), List<A> -> List<B>)\n```", "```\n((Number -> String), List<Number> -> List<String>)\n```", "```\n((Number -> (Number -> Number)),\n List<Number> -> List<(Number -> Number)>)\n```", "```\n((String -> String), List<String> -> List<String>)\n```", "```\nfun map(A :: ???, B :: ???, f :: (A -> B), l :: List<A>)\n    -> List<B>:\n  ...;\n```", "```\n\u2200 A, B : ((A -> B), List<A> -> List<B>)\n```", "```\nid-num = id<Number>\nid-str = id<String>\n```", "```\ncheck:\n  id-num(5) is 5\n  id-str(\"x\") is \"x\"\nend\n```", "```\nid-num(\"x\")\nid-str(5)\n```", "```\n    fun<T> filter(pred :: (T -> Bool), l :: List<T>) -> List<T>:\n      cases (List) l:\n        | empty => empty\n        | link(f, r) =>\n          if pred(f):\n            link(f, filter<T>(pred, r))\n          else:\n            filter<T>(pred, r);\n      end\n    end\n    ```", "```\n    filter-num = filter<Number>\n    ```"]