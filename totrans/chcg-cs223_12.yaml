- en: Miscellaneous Elm Demos I
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Demo: [`elm-diagrams`](http://package.elm-lang.org/packages/vilterp/elm-diagrams/3.0.0)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Check out Pete's cool library for composing 2D graphics in space, as well as
    some examples [here](https://github.com/vilterp/elm-diagrams).
  prefs: []
  type: TYPE_NORMAL
- en: 'Demo: [`stage`](http://package.elm-lang.org/packages/imeckler/stage/1.5.0)
    (now called [`piece`](http://package.elm-lang.org/packages/imeckler/piece/2.0.0))'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Check out Izaak's cool library for composing graphics in time, as well as some
    examples [here](https://github.com/imeckler/isomdemo) and [here](https://github.com/imeckler/shortwords).
  prefs: []
  type: TYPE_NORMAL
- en: 'Demo: Local Storage via Ports'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[HTML5 Local Storage](http://www.w3schools.com/html/html5_webstorage.asp)'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: See [`LocalStorage.html`](https://www.classes.cs.uchicago.edu/archive/2015/winter/22300-1/public-code/Ports/LocalStorage.html)
    for an example of how to use JavaScript to save information across visits to a
    webpage (on a per-domain basis).
  prefs: []
  type: TYPE_NORMAL
- en: Elm [Ports](http://elm-lang.org/learn/Ports.elm)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Outgoing ports are used to communicate from Elm to JavaScript, and incoming
    ports are used to communicate from JavaScript to Elm.
  prefs: []
  type: TYPE_NORMAL
- en: 'Define an Elm module [`CountPageVisits.elm`](https://www.classes.cs.uchicago.edu/archive/2015/winter/22300-1/public-code/Ports/CountPageVisits.elm)
    with `port`s, which act like "external" `Signal`s:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'In a JavaScript file [`Ports.js`](https://www.classes.cs.uchicago.edu/archive/2015/winter/22300-1/public-code/Ports/Ports.js),
    load the Elm module `Elm.CountPageVisits`, and `send` to its incoming ports and
    `subscribe` to its outgoing ports:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Compile the Elm module to JavaScript...
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '... and then put the pieces together in [`CountPageVisits.html`](https://www.classes.cs.uchicago.edu/archive/2015/winter/22300-1/public-code/Ports/CountPageVisits.html).'
  prefs: []
  type: TYPE_NORMAL
- en: Importing Community Packages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So far, we have been using only the [core package libraries](http://package.elm-lang.org/packages/elm-lang/core/1.0.0).
    There is also a growing number of [community packages](http://package.elm-lang.org/packages).
    Using them is easy. Just define an `elm-package.json` file that specifies which
    libraries you want to import.
  prefs: []
  type: TYPE_NORMAL
- en: 'Say we want to use [this HTML package](http://package.elm-lang.org/packages/evancz/elm-html/2.0.0).
    Add the location of this package to an otherwise boilerplate `elm-package.json`
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The names of the Elm modules exported by this package are listed at the top
    of its [documentation page](http://package.elm-lang.org/packages/evancz/elm-html/2.0.0).
    You can also click the "View Source" on the documentation page and view the [`elm-package.json`
    file](https://github.com/evancz/elm-html/blob/2.0.0/elm-package.json).
  prefs: []
  type: TYPE_NORMAL
- en: Now, `import` and use the library in an Elm file `HtmlTest.elm` ...
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '... and appropriate versions of the libraries will be downloaded locally into
    an `elm-stuff/` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In subsequent homework and project assignments, you may submit an `elm-package.json`
    to declare any community libraries you wish to use.
  prefs: []
  type: TYPE_NORMAL
- en: And if you end up building useful libraries of your own, considering [publishing
    them](http://package.elm-lang.org/)!
  prefs: []
  type: TYPE_NORMAL
