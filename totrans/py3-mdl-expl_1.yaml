- en: Challenges
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战
- en: Challenges
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战
- en: Grafik
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图形
- en: '| Challenge | Kurzbeschreibung | Rating |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| 挑战 | 简短描述 | 评级 |'
- en: '| --- | --- | --- |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| [Spirale](spiral.html) | Zeichne eine Spirale | sehr leicht |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [螺旋线](spiral.html) | 绘制一条螺旋线 | 非常简单 |'
- en: '| [Postcards](postcard.html) | Zeichne eine Postkarte | leicht |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [明信片](postcard.html) | 绘制一张明信片 | 简单 |'
- en: '| [Thumbnails](index2.html) | Erzeuge Thumbnails von Bildern | mittel |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [缩略图](index2.html) | 生成图像缩略图 | 中等 |'
- en: '| [Rekursive Grafik](recursive_graph.html) | Zeichne rekursive Bilder | mittel
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [递归图形](recursive_graph.html) | 绘制递归图像 | 中等 |'
- en: '| [Film](index3.html) | Drehe einen kurzen Film | schwer |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [电影](index3.html) | 拍摄一个短片 | 困难 |'
- en: Daten
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据
- en: '| Challenge | Kurzbeschreibung | Rating |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 挑战 | 简短描述 | 评级 |'
- en: '| --- | --- | --- |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| [Babynamengenerator](babynamengenerator.html) | Erzeuge zufällige Babynamen
    | leicht |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [宝宝姓名生成器](babynamengenerator.html) | 生成随机宝宝姓名 | 简单 |'
- en: '| [Reguläre Ausdrücke](regex.html) | Suche Muster in Text | mittel |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [正则表达式](regex.html) | 在文本中查找模式 | 中等 |'
- en: '| [Google](google.html) | Führe eine Google-Suche durch | mittel |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [谷歌](google.html) | 进行谷歌搜索 | 中等 |'
- en: '| [Webrecherche](webrecherche.html) | Lade Webseiten herunter | mittel |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [网络研究](webrecherche.html) | 下载网页 | 中等 |'
- en: Webentwicklung
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网页开发
- en: '| Challenge | Kurzbeschreibung | Rating |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 挑战 | 简短描述 | 评级 |'
- en: '| --- | --- | --- |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| [Daten anzeigen](webpage.md) | Erstelle einen einfachen Bottle-Webserver
    | mittel |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [显示数据](webpage.md) | 创建一个简单的 Bottle Web 服务器 | 中等 |'
- en: '| [Blog](blog.html) | Erstelle eine Blog-Webseite mit Django | schwer |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [博客](blog.html) | 使用 Django 创建博客网站 | 困难 |'
- en: Spirale
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 螺旋线
- en: 'Coding Challenge: Spiral'
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编程挑战：螺旋线
- en: The Challenge
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 挑战
- en: 'Write a program, that draws a spiral:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个绘制螺旋线的程序：
- en: '![spiral](60014e26.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![螺旋线](60014e26.png)'
- en: When your program draws a spiral with at least 3 loops, you have mastered this
    challenge.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的程序绘制了至少 3 个循环的螺旋线时，你已经掌握了这个挑战。
- en: What you can practise in this coding challenge
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在这个编程挑战中你可以练习什么
- en: loops
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环
- en: The **Pillow** library in Python
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 中的 **Pillow** 库
- en: The **turtle** module in Python
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 中的 **turtle** 模块
- en: Hints
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It is sufficient to draw the spiral as a series of short lines
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只需将螺旋线绘制为一系列短线即可
- en: Where is it easier to start (inside or outside)?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从哪里开始更容易（内部还是外部）？
- en: Both the Python modules `Pillow` and `turtle` are up to the task
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 模块 `Pillow` 和 `turtle` 都能胜任
- en: Getting started
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入门
- en: 'If you have no idea where to start, try the following Python script:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不知道从哪里开始，尝试以下 Python 脚本：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Optional goals
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可选目标
- en: the line width grows thicker from the inside to the outside
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线宽从内部到外部变粗
- en: there is a color gradient along the spiral
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 螺旋线上有一个颜色渐变
- en: '![Spiral with width and color](27a134f6.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![带宽度和颜色的螺旋线](27a134f6.png)'
- en: Postkarte
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 明信片
- en: Create a Postcard
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一张明信片
- en: Write a program that creates a postcard for the city of your choice.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个为你选择的城市创建明信片的程序。
- en: '![Welcome to Poznan](poznan.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![欢迎来到波兹南](poznan.png)'
- en: 1\. Install Pillow
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 安装 Pillow
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: (it is already installed with Anaconda)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: （它已经与 Anaconda 一起安装）
- en: 2\. Learn to know PIL
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 了解 PIL
- en: Exercise 2.1
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 2.1
- en: Run the program `example01.py`. What does it do?
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 运行程序 `example01.py`。它做了什么？
- en: Exercise 2.2
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 2.2
- en: Change the numbers in the program, so that you create a square-shaped image.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 更改程序中的数字，使之创建一个正方形形状的图像。
- en: 3\. Drawing shapes
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 绘制形状
- en: Exercise 3.1
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 3.1
- en: Run the program `example02.py`. What does it do?
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 运行程序 `example02.py`。它做了什么？
- en: Exercise 3.2
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 3.2
- en: Add a broad horizontal bar to an image of your favourite city.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在你最喜欢的城市图像上添加一条宽水平条。
- en: Exercise 3.3
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 3.3
- en: '**for fast students**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**适用于快速学习的学生**'
- en: Draw a 8-pointed star on an image of your favourite city.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在你最喜欢的城市图像上绘制一个 8 角星。
- en: '**Hint:** You can compose such a star from squares, triangles or polygons.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示：** 你可以用正方形、三角形或多边形组成这样的星星。'
- en: 4\. Drawing text
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 绘制文本
- en: Exercise 4.1
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 4.1
- en: Run the program `example03.py`. What does it do?
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 运行程序 `example03.py`。它做了什么？
- en: Exercise 4.2
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 4.2
- en: Write the text *"Welcome to (your city)"* to the shape from exercise 3.2.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 将文本 *"欢迎来到（你的城市）"* 写到练习 3.2 的形状上。
- en: 5\. Composing images
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 组合图像
- en: Exercise 5.1
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 5.1
- en: Run the program `example04.py`. What does it do?
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 运行程序 `example04.py`。它做了什么？
- en: Exercise 5.2
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 5.2
- en: Create a postcard composed of four smaller pictures, the horizontal bar and
    some text on it.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个由四幅小图片、水平条和一些文本组成的明信片。
- en: 6\. Applying filters
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 应用滤镜
- en: Exercise 6.1
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 6.1
- en: Run the program `example05.py`. What does it do?
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 运行程序 `example05.py`。它做了什么？
- en: Exercise 6.2
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 6.2
- en: Be creative!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 发挥创造力！
- en: License
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 许可证
- en: (c) 2015 Dr. Kristian Rother and Magdalena Rother
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: (c) 2015 Dr. Kristian Rother 和 Magdalena Rother
- en: Distributed under the conditions of the Creative Commons Attribution Share-alike
    License 4.0
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Creative Commons Attribution Share-alike License 4.0 的条件下分发
- en: Thumbnails
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缩略图
- en: Thumbnail Generator
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 缩略图生成器
- en: Problem description
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题描述
- en: '*“I have a big collection of photographs, and would like to search them. I
    have written a up keywords for each photograph in text files, e.g.* ''flower''*,*
    ''beach''*,* ''mountain''* etc. Now I need a program that can find all photographs
    for a given keyword.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*“我有一大堆照片，想要对它们进行搜索。我已经在文本文件中为每张照片写了关键字，例如* ''花朵''*,* ''海滩''*,* ''山脉''* 等等。现在我需要一个能够根据给定关键字找到所有照片的程序。'
- en: The program should create a big picture that shows thumbnail images 100 pixels
    wide, like in the image below.”*
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 该程序应该创建一个大图片，显示宽度为 100 像素的缩略图，就像下面的图片一样。”*
- en: Rick Closeview , hobby photographer
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Rick Closeview，业余摄影师
- en: '![Thumbnail matrix](thumbnail_matrix.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![缩略图矩阵](thumbnail_matrix.png)'
- en: Instructions
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指示
- en: 'Implement a program according to the problem description. The following steps
    may be helpful:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 根据问题描述实现一个程序。以下步骤可能有所帮助：
- en: 1\. Planning
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1\. 规划
- en: Dissect the problem into at least three separate sub-problems. Write them down
    on paper (cards or a single sheet). Try to be as precise as possible. Answer resulting
    questions.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 将问题分解成至少三个独立的子问题。将它们写在纸上（卡片或一张纸上）。尽量准确地回答问题。
- en: 2\. Divide the program into functions
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2\. 将程序分解成函数
- en: Identify key functions your program needs to have. Decide what should be the
    input and output for each of them. Write them up as well.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 确定程序需要具有的关键功能。决定每个功能的输入和输出应该是什么。也写下它们。
- en: 3\. Get the Graphics
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3\. 获取图形
- en: The file `sample_photos.zip` contains a few example photographs. It also contains
    a file `pics.txt` in each subfolder. This is the input information for the program.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 文件 `sample_photos.zip` 包含一些示例照片。每个子文件夹中还包含一个名为 `pics.txt` 的文件。这是程序的输入信息。
- en: 4\. Explore Python libraries
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4\. 探索 Python 库
- en: 'You might want to take a closer look at:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想要仔细观察一下：
- en: '`os` for file handling'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `os` 进行文件处理
- en: '`Pillow` for image manipulation'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Pillow` 用于图像处理'
- en: 5\. Write the program
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5\. 编写程序
- en: After these steps, start implementing.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些步骤后，开始实现。
- en: Rekursive Grafik
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 递归图形*
- en: 'Coding Challenge: The Recursive Snowflake'
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编码挑战：递归雪花
- en: The Challenge
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 挑战
- en: 'Write a program, that for a parameter `n=1` creates a basic shape out of four
    straight lines:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个程序，对于参数 `n=1`，创建一个由四条直线组成的基本形状：
- en: '![n=1](snowflake1.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![n=1](snowflake1.png)'
- en: 'When you increase `n`, each line gets replaced by a smaller version of the
    basic shape. For, instance with `n=2` you get:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 当你增加 `n` 时，每条线都会被基本形状的较小版本所替换。例如，当 `n=2` 时，你会得到：
- en: '![n=2](snowflake2.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![n=2](snowflake2.png)'
- en: 'And with `n=5`:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 而当 `n=5` 时：
- en: '![n=5](snowflake3.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![n=5](snowflake3.png)'
- en: When your program is able to produce a picture for `0 < n < 6`, you have mastered
    this challenge.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的程序能够为 `0 < n < 6` 生成图片时，你已经掌握了这个挑战。
- en: 'What you can exercise in this coding challenge:'
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在这个编码挑战中，你可以练习以下内容：
- en: Recursive algorithms
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 递归算法
- en: The **Pillow** library in Python
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Python** 中的 **Pillow** 库'
- en: The **turtle** module in Python
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 中的 **turtle** 模块
- en: Film
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电影
- en: Create a Movie
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建电影
- en: 'Material:'
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 材料：
- en: Your favourite image(s)
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你最喜欢的图像
- en: Python + Pillow
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python + Pillow
- en: '`MEncoder` or another program to create movies from a set of images.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `MEncoder` 或另一个程序从一组图像创建电影。
- en: see the [Flower Assembly Movie](https://youtu.be/FE6_nx-MKc8) to get an idea
    how the result could look like.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参见 [花朵装配电影](https://youtu.be/FE6_nx-MKc8)，了解结果可能会是什么样子。
- en: Task
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 任务
- en: Write a program using the PIL library that creates a set of `.png` images. Generate
    the images and generate a movie from that using a non-Python tool (e.g. MEncoder).
    Remember that a movie typically has 25 frames per second.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PIL 库编写一个程序，创建一组 `.png` 图像。使用非 Python 工具（例如 MEncoder）生成图像并从中生成电影。请记住，电影通常每秒有
    25 帧。
- en: Hints
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提示
- en: start with a very simple movie to make sure the assembly is working
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一个非常简单的电影开始，以确保装配工作正常
- en: the [Flower Assembly Movie](https://youtu.be/FE6_nx-MKc8) was created by slowly
    disassembling the picture and playing the frames backwards
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[花朵装配电影](https://youtu.be/FE6_nx-MKc8) 是通过慢慢拆卸图片并倒放帧来创建的'
- en: Creating a movie from frames on Windows
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Windows 上从帧创建电影
- en: MEncoder requires files with the frames to have names like frame_000123.png
    so that they have the right order in the final movie.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: MEncoder 要求帧文件的命名格式为 frame_000123.png，以便它们在最终电影中按正确顺序播放。
- en: Collect all frame images in one directory
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有帧图像收集到一个目录中
- en: copy Mencoder into that directory.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Mencoder 复制到该目录中。
- en: open a console (`Start -> Execute -> cmd`)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: open a console (`Start -> Execute -> cmd`)
- en: switch with `cd <directory_name>` to that directory
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: switch with `cd <directory_name>` to that directory
- en: type
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: type
- en: mencoder "mf://*.png" -mf fps=25 -o output.avi -ovc lavc -lavcopts vcodec=mpeg4
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: mencoder "mf://*.png" -mf fps=25 -o output.avi -ovc lavc -lavcopts vcodec=mpeg4
- en: Babynamengenerator
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Babynamengenerator
- en: Babynamengenerator
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Babynamengenerator
- en: Programmiere einen Babynamengenerator für unentschlossene Eltern.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: Programmiere einen Babynamengenerator für unentschlossene Eltern.
- en: 'Optionale Ziele:'
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'Optionale Ziele:'
- en: Das Programm gibt zufällig einen Namen aus einer vorgegebenen Liste aus
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Das Programm gibt zufällig einen Namen aus einer vorgegebenen Liste aus
- en: Das Programm gibt zufällig einen Namen aus dem US-Melderegister aus
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Das Programm gibt zufällig einen Namen aus dem US-Melderegister aus
- en: Der Benutzer kann wahlweise Jungen- oder Mädchennamen auswählen
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Der Benutzer kann wahlweise Jungen- oder Mädchennamen auswählen
- en: Das Programm macht 10 Vorschläge
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Das Programm macht 10 Vorschläge
- en: Verwende als Liste möglicher Vornamen eine Datei aus dem US-Datensatz
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Verwende als Liste möglicher Vornamen eine Datei aus dem US-Datensatz
- en: Reguläre Ausdrücke
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Reguläre Ausdrücke
- en: Reguläre Ausdrücke
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Reguläre Ausdrücke
- en: Aufgabe 1
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 1
- en: 'Finde Wörter mit `F` im Text. Führe dazu folgendes Beispiel aus:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 'Finde Wörter mit `F` im Text. Führe dazu folgendes Beispiel aus:'
- en: '[PRE2]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Aufgabe 2
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 2
- en: Was haben diese vier Bilder gemeinsam?
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Was haben diese vier Bilder gemeinsam?
- en: '![King Kong Flip Flop Hip Hop Ping Pong](regex.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![King Kong Flip Flop Hip Hop Ping Pong](regex.jpg)'
- en: 'Bildquellen (links oben nach rechts unten):'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 'Bildquellen (links oben nach rechts unten):'
- en: '*[By Source (WP:NFCC#4), Fair use](https://en.wikipedia.org/w/index.php?curid=48711736)*'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*[By Source (WP:NFCC#4), Fair use](https://en.wikipedia.org/w/index.php?curid=48711736)*'
- en: '*[Die Autorenschaft wurde nicht in einer maschinell lesbaren Form angegeben.
    Es wird Swarve~commonswiki als Autor angenommen, CC BY-SA 3.0](https://commons.wikimedia.org/w/index.php?curid=336076)*'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*[Die Autorenschaft wurde nicht in einer maschinell lesbaren Form angegeben.
    Es wird Swarve~commonswiki als Autor angenommen, CC BY-SA 3.0](https://commons.wikimedia.org/w/index.php?curid=336076)*'
- en: '*[Gaël Marziou from Grenoble, France - IMG_6266_DXO, CC BY 2.0](https://commons.wikimedia.org/w/index.php?curid=47416377)*'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*[Gaël Marziou from Grenoble, France - IMG_6266_DXO, CC BY 2.0](https://commons.wikimedia.org/w/index.php?curid=47416377)*'
- en: '*Derfu, CC BY-SA 3.0*'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Derfu, CC BY-SA 3.0*'
- en: 'Führe folgendes Codebeispiel aus:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 'Führe folgendes Codebeispiel aus:'
- en: '[PRE3]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Aufgabe 3
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 3
- en: Besuche die Seite [www.regexone.com](http://www.regexone.com) und führe einige
    der Übungen aus.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Besuche die Seite [www.regexone.com](http://www.regexone.com) und führe einige
    der Übungen aus.
- en: Aufgabe 4
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 4
- en: Schreibe ein Programm, das E-Mail-Adressen in Text erkennt.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: Schreibe ein Programm, das E-Mail-Adressen in Text erkennt.
- en: Verwende die Funktion `re.findall` und erstelle ein entsprechendes Suchmuster.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Verwende die Funktion `re.findall` und erstelle ein entsprechendes Suchmuster.
- en: Auf [Regex101](https://regex101.com/) kannst Du den regulären Ausdruck testen.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Auf [Regex101](https://regex101.com/) kannst Du den regulären Ausdruck testen.
- en: Google
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google
- en: Google
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google
- en: Überprüfe mit einem Python-Programm, ob die Suchmaschine Google funktioniert.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Überprüfe mit einem Python-Programm, ob die Suchmaschine Google funktioniert.
- en: Aufgabe 1
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 1
- en: Lade die Webseite `www.google.de` mit Python herunter.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Lade die Webseite `www.google.de` mit Python herunter.
- en: Aufgabe 2
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 2
- en: Extrahiere den Titel der Seite aus dem HTML-Dokument und gib ihn auf dem Bildschirm
    aus.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: Extrahiere den Titel der Seite aus dem HTML-Dokument und gib ihn auf dem Bildschirm
    aus.
- en: Aufgabe 3
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 3
- en: Führe eine Google-Suche aus Python durch. Recherchiere in der Dokumentation
    zum Modul `requests` danach, wie Du ein Formular über ein POST-request ausfüllen
    kannst.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: Führe eine Google-Suche aus Python durch. Recherchiere in der Dokumentation
    zum Modul `requests` danach, wie Du ein Formular über ein POST-request ausfüllen
    kannst.
- en: Gib die Suchergebnisse auf dem Bildschirm aus.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Gib die Suchergebnisse auf dem Bildschirm aus.
- en: 'Hinweise:'
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'Hinweise:'
- en: Das Modul `requests` hilft beim Vorbereiten der Suchanfrage.
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Das Modul `requests` hilft beim Vorbereiten der Suchanfrage.
- en: Das Formular verwendet HTTP POST.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Das Formular verwendet HTTP POST.
- en: Es gibt im Formular mindestens ein *'hidden'*-Feld, das Du angeben mußt.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Es gibt im Formular mindestens ein *'hidden'*-Feld, das Du angeben mußt.
- en: Webrecherche
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Webrecherche
- en: Herunterladen von HTML-Seiten
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Herunterladen von HTML-Seiten
- en: In den folgenden Aufgaben laden wir Daten von einer statischen Webseite oder
    einem RSS-Feed herunter.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: In den folgenden Aufgaben laden wir Daten von einer statischen Webseite oder
    einem RSS-Feed herunter.
- en: Aufgabe 1
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 1
- en: 'Suche Dir eine der folgenden Seiten aus:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 'Suche Dir eine der folgenden Seiten aus:'
- en: RSS-Feeds des Parlaments
  id: totrans-186
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: RSS-Feeds des Parlaments
- en: '`https://www.parlament-berlin.de/de/Service/RSS-Feeds`'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`https://www.parlament-berlin.de/de/Service/RSS-Feeds`'
- en: Biologische Datenbanken
  id: totrans-188
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Biologische Datenbanken
- en: '`http://ncbi.nlm.nih.gov`'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://ncbi.nlm.nih.gov`'
- en: Presse
  id: totrans-190
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Presse
- en: '`http://www.reuters.com/tools/rss`'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://www.reuters.com/tools/rss`'
- en: Demographie
  id: totrans-192
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Demographie
- en: '`http://www.gapminder.org`'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://www.gapminder.org`'
- en: Bücher
  id: totrans-194
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Bücher
- en: '`http://www.gutenberg.org`'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://www.gutenberg.org`'
- en: Aufgabe 2
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 2
- en: Zeige den Quelltext der Seite/des Feeds an. Versuche, markante Elemente zu finden,
    anhand derer Du den Titel, Links oder Inhalte erkennst.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: Zeige den Quelltext der Seite/des Feeds an. Versuche, markante Elemente zu finden,
    anhand derer Du den Titel, Links oder Inhalte erkennst.
- en: Aufgabe 3
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aufgabe 3
- en: Extrahiere den Titel der Seite aus dem HTML-Dokument/Feed und gib ihn auf dem
    Bildschirm aus. Verwende dazu die normalen Stringfunktionen.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: Aufgabe 4
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Extrahiere Links oder andere Daten aus der Seite. Entwickle dazu eine Strategie,
    die entweder die Methoden von Strings, reguläre Ausdrücke oder einen fertigen
    Parser verwendet.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: Aufgabe 5
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Lade 10 der verlinkten Seiten herunter und speichere sie ab.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: Nützliche Module
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`requests` zum Herunterladen von Webseiten'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`BeautifulSoup` zum Parsen von HTML-Seiten'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`scrapy` für beides zusammen'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Webseite mit Strassennamen
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Einen Webserver mit Flask bauen
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In diesem Tutorial kannst Du eine eigene dynamische HTML-Seite erstellen und
    auf einem Webserver zum Laufen bringen. Wir verwenden dazu das Python-Modul `flask`.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: '[`flask`](http://flask.pocoo.org/) ist vor allem für kleinere Webseiten geeignet.
    Eine Alternative ist `Django`, zu dem es das ausgezeichnete [DjangoGirls Tutorial](https://tutorial.djangogirls.org/)
    gibt.'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Flask installieren
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Installiere das Python-Modul `flask` mit `pip`:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 2\. Eine minimale Webseite starten
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Erstelle ein Python-Programm `server.py`, und baue das Hello-World-Beispiel
    aus der [Flask-Dokumentation](http://flask.pocoo.org/docs/) nach.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: 'Füge folgende Zeile zum Programm hinzu (funktioniert mit Anaconda besser als
    die in der Dokumentation angegebene Methode):'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Starte das Programm. Finde heraus, unter welcher HTTP-Adresse der Server läuft.
    Setze diese Adresse im Browser ein und prüfe, ob Dein Server erreichbar ist.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: 'Tip:'
  id: totrans-220
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Wir werden den Server im Verlauf des Tutorials noch sehr oft starten müssen.
    Stelle sicher, dass Du das Programm aus Deinem Editor oder von der Kommandozeile
    leicht anhalten und neu starten kannst.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: 3\. HTML-Code einbinden
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Die Flask-Funktionen können HTML-Code zurückgeben. Dies geht z.B. als String
    mit dreifachen Anführungszeichen. Folgender HTML-Code erzeugt eine Überschrift:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Mehr zu HTML-Elementen erfährst Du auf [Selfhtml.org](https://selfhtml.org/).
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: Baue die Überschrift in die Rückgabe der Python-Funktion ein. Starte den Server
    neu. Lade die Webseite im Browser neu. Prüfe, ob Deine Überschrift auf der Seite
    erscheint.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Eine Unterseite hinzufügen
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Schreibe eine zweite Python-Funktion, die den Namen Deiner Strasse ausgibt.
    Verwende den Dekorator `@app.route`, um die Seite auf die URL `/zuhause` zu legen.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: Starte den Server neu und rufe beide Unterseiten im Browser auf (`/` und `/zuhause`).
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: 'Hilfe:'
  id: totrans-230
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In der Dokumentation unter [**Routing**](http://flask.pocoo.org/docs/quickstart/#routing)
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Hyperlinks
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Erstelle auf der Startseite einen Hyperlink, der auf die Unterseite verweist.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: 'Dazu muss die Funktion `hello()` folgenden HTML-Code zurückgeben:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Starte den Server neu und prüfe, ob der Link funktioniert.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: 6\. Ein Template hinzufügen
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Es wird schnell beschwerlich, eine ganze HTML-Seite in unser Python-Skript zu
    kleben. Es ist besser, den HTML-Code in **Templates** zu speichern und diese einzubinden.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: 'Erstelle eine Datei `templates/hello.html`, in die Du den folgenden HTML-Code
    einfügst:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Binde das Template entsprechend dem Abschnitt [Rendering Templates](http://flask.pocoo.org/docs/quickstart/#rendering-templates)
    aus der Flask-Dokumentation hinzu.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 Flask 文档中的 [渲染模板](http://flask.pocoo.org/docs/quickstart/#rendering-templates)
    部分添加模板。
- en: Starte dann den Server neu und stelle sicher, dass der Inhalt des Templates
    angezeigt wird (**achte auf die Titelzeile des Browserfensters!**).
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 然后重新启动服务器，确保模板内容被显示出来（**注意浏览器窗口的标题栏！**）。
- en: 7\. Variablen ins Template einbinden
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7\. 将变量插入模板
- en: 'Wir können aus den Python-Funktionen Daten an ein Template schicken, indem
    wir ein Dictionary zurückgeben:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 Python 函数将数据发送到模板，方法是返回一个字典：
- en: '[PRE9]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In den HTML-Templates kannst Du diese Variablen folgendermassen ansprechen:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在 HTML 模板中，你可以这样引用这些变量：
- en: '[PRE10]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 8\. Dynamische URLs
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8\. 动态 URL
- en: 'Du kannst in den URLs Platzhalter verwenden, deren Inhalt als Variable verfügbar
    ist. Schreibe eine Funktion, die einen Strassennamen in der URL erhält:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 URL 中使用占位符，其内容作为变量可用。编写一个函数，该函数在 URL 中接收一个街道名称：
- en: '[PRE11]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Schreibe diese Funktion fertig und probiere die fertige Seite mit unterschiedlichen
    Strassennamen aus.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这个函数并尝试使用不同的街道名称查看完成的页面。
- en: 'Achtung:'
  id: totrans-252
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意：
- en: Mit Platzhaltern kann es leicht passieren, dass zwei Funktionen die gleiche
    URL ansprechen. Dies kann zu interessanten Fehlern führen, weil nicht sofort ersichtlich
    ist, welche Funktion Flask aufruft.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 使用占位符时很容易出现两个函数访问相同 URL 的情况。这可能会导致有趣的错误，因为不清楚 Flask 调用哪个函数。
- en: 9\. Geodaten bereitstellen
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9\. 提供地理数据
- en: Als Datensatz verwenden wir das [Strassennamenverzeichnis der Zeit](http://www.zeit.de/interactive/strassennamen/).
    Die Daten liegen ursprünglich im Format **GeoJSON** vor. Wir verwenden eine Datei,
    die in das `.csv`-Format umgewandelt wurde, so dass Du es bequem mit `pandas`
    verwenden kannst.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 [时代街道名称目录](http://www.zeit.de/interactive/strassennamen/) 作为数据集。数据最初以 **GeoJSON**
    格式存在。我们使用一个转换为 `.csv` 格式的文件，以便你可以方便地使用 `pandas`。
- en: Wähle einige Strassen aus der Datei aus und stelle diese auf der Webseite als
    Tabelle dar. Lies dazu nach, wie Du eine `for`-Schleife im Template unterbringst.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 从文件中选择一些街道，并将它们显示在网页上的表格中。查看如何在模板中使用 `for` 循环。
- en: 10\. Ein Formular erstellen
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10\. 创建一个表单
- en: Recherchiere, wie Du ein Formular mit Flask erstellst. Baue ein Formular ein,
    in dem Du einen Strassennamen in ein Eingabefeld eingibst und über einen Knopf
    das Formular abschickst.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 调查一下如何使用 Flask 创建一个表单。在表单中加入一个输入框，输入一个街道名称，然后通过一个按钮提交表单。
- en: 11\. Kopf- und Fußzeilen
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11\. 头部和底部
- en: Du kannst Deine Templates auf mehrere Dateien aufteilen, um Redundanzen zu vermeiden.
    Erstelle eine Datei für Kopf- und Fusszeilen.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将模板拆分为多个文件，以避免冗余。创建一个用于头部和底部的文件。
- en: Wie das in Flask geht findest Du unter [Template Inheritance](http://flask.pocoo.org/docs/patterns/templateinheritance/#template-inheritance).
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Flask 中如何实现请查看 [模板继承](http://flask.pocoo.org/docs/patterns/templateinheritance/#template-inheritance)。
- en: 12\. CSS-Stylesheets einbinden
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12\. 引入 CSS 样式表
- en: Hier kannst Du Typographie und Farben festlegen.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以设置排版和颜色。
- en: Lies unter [Selfhtml.org](https://selfhtml.org/) nach, wie CSS-Befehle aussehen.
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [Selfhtml.org](https://selfhtml.org/) 上查看 CSS 命令的样式。
- en: Baue einen CSS-Befehl in eines der Templates ein, der die Überschrift einfärbt.
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在模板中加入一个 CSS 命令，用来给标题上色。
- en: Erstelle eine Datei `static/style.css`, in die Du eine weitere CSS-Anweisung
    schreibst.
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个 `static/style.css` 文件，写入另一个 CSS 指令。
- en: Binde die CSS-Datei in Dein Template ein (schreibt Dozent an).
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 CSS 文件包含在你的模板中（请联系讲师）。
- en: Sage Flask, wo die CSS-Datei zu finden ist. Siehe [Static Files](http://flask.pocoo.org/docs/quickstart/#static-files)
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 告诉 Flask CSS 文件的位置。参见 [静态文件](http://flask.pocoo.org/docs/quickstart/#static-files)
- en: 13\. Eine Karte mit Folium zeichnen
  id: totrans-269
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 13\. 使用 Folium 绘制地图
- en: Stelle die gefundenen Strassen als interaktive Karte dar. Probiere dazu zunächst
    ein Python-Skript mit dem Modul `folium` aus. Siehe [https://github.com/krother/python_showcase/tree/master/map_markers](https://github.com/krother/python_showcase/tree/master/map_markers).
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 将找到的街道显示为交互式地图。首先尝试使用带有 `folium` 模块的 Python 脚本。参见 [https://github.com/krother/python_showcase/tree/master/map_markers](https://github.com/krother/python_showcase/tree/master/map_markers).
- en: 14\. Bootstrap
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14\. Bootstrap
- en: '*"Half the internet is built on Bootstrap"*'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '*"一半的互联网是建立在 Bootstrap 上的"*'
- en: '**Bootstrap** ist eine Sammlung nützlicher CSS- und JavaScript-Elemente, mit
    denen Du schnell eine Typographie hinbekommst, die auch auf Mobilgeräten gut aussieht.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '**Bootstrap** 是一个有用的 CSS 和 JavaScript 元素集合，可以快速创建一个在移动设备上看起来很好的排版。'
- en: 'Dazu ist eine Reihe von Schritten nötig:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 需要一系列步骤：
- en: Binde die Bootstrap-Dateien in Deine Templates ein (siehe [Anleitung](http://getbootstrap.com/docs/4.0/getting-started/introduction/))
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Bootstrap 文件包含在你的模板中（参见[教程](http://getbootstrap.com/docs/4.0/getting-started/introduction/)）
- en: Probiere eine Vorlage aus der Dokumentation aus
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从文档中尝试一个模板
- en: Probiere einzelne Elemente aus (unter *"Components"* findest Du einige, bei
    denen Du leicht siehst, ob sie funktionieren)
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试单个元素（在*"Components"*下可以找到一些元素，你可以轻松看到它们是否有效）
- en: 'Anmerkung:'
  id: totrans-278
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注：
- en: Oft ist es nicht wünschenswert, Dateien von einer Drittpartei einzubinden. Nachhaltiger
    ist es, diese als *statische Dateien* auf Deinem eigenen Server abzulegen.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 经常不希望从第三方加载文件。更可持续的做法是将它们作为*静态文件*存放在你自己的服务器上。
- en: 15\. Eine SQL-Datenbank verwenden
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 15\. 使用 SQL 数据库
- en: Es ist natürlich nicht grade effizient, bei jedem Neustart des Servers 900 MB
    Daten in den Speicher zu laden. Eine bessere Alternative ist eine **Datenbank**.
    Verwende das Python-Modul `sqlite3`, um eine Datenbank zu erstellen und die gewünschten
    Strassen aus einer Tabelle abzufragen.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 每次服务器重新启动时加载 900 MB 数据到内存中显然不是很有效率。更好的选择是使用**数据库**。使用 Python 模块 `sqlite3` 创建数据库，并从表中查询所需的数据。
- en: 16\. Deployment auf einem öffentlichen Server
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 16\. 在公共服务器上部署
- en: Lies Dir im [Djangogirls-Tutorial](https://tutorial.djangogirls.org/en/deploy/)
    durch, wie Du einen Server auf [pythonanywhere](https://www.pythonanywhere.com/)
    anlegst. Probiere es aus! Es kostet nichts.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [Djangogirls 教程](https://tutorial.djangogirls.org/en/deploy/) 中了解如何在 [pythonanywhere](https://www.pythonanywhere.com/)
    上设置服务器。试一试！它是免费的。
- en: 'Hinweis:'
  id: totrans-284
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 提示：
- en: Es ist sehr zu empfehlen, den Code mit `git` zu veröffentlichen, bevor Du Dich
    mit dem öffentlichen Server beschäftigst. Dadurch werden viele Einzelheiten deutlich
    einfacher.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议在处理公共服务器之前使用 `git` 公开代码。这样许多细节会变得更简单。
- en: Blog
  id: totrans-286
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 博客
- en: Blog
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 博客
- en: Das Projekt besteht darin, eine eigene Webseite zu entwickeln und im Netz zu
    veröffentlichen. Das [Django Girls Tutorial](https://djangogirls.org/resources/)
    bietet eine ausgezeichnete Anleitung.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目涉及开发自己的网站并在网络上发布。[Django Girls 教程](https://djangogirls.org/resources/) 提供了出色的指导。
- en: 'Ziel:'
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目标：
- en: Die Webseite ist über einen Browser erreichbar.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 通过浏览器可以访问网站。
- en: 'Themen:'
  id: totrans-291
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主题：
- en: Server-Programmierung, HTML, Deployment
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器编程，HTML，部署
- en: 'Python-Bibliotheken:'
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Python 库：
- en: Django oder Bottle
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: Django 或 Bottle
