["``` (`quasiquote`), *[142](objects.html#./objects:s5)*\n`abs`, [34](start.html#./start:s98), *[178](objects.html#./objects:s105)*, [183](objects.html#./objects:s126)\nabstract objects, [53](start.html#./start:s179), [408](examples.html#./examples:s60)\n`acos`, *[185](objects.html#./objects:s132)*\nactual parameters, [27](start.html#./start:s64), [92](binding.html#./binding:s7)\nAlgol 60, [6](intro.html#./intro:s27)\n`and`, [37](start.html#./start:s108), [62](further.html#./further:s22), *[110](control.html#./control:s11)*\n`angle`, *[183](objects.html#./objects:s124)*\n`append`, [46](start.html#./start:s151), *[160](objects.html#./objects:s49)*\n`apply`, *[107](control.html#./control:s3)*\narbitrary precision, [167](objects.html#./objects:s76)\n`asin`, *[185](objects.html#./objects:s132)*\n`assert`, *[359](exceptions.html#./exceptions:s5)*\n`assertion-violation`, *[358](exceptions.html#./exceptions:s4)*\n`assertion-violation?`, *[366](exceptions.html#./exceptions:s21)*\nassignment, [102](binding.html#./binding:s29)\nassignments, [47](start.html#./start:s163), [102](binding.html#./binding:s30)\n`assoc`, *[165](objects.html#./objects:s58)*\nassociation list, [165](objects.html#./objects:s59), [166](objects.html#./objects:s61), [243](objects.html#./objects:s273), [404](examples.html#./examples:s50)\n`assp`, *[166](objects.html#./objects:s60)*\n`assq`, *[165](objects.html#./objects:s58)*\n`assv`, *[165](objects.html#./objects:s58)*\n`atan`, *[185](objects.html#./objects:s133)*\n`atom?`, [41](start.html#./start:s127)\nauxiliary keywords, [61](further.html#./further:s16), [294](syntax.html#./syntax:s22)\nbase case, [41](start.html#./start:s134)\n`be-like-begin`, [313](syntax.html#./syntax:s54)\n`begin`, [51](start.html#./start:s174), [60](further.html#./further:s10), [101](binding.html#./binding:s26), *[108](control.html#./control:s4)*\nbinary port, [257](io.html#./io:s6)\nbinary trees, [155](objects.html#./objects:s33)\n`binary-port?`, *[270](io.html#./io:s45)*\nbinding, [4](intro.html#./intro:s14)\n`bitwise-and`, *[186](objects.html#./objects:s134)*\n`bitwise-arithmetic-shift`, *[190](objects.html#./objects:s144)*\n`bitwise-arithmetic-shift-left`, *[189](objects.html#./objects:s143)*\n`bitwise-arithmetic-shift-right`, *[189](objects.html#./objects:s143)*\n`bitwise-bit-count`, *[187](objects.html#./objects:s136)*\n`bitwise-bit-field`, *[189](objects.html#./objects:s141)*\n`bitwise-bit-set?`, *[188](objects.html#./objects:s139)*\n`bitwise-copy-bit`, *[188](objects.html#./objects:s140)*\n`bitwise-copy-bit-field`, *[189](objects.html#./objects:s142)*\n`bitwise-first-bit-set`, *[187](objects.html#./objects:s138)*\n`bitwise-if`, *[186](objects.html#./objects:s135)*\n`bitwise-ior`, *[186](objects.html#./objects:s134)*\n`bitwise-length`, *[187](objects.html#./objects:s137)*\n`bitwise-not`, *[186](objects.html#./objects:s134)*\n`bitwise-reverse-bit-field`, *[191](objects.html#./objects:s146)*\n`bitwise-rotate-bit-field`, *[190](objects.html#./objects:s145)*\n`bitwise-xor`, *[186](objects.html#./objects:s134)*\nblock buffering, [258](io.html#./io:s17)\nblock comment (\u00a0`#|...|#`\u00a0), [455](grammar.html#./grammar:s11)\nblock structure, [4](intro.html#./intro:s13)\nboolean syntax, [457](grammar.html#./grammar:s14)\nboolean values, [7](intro.html#./intro:s35)\n`boolean=?`, *[243](objects.html#./objects:s271)*\n`boolean?`, *[150](objects.html#./objects:s14)*\n`bound-identifier=?`, *[302](syntax.html#./syntax:s37)*\nbrackets (\u00a0`[`\u00a0`]`\u00a0), [7](intro.html#./intro:s34), [155](objects.html#./objects:s34)\n`break`, [308](syntax.html#./syntax:s47)\nbuffer modes, [258](io.html#./io:s16)\n`buffer-mode`, *[261](io.html#./io:s27)*\n`buffer-mode?`, *[262](io.html#./io:s28)*\nbytevector syntax, [461](grammar.html#./grammar:s23)\n`bytevector->sint-list`, *[238](objects.html#./objects:s260)*\n`bytevector->string`, *[286](io.html#./io:s91)*\n`bytevector->u8-list`, *[232](objects.html#./objects:s252)*\n`bytevector->uint-list`, *[238](objects.html#./objects:s260)*\n`bytevector-copy`, *[229](objects.html#./objects:s246)*\n`bytevector-copy!`, *[230](objects.html#./objects:s247)*\n`bytevector-fill!`, *[229](objects.html#./objects:s245)*\n`bytevector-ieee-double-native-ref`, *[239](objects.html#./objects:s262)*\n`bytevector-ieee-double-native-set!`, *[239](objects.html#./objects:s263)*\n`bytevector-ieee-double-ref`, *[240](objects.html#./objects:s264)*\n`bytevector-ieee-double-set!`, *[240](objects.html#./objects:s265)*\n`bytevector-ieee-single-native-ref`, *[239](objects.html#./objects:s262)*\n`bytevector-ieee-single-native-set!`, *[239](objects.html#./objects:s263)*\n`bytevector-ieee-single-ref`, *[240](objects.html#./objects:s264)*\n`bytevector-ieee-single-set!`, *[240](objects.html#./objects:s265)*\n`bytevector-length`, *[229](objects.html#./objects:s243)*\n`bytevector-s16-native-ref`, *[232](objects.html#./objects:s254)*\n`bytevector-s16-native-set!`, *[233](objects.html#./objects:s255)*\n`bytevector-s16-ref`, *[235](objects.html#./objects:s256)*\n`bytevector-s16-set!`, *[236](objects.html#./objects:s257)*\n`bytevector-s32-native-ref`, *[232](objects.html#./objects:s254)*\n`bytevector-s32-native-set!`, *[233](objects.html#./objects:s255)*\n`bytevector-s32-ref`, *[235](objects.html#./objects:s256)*\n`bytevector-s32-set!`, *[236](objects.html#./objects:s257)*\n`bytevector-s64-native-ref`, *[232](objects.html#./objects:s254)*\n`bytevector-s64-native-set!`, *[233](objects.html#./objects:s255)*\n`bytevector-s64-ref`, *[235](objects.html#./objects:s256)*\n`bytevector-s64-set!`, *[236](objects.html#./objects:s257)*\n`bytevector-s8-ref`, *[231](objects.html#./objects:s249)*\n`bytevector-s8-set!`, *[231](objects.html#./objects:s251)*\n`bytevector-sint-ref`, *[237](objects.html#./objects:s258)*\n`bytevector-sint-set!`, *[238](objects.html#./objects:s259)*\n`bytevector-u16-native-ref`, *[232](objects.html#./objects:s254)*\n`bytevector-u16-native-set!`, *[233](objects.html#./objects:s255)*\n`bytevector-u16-ref`, *[235](objects.html#./objects:s256)*\n`bytevector-u16-set!`, *[236](objects.html#./objects:s257)*\n`bytevector-u32-native-ref`, *[232](objects.html#./objects:s254)*\n`bytevector-u32-native-set!`, *[233](objects.html#./objects:s255)*\n`bytevector-u32-ref`, *[235](objects.html#./objects:s256)*\n`bytevector-u32-set!`, *[236](objects.html#./objects:s257)*\n`bytevector-u64-native-ref`, *[232](objects.html#./objects:s254)*\n`bytevector-u64-native-set!`, *[233](objects.html#./objects:s255)*\n`bytevector-u64-ref`, *[235](objects.html#./objects:s256)*\n`bytevector-u64-set!`, *[236](objects.html#./objects:s257)*\n`bytevector-u8-ref`, *[230](objects.html#./objects:s248)*\n`bytevector-u8-set!`, *[231](objects.html#./objects:s250)*\n`bytevector-uint-ref`, *[237](objects.html#./objects:s258)*\n`bytevector-uint-set!`, *[238](objects.html#./objects:s259)*\n`bytevector=?`, *[229](objects.html#./objects:s244)*\n`bytevector?`, *[155](objects.html#./objects:s24)*\nC, [393](examples.html#./examples:s23)\n`caaaar`, *[157](objects.html#./objects:s42)*\n`caaadr`, *[157](objects.html#./objects:s42)*\n`caaar`, *[157](objects.html#./objects:s42)*\n`caadar`, *[157](objects.html#./objects:s42)*\n`caaddr`, *[157](objects.html#./objects:s42)*\n`caadr`, *[157](objects.html#./objects:s42)*\n`caar`, *[157](objects.html#./objects:s42)*\n`caar,\u00a0cadr,\u00a0...,\u00a0cddddr`, [34](start.html#./start:s97)\n`cadaar`, *[157](objects.html#./objects:s42)*\n`cadadr`, *[157](objects.html#./objects:s42)*\n`cadar`, *[157](objects.html#./objects:s42)*\n`caddar`, *[157](objects.html#./objects:s42)*\n`cadddr`, *[157](objects.html#./objects:s42)*\n`caddr`, *[157](objects.html#./objects:s42)*\n`cadr`, [31](start.html#./start:s83), [32](start.html#./start:s85), [34](start.html#./start:s93), *[157](objects.html#./objects:s42)*\ncall-by-name, [408](examples.html#./examples:s58)\ncall-by-value, [407](examples.html#./examples:s57)\n`call-with-bytevector-output-port`, *[266](io.html#./io:s38)*\n`call-with-current-continuation`, *[123](control.html#./control:s54)*, [426](examples.html#./examples:s99)\n`call-with-input-file`, *[281](io.html#./io:s77)*\n`call-with-output-file`, *[282](io.html#./io:s78)*\n`call-with-port`, *[272](io.html#./io:s51)*\n`call-with-string-output-port`, *[267](io.html#./io:s39)*\n`call-with-values`, [130](control.html#./control:s69), *[131](control.html#./control:s71)*\n`call/cc`, [74](further.html#./further:s62), [122](control.html#./control:s53), *[123](control.html#./control:s54)*, [126](control.html#./control:s62), [133](control.html#./control:s77), [425](examples.html#./examples:s98), [426](examples.html#./examples:s100)\n`car`, [18](start.html#./start:s21), [155](objects.html#./objects:s30), *[156](objects.html#./objects:s38)*\n`case`, [55](start.html#./start:s189), *[113](control.html#./control:s18)*, [306](syntax.html#./syntax:s41)\n`case-lambda`, *[94](binding.html#./binding:s13)*\n`cdaaar`, *[157](objects.html#./objects:s42)*\n`cdaadr`, *[157](objects.html#./objects:s42)*\n`cdaar`, *[157](objects.html#./objects:s42)*\n`cdadar`, *[157](objects.html#./objects:s42)*\n`cdaddr`, *[157](objects.html#./objects:s42)*\n`cdadr`, *[157](objects.html#./objects:s42)*\n`cdar`, *[157](objects.html#./objects:s42)*\n`cddaar`, *[157](objects.html#./objects:s42)*\n`cddadr`, *[157](objects.html#./objects:s42)*\n`cddar`, *[157](objects.html#./objects:s42)*\n`cdddar`, *[157](objects.html#./objects:s42)*\n`cddddr`, *[157](objects.html#./objects:s42)*\n`cdddr`, *[157](objects.html#./objects:s42)*\n`cddr`, [31](start.html#./start:s84), [34](start.html#./start:s94), *[157](objects.html#./objects:s42)*\n`cdr`, [18](start.html#./start:s22), [38](start.html#./start:s114), [155](objects.html#./objects:s29), *[156](objects.html#./objects:s39)*\n`ceiling`, *[177](objects.html#./objects:s103)*\n`char->integer`, *[215](objects.html#./objects:s210)*\n`char-alphabetic?`, *[213](objects.html#./objects:s203)*\n`char-ci<=?`, *[212](objects.html#./objects:s202)*\n`char-ci<?`, *[212](objects.html#./objects:s202)*\n`char-ci=?`, *[212](objects.html#./objects:s202)*\n`char-ci>=?`, *[212](objects.html#./objects:s202)*\n`char-ci>?`, *[212](objects.html#./objects:s202)*\n`char-downcase`, *[214](objects.html#./objects:s207)*\n`char-foldcase`, *[215](objects.html#./objects:s209)*\n`char-general-category`, *[214](objects.html#./objects:s205)*\n`char-lower-case?`, *[213](objects.html#./objects:s204)*\n`char-numeric?`, *[213](objects.html#./objects:s203)*\n`char-title-case?`, *[213](objects.html#./objects:s204)*\n`char-titlecase`, *[214](objects.html#./objects:s208)*\n`char-upcase`, *[214](objects.html#./objects:s206)*\n`char-upper-case?`, *[213](objects.html#./objects:s204)*\n`char-whitespace?`, *[213](objects.html#./objects:s203)*\n`char<=?`, *[212](objects.html#./objects:s201)*\n`char<?`, *[212](objects.html#./objects:s201)*\n`char=?`, *[212](objects.html#./objects:s201)*\n`char>=?`, *[212](objects.html#./objects:s201)*\n`char>?`, *[212](objects.html#./objects:s201)*\n`char?`, *[154](objects.html#./objects:s19)*\ncharacter syntax, [457](grammar.html#./grammar:s15)\ncharacters, [211](objects.html#./objects:s199)\nChez\u00a0Scheme, [ix](preface.html#./preface:s3), [42](start.html#./start:s139)\nchild type, [325](records.html#./records:s10)\ncircular lists, [156](objects.html#./objects:s36)\n`close-input-port`, *[285](io.html#./io:s88)*\n`close-output-port`, *[285](io.html#./io:s88)*\n`close-port`, *[270](io.html#./io:s46)*\ncodec, [257](io.html#./io:s10)\n`command-line`, *[350](libraries.html#./libraries:s17)*\ncomments, [7](intro.html#./intro:s42), [455](grammar.html#./grammar:s5)\nCommon Lisp, [6](intro.html#./intro:s28)\ncompiler, [4](intro.html#./intro:s9)\n*complete*, *see* engines\ncomplex numbers, [167](objects.html#./objects:s67), [412](examples.html#./examples:s69)\n`complex?`, *[151](objects.html#./objects:s17)*, [167](objects.html#./objects:s71)\n`compose`, [34](start.html#./start:s95)\ncompound condition, [362](exceptions.html#./exceptions:s11)\n`cond`, [39](start.html#./start:s124), [44](start.html#./start:s142), *[111](control.html#./control:s13)*, [304](syntax.html#./syntax:s39)\n`condition`, *[362](exceptions.html#./exceptions:s15)*\ncondition object, [361](exceptions.html#./exceptions:s9)\ncondition type, [361](exceptions.html#./exceptions:s10)\n`condition-accessor`, *[365](exceptions.html#./exceptions:s18)*\n`condition-irritants`, *[368](exceptions.html#./exceptions:s25)*\n`condition-message`, *[368](exceptions.html#./exceptions:s24)*\n`condition-predicate`, *[365](exceptions.html#./exceptions:s18)*\n`condition-who`, *[369](exceptions.html#./exceptions:s26)*\n`condition?`, *[362](exceptions.html#./exceptions:s14)*\nconditionals, [109](control.html#./control:s9)\nconditions, [357](exceptions.html#./exceptions:s1)\n`cons`, [19](start.html#./start:s25), *[156](objects.html#./objects:s37)*\ncons cell, [155](objects.html#./objects:s27)\n`cons*`, *[158](objects.html#./objects:s44)*\nconsing, [19](start.html#./start:s26)\nconstant, *[141](objects.html#./objects:s1)*\nconstants, [21](start.html#./start:s42), [141](objects.html#./objects:s4)\ncontinuation-passing style, [78](further.html#./further:s71), [418](examples.html#./examples:s77)\ncontinuations, [5](intro.html#./intro:s24), [73](further.html#./further:s61), [124](control.html#./control:s57), [421](examples.html#./examples:s88)\ncontrol structures, [107](control.html#./control:s0)\ncore syntactic forms, [4](intro.html#./intro:s6), [22](start.html#./start:s47), [59](further.html#./further:s0), [404](examples.html#./examples:s51)\n`cos`, *[185](objects.html#./objects:s131)*\nCPS, [78](further.html#./further:s72)\ncurrent exception handler, [357](exceptions.html#./exceptions:s2)\n`current-error-port`, *[263](io.html#./io:s32)*\n`current-input-port`, *[263](io.html#./io:s32)*\n`current-output-port`, *[263](io.html#./io:s32)*\ncyclic lists, [56](start.html#./start:s198)\n`d` (double), [169](objects.html#./objects:s84)\ndata, [141](objects.html#./objects:s3)\ndatum comment (\u00a0`#;`\u00a0), [455](grammar.html#./grammar:s9)\ndatum syntax, [455](grammar.html#./grammar:s0), [456](grammar.html#./grammar:s13)\n`datum->syntax`, *[308](syntax.html#./syntax:s45)*, [317](syntax.html#./syntax:s65), [320](syntax.html#./syntax:s71)\ndefault protocol, [327](records.html#./records:s12)\n`define`, [30](start.html#./start:s78), [81](further.html#./further:s80), *[100](binding.html#./binding:s24)*\n`define-condition-type`, *[364](exceptions.html#./exceptions:s17)*\n`define-enumeration`, *[250](objects.html#./objects:s290)*\n`define-integrable`, [315](syntax.html#./syntax:s61)\n`define-object`, [408](examples.html#./examples:s63)\n`define-record-type`, [323](records.html#./records:s1), *[328](records.html#./records:s13)*\n`define-structure`, [318](syntax.html#./syntax:s70)\n`define-syntax`, [61](further.html#./further:s13), [291](syntax.html#./syntax:s3), *[292](syntax.html#./syntax:s12)*, [389](examples.html#./examples:s17)\ndefining syntactic extensions, [60](further.html#./further:s11)\ndefun syntax, [33](start.html#./start:s87), [60](further.html#./further:s9)\n`delay`, *[128](control.html#./control:s65)*\ndelayed evaluation, [408](examples.html#./examples:s59)\n`delete-file`, *[286](io.html#./io:s90)*\n`delq!`, [54](start.html#./start:s185)\n`denominator`, *[181](objects.html#./objects:s119)*\n`describe-segment`, [132](control.html#./control:s75)\n`display`, *[285](io.html#./io:s85)*, [397](examples.html#./examples:s33)\n`div`, *[175](objects.html#./objects:s99)*\n`div-and-mod`, *[175](objects.html#./objects:s99)*\n`div0`, *[176](objects.html#./objects:s100)*\n`div0-and-mod0`, *[176](objects.html#./objects:s100)*\n`divisors`, [115](control.html#./control:s24), [116](control.html#./control:s29)\n`do`, *[115](control.html#./control:s25)*, [312](syntax.html#./syntax:s53)\ndot (\u00a0`.`\u00a0), [19](start.html#./start:s31), [460](grammar.html#./grammar:s21)\ndotted pair, [20](start.html#./start:s32), [155](objects.html#./objects:s35)\n`double`, [27](start.html#./start:s65), [33](start.html#./start:s89)\ndouble quotes, [216](objects.html#./objects:s214)\n`double-any`, [30](start.html#./start:s79)\n`double-cons`, [27](start.html#./start:s66), [33](start.html#./start:s90)\n`doubler`, [33](start.html#./start:s88)\ndoubly recursive, [70](further.html#./further:s49)\n`dxdy`, [131](control.html#./control:s72)\ndynamic allocation, [3](intro.html#./intro:s2)\n`dynamic-wind`, *[124](control.html#./control:s56)*\nellipsis (\u00a0`...`\u00a0), [61](further.html#./further:s21), [294](syntax.html#./syntax:s21)\n`else`, [111](control.html#./control:s15), *[112](control.html#./control:s16)*, [113](control.html#./control:s19)\nempty list, [7](intro.html#./intro:s32), [19](start.html#./start:s24)\n`endianness`, *[228](objects.html#./objects:s240)*\nengines, [421](examples.html#./examples:s82)\n`enum-set->list`, *[252](objects.html#./objects:s294)*\n`enum-set-complement`, *[254](objects.html#./objects:s299)*\n`enum-set-constructor`, *[251](objects.html#./objects:s292)*\n`enum-set-difference`, *[253](objects.html#./objects:s298)*\n`enum-set-indexer`, *[254](objects.html#./objects:s301)*\n`enum-set-intersection`, *[253](objects.html#./objects:s298)*\n`enum-set-member?`, *[253](objects.html#./objects:s297)*\n`enum-set-projection`, *[254](objects.html#./objects:s300)*\n`enum-set-subset?`, *[252](objects.html#./objects:s295)*\n`enum-set-union`, *[253](objects.html#./objects:s298)*\n`enum-set-universe`, *[252](objects.html#./objects:s293)*\n`enum-set=?`, *[252](objects.html#./objects:s296)*\n`environment`, *[137](control.html#./control:s81)*\nenvironment, [404](examples.html#./examples:s49)\neof object, [257](io.html#./io:s4)\n`eof-object`, *[273](io.html#./io:s54)*\n`eof-object?`, [257](io.html#./io:s5), *[273](io.html#./io:s53)*\neol style, [257](io.html#./io:s14)\n`eol-style`, *[259](io.html#./io:s23)*\n`eq?`, *[143](objects.html#./objects:s10)*\n`equal-hash`, *[245](objects.html#./objects:s279)*\n`equal?`, *[148](objects.html#./objects:s13)*\nequivalence predicates, [143](objects.html#./objects:s9)\n`eqv?`, [38](start.html#./start:s116), *[146](objects.html#./objects:s12)*\n`error`, *[358](exceptions.html#./exceptions:s4)*\nerror handling mode, [258](io.html#./io:s15)\n`error-handling-mode`, *[260](io.html#./io:s25)*\n`error?`, *[367](exceptions.html#./exceptions:s22)*\n`eval`, *[136](control.html#./control:s80)*\n`even?`, [47](start.html#./start:s160), [66](further.html#./further:s37), [81](further.html#./further:s82), *[174](objects.html#./objects:s96)*\n`exact`, *[180](objects.html#./objects:s114)*\n`exact->inexact`, *[181](objects.html#./objects:s116)*\n`exact-integer-sqrt`, *[184](objects.html#./objects:s128)*\n`exact?`, [167](objects.html#./objects:s73), *[170](objects.html#./objects:s86)*\nexactness, [167](objects.html#./objects:s72), [180](objects.html#./objects:s113)\nexactness preserving, [167](objects.html#./objects:s75)\n`except` import set, [346](libraries.html#./libraries:s10)\nexceptions, [9](intro.html#./intro:s55), [357](exceptions.html#./exceptions:s0)\nexclamation point (\u00a0`!`\u00a0), [8](intro.html#./intro:s51)\n`exists`, *[119](control.html#./control:s36)*\n`exit`, *[350](libraries.html#./libraries:s18)*\n`exp`, *[184](objects.html#./objects:s129)*\nexpansion, [59](further.html#./further:s3)\n*expire*, *see* engines\n`export`, [345](libraries.html#./libraries:s3)\nexport level, [345](libraries.html#./libraries:s7)\nexpressions, [7](intro.html#./intro:s40)\n`expt`, *[179](objects.html#./objects:s111)*\nextended examples, [381](examples.html#./examples:s0)\n`f` (single), [169](objects.html#./objects:s83)\n`factor`, [71](further.html#./further:s51), [72](further.html#./further:s54), [73](further.html#./further:s60)\n`factorial`, [68](further.html#./further:s46), [75](further.html#./further:s64), [116](control.html#./control:s27)\nfalse, [7](intro.html#./intro:s37), [36](start.html#./start:s107)\nfast Fourier transform (FFT), [412](examples.html#./examples:s70)\nfenders, [299](syntax.html#./syntax:s31), [301](syntax.html#./syntax:s36)\n`fibonacci`, [69](further.html#./further:s47), [102](binding.html#./binding:s33), [116](control.html#./control:s28), [422](examples.html#./examples:s92)\nFibonacci numbers, [69](further.html#./further:s48), [102](binding.html#./binding:s32)\n`fields`, *[331](records.html#./records:s16)*\nfile, [257](io.html#./io:s3)\n`file-exists?`, *[286](io.html#./io:s89)*\n`file-options`, *[261](io.html#./io:s26)*\n`filter`, *[164](objects.html#./objects:s55)*\n`find`, *[165](objects.html#./objects:s57)*\n`finite?`, *[174](objects.html#./objects:s97)*\nfirst-class data values, [3](intro.html#./intro:s4)\nfirst-class procedures, [5](intro.html#./intro:s18)\nfixnum, [192](objects.html#./objects:s149)\n`fixnum->flonum`, *[211](objects.html#./objects:s198)*\n`fixnum-width`, *[193](objects.html#./objects:s152)*\n`fixnum?`, *[193](objects.html#./objects:s150)*\n`fl*`, *[207](objects.html#./objects:s186)*\n`fl+`, *[206](objects.html#./objects:s184)*\n`fl-`, *[206](objects.html#./objects:s185)*\n`fl/`, *[207](objects.html#./objects:s187)*\n`fl<=?`, *[203](objects.html#./objects:s178)*\n`fl<?`, *[203](objects.html#./objects:s178)*\n`fl=?`, *[203](objects.html#./objects:s178)*\n`fl>=?`, *[203](objects.html#./objects:s178)*\n`fl>?`, *[203](objects.html#./objects:s178)*\n`flabs`, *[209](objects.html#./objects:s192)*\n`flacos`, *[210](objects.html#./objects:s195)*\n`flasin`, *[210](objects.html#./objects:s195)*\n`flatan`, *[210](objects.html#./objects:s195)*\n`flceiling`, *[208](objects.html#./objects:s190)*\n`flcos`, *[210](objects.html#./objects:s194)*\n`fldenominator`, *[209](objects.html#./objects:s191)*\n`fldiv`, *[207](objects.html#./objects:s188)*\n`fldiv-and-mod`, *[207](objects.html#./objects:s188)*\n`fldiv0`, *[208](objects.html#./objects:s189)*\n`fldiv0-and-mod0`, *[208](objects.html#./objects:s189)*\n`fleven?`, *[205](objects.html#./objects:s182)*\n`flexp`, *[209](objects.html#./objects:s193)*\n`flexpt`, *[210](objects.html#./objects:s197)*\n`flfinite?`, *[205](objects.html#./objects:s181)*\n`flfloor`, *[208](objects.html#./objects:s190)*\n`flinfinite?`, *[205](objects.html#./objects:s181)*\n`flinteger?`, *[204](objects.html#./objects:s180)*\n`flip-flop`, [102](binding.html#./binding:s31)\n`fllog`, *[209](objects.html#./objects:s193)*\n`flmax`, *[205](objects.html#./objects:s183)*\n`flmin`, *[205](objects.html#./objects:s183)*\n`flmod`, *[207](objects.html#./objects:s188)*\n`flmod0`, *[208](objects.html#./objects:s189)*\n`flnan?`, *[205](objects.html#./objects:s181)*\n`flnegative?`, *[204](objects.html#./objects:s179)*\n`flnumerator`, *[209](objects.html#./objects:s191)*\nfloating point, [167](objects.html#./objects:s77)\n`flodd?`, *[205](objects.html#./objects:s182)*\nflonum, [202](objects.html#./objects:s176)\n`flonum?`, *[203](objects.html#./objects:s177)*\n`floor`, *[177](objects.html#./objects:s102)*\n`flpositive?`, *[204](objects.html#./objects:s179)*\n`flround`, *[208](objects.html#./objects:s190)*\n`flsin`, *[210](objects.html#./objects:s194)*\n`flsqrt`, *[210](objects.html#./objects:s196)*\n`fltan`, *[210](objects.html#./objects:s194)*\n`fltruncate`, *[208](objects.html#./objects:s190)*\nfluid binding, [125](control.html#./control:s61)\n`flush-output-port`, *[280](io.html#./io:s74)*\n`flzero?`, *[204](objects.html#./objects:s179)*\n`fold-left`, *[120](control.html#./control:s38)*\n`fold-right`, *[121](control.html#./control:s41)*\nfolding, [120](control.html#./control:s39), [121](control.html#./control:s42)\n`for-all`, *[119](control.html#./control:s37)*\n`for-each`, *[118](control.html#./control:s33)*\n`force`, *[128](control.html#./control:s65)*\nformal parameters, [26](start.html#./start:s62), [29](start.html#./start:s70), [92](binding.html#./binding:s5)\nformatted output, [401](examples.html#./examples:s37)\n`fprintf`, [401](examples.html#./examples:s38)\nfree variable, [28](start.html#./start:s68)\n`free-identifier=?`, *[302](syntax.html#./syntax:s37)*\n`frequency`, [393](examples.html#./examples:s24)\n`fx*`, *[195](objects.html#./objects:s159)*\n`fx*/carry`, *[197](objects.html#./objects:s162)*\n`fx+`, *[195](objects.html#./objects:s157)*\n`fx+/carry`, *[197](objects.html#./objects:s162)*\n`fx-`, *[195](objects.html#./objects:s158)*\n`fx-/carry`, *[197](objects.html#./objects:s162)*\n`fx<=?`, *[193](objects.html#./objects:s153)*\n`fx<?`, *[193](objects.html#./objects:s153)*\n`fx=?`, *[193](objects.html#./objects:s153)*\n`fx>=?`, *[193](objects.html#./objects:s153)*\n`fx>?`, *[193](objects.html#./objects:s153)*\n`fxand`, *[197](objects.html#./objects:s163)*\n`fxarithmetic-shift`, *[201](objects.html#./objects:s173)*\n`fxarithmetic-shift-left`, *[201](objects.html#./objects:s172)*\n`fxarithmetic-shift-right`, *[201](objects.html#./objects:s172)*\n`fxbit-count`, *[198](objects.html#./objects:s165)*\n`fxbit-field`, *[200](objects.html#./objects:s170)*\n`fxbit-set?`, *[199](objects.html#./objects:s168)*\n`fxcopy-bit`, *[200](objects.html#./objects:s169)*\n`fxcopy-bit-field`, *[200](objects.html#./objects:s171)*\n`fxdiv`, *[196](objects.html#./objects:s160)*\n`fxdiv-and-mod`, *[196](objects.html#./objects:s160)*\n`fxdiv0`, *[196](objects.html#./objects:s161)*\n`fxdiv0-and-mod0`, *[196](objects.html#./objects:s161)*\n`fxeven?`, *[194](objects.html#./objects:s155)*\n`fxfirst-bit-set`, *[199](objects.html#./objects:s167)*\n`fxif`, *[198](objects.html#./objects:s164)*\n`fxior`, *[197](objects.html#./objects:s163)*\n`fxlength`, *[198](objects.html#./objects:s166)*\n`fxmax`, *[195](objects.html#./objects:s156)*\n`fxmin`, *[195](objects.html#./objects:s156)*\n`fxmod`, *[196](objects.html#./objects:s160)*\n`fxmod0`, *[196](objects.html#./objects:s161)*\n`fxnegative?`, *[194](objects.html#./objects:s154)*\n`fxnot`, *[197](objects.html#./objects:s163)*\n`fxodd?`, *[194](objects.html#./objects:s155)*\n`fxpositive?`, *[194](objects.html#./objects:s154)*\n`fxreverse-bit-field`, *[202](objects.html#./objects:s175)*\n`fxrotate-bit-field`, *[201](objects.html#./objects:s174)*\n`fxxor`, *[197](objects.html#./objects:s163)*\n`fxzero?`, *[194](objects.html#./objects:s154)*\ngarbage collector, [3](intro.html#./intro:s3)\n`gcd`, *[179](objects.html#./objects:s109)*\n`generate-temporaries`, *[310](syntax.html#./syntax:s49)*\ngenerative, [324](records.html#./records:s4)\n`get-bytevector-all`, *[275](io.html#./io:s60)*\n`get-bytevector-n`, *[274](io.html#./io:s57)*\n`get-bytevector-n!`, *[274](io.html#./io:s58)*\n`get-bytevector-some`, *[275](io.html#./io:s59)*\n`get-char`, *[275](io.html#./io:s61)*\n`get-datum`, *[278](io.html#./io:s67)*\n`get-line`, *[277](io.html#./io:s66)*\n`get-string-all`, *[277](io.html#./io:s65)*\n`get-string-n`, *[276](io.html#./io:s63)*\n`get-string-n!`, *[276](io.html#./io:s64)*\n`get-u8`, *[274](io.html#./io:s55)*\n`getq`, [54](start.html#./start:s184)\n`goodbye`, [41](start.html#./start:s133)\n`greatest-fixnum`, *[193](objects.html#./objects:s151)*\n`guard`, *[361](exceptions.html#./exceptions:s8)*\nhare and tortoise, [56](start.html#./start:s202), [66](further.html#./further:s40)\n`hashtable-clear!`, *[249](objects.html#./objects:s287)*\n`hashtable-contains?`, *[246](objects.html#./objects:s282)*\n`hashtable-copy`, *[248](objects.html#./objects:s286)*\n`hashtable-delete!`, *[248](objects.html#./objects:s284)*\n`hashtable-entries`, *[250](objects.html#./objects:s289)*\n`hashtable-equivalence-function`, *[245](objects.html#./objects:s278)*\n`hashtable-hash-function`, *[245](objects.html#./objects:s278)*\n`hashtable-keys`, *[249](objects.html#./objects:s288)*\n`hashtable-mutable?`, *[245](objects.html#./objects:s277)*\n`hashtable-ref`, *[246](objects.html#./objects:s281)*\n`hashtable-set!`, *[246](objects.html#./objects:s280)*\n`hashtable-size`, *[248](objects.html#./objects:s285)*\n`hashtable-update!`, *[247](objects.html#./objects:s283)*\n`hashtable?`, *[155](objects.html#./objects:s25)*\nhashtables, [243](objects.html#./objects:s272)\n`i/o-decoding-error?`, *[375](exceptions.html#./exceptions:s42)*\n`i/o-encoding-error-char`, *[376](exceptions.html#./exceptions:s43)*\n`i/o-encoding-error?`, *[376](exceptions.html#./exceptions:s43)*\n`i/o-error-filename`, *[373](exceptions.html#./exceptions:s36)*\n`i/o-error-port`, *[375](exceptions.html#./exceptions:s41)*\n`i/o-error-position`, *[372](exceptions.html#./exceptions:s35)*\n`i/o-error?`, *[371](exceptions.html#./exceptions:s32)*\n`i/o-file-already-exists-error?`, *[374](exceptions.html#./exceptions:s39)*\n`i/o-file-does-not-exist-error?`, *[374](exceptions.html#./exceptions:s40)*\n`i/o-file-is-read-only-error?`, *[374](exceptions.html#./exceptions:s38)*\n`i/o-file-protection-error?`, *[373](exceptions.html#./exceptions:s37)*\n`i/o-filename-error?`, *[373](exceptions.html#./exceptions:s36)*\n`i/o-invalid-position-error?`, *[372](exceptions.html#./exceptions:s35)*\n`i/o-port-error?`, *[375](exceptions.html#./exceptions:s41)*\n`i/o-read-error?`, *[372](exceptions.html#./exceptions:s33)*\n`i/o-write-error?`, *[372](exceptions.html#./exceptions:s34)*\n`identifier-syntax`, [291](syntax.html#./syntax:s9), *[297](syntax.html#./syntax:s27)*, [307](syntax.html#./syntax:s43), [316](syntax.html#./syntax:s62), [317](syntax.html#./syntax:s64)\n`identifier?`, *[301](syntax.html#./syntax:s35)*\nidentifiers, [6](intro.html#./intro:s30)\n`if`, [35](start.html#./start:s99), [36](start.html#./start:s102), [39](start.html#./start:s125), [51](start.html#./start:s175), [59](further.html#./further:s7), *[109](control.html#./control:s8)*\n`imag-part`, *[182](objects.html#./objects:s121)*\nimmutability of exports, [349](libraries.html#./libraries:s16)\n`immutable`, *[331](records.html#./records:s16)*\n`implementation-restriction-violation?`, *[369](exceptions.html#./exceptions:s28)*\nimplicit `begin`, [109](control.html#./control:s7)\n`import`, [345](libraries.html#./libraries:s4)\nimport level, [345](libraries.html#./libraries:s6)\nimport spec, [345](libraries.html#./libraries:s5), [346](libraries.html#./libraries:s8)\nimproper list, [19](start.html#./start:s29), [155](objects.html#./objects:s32)\n`include`, [309](syntax.html#./syntax:s48)\nindirect exports, [349](libraries.html#./libraries:s15)\n`inexact`, *[180](objects.html#./objects:s112)*\n`inexact->exact`, *[181](objects.html#./objects:s116)*\n`inexact?`, [167](objects.html#./objects:s74), *[170](objects.html#./objects:s87)*\n`infinite?`, *[174](objects.html#./objects:s97)*\ninheritance, [412](examples.html#./examples:s67)\ninheritance in records, [325](records.html#./records:s8)\ninput port, [257](io.html#./io:s1)\n`input-port?`, *[270](io.html#./io:s44)*\n`integer->char`, *[215](objects.html#./objects:s211)*\n`integer-divide`, [79](further.html#./further:s73)\n`integer-valued?`, *[153](objects.html#./objects:s18)*\n`integer?`, *[151](objects.html#./objects:s17)*, [167](objects.html#./objects:s68)\nintegers, [167](objects.html#./objects:s64)\nintegrable procedures, [315](syntax.html#./syntax:s60)\ninternal definitions, [81](further.html#./further:s81), [92](binding.html#./binding:s6)\ninternal state, [49](start.html#./start:s167)\n`interpret`, [404](examples.html#./examples:s46)\ninterpreter, [4](intro.html#./intro:s8), [404](examples.html#./examples:s48)\nintraline whitespace, [455](grammar.html#./grammar:s4)\n`irritants-condition?`, *[368](exceptions.html#./exceptions:s25)*\niteration, [5](intro.html#./intro:s21), [45](start.html#./start:s145), [68](further.html#./further:s43), [114](control.html#./control:s22), [115](control.html#./control:s26), [117](control.html#./control:s32), [118](control.html#./control:s35), [120](control.html#./control:s40), [121](control.html#./control:s43), [122](control.html#./control:s49)\nkeywords, [4](intro.html#./intro:s11), [61](further.html#./further:s15), [291](syntax.html#./syntax:s11)\n`l` (long), [169](objects.html#./objects:s85)\n`lambda`, [26](start.html#./start:s60), [29](start.html#./start:s71), [59](further.html#./further:s6), *[92](binding.html#./binding:s3)*, [93](binding.html#./binding:s9)\n`lambda*`, [94](binding.html#./binding:s12)\nlatin-1, [257](io.html#./io:s11)\n`latin-1-codec`, *[259](io.html#./io:s22)*\n`lazy`, [51](start.html#./start:s172)\nlazy evaluation, [51](start.html#./start:s171), [127](control.html#./control:s64)\n`lcm`, *[179](objects.html#./objects:s110)*\n`least-fixnum`, *[193](objects.html#./objects:s151)*\n`length`, [42](start.html#./start:s136), *[159](objects.html#./objects:s46)*\n`let`, [23](start.html#./start:s51), [28](start.html#./start:s69), [65](further.html#./further:s33), *[95](binding.html#./binding:s16)*, *[114](control.html#./control:s20)*\n`let*`, [64](further.html#./further:s28), *[96](binding.html#./binding:s18)*\n`let*-values`, *[99](binding.html#./binding:s23)*, [134](control.html#./control:s79)\n`let`-bound variables, [23](start.html#./start:s53)\n`let-syntax`, [291](syntax.html#./syntax:s4), *[293](syntax.html#./syntax:s13)*, [314](syntax.html#./syntax:s57)\n`let-values`, *[99](binding.html#./binding:s23)*, [134](control.html#./control:s78), [310](syntax.html#./syntax:s51)\n`letrec`, [65](further.html#./further:s35), [81](further.html#./further:s84), *[97](binding.html#./binding:s20)*, [310](syntax.html#./syntax:s50)\n`letrec*`, *[98](binding.html#./binding:s22)*\n`letrec-syntax`, [291](syntax.html#./syntax:s5), *[293](syntax.html#./syntax:s13)*, [314](syntax.html#./syntax:s56)\nlexical scoping, [4](intro.html#./intro:s12), [5](intro.html#./intro:s17), [25](start.html#./start:s56), [63](further.html#./further:s24)\n`lexical-violation?`, *[370](exceptions.html#./exceptions:s29)*\nlibraries, [343](libraries.html#./libraries:s0)\nlibrary body, [348](libraries.html#./libraries:s14)\nlibrary version, [344](libraries.html#./libraries:s2)\nlibrary version reference, [347](libraries.html#./libraries:s13)\nlight-weight threads, [421](examples.html#./examples:s85)\nline buffering, [258](io.html#./io:s18)\nline ending, [455](grammar.html#./grammar:s3)\nLisp, [ix](preface.html#./preface:s0), [6](intro.html#./intro:s26)\n`lisp-cdr`, [38](start.html#./start:s115)\n`list`, [20](start.html#./start:s33), [31](start.html#./start:s82), [32](start.html#./start:s86), *[158](objects.html#./objects:s43)*\nlist constants, [7](intro.html#./intro:s31)\nlist syntax, [460](grammar.html#./grammar:s19)\n`list->string`, *[223](objects.html#./objects:s229)*\n`list->vector`, *[226](objects.html#./objects:s238)*\n`list-copy`, [43](start.html#./start:s140)\n`list-ref`, *[159](objects.html#./objects:s47)*\n`list-sort`, *[167](objects.html#./objects:s62)*, [387](examples.html#./examples:s9)\n`list-tail`, *[160](objects.html#./objects:s48)*\n`list?`, [56](start.html#./start:s200), [66](further.html#./further:s39), [67](further.html#./further:s42), [81](further.html#./further:s85), *[158](objects.html#./objects:s45)*\nlists, [17](start.html#./start:s13), [18](start.html#./start:s20), [155](objects.html#./objects:s28)\nliterals, [294](syntax.html#./syntax:s15)\n`load`, [13](start.html#./start:s0)\nlocal variable bindings, [95](binding.html#./binding:s17)\n`log`, *[184](objects.html#./objects:s130)*\n`lookahead-char`, *[275](io.html#./io:s62)*\n`lookahead-u8`, *[274](io.html#./io:s56)*\n`loop`, [308](syntax.html#./syntax:s46)\nlooping, [5](intro.html#./intro:s22)\nmacros, [291](syntax.html#./syntax:s2)\n`magnitude`, [178](objects.html#./objects:s106), *[183](objects.html#./objects:s125)*\n`make-assertion-violation`, *[366](exceptions.html#./exceptions:s21)*\n`make-bytevector`, *[228](objects.html#./objects:s242)*\n`make-counter`, [50](start.html#./start:s168), [54](start.html#./start:s187)\n`make-custom-binary-input-port`, *[267](io.html#./io:s41)*\n`make-custom-binary-input/output-port`, *[267](io.html#./io:s41)*\n`make-custom-binary-output-port`, *[267](io.html#./io:s41)*\n`make-custom-textual-input-port`, *[268](io.html#./io:s42)*\n`make-custom-textual-input/output-port`, *[268](io.html#./io:s42)*\n`make-custom-textual-output-port`, *[268](io.html#./io:s42)*\n`make-enumeration`, *[251](objects.html#./objects:s291)*\n`make-eq-hashtable`, *[243](objects.html#./objects:s274)*\n`make-eqv-hashtable`, *[244](objects.html#./objects:s275)*\n`make-error`, *[367](exceptions.html#./exceptions:s22)*\n`make-hashtable`, *[244](objects.html#./objects:s276)*\n`make-i/o-decoding-error`, *[375](exceptions.html#./exceptions:s42)*\n`make-i/o-encoding-error`, *[376](exceptions.html#./exceptions:s43)*\n`make-i/o-error`, *[371](exceptions.html#./exceptions:s32)*\n`make-i/o-file-already-exists-error`, *[374](exceptions.html#./exceptions:s39)*\n`make-i/o-file-does-not-exist-error`, *[374](exceptions.html#./exceptions:s40)*\n`make-i/o-file-is-read-only-error`, *[374](exceptions.html#./exceptions:s38)*\n`make-i/o-file-protection-error`, *[373](exceptions.html#./exceptions:s37)*\n`make-i/o-filename-error`, *[373](exceptions.html#./exceptions:s36)*\n`make-i/o-invalid-position-error`, *[372](exceptions.html#./exceptions:s35)*\n`make-i/o-port-error`, *[375](exceptions.html#./exceptions:s41)*\n`make-i/o-read-error`, *[372](exceptions.html#./exceptions:s33)*\n`make-i/o-write-error`, *[372](exceptions.html#./exceptions:s34)*\n`make-implementation-restriction-violation`, *[369](exceptions.html#./exceptions:s28)*\n`make-irritants-condition`, *[368](exceptions.html#./exceptions:s25)*\n`make-lexical-violation`, *[370](exceptions.html#./exceptions:s29)*\n`make-list`, [46](start.html#./start:s153), [94](binding.html#./binding:s14)\n`make-message-condition`, *[368](exceptions.html#./exceptions:s24)*\n`make-no-infinities-violation`, *[376](exceptions.html#./exceptions:s44)*\n`make-no-nans-violation`, *[377](exceptions.html#./exceptions:s45)*\n`make-non-continuable-violation`, *[369](exceptions.html#./exceptions:s27)*\n`make-polar`, *[183](objects.html#./objects:s123)*\n`make-promise`, [129](control.html#./control:s67)\n`make-queue`, [54](start.html#./start:s182)\n`make-record-constructor-descriptor`, *[332](records.html#./records:s24)*\n`make-record-type-descriptor`, [323](records.html#./records:s2), *[331](records.html#./records:s20)*\nmake-record-type-descriptor, [331](records.html#./records:s19)\n`make-rectangular`, *[182](objects.html#./objects:s122)*\n`make-serious-condition`, *[366](exceptions.html#./exceptions:s19)*\n`make-stack`, [52](start.html#./start:s178), [55](start.html#./start:s190)\n`make-string`, *[218](objects.html#./objects:s218)*\n`make-syntax-violation`, *[370](exceptions.html#./exceptions:s30)*\n`make-transcoder`, *[259](io.html#./io:s19)*\n`make-undefined-violation`, *[371](exceptions.html#./exceptions:s31)*\n`make-variable-transformer`, [291](syntax.html#./syntax:s10), [298](syntax.html#./syntax:s28), *[306](syntax.html#./syntax:s42)*\n`make-vector`, *[224](objects.html#./objects:s232)*\n`make-violation`, *[366](exceptions.html#./exceptions:s20)*\n`make-warning`, *[367](exceptions.html#./exceptions:s23)*\n`make-who-condition`, *[369](exceptions.html#./exceptions:s26)*\n`map`, [45](start.html#./start:s147), [47](start.html#./start:s162), *[117](control.html#./control:s30)*, [392](examples.html#./examples:s21)\n`map1`, [46](start.html#./start:s148)\nmapping, [45](start.html#./start:s146), [117](control.html#./control:s31), [118](control.html#./control:s34), [121](control.html#./control:s45), [122](control.html#./control:s48)\nmatrix multiplication, [381](examples.html#./examples:s1)\n`max`, *[178](objects.html#./objects:s107)*\n`member`, *[161](objects.html#./objects:s51)*\n`memp`, *[163](objects.html#./objects:s52)*\n`memq`, *[161](objects.html#./objects:s51)*\n`memv`, [43](start.html#./start:s141), *[161](objects.html#./objects:s51)*\n`merge`, [387](examples.html#./examples:s11)\n`message-condition?`, *[368](exceptions.html#./exceptions:s24)*\nmessages, [52](start.html#./start:s177), [408](examples.html#./examples:s62)\nmeta-circular interpreter, [404](examples.html#./examples:s47)\n`method`, [317](syntax.html#./syntax:s67)\n`min`, *[178](objects.html#./objects:s108)*\n`mod`, *[175](objects.html#./objects:s99)*\n`mod0`, *[176](objects.html#./objects:s100)*\n`modulo`, *[175](objects.html#./objects:s98)*\n`mul`, [382](examples.html#./examples:s2)\nmultiple values, [9](intro.html#./intro:s54)\nmultiprocessing, [421](examples.html#./examples:s84)\n`mutable`, *[331](records.html#./records:s16)*\nmutually recursive procedures, [66](further.html#./further:s36), [97](binding.html#./binding:s21)\nnamed `let`, [67](further.html#./further:s41), [71](further.html#./further:s50), [114](control.html#./control:s21)\nnaming conventions, [8](intro.html#./intro:s45)\n`nan?`, *[174](objects.html#./objects:s97)*\n`native-endianness`, *[228](objects.html#./objects:s241)*\n`native-eol-style`, *[260](io.html#./io:s24)*\n`native-transcoder`, *[259](io.html#./io:s21)*\n`negative?`, *[173](objects.html#./objects:s95)*\nnested engines, [429](examples.html#./examples:s109)\nnested `let` expressions, [96](binding.html#./binding:s19)\n`newline`, *[285](io.html#./io:s87)*\n`no-infinities-violation?`, *[376](exceptions.html#./exceptions:s44)*\n`no-nans-violation?`, *[377](exceptions.html#./exceptions:s45)*\n`non-continuable-violation?`, *[369](exceptions.html#./exceptions:s27)*\nnondeterministic computations, [421](examples.html#./examples:s87), [424](examples.html#./examples:s95)\n`nongenerative`, *[331](records.html#./records:s16)*\nnongenerative, [324](records.html#./records:s5)\nnonlocal exits, [123](control.html#./control:s55), [124](control.html#./control:s60)\n`not`, [36](start.html#./start:s100), *[110](control.html#./control:s10)*\n`null-environment`, *[137](control.html#./control:s82)*\n`null?`, [37](start.html#./start:s113), *[151](objects.html#./objects:s15)*\nnumber syntax, [459](grammar.html#./grammar:s18)\n`number->string`, *[191](objects.html#./objects:s148)*\n`number?`, [38](start.html#./start:s120), *[151](objects.html#./objects:s17)*\nnumbers, [16](start.html#./start:s5), [167](objects.html#./objects:s63)\n`numerator`, *[181](objects.html#./objects:s118)*\nobject identity, [144](objects.html#./objects:s11)\n`object->string`, [267](io.html#./io:s40)\nobject-oriented programming, [317](syntax.html#./syntax:s66), [408](examples.html#./examples:s61)\nobjects, [3](intro.html#./intro:s1)\noccur free, [28](start.html#./start:s67), [30](start.html#./start:s75)\noctet, [257](io.html#./io:s8)\n`odd?`, [47](start.html#./start:s159), [66](further.html#./further:s38), [81](further.html#./further:s83), *[174](objects.html#./objects:s96)*\n`only` import set, [346](libraries.html#./libraries:s9)\n`opaque`, *[331](records.html#./records:s16)*\nopaque record type, [330](records.html#./records:s15), [336](records.html#./records:s33)\n`open-bytevector-input-port`, *[264](io.html#./io:s34)*\n`open-bytevector-output-port`, *[265](io.html#./io:s36)*\n`open-file-input-port`, *[262](io.html#./io:s29)*\n`open-file-input/output-port`, *[263](io.html#./io:s31)*\n`open-file-output-port`, *[262](io.html#./io:s30)*\n`open-input-file`, *[280](io.html#./io:s75)*\n`open-output-file`, *[281](io.html#./io:s76)*\n`open-string-input-port`, *[265](io.html#./io:s35)*\n`open-string-output-port`, *[266](io.html#./io:s37)*\noperating system, [423](examples.html#./examples:s94), [429](examples.html#./examples:s106)\noperations on objects, [141](objects.html#./objects:s0)\noperator precedence, [16](start.html#./start:s12)\noptional arguments, [93](binding.html#./binding:s10)\n`or`, [36](start.html#./start:s101), [63](further.html#./further:s23), *[110](control.html#./control:s12)*\norder of evaluation, [22](start.html#./start:s48), [107](control.html#./control:s2)\noutput port, [257](io.html#./io:s2)\n`output-port-buffer-mode`, *[273](io.html#./io:s52)*\n`output-port?`, *[270](io.html#./io:s44)*\n`pair?`, [38](start.html#./start:s118), *[151](objects.html#./objects:s16)*\npairs, [19](start.html#./start:s27), [155](objects.html#./objects:s26)\n`parent`, *[331](records.html#./records:s16)*\nparent type, [325](records.html#./records:s9)\n`parent-rtd`, *[331](records.html#./records:s16)*\n`partition`, *[164](objects.html#./objects:s56)*\npattern variable, [294](syntax.html#./syntax:s17)\npattern variables, [61](further.html#./further:s19), [299](syntax.html#./syntax:s32)\npatterns, [294](syntax.html#./syntax:s16)\n`peek-char`, *[284](io.html#./io:s83)*\nPetite\u00a0Chez\u00a0Scheme, [ix](preface.html#./preface:s4)\npointers, [4](intro.html#./intro:s5)\n`por` (parallel-or), [424](examples.html#./examples:s96)\nport, [257](io.html#./io:s0)\n`port-eof?`, *[278](io.html#./io:s68)*\n`port-has-port-position?`, *[271](io.html#./io:s49)*\n`port-has-set-port-position!?`, *[272](io.html#./io:s50)*\n`port-position`, *[271](io.html#./io:s49)*\n`port-transcoder`, *[271](io.html#./io:s48)*\n`port?`, *[270](io.html#./io:s43)*\n`positive?`, *[173](objects.html#./objects:s94)*\npredicates, [8](intro.html#./intro:s48), [37](start.html#./start:s110), [143](objects.html#./objects:s6)\n`prefix` import set, [346](libraries.html#./libraries:s11)\nprefix notation, [15](start.html#./start:s3), [16](start.html#./start:s11)\nprimitive procedures, [4](intro.html#./intro:s7)\n`printf`, [401](examples.html#./examples:s39)\nprocedure application, [16](start.html#./start:s10), [17](start.html#./start:s14), [21](start.html#./start:s43), [27](start.html#./start:s63), *[107](control.html#./control:s1)*\nprocedure definition, [5](intro.html#./intro:s16), [31](start.html#./start:s80), [100](binding.html#./binding:s25)\n`procedure?`, *[155](objects.html#./objects:s23)*\nprocedures, [26](start.html#./start:s61), [91](binding.html#./binding:s1), [92](binding.html#./binding:s4)\n`product`, [74](further.html#./further:s63), [80](further.html#./further:s74)\nproper list, [19](start.html#./start:s28), [56](start.html#./start:s201), [155](objects.html#./objects:s31)\n`protocol`, *[331](records.html#./records:s16)*\nprotocol for records, [326](records.html#./records:s11), [332](records.html#./records:s27)\n`put-bytevector`, *[279](io.html#./io:s70)*\n`put-char`, *[279](io.html#./io:s71)*\n`put-datum`, *[279](io.html#./io:s73)*, [397](examples.html#./examples:s31)\n`put-string`, *[279](io.html#./io:s72)*\n`put-u8`, *[278](io.html#./io:s69)*\n`putq!`, [54](start.html#./start:s183)\n`quadratic-formula`, [48](start.html#./start:s166)\n`quasiquote` (\u00a0```"]