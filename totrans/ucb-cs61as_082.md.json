["```\n> (define Matt-Account (instantiate account 1000))\nMatt-Account\n\n> (define Brian-Account (instantiate account 10000))\nBrian-Account \n```", "```\n(define-class (account balance) ;; define a class called account\n    (method (deposit amount) \n        ;; objects of this class will have one method called deposit\n        (set! balance (+ amount balance))\n        balance)\n        ;; deposit sets the balance the the current value plus the deposit amount and then returns the new balance\n        ) \n```", "```\n(define Matt-Account (instantiate account 1000)) \n```", "```\n> (define a 3)\na\n\n> a\n3\n\n> (set! a (+ 2 4))\nokay ; What Scheme prints when nothing is returned\n\n> a\n6\n\n> (set! a (+ a a))\nokay  \n\n> a  \n12 \n```", "```\n(define a 10)\n(define (change x)\n  (define a 20)\n  x)\n(change 30)\n```", "```\n(define a 10)\n(define (change x)\n  (set! a 20)\n  x)\n(change 30)\n```", "```\n(set! c 10)\n```", "```\n(define-class (account balance)\n    (method (deposit amount)\n        (set! balance (+ amount balance))\n        balance)  \n\n    (method (withdraw amount)\n        (if (< balance amount)\n            \"Insufficient Fund\"\n            (begin \n              (set! balance (- balance amount))\n              balance))) \n```", "```\n(if (< balance amount)\n    \"Insufficient Fund\"\n    (set! balance (- balance amount))\n    balance) \n```"]