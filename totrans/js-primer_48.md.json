["```\n// greet.js\nexport function greet(name) {\n    return `Hello ${name}!`;\n}; \n```", "```\nimport { greet } from \"./greet.js\";\ngreet(\"World\"); // => \"Hello World!\" \n```", "```\nimport { marked } from \"marked\";\n\nexport function md2html(markdown, cliOptions) {\n    return marked.parse(markdown, {\n        gfm: cliOptions.gfm,\n    });\n}; \n```", "```\nimport { program } from \"commander\";\nimport * as fs from \"node:fs/promises\";\n// md2html\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089md2html\u95a2\u6570\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\nimport { md2html } from \"./md2html.js\";\n\nprogram.option(\"--gfm\", \"GFM\u3092\u6709\u52b9\u306b\u3059\u308b\");\nprogram.parse(process.argv);\nconst filePath = program.args[0];\n\nconst cliOptions = {\n    gfm: false,\n    ...program.opts(),\n};\n\nfs.readFile(filePath, { encoding: \"utf8\" }).then(file => {\n    // md2html\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066HTML\u306b\u5909\u63db\u3059\u308b\n    const html = md2html(file, cliOptions);\n    console.log(html);\n}).catch(err => {\n    console.error(err.message);\n    process.exit(1);\n}); \n```", "```\n$ npm install --save-dev mocha@10 \n```", "```\n{\n    ...\n    \"scripts\": {\n        \"test\": \"mocha test/\"\n    },\n    ...\n} \n```", "```\n$ npm test\n> mocha\n\n Error: No test files found \n```", "```\nimport * as assert from \"node:assert\";\nimport * as fs from \"node:fs/promises\";\nimport { md2html } from \"../md2html.js\";\n\nit(\"converts Markdown to HTML (GFM=false)\", async() => {\n    // fs.readFile\u306fPromise\u3092\u8fd4\u3059\u306e\u3067\u3001`await`\u5f0f\u3067\u8aad\u307f\u8fbc\u307f\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u5f85\u3063\u3066\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\n    const sample = await fs.readFile(\"test/fixtures/sample.md\", { encoding: \"utf8\" });\n    const expected = await fs.readFile(\"test/fixtures/expected.html\", { encoding: \"utf8\" });\n    // \u672b\u5c3e\u306e\u6539\u884c\u306e\u6709\u7121\u306e\u9055\u3044\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u3001\u5909\u63db\u5f8c\u306eHTML\u306e\u30b9\u30da\u30fc\u30b9\u3092trim\u30e1\u30bd\u30c3\u30c9\u3067\u524a\u9664\u3057\u3066\u304b\u3089\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\n    assert.strictEqual(md2html(sample, { gfm: false }).trimEnd(), expected.trimEnd());\n});\n\nit(\"converts Markdown to HTML (GFM=true)\", async() => {\n    const sample = await fs.readFile(\"test/fixtures/sample.md\", { encoding: \"utf8\" });\n    const expected = await fs.readFile(\"test/fixtures/expected-gfm.html\", { encoding: \"utf8\" });\n    // \u672b\u5c3e\u306e\u6539\u884c\u306e\u6709\u7121\u306e\u9055\u3044\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u3001\u5909\u63db\u5f8c\u306eHTML\u306e\u30b9\u30da\u30fc\u30b9\u3092trim\u30e1\u30bd\u30c3\u30c9\u3067\u524a\u9664\u3057\u3066\u304b\u3089\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\n    assert.strictEqual(md2html(sample, { gfm: true }).trimEnd(), expected.trimEnd());\n}); \n```", "```\n# \u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\n\n\u3053\u308c\u306f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\nhttps://jsprimer.net/\n\n- \u30b5\u30f3\u30d7\u30eb1\n- \u30b5\u30f3\u30d7\u30eb2 \n```", "```\n<h1 id=\"\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\">\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb</h1>\n<p>\u3053\u308c\u306f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\nhttps://jsprimer.net/</p>\n<ul>\n<li>\u30b5\u30f3\u30d7\u30eb1</li>\n<li>\u30b5\u30f3\u30d7\u30eb2</li>\n</ul> \n```", "```\n<h1 id=\"\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\">\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb</h1>\n<p>\u3053\u308c\u306f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n<a href=\"https://jsprimer.net/\">https://jsprimer.net/</a></p>\n<ul>\n<li>\u30b5\u30f3\u30d7\u30eb1</li>\n<li>\u30b5\u30f3\u30d7\u30eb2</li>\n</ul> \n```", "```\n$ npm test\n> mocha\n\n  \u2713 converts Markdown to HTML (GFM=false)\n  \u2713 converts Markdown to HTML (GFM=true)\n\n  2 passing (31ms) \n```", "```\n$ npm test\n> mocha test/\n\n  \u2714 converts Markdown to HTML (GFM=false)\n  1) converts Markdown to HTML (GFM=true)\n\n  1 passing (17ms)\n  1 failing\n\n  1) converts Markdown to HTML (GFM=true):\n\n      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected ... Lines skipped\n\n  '<h1 id=\"\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\">\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb</h1>\\n' +\n    '<p>\u3053\u308c\u306f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\\n' +\n...\n    '<li>\u30b5\u30f3\u30d7\u30eb1</li>\\n' +\n    '<li>\u30b5\u30f3\u30d7\u30eb2</li>\\n' +\n+   '</ul>'\n-   '</ul>\\n' +\n-   ';;;'\n      + expected - actual\n\n       <a href=\"https://jsprimer.net/\">https://jsprimer.net/</a></p>\n       <ul>\n       <li>\u30b5\u30f3\u30d7\u30eb1</li>\n       <li>\u30b5\u30f3\u30d7\u30eb2</li>\n      -</ul>\n      +</ul>\n      +;;; \n```"]