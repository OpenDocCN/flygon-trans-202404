["```\n>  create table users ( user_id integer primary key, first_names varchar(50), last_name varchar(50) not null, email varchar(100) not null unique, -- we encrypt passwords using operating system crypt function password varchar(30) not null, -- we only need precision to within one second registration_date timestamp(0) ); -- add some sample data insert into users (user_id, first_names, last_name, email, password, registration_date) values (1,'schlomo','mendelowitz','schlomo@mendelowitz.com','67xui2', to_timestamp('2003-06-13 09:15:00','YYYY-MM-DD HH24:MI:SS')); insert into users (user_id, first_names, last_name, email, password, registration_date) values (2,'George Herbert Walker','Bush','former-president@whitehouse.gov','kl88q', to_timestamp('2003-06-13 15:18:22','YYYY-MM-DD HH24:MI:SS')); \n> ```", "```\n>  column email format a35 column registration_date format a25 select email, registration_date from users where registration_date > current_date - interval '1' day; EMAIL REGISTRATION_DATE ----------------------------------- ------------------------- schlomo@mendelowitz.com 13-JUN-03 09.15.00 AM former-president@whitehouse.gov 13-JUN-03 03.18.22 PM \n> ```", "```\n>  alter session set nls_timestamp_format = 'YYYY-MM-DD HH24:MI:SS'; select email, registration_date from users where registration_date > current_date - interval '1' day; EMAIL REGISTRATION_DATE ----------------------------------- ---------------------- schlomo@mendelowitz.com **2003-06-13 09:15:00** former-president@whitehouse.gov **2003-06-13 15:18:22** \n> ```", "```\n>  select email, registration_date from users where registration_date > current_date - interval '1' hour; EMAIL REGISTRATION_DATE ----------------------------------- ------------------------- former-president@whitehouse.gov 2003-06-13 15:18:22 select email, registration_date from users where registration_date > current_date - interval '1' minute; no rows selected select email, registration_date from users where registration_date > current_date - interval '1' second; no rows selected \n> ```", "```\n>  select email, to_char(registration_date,'Day, Month DD, YYYY') as reg_day from users order by registration_date; EMAIL REG_DAY ----------------------------------- ----------------------------- schlomo@mendelowitz.com Friday , June 13, 2003 former-president@whitehouse.gov Friday , June 13, 2003 \n> ```", "```\n>  select email, trim(to_char(registration_date,'Day')) || ', ' || trim(to_char(registration_date,'Month')) || ' ' || trim(to_char(registration_date,'DD, YYYY')) as reg_day from users order by registration_date; EMAIL REG_DAY ----------------------------------- ---------------------------- schlomo@mendelowitz.com Friday, June 13, 2003 former-president@whitehouse.gov Friday, June 13, 2003 \n> ```", "```\n>  alter session set nls_date_format = 'YYYY-MM-DD'; -- old select add_months(to_date('2003-07-31','YYYY-MM-DD'),-1) from dual; ADD_MONTHS ---------- 2003-06-30 -- new select to_timestamp('2003-07-31','YYYY-MM-DD') - interval '1' month from dual; ERROR at line 1: ORA-01839: date not valid for month specified -- old select to_date('2003-07-31','YYYY-MM-DD') - 100 from dual; TO_DATE('2 ---------- 2003-04-22 -- new (broken) select to_timestamp('2003-07-31','YYYY-MM-DD') - interval '100' day from dual; ERROR at line 1: ORA-01873: the leading precision of the interval is too small -- new (note the extra \"(3)\") select to_timestamp('2003-07-31','YYYY-MM-DD') - interval '100' day**(3)** from dual; TO_TIMESTAMP('2003-07-31','YYYY-MM-DD')-INTERVAL'100'DAY(3) ------------------------------------------------------------- 2003-04-22 00:00:00 \n> ```", "```\n>  insert into users (user_id, first_names, last_name, email, password, registration_date) values (3,'Osama','bin Laden','50kids@aol.com','dieusa', to_timestamp('2003-06-13 17:56:03','YYYY-MM-DD HH24:MI:SS')); insert into users (user_id, first_names, last_name, email, password, registration_date) values (4,'Saddam','Hussein','livinlarge@saudi-online.net','wmd34', to_timestamp('2003-06-13 19:12:43','YYYY-MM-DD HH24:MI:SS')); \n> ```", "```\n>  select registration_date from users order by registration_date; REGISTRATION_DATE ------------------------- 2003-06-13 09:15:00 2003-06-13 15:18:22 2003-06-13 17:56:03 2003-06-13 19:12:43 \n> ```", "```\n>  column r1 format a21 column r2 format a21 select u1.registration_date as r1, u2.registration_date as r2 from users u1, users u2 where u2.user_id = (select min(user_id) from users where registration_date > u1.registration_date) order by r1; R1 R2 --------------------- --------------------- 2003-06-13 09:15:00 2003-06-13 15:18:22 2003-06-13 15:18:22 2003-06-13 17:56:03 2003-06-13 17:56:03 2003-06-13 19:12:43 \n> ```", "```\n>  column reg_gap format a21 select u1.registration_date as r1, u2.registration_date as r2, u2.registration_date-u1.registration_date as reg_gap from users u1, users u2 where u2.user_id = (select min(user_id) from users where registration_date > u1.registration_date) order by r1; R1 R2 REG_GAP --------------------- --------------------- --------------------- 2003-06-13 09:15:00 2003-06-13 15:18:22 +000000000 06:03:22 2003-06-13 15:18:22 2003-06-13 17:56:03 +000000000 02:37:41 2003-06-13 17:56:03 2003-06-13 19:12:43 +000000000 01:16:40 \n> ```", "```\n>  select avg(reg_gap) from (select u1.registration_date as r1, u2.registration_date as r2, u2.registration_date-u1.registration_date as reg_gap from users u1, users u2 where u2.user_id = (select min(user_id) from users where registration_date > u1.registration_date)) ERROR at line 1: ORA-00932: inconsistent datatypes: expected NUMBER got INTERVAL \n> ```", "```\n>  select avg(reg_gap) from (select u1.registration_date as r1, u2.registration_date as r2, to_date(to_char(u2.registration_date,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') - to_date(to_char(u1.registration_date,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') as reg_gap from users u1, users u2 where u2.user_id = (select min(user_id) from users where registration_date > u1.registration_date)) AVG(REG_GAP) ------------ .13836034 \n> ```", "```\n>  create view registration_intervals as select u1.registration_date as r1, u2.registration_date as r2, to_date(to_char(u2.registration_date,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') - to_date(to_char(u1.registration_date,'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') as reg_gap from users u1, users u2 where u2.user_id = (select min(user_id) from users where registration_date > u1.registration_date) \n> ```", "```\n>  select 24*60*avg(reg_gap) as avg_gap_minutes from registration_intervals; AVG_GAP_MINUTES --------------- 199.238889 \n> ```", "```\n>  select to_char(shipped_date,'YYYY') as shipped_year, to_char(shipped_date,'Q') as shipped_quarter, sum(price_charged) as revenue from sh_orders_reportable where product_id = 143 and shipped_date is not null group by to_char(shipped_date,'YYYY'), to_char(shipped_date,'Q') order by to_char(shipped_date,'YYYY'), to_char(shipped_date,'Q'); SHIPPED_YEAR SHIPPED_QUARTER REVENUE -------------------- -------------------- ---------- 1998 2 1280 1998 3 1150 1998 4 350 1999 1 210 \n> ```", "```\n> SQL> select to_char(sysdate,'Day, Month DD, YYYY') from dual;\n> \n> TO_CHAR(SYSDATE,'DAY,MONTHDD,\n> -----------------------------\n> Monday   , May       22, 2006\n> \n> SQL> select to_char(sysdate,'FMDay, Month DD, YYYY') from dual;\n> \n> TO_CHAR(SYSDATE,'FMDAY,MONTHD\n> -----------------------------\n> Monday, May 22, 2006\n> \n> ```", "```\n> CREATE OR REPLACE FUNCTION interval_to_seconds(x INTERVAL DAY TO SECOND ) RETURN NUMBER IS\n> s VARCHAR2(26);\n> days_s VARCHAR2(26);\n> time_s VARCHAR2(26);\n> N NUMBER(10,6);\n> BEGIN\n>   s := TO_CHAR(x);\n>   days_s := SUBSTR(s,2,INSTR(s,' ')-2);\n>   time_s := SUBSTR(s,2+LENGTH(days_s)+1);\n>   N := 86400*TO_NUMBER(days_s) + 3600*TO_NUMBER(SUBSTR(time_s,1,2)) + 60*TO_NUMBER(SUBSTR(time_s,4,2)) + TO_NUMBER(SUBSTR(time_s,7));\n>   IF SUBSTR(s,1,1) = '-' THEN\n>      N := - N; \n>   END IF;\n>   RETURN N; \n> END;\n> \n> ```"]