["```\n(define (count-stairs n)\n  (cond [(= n 1) 1]\n        [(= n 2) 2]\n        [else (+ (count-stairs (- n 1))\n                 (count-stairs (- n 2)) ]) )) \n```", "```\n(define (count-change amount)\n  (cc amount `(50 25 10 5 1)))\n\n(define (cc amount kinds-of-coins)\n  (cond [(= amount 0) 1]\n        [(or (< amount 0) (empty? kinds-of-coins)) 0]\n        [else (+ (cc amount\n                     (bf kinds-of-coins))\n                 (cc (- amount\n                        (first kinds-of-coins))\n                     kinds-of-coins))] )) \n```"]