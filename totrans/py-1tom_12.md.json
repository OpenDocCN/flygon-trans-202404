["```\npip install pillow \n```", "```\npip install PIL \n```", "```\npip install qrcode \n```", "```\nqr some_word[ > some_iamge.png] \n```", "```\nimport qrcode\nqr = qrcode.QRCode(\n    version=1,                                              # QR Code version\uff0c1-4\n    error_correction=qrcode.constants.ERROR_CORRECT_L,      # \u9519\u8bef\u7ea0\u6b63\u7b49\u7ea7 L\u3001M\u3001Q\u3001H \u56db\u7b49\uff0c\u9ed8\u8ba4\u662f M\n    box_size=10,                                            # QR Code \u56fe\u7247\u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u662f\u50cf\u7d20\n    border=4,                                               # QR Code \u7684\u8fb9\u6846\uff0c\u5355\u4f4d\u662f\u50cf\u7d20\uff0c\u9ed8\u8ba4 4\n)\nqr.add_data('Some data')            # \u60f3\u8981\u6dfb\u52a0\u5230 QR Code \u4e2d\u7684\u5185\u5bb9\nqr.make(fit=True)\n\nimg = qr.make_image() \n```", "```\nimport qrcode\nimport qrcode.image.svg\n\nif method == 'basic':\n    # Simple factory, just a set of rects.\n    factory = qrcode.image.svg.SvgImage\nelif method == 'fragment':\n    # Fragment factory (also just a set of rects)\n    factory = qrcode.image.svg.SvgFragmentImage\nelse:\n    # Combined path factory, fixes white space that may occur when zooming\n    factory = qrcode.image.svg.SvgPathImage\n\nimg = qrcode.make('Some data here', image_factory=factory) \n```", "```\npip install git+git://github.com/ojii/pymaging.git#egg=pymaging\npip install git+git://github.com/ojii/pymaging-png.git#egg=pymaging-png \n```", "```\nimport qrcode\nfrom qrcode.image.pure import PymagingImage\nimg = qrcode.make('Some data here', image_factory=PymagingImage) \n```", "```\n##### ####   ## #####\n  #   #     #     #\n  #   ##    #     #\n  #   #      #    #\n  #   #### ##     # \n```", "```\n88888 8888  d8b 88888\n  8   8    ]b     8\n  8   88    Yb    8\n  8   8    o d8   8\n  8   8888  YP    8 \n```", "```\n..\n..\n```", "```\n.X\n..\n```", "```\nX.\n..\n```", "```\n..\nX.\n```", "```\n..\n.X\n```", "```\nXX\n..\n```", "```\n..\nXX\n```", "```\nX.\nX.\n```", "```\n.X\n.X\n```", "```\n.X\nXX\n```", "```\nXX\n.X\n```", "```\nXX\nX.\n```", "```\nXX\nXX\n```", "```\n`\n```", "```\n'\n```", "```\n.\n```", "```\n,\n```", "```\n\"\n```", "```\n_\n```", "```\n(\n```", "```\n)\n```", "```\nJ\n```", "```\nL\n```", "```\n7\n```", "```\nP\n```", "```\n8\n```"]