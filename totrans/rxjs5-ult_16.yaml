- en: Operators - conversion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Operators conversion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The whole point with this category is to show how easy it is to create Observables
    from something so they can play nice with the operators and well whatever construct
    you come from enables rich composition.
  prefs: []
  type: TYPE_NORMAL
- en: from
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Rxjs4 there existed a bunch of operators with resembling names such as `fromArray()`,
    `from()`, `fromPromise()` etc. All these `from()` operators are now just `from()`.
    Let''s look at some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**old fromArray**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**old fromPromise**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: of
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `of` operator takes x number of arguments so you can call it with one arguments
    as well as 10 arguments like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: to
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There also exist a bunch of operators that allows you go the other way, i.e
    leave the wonderful world of observables and go back to a more primitive state
    like :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
