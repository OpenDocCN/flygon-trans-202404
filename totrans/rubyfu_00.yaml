- en: Module 0x0 | Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: RubyFu
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](rubyfu.png)'
  prefs: []
  type: TYPE_IMG
- en: '***Rubyfu, where Ruby goes evil!***'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](d0c40370.svg%3fstyle%3dsocial%26label%3dFollow%26style%3dplastic)](https://twitter.com/intent/follow?screen_name=Rubyfu)'
  prefs: []
  type: TYPE_NORMAL
- en: This book is a great collection of ideas, tricks, and skills that could be useful
    for Hackers. It's a unique extraction reference, summarizes a lot of research
    and experience in order to achieve your **w00t** in the shortest and smartest
    way. Rubyfu is where you'll find plug-n-hack code. Rubyfu is a book to use not
    only to read, it's where ruby goes evil.
  prefs: []
  type: TYPE_NORMAL
- en: Who should read this book?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ideally, Hackers! Those who have enough experience to hack our world and have
    *at least* basics in the Ruby programming language. To get the best benefits of
    the book, open Rubyfu.net and pin its browser tab. Use the irb/pry interactive
    interpreter to run the code, or run it as a script. Enhance the code to fit your
    needs and yeah, tweet the code and its output to [@Rubyfu](https://twitter.com/rubyfu)
    to share it with our awesome community.
  prefs: []
  type: TYPE_NORMAL
- en: Organization of the book
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Module 0x0 | [Introduction](index.html)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Module 0x0 is just a smooth start for you, whether you're a reader, writer,
    hacker or someone who came to say hi. In this module you'll find a great start
    for you as a contributor, where all kinds of contributions are welcome starting
    from proofreading all the way up to topic writing.
  prefs: []
  type: TYPE_NORMAL
- en: Module 0x1 | [Basic Ruby Kung Fu](index1.html)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Module 0x1 is an awesome collection of the most commonly needed string manipulation,
    extraction and conversion tasks; dealing with real cases that you might face during
    your hack. Your encoding and data conversion may be a trivial or complex challenge
    and here we don't care, we'll solve it.
  prefs: []
  type: TYPE_NORMAL
- en: Module 0x2 | [System Kung Fu](index2.html)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Module 0x2 digs more into system hacking, where system commands, file manipulation,
    cryptography and generating common hashes are often needed. Getting simple bind
    and reverse shells with Ruby is a useful skill, no doubt. Almost all mainstream
    Linux systems are shipped with ruby and if not, no problem, we always have other
    ways to make use of our knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: Module 0x3 | [Network Kung Fu](index3.html)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Module 0x3 dives deeper into network sockets, protocols, packet manipulation,
    service enumeration and gives us more hacky and awesome code to get the job done.
    Working with network protocols needs a deeper knowledge of how these protocols
    work in order to exchange understandable data and yeah, we'll figure it out right
    here.
  prefs: []
  type: TYPE_NORMAL
- en: Module 0x4 | [Web Kung Fu](index4.html)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Module 0x4 covers web topics. The web is the most common place to share information,
    making it one of the most delicious places to hack. Web hacking challenges, known
    for their uniqueness and with many potential technologies within a single page,
    require a versatile tool with easily adaptable capabilities. Here we'll learn
    how to deal with GET & POST requests, web services, databases, APIs and manipulating
    the browser to make it our soldier.
  prefs: []
  type: TYPE_NORMAL
- en: Module 0x5 | [Exploitation Kung Fu](index5.html)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Module 0x5 builds your exploitation abilities with Ruby. Whatever the vulnerability
    may be, remote (FTP, IMAP, SMTP, etc.) or local (file format, local system) you'll
    need to know how to build fuzzers and skeleton exploits for it. If you get there
    you'll need a simple, clean and stable way to build your exploit. Here you'll
    learn how to build your fuzzer, exploit, and port your exploit to Metasploit --
    and even how to write your own Metasploit modules too.
  prefs: []
  type: TYPE_NORMAL
- en: Module 0x6 | [Forensic Kung Fu](index6.html)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Module 0x6 explores forensic capabilities with Rubyfu. Whoever you are: redteam,
    blueteam, or in-between you''ll need some forensic skills in your hack and/or
    investigation. Here you''ll learn more about how to deal with registry tasks,
    extracting browser information, and much more.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](9f43e656.png)'
  prefs:
  - PREF_H2
  type: TYPE_IMG
- en: Contribution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Contribution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is under [CC BY-NC-SA License](https://creativecommons.org/licenses/by-nc-sa/3.0/)
    so we appreciate all kinds of contributions, distribution and we preserve our
    contributors efforts, forever.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: The code in this book is tested on Ruby version > 2.2.0'
  prefs: []
  type: TYPE_NORMAL
- en: Contribution methods
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are several kinds of contributions that could help this book achieve
    the best results:'
  prefs: []
  type: TYPE_NORMAL
- en: Contribution by adding tricky code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contribution by adding more explanation for existing code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contribution by enhancing the code quality or alternatives.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Contribution by enhancing the book quality:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Structure enhancements
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Spelling, proofreading enhancements
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Design enhancements
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ideas and requests
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Any other
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Contribution by spreading the book in social media and IS communities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Twitter: [@Rubyfu](https://twitter.com/Rubyfu) and hashtag `#Rubyfu`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Google+: [Rubyfu page](https://plus.google.com/114358908164154763697)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Contribution by adding more resources and references.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contribution by donation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Start contributing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Please find all you need to know about GitBook and markdown editing in the [References](index7.html)
    section. As good start, you can refer to [how to use it from official readme](https://github.com/GitbookIO/gitbook).
    You can easily use GitBook [Desktop editor](https://www.gitbook.com/editor).
  prefs: []
  type: TYPE_NORMAL
- en: Create a [GitHub](https://github.com) account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fork [RubyFu repository](https://github.com/rubyfu/RubyFu).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Clone GitHub forked RubyFu repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`git clone https://github.com/[YourGithubAccount]/RubyFu`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Create a [GitBook](http://gitbook.com) account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to [**GitBook editor**](https://www.gitbook.com/editor) and Sign-in with
    your GitBook account
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press the **Import** button to import the cloned repository. Then, you'll find
    it in the **LOCAL LIBRARY** tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the forked RubyFu repository GitHub URL to GitBook Editor: **Toolbar**
    >> **File** >> **Preferences** >> **GIT**.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start your awesome contribution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From GitBook editor, **Sync** your changes to the forked repository.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From GitHub, send a **Pull Request(PR)** to the **Master** branch.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Not sure where to start helping? Go to [TODO list](todo.html) and check the
    unchecked items.
  prefs: []
  type: TYPE_NORMAL
- en: Contributing with Code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ruby code
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Use the triple ticks [PRE0] to get ruby code highlighted. e.g.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]ruby'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: puts "Ruby Code here"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Explain the main idea -with some details- of the code, if you explain every
    line that would be great but it's not a must.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose the correct Module.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make your title clear.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Text editor/ide for code identification before pasting your code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mention the source, if you copied or developed code that has been created by
    others; please mention the source in the footer. e.g.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]ruby'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: puts "Your good code"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Then add the following to the footer
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Try to use readable code, if you have to add more tricky/skilled code then explain
    it well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Remember!** Hacker''s code **=!** Cryptic code'
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: Command-line
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Use triple ticks to highlight your command-line. ex.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: ls
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Contributing with Translation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To translate Rubyfu, make sure to
  prefs: []
  type: TYPE_NORMAL
- en: Create a new branch for your translation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a sub-directory under Rubyfu's root directory with the name of the language
    you will translate to.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Update the `LANGS.md` file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Copy and paste the content of `en/` folder to your language folder, then translate
    it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a Pull Request (PR).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Please make sure to mark the repository as **Watch** to keep your translated
    efforts up-to-date.
  prefs: []
  type: TYPE_NORMAL
- en: General Contribution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: General contributions might be topic requests, proofreading, spelling, book
    organization and style. All these contributions are welcome; however, they have
    to be discussed on [Rubyfu issues](https://github.com/rubyfu/RubyFu/issues) -
    especially things in regards to topics and/or book organization and styling. At
    the same time don't hesitate to report even a single word observation about the
    book, it's for you at the end of the day.
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** Since this book is enhanced dynamically and unordered, it''s hard
    to make the footer notes with an order-series of numbers for the whole book, so
    -until I find better solution- I''ll make the number order separate for each page
    individually.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Beginners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Beginners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Stretching - for beginners
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OK, if you believe you're a beginner and need to warm-up, here's a list of tasks
    to do **using ruby** before starting this book.
  prefs: []
  type: TYPE_NORMAL
- en: '**Strings**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Print the following string `\x52\x75\x62\x79\x46\x75` as it is, it should **NOT**
    be resolved to characters.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: You have string `RubyFu` , convert this string to an array (each character is
    an element).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Arrays**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You have the following array `["R", "u", "b", "y", "F", "u"]` convert it to
    string `RubyFu`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: You have the following array `["1", "2", "3", "4"]`, calculate the sum of all
    elements.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Files and Folders**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Find all files ending with `.jpg` or `.pdf` or `.docx` or `.zip` in your Downloads
    folder.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a folder called `ruby-testfu` and copy all found files (from the previous
    task) into it.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a simple TCP server listening on port 3211\. This server prints `date
    and time`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a simple TCP client to connect to the previous server and print what
    the server sends.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A good list of [References](index7.html) can be found under the Beginner section.
  prefs: []
  type: TYPE_NORMAL
- en: Challenge Yourself!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are some awesome websites that push your programming skills via interactive
    challenges and I really encourage you to go through one or more of them.
  prefs: []
  type: TYPE_NORMAL
- en: '[Codewars](http://www.codewars.com/?language=ruby)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[rubeque](http://www.rubeque.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Hackerrank](https://www.hackerrank.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RubyQuiz](http://rubyquiz.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Required Gems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Required Gems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I'd like to list all external gems that might be used in this book. This list
    will be updated once a new gem is required.
  prefs: []
  type: TYPE_NORMAL
- en: Note that you don't need to install them all unless you specifically need them.
  prefs: []
  type: TYPE_NORMAL
- en: Main Gems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Pry - An IRB alternative and runtime developer console.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pry-doc - Pry Doc is a Pry REPL plugin. Extending documentation support for
    the REPL by improving the `show-doc & show-source commands.`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pry-byebug - Combine 'pry' with 'byebug'. Adds 'step', 'next', 'finish', 'continue'
    and 'break' commands to control execution.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: To run pry with best appearance
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Note:** Most of our examples will be executed on **pry** so please consider
    it as main part of our environment. Otherwise, when you see `#!/usr/bin/env ruby,
    it means a file script to execute.`'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Module Gems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Due the demand of wrapping all required gems into one gem, we've created [hacker-gems](https://rubygems.org/gems/hacker-gems)
    which installs all the below gems at one time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: You might need to install some packages beforehand to avoid any errors of missing
    libraries.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Module 0x1 | Basic Ruby Kung Fu
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: colorize - Extends String class or add a ColorizedString with methods to set
    text color, background.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Module 0x2 | System Kung Fu
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: virustotal - A script for automating virustotal.com queries.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uirusu - A tool and REST library for interacting with Virustotal.org.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: clipboard - Lets you access the clipboard on Linux, MacOS, Windows, and Cygwin.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extra gems**'
  prefs: []
  type: TYPE_NORMAL
- en: Useful gems to build command line applications
  prefs: []
  type: TYPE_NORMAL
- en: tty-prompt - A beautiful and powerful interactive command line prompt.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thor - Create a command-suite app simply and easily, as well as Rails generators.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GLI - Create awesome, polished command suites without a lot of code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Slop - Create simple command-line apps with a syntax similar to trollop.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Highline - handle user input and output via a “Q&A” style API, including type
    conversions and validation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Escort - A library that makes building command-line apps in ruby so easy, you’ll
    feel like an expert is guiding you through it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: commander - The complete solution for Ruby command-line executables.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Module 0x3 | Network Kung Fu
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: geoip - searches a GeoIP database host or IP address, returns the country, city,
    ISP and location.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: net-ping - A ping interface. Includes TCP, HTTP, LDAP, ICMP, UDP, WMI (for Windows).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ruby-nmap - A Ruby interface to Nmap, the exploration tool and security / port
    scanner.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ronin-scanners - A library for Ronin that provides Ruby interfaces to various
    third-party security scanners.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: net-dns - A pure Ruby DNS library, with a clean OO interface and an extensible
    API.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: snmp - A Ruby implementation of SNMP (the Simple Network Management Protocol).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: net-ssh - A pure-Ruby implementation of the SSH2 client protocol.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: net-scp - A pure Ruby implementation of the SCP client protocol.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ftpd - A pure Ruby FTP server library. It supports implicit and explicit TLS,
    IPV6, passive and active mode.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: packetfu - A mid-level packet manipulation library for Ruby.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: packetgen - Ruby library to easily generate and capture network packets.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Module 0x4 | Web Kung Fu
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: net-http-digest_auth - An implementation of RFC 2617 - Digest Access Authentication.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ruby-ntlm - NTLM implementation for Ruby.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: activerecord - Databases on Rails. Build a persistent domain model by mapping
    database tables to Ruby.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tiny_tds - TinyTDS - A modern, simple and fast FreeTDS library for Ruby using
    DB-Library.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: activerecord-sqlserver-adapter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: activerecord-oracle_enhanced-adapter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: buby - a mashup of JRuby with the popular commercial web security testing tool
    Burp Suite from PortSwigger.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: wasabi - A simple WSDL parser.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: savon - Heavy metal SOAP client.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: httpclient - gives something like the functionality of libwww-perl (LWP) in
    Ruby.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nokogiri - An HTML, XML, SAX, and Reader parser.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: twitter - A Ruby interface to the Twitter API.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: selenium-webdriver - A tool for writing automated tests of websites. It aims
    to mimic the behaviour of a real user.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: watir-webdriver - WebDriver-backed Watir.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: coffee-script - Ruby CoffeeScript is a bridge to the JS CoffeeScript compiler.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: opal - Ruby runtime and core library for JavaScript.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extra gems**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Useful gems to deal with web:'
  prefs: []
  type: TYPE_NORMAL
- en: Mechanize - a ruby library that makes automated web interaction easy.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTTP.rb - Fast, Elegant HTTP client for ruby.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RestClient - A class and executable for interacting with RESTful web services.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: httparty - Makes http fun! Also, makes consuming restful web services dead easy.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: websocket - Universal Ruby library to handle WebSocket protocol.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Module 0x5 | Exploitation Kung Fu
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: metasm - A cross-architecture assembler, disassembler, linker, and debugger.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Module 0x6 | Forensic Kung Fu
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: metasm - A cross-architecture assembler, disassembler, linker, and debugger.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
