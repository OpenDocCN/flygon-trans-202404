["```\n> type Maybe a = Nothing | Just a\n\n> Nothing\nNothing : Maybe a\n\n> Just\n<function> : a -> Maybe a\n\n> Just \"hello\"\nJust \"hello\" : Maybe String\n\n> Just 1.618\nJust 1.618 : Maybe Float \n```", "```\ntype alias User =\n  { name : String\n  , age : Maybe Int\n  } \n```", "```\nsue : User\nsue =\n  { name = \"Sue\", age = Nothing } \n```", "```\ntom : User\ntom =\n  { name = \"Tom\", age = Just 24 } \n```", "```\ncanBuyAlcohol : User -> Bool\ncanBuyAlcohol user =\n  case user.age of\n    Nothing ->\n      False\n\n    Just age ->\n      age >= 21 \n```", "```\ngetTeenAge : User -> Maybe Int\ngetTeenAge user =\n  case user.age of\n    Nothing ->\n      Nothing\n\n    Just age ->\n      if 13 <= age && age <= 18 then\n        Just age\n\n      else\n        Nothing \n```", "```\n> alice = User \"Alice\" (Just 14)\n... : User\n\n> bob = User \"Bob\" (Just 16)\n... : User\n\n> users = [ sue, tom, alice, bob ]\n... : List User\n\n> List.filterMap getTeenAge users\n[14,16] : List Int \n```", "```\nString.toInt : String -> Result String Int \n```", "```\ntype Result error value\n  = Err error\n  | Ok value \n```", "```\n> import String\n\n> String.toInt \"128\"\nOk 128 : Result String Int\n\n> String.toInt \"64\"\nOk 64 : Result String Int\n\n> String.toInt \"BBBB\"\nErr \"could not convert string 'BBBB' to an Int\" : Result String Int \n```", "```\nview : String -> Html msg\nview userInputAge =\n  case String.toInt userInputAge of\n    Err msg ->\n      span [class \"error\"] [text msg]\n\n    Ok age ->\n      if age < 0 then\n        span [class \"error\"] [text \"I bet you are older than that!\"]\n\n      else if age > 140 then\n        span [class \"error\"] [text \"Seems unlikely...\"]\n\n      else\n        text \"OK!\" \n```"]