- en: CSE 331 Software Design and Implementation
  prefs: []
  type: TYPE_NORMAL
- en: Eclipse Reference for CSE 331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Introduction](#intro)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Eclipse Quick Reference](#editing-eclipse)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Use the right version of the JDK](#eclipse-jdk-version)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Eclipse is an integrated development environment with strong support for Java.
    In addition to various features that facilitate writing Java code (such as autocompletion
    and code refactoring), it has built-in support for JUnit, and Ant — tools that
    we use in CSE 331.
  prefs: []
  type: TYPE_NORMAL
- en: Eclipse (version 4.2) is already installed on CSE departmental machines (and
    the department virtual machines). See [here](WorkingAtHome.html) for how to use
    Eclipse at home.
  prefs: []
  type: TYPE_NORMAL
- en: You can read more about and get help on the features of Eclipse in [its online
    documentation](http://www.eclipse.org/documentation/).
  prefs: []
  type: TYPE_NORMAL
- en: Eclipse Quick Reference
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are some tips for things that can make your life easier in Eclipse:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Autocomplete | `Ctrl-Space` asks Eclipse to help you complete some code you''ve
    started.  Eclipse can complete lots of things:'
  prefs: []
  type: TYPE_NORMAL
- en: variables, method names, class names
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ArrayL` Ctrl-Space    -->  `ArrayList`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`random.next`  Ctrl-Space  -->  `random.nextInt`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: constructor and method parameters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`new ArrayList(`    Ctrl-Space  --> popup menu of `ArrayList`''s constructors'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`random.nextInt(`   Ctrl-Space --> tooltip showing `nextInt`''s parameters'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: methods to override
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`class Foo extends Bar {`    `Ctrl-Space` --> menu of `Bar`''s methods that
    can be overridden'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Organize import statements | `Ctrl-Shift-O` (that''s O as in Organize) automatically
    updates the `import` statements at the top of your class, adding classes that
    need to be imported from other packages and removing classes that you''re no longer
    using.  If a class name is ambiguous — e.g., `List` might be either `java.util.List`
    and `java.awt.List` — then Eclipse pops up a dialog asking you which one you want.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Look up Java API documentation | `Shift-F2` when your cursor is on a class
    or method name (You have to configure this feature with the location of the API
    documentation). |'
  prefs: []
  type: TYPE_TB
- en: '| Comment/uncomment a block of code | `Ctrl-/` comments the highlighted region.
    `Ctrl-\` uncomments the highlighted region. |'
  prefs: []
  type: TYPE_TB
- en: '| Renaming or moving packages, classes, methods, and variables (updates all
    references)   | `Alt-Shift-R` (Rename) or `Alt-Shift-V` (Move) when your cursor
    is over the package/class/method/variable. Equivalently, right-click on any package,
    class, method or variable in the Package Explorer and select **Refactor** ? **Rename**
    to rename it or **Refactor** ? **Move** to put it in another package or class.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Delete current row | `Ctrl-D` when cursor is in row to be deleted. |'
  prefs: []
  type: TYPE_TB
- en: '| Mark TODO items for yourself | Start a comment with TODO to leave yourself
    a note about a piece of code that you need to fix. Eclipse will automatically
    put the comment in the Tasks pane, the pane where it shows your compile errors. 
    (If you don''t see the Tasks pane, use **Window** ? **Show View** ? **Tasks**.)
    You can jump to TODO items or compile errors in your code quickly by double-clicking
    on them in the Tasks pane. |'
  prefs: []
  type: TYPE_TB
- en: '| Generate get() and set() methods | Make sure the fields for which you would
    like to create get() and set() methods are declared in the class, then right-click
    and use **Source** ? **Generate Getter and Setter**. |'
  prefs: []
  type: TYPE_TB
- en: '| Run classes or unit tests that you''ve run recently | The little "play" icon
    ![](../Images/218b9346e6b3408bb5f2f389b3b6b66e.jpg) on the Eclipse toolbar runs
    the last class or unit test you just ran. Pull down its menu for your recent history
    of runs. |'
  prefs: []
  type: TYPE_TB
- en: '| Turn off console autoraise | When a program run under Eclipse writes to standard
    out (say, via `println`), Eclipse raises the "console" perspective. This may be
    annoying when you run tests, or when you use Continuous Testing. To turn this
    off, go to **Window** ? **Preferences** ? **Run/Debug** ? **Console** and uncheck
    “Show when program writes to standard out”. |'
  prefs: []
  type: TYPE_TB
- en: '| Emacs key bindings | If you prefer to use Emacs key bindings while editing
    code, do: **Window** ? **Preferences...**? **General** ? **Keys** ? **Modify**
    and set **Scheme** to **Emacs** |'
  prefs: []
  type: TYPE_TB
- en: Use the right version of the JDK
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you get an error such as
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: while compiling or while running tests, then you are using the wrong version
    of Java. CSE331 uses Java 7\. A common reason for using the wrong version of Java
    is making a mistake when following our setup instructions, or making an incorrect
    change to your Eclipse setup since doing so.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following might fix the problem:'
  prefs: []
  type: TYPE_NORMAL
- en: Right click your Project ? Properties ? Java Build Path ? Libraries Tab ? Remove
    the JRE and JUnit Libraries (keep `junit-4.11.jar` though) ? Click "Add Library"
    ? JRE System Library ? Workspace default JRE (jdk1.7.0) ? Finish
  prefs: []
  type: TYPE_NORMAL
- en: 'For problems or questions regarding this page, contact: [cse331-staff@cs.washington.edu](mailto:cse331-staff@cs.washington.edu).'
  prefs: []
  type: TYPE_NORMAL
