["```\nfun sumInt(a: Int, b: Int): Int {\n  var s = 0\n  for (i in a .. b)\n    s += i\n  return s\n}\n\n```", "```\nfun sumCubes(a: Int, b: Int): Int {\n  var s = 0\n  for (i in a .. b)\n    s += i * i * i\n  return s\n}\n\n```", "```\nfun sum(a: Int, b: Int, f: (Int) -> Int): Int {\n  var s = 0\n  for (i in a..b) \n    s += f(i)\n  return s\n}\n\n```", "```\n>>> val str: String = \"Hello CS109\"\n>>> val a: Int = 13\n>>> println(str); println(a)\n\n```", "```\n>>> println(\"Hello CS109\"); println(13)\n\n```", "```\n{ x: Int -> x * x * x }\n\n```", "```\n{ a: Int, b: Int -> a + b }\n\n```", "```\n>>> { x: Int -> x * x * x }\nkotlin.jvm.functions.Function1<java.lang.Integer, java.lang.Integer>\n\n```", "```\n>>> { x: Int -> x * x * x }(3)\n27\n\n```", "```\ns\n>>> val f = { x: Int -> x * x * x }\n>>> f(3)\n27\n>>> f(7)\n343\n>>> f(-30)\n-27000\n\n```", "```\n>>> val g = listOf({ x: Int -> x * x },\n...                { x: Int -> x * x * x },\n...                { x: Int -> x * x * x * x })\n>>> g[0](2)\n4\n>>> g[1](2)\n8\n>>> g[2](2)\n16\n\n```", "```\n>>> :load higher2.kts\n>>> sum(1, 100, { x: Int -> x } )\n5050\n>>> sum(1, 100, { x: Int -> x * x * x } )\n25502500\n\n```", "```\n>>> sum(1, 100, { x -> x } )\n5050\n>>> sum(1, 100, { x -> x * x * x } )\n25502500\n\n```", "```\n>>> sum(1, 100) { x -> x } \n5050\n>>> sum(1, 100) { x -> x * x * x } \n25502500\n\n```", "```\n>>> sum(1, 100) { it }\n5050\n>>> sum(1, 100) { it * it * it }\n25502500\n\n```"]