["```\n# From https://www.tensorflow.org/get_started/get_started\nimport tensorflow as tf\n\n# Model parameters\nW = tf.Variable([.3], tf.float32)\nb = tf.Variable([-.3], tf.float32)\n\n# Model input and output\nx = tf.placeholder(tf.float32)\ny = tf.placeholder(tf.float32)\n\nlinear_model = x * W + b\n\n# cost/loss function\nloss = tf.reduce_sum(tf.square(linear_model - y))  # sum of the squares\n\n# optimizer\noptimizer = tf.train.GradientDescentOptimizer(0.01)\ntrain = optimizer.minimize(loss)\n\n# training data\nx_train = [1, 2, 3, 4]\ny_train = [0, -1, -2, -3]\n\n# training loop\ninit = tf.global_variables_initializer()\nsess = tf.Session()\nsess.run(init)  # reset values to wrong\nfor i in range(1000):\n    sess.run(train, {x: x_train, y: y_train})\n\n# evaluate training accuracy\ncurr_W, curr_b, curr_loss = sess.run([W, b, loss], {x: x_train, y: y_train})\nprint(\"W: %s b: %s loss: %s\" % (curr_W, curr_b, curr_loss)) \n```"]