- en: '| [![](../Images/0e5de52fc55e3be21b3d332ba62a9ba9.jpg)](/http://philip.greenspun.com/images/pcd0088/elvis-grave-43.tcl)
    |'
  id: totrans-0
  prefs: []
  type: TYPE_TB
  zh: '| [![](../Images/0e5de52fc55e3be21b3d332ba62a9ba9.jpg)](/http://philip.greenspun.com/images/pcd0088/elvis-grave-43.tcl)
    |'
- en: Limits
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 限制
- en: part of [SQL for Web Nerds](index.html) by [Philip Greenspun](http://philip.greenspun.com/)
    |
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 部分来自[SQL for Web Nerds](index.html) by [Philip Greenspun](http://philip.greenspun.com/)
    |
- en: '* * *'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[![](../Images/34eeda078480ce071cd178eaabee69d2.jpg)](/http://philip.greenspun.com/images/pcd0088/graceland-paperweight-34.tcl)
    The most painful limit in Oracle is the 4000-byte maximum length of a VARCHAR.
    For most Web applications, this turns out to be long enough to hold 97% of user-entered
    data. The remaining 3% are sufficiently important that you might be unable to
    use VARCHAR.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](../Images/34eeda078480ce071cd178eaabee69d2.jpg)](/http://philip.greenspun.com/images/pcd0088/graceland-paperweight-34.tcl)
    Oracle中最痛苦的限制是VARCHAR的最大长度为4000字节。对于大多数Web应用程序来说，这足以容纳97%的用户输入数据。剩下的3%非常重要，以至于你可能无法使用VARCHAR。'
- en: Oracle8 includes a Character Large Objects (CLOB) data type, which can be up
    to 4 GB in size.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle8包括一个最大可达4GB的Character Large Objects（CLOB）数据类型。
- en: '[PRE0]'
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The first time I used CLOBs was for an Oracle 8 port of my Q&A forum software
    (what you see running at [photo.net](http://www.photo.net/photo/)). I use it for
    the MESSAGE column. In my Illustra implementation, it turned out that only 46
    out of the 12,000 rows in the table had messages longer than 4000 bytes (the VARCHAR
    limit in Oracle 8). But those 46 messages were very interesting and sometimes
    contained quoted material from other works. So it seemed desirable to allow users
    to post extremely long messages if they want.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我第一次使用CLOBs是为了将我的问答论坛软件（你在[photo.net](http://www.photo.net/photo/)看到的）移植到Oracle
    8。我将其用于MESSAGE列。在我的Illustra实现中，结果表中的12000行中只有46行的消息长度超过4000字节（Oracle 8中的VARCHAR限制）。但这46条消息非常有趣，有时包含其他作品的引用材料。因此，如果用户希望，允许他们发布非常长的消息似乎是值得的。
- en: 'Minor Caveats:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 小小的注意事项：
- en: CLOBs don't work like strings. You can't ask for the LENGTH of a CLOB column,
    for example. You can work around this with PL/SQL calls but it isn't much fun.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CLOBs不像字符串那样工作。例如，你不能要求一个CLOB列的长度。你可以通过PL/SQL调用来解决这个问题，但这并不是很有趣。
- en: LOBs are not allowed in GROUP BY, ORDER BY, SELECT DISTINCT, aggregates and
    JOINS
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LOBs不允许在GROUP BY、ORDER BY、SELECT DISTINCT、聚合和连接中使用
- en: '`alter table bboard modify message clob;` does not work (even with no rows
    in the table). If you want to use CLOBs, you apparently have to say so at table
    creation time.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alter table bboard modify message clob;`不起作用（即使表中没有行）。如果你想使用CLOBs，显然必须在创建表时声明。'
- en: 'If you thought that these limitations were bad, you haven''t gotten to the
    big one: the Oracle SQL parser can only handle string literals up to 4000 characters
    in length. SQL*Plus is even more restricted. It can handle strings up to 2500
    characters in length. From most Oracle clients, there will in fact be no way to
    insert data longer than 4000 characters long into a table. A statement/system
    that works perfectly with a 4000-character string will fail completely with a
    4001-character string. You have to completely redesign the way you''re doing things
    to work with strings that *might* be long.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你认为这些限制很糟糕，那么你还没有遇到最大的限制：Oracle SQL解析器只能处理长度不超过4000个字符的字符串字面量。SQL*Plus的限制更严格。它只能处理长度不超过2500个字符的字符串。实际上，从大多数Oracle客户端，将无法向表中插入超过4000个字符长的数据。一个能够完美处理4000个字符字符串的语句/系统，将无法完全处理4001个字符长的字符串。你必须完全重新设计你的工作方式，以处理*可能*很长的字符串。
- en: My partner Cotton was custom writing me an Oracle 8 driver for AOLserver (my
    preferred RDBMS client). So he decided to use C bind variables instead. It turned
    out that these didn't work either for strings longer than 4000 chars. There is
    some special CLOB type for C that you could use if you knew in advance that the
    column was CLOB. But of course Cotton's C code was just taking queries from my
    AOLserver Tcl code. Without querying the database before every INSERT or SELECT,
    he had no way of knowing which columns were going to be CLOB.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我的合作伙伴Cotton为我定制了一个AOLserver的Oracle 8驱动程序（我首选的RDBMS客户端）。所以他决定使用C绑定变量。结果发现，这些对于超过4000个字符的字符串也不起作用。如果你事先知道列是CLOB，那么C语言中有一种特殊的CLOB类型可以使用。但当然，Cotton的C代码只是从我的AOLserver
    Tcl代码中获取查询。在每次插入或选择之前没有查询数据库的情况下，他无法知道哪些列将是CLOB。
- en: One of the most heavily touted features of Oracle 8 is that you can partition
    tables, e.g., say "every row with an order_date column less than January 1, 1997
    goes in tablespace A; every row with order_date less than January 1, 1998 goes
    in tablespace B; all the rest go in tablespace C." Assuming that these tablespaces
    are all on separate disk drives, this means that when you do a GROUP BY on orders
    during the last month or two, Oracle isn't sifting through many years worth of
    data; it only has to scan the partition of the table that resides in tablespace
    C. Partitioning seems to be a good idea, or at least the Informix customers who've
    been using it over the years seem to think so. But if you are a CLOB Achiever,
    you won't be using partitioning.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle 8最被吹捧的功能之一是您可以对表进行分区，例如，说“每个具有order_date列小于1997年1月1日的行都放在表空间A中；每个具有order_date小于1998年1月1日的行都放在表空间B中；其余的都放在表空间C中。”假设这些表空间都在不同的磁盘驱动器上，这意味着当您对最近一个月或两个月的订单进行GROUP
    BY时，Oracle不会筛选多年的数据；它只需要扫描位于表空间C中的表的分区。分区似乎是一个好主意，或者至少多年来一直在使用它的Informix客户似乎是这样认为的。但如果您是一个CLOB成就者，您将不会使用分区。
- en: Right now, my take on CLOBs is that they are so unpleasant to use as to be almost
    not worth it. It has taken Cotton longer to get this one feature working than
    everything else he did with his driver. Informix Universal Server lets you have
    32,000-character long VARCHARs and I'm looking longingly at that system right
    now...
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我对CLOBs的看法是，它们使用起来非常不愉快，几乎不值得。Cotton花了比他的驱动程序中的其他所有功能都更长的时间来使这个功能正常工作。Informix
    Universal Server允许您拥有32,000个字符长的VARCHARs，我现在正在渴望那个系统...
- en: Reference
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参考资料
- en: Oracle Server Reference, "Limits", [http://www.oradoc.com/keyword/limits](http://www.oradoc.com/keyword/limits)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oracle服务器参考，“限制”，[http://www.oradoc.com/keyword/limits](http://www.oradoc.com/keyword/limits)
- en: 'Next: [tuning](tuning.html)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步：[调优](tuning.html)
- en: '* * *'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[philg@mit.edu](http://philip.greenspun.com/)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[philg@mit.edu](http://philip.greenspun.com/)'
- en: Reader's Comments
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 读者评论
- en: 'Both MySQL and MS SQL have higher limit of VARCHAR: 1,048,543 and 8000, respectively.
    This is taken from http://dev.mysql.com/tech-resources/crash-me.php?res_id=38'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: MySQL和MS SQL都有更高的VARCHAR限制：分别为1,048,543和8000。这是从http://dev.mysql.com/tech-resources/crash-me.php?res_id=38获取的信息
- en: ''
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Victor F](/shared/community-member?user_id=261524), August 21, 2004
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [Victor F](/shared/community-member?user_id=261524)，2004年8月21日
- en: A few years ago I was working on a Sybase SQL Server database to store the text
    of transcribed medical reports. The good folks at Sybase warned us not to use
    columns of type TEXT (the equivalent of an Oracle CLOB) and to store *lines* of
    text in a VARCHAR column instead. (At the time Sybase limited VARCHAR columns
    to 255 bytes.) This works well as long as you don't have any lines longer than
    255 characters. The only problem is that you have to parse the text into lines
    and then do an indefinite number of INSERTs. But it was less work that using the
    functions to manipulate TEXT data.
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 几年前，我正在处理一个Sybase SQL Server数据库，用于存储转录医疗报告的文本。Sybase的好人们警告我们不要使用TEXT类型的列（相当于Oracle的CLOB），而是将文本*行*存储在VARCHAR列中。
    （当时，Sybase将VARCHAR列限制为255字节。）只要您没有任何超过255个字符的行，这种方法就很有效。唯一的问题是您必须将文本解析为行，然后进行无限次的插入。但与使用函数操作TEXT数据相比，这样做的工作量更小。
- en: ''
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [David Smith](/shared/community-member?user_id=263834), June 29, 2005
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [David Smith](/shared/community-member?user_id=263834)，2005年6月29日
- en: In Oracle 11g length() now works with NCLOBs. Sadly, select distinct still does
    not.
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在Oracle 11g中，length()现在可以与NCLOBs一起使用。遗憾的是，select distinct仍然不行。
- en: ''
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Janek Bogucki](/shared/community-member?user_id=310375), July 2, 2009
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [Janek Bogucki](/shared/community-member?user_id=310375)，2009年7月2日
- en: '[Add a comment](/comments/add?page_id=3512)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[添加评论](/comments/add?page_id=3512)'
