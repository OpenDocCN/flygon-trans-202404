- en: 1 First look
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1 First Look
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Introducing React Native](https://facebook.github.io/react/blog/2015/03/26/introducing-react-native.html)'
  prefs: []
  type: TYPE_NORMAL
- en: What we really want is the user experience of the native mobile platforms, combined
    with the developer experience we have when building with React on the web. With
    a bit of work, we can make it so the exact same React that's on GitHub can power
    truly native mobile applications. The only difference in the mobile environment
    is that instead of running React in the browser and rendering to divs and spans,
    we run it an embedded instance of JavaScriptCore inside our apps and render to
    higher-level platform-specific components. It's worth noting that we're not chasing
    **“write once, run anywhere.”** Different platforms have different looks, feels,
    and capabilities, and as such, we should still be developing discrete apps for
    each platform, but the same set of engineers should be able to build applications
    for whatever platform they choose, without needing to learn a fundamentally different
    set of technologies for each. We call this approach **“learn once, write anywhere.”**
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Showcase](https://facebook.github.io/react-native/showcase.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160630-4.png)'
  prefs: []
  type: TYPE_IMG
- en: 1.1 Building an app in 5 minutes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.1 Building an app in 5 minutes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Requirement follow [Getting Started](http://facebook.github.io/react-native/releases/next/docs/getting-started.html)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Generate a new React Native project
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Build & run project
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: or open `testRn/ios/testRn.xcodeproj` and build with XCode's play button
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](QQ20160622-0.png)'
  prefs: []
  type: TYPE_IMG
- en: or if the app already builded, start the webserver
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 1.2 How it works
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.2 How it works
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.[JavaScript bridge](https://www.infoq.com/articles/react-native-introduction)
  prefs: []
  type: TYPE_NORMAL
- en: '![](21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 2.[React Native Packager](https://github.com/facebook/react-native/tree/master/packager)
  prefs: []
  type: TYPE_NORMAL
- en: '![](Pasted%20Graphic.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 1.3 Debug tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.3 Debug tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.[developer menu](https://facebook.github.io/react-native/docs/debugging.html)
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160623-0.png)'
  prefs: []
  type: TYPE_IMG
- en: 2.Chrome Devtools
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160623-2.png) 3.log'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 4.[Atom](https://atom.io/) & [nuclide](https://nuclide.io/)
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160623-3.png)'
  prefs: []
  type: TYPE_IMG
- en: 5.inspect
  prefs: []
  type: TYPE_NORMAL
- en: Open Atom [Command Palette package](https://atom.io/packages/command-palette)
    with `cmd-shift-p` and search "inspector", then click "Nuclide React Native Inspector:Show"
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160624-0.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](QQ20160623-4.png)'
  prefs: []
  type: TYPE_IMG
- en: 6.[Real device](https://facebook.github.io/react-native/docs/debugging.html#chrome-developer-tools)
  prefs: []
  type: TYPE_NORMAL
- en: 6.1 Deploy to real device `project_name/ios/project_name/AppDelegate.m`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 6.2 Debug in real device
  prefs: []
  type: TYPE_NORMAL
- en: 1.`project_name/ios/project_name/AppDelegate.m`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 2.`node_modules/react-native/Libraries/WebSocket/RCTWebSocketExecutor.m`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '3.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160826-0.png)'
  prefs: []
  type: TYPE_IMG
- en: 1.4 DOCs & APIs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.4 DOCs & APIs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[ReactJS](https://facebook.github.io/react/docs/getting-started.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[React Native](https://facebook.github.io/react-native/docs/getting-started.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Nuclide](https://nuclide.io/docs/quick-start/getting-started/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.5 Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.5 Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[React Native: Bringing modern web techniques to mobile](https://code.facebook.com/posts/1014532261909640/react-native-bringing-modern-web-techniques-to-mobile/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[React Native通信机制详解](http://blog.cnbang.net/tech/2698/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[React Native 调研报告](http://blog.csdn.net/lihuiqwertyuiop/article/details/45241909)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[React Native概述：背景、规划和风险](https://github.com/tmallfe/tmallfe.github.io/issues/18)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[JavaScriptCore](http://trac.webkit.org/wiki/JavaScriptCore)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[React Native iOS 真机调试](http://www.jianshu.com/p/cc64bcb58df2)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
