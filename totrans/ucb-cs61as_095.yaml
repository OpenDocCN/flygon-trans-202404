- en: Homework 8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Type the following command at the terminal to copy the template file to the
    current directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Or you can download it [here](http://inst.eecs.berkeley.edu/~cs61as/templates/hw8.scm).
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Complete the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[SICP 3.3, 3.4](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-20.html#%_thm_3.3)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SICP 3.7, 3.8](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-20.html#%_thm_3.7)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SICP 3.10](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-21.html#%25_thm_3.10)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SICP 3.11](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-21.html#%25_thm_3.11)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Note:** For exercises 3.3 and 3.4, you should create a function called `make-password-account`
    instead of `make-account`.'
  prefs: []
  type: TYPE_NORMAL
- en: Extra for Experts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Do this if you want to. This is NOT for credit.**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The purpose of the environment model is to represent the scope of variables;
    when you see an `x` in a program, which variable `x` does it mean? Another way
    to solve this problem would be to rename all the local variables so that there
    are never two variables with the same name. Write a procedure `unique-rename`
    that takes a `(quoted)` lambda expression as its argument, and returns an equivalent
    lambda expression with the variables renamed to be unique:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Note that the original expression had two variables named `x`, and in the returned
    expression it's clear from the names which is which. You'll need a modified counter
    object to generate the unique names.
  prefs: []
  type: TYPE_NORMAL
- en: You may assume that there are no `quote`, `let`, or `define` expressions, so
    that every symbol is a variable reference, and variables are created only by `lambda`.
  prefs: []
  type: TYPE_NORMAL
- en: Describe how you'd use `unique-rename` to allow the evaluation of Scheme programs
    with only a single `(global)` frame.
  prefs: []
  type: TYPE_NORMAL
- en: Submit Your Homework!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For instructions, see [this guide](../submit.html). It covers basic terminal
    commands and assignment submission.
  prefs: []
  type: TYPE_NORMAL
- en: If you have any trouble submitting, do not hesitate to ask a TA!
  prefs: []
  type: TYPE_NORMAL
