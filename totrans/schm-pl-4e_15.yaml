- en: Formal Syntax
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 形式语法
- en: The formal grammars and accompanying text appearing here describe the written
    syntax of Scheme data values, or *datums*. The grammars also effectively cover
    the written syntax of Scheme syntactic forms, since every Scheme syntactic form
    has a representation as a Scheme datum. In particular, parenthesized syntactic
    forms are written as lists, and identifiers (e.g., keywords and variables) are
    written as symbols. The high-level structure of each syntactic form is described
    in detail by the entries marked "syntax" in Chapters [4](binding.html#g88) through [11](exceptions.html#g147),
    and the syntactic forms are summarized in the Summary of Forms.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 此处显示的正式语法和相应的文本描述了 Scheme 数据值或 *数据* 的书面语法。这些语法也有效地涵盖了 Scheme 语法形式的书面语法，因为每个
    Scheme 语法形式都有一个作为 Scheme 数据的表示。特别地，括号括起来的语法形式被写为列表，并且标识符（例如关键字和变量）被写为符号。每个语法形式的高层结构在第[4](binding.html#g88)章到第[11](exceptions.html#g147)章中的
    "syntax" 条目中详细描述，并且这些语法形式在"形式概述"中进行了总结。
- en: The written representation of a datum involves tokens, whitespace, and comments.
    *Tokens* are sequences of one or more characters representing atomic datums or
    serving as punctuation marks. The tokens that represent atomic datums are symbols,
    numbers, strings, booleans, and characters, while the tokens serving as punctuation
    marks are open and close parentheses, open and close brackets, the open vector
    parenthesis `#(`, the open bytevector parenthesis `#vu8(`, the dotted pair marker
    `.` (dot), the quotation marks `'` and [PRE0] <datum> &#124; `,` <datum> &#124;
    `,@` <datum> |
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的书面表示涉及到标记、空白和注释。*标记* 是表示原子数据或用作标点符号的一个或多个字符序列。表示原子数据的标记包括符号、数字、字符串、布尔值和字符，而用作标点符号的标记包括开放和关闭括号、开放和关闭方括号、开放向量括号
    `#(`、开放字节向量括号 `#vu8(`、点对标记 `.`（点）、引号 `'` 以及 [PRE0] <datum> &#124; `,` <datum>
    &#124; `,@` <datum> |
- en: '|  | &#124; | `#''` <datum> &#124; `#`` <datum> &#124; `#,` <datum> &#124;
    `#,@` <datum> |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '|  | &#124; | `#''` <datum> &#124; `#`` <datum> &#124; `#,` <datum> &#124;
    `#,@` <datum> |'
- en: If no dotted-pair marker appears in a list enclosed in parentheses or brackets,
    it is a proper list, and the datums are the elements of the list, in the order
    given. If a dotted-pair marker appears, the initial elements of the list are those
    before the marker, and the datum that follows the marker is the tail of the list.
    The dotted-pair marker is typically used only when the datum that follows the
    marker is not itself a list. While any proper list may be written without a dotted-pair
    marker, a proper list can be written in dotted-pair notation by placing a list
    after the dotted-pair marker.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在括号或方括号括起来的列表中没有出现点对标记，则它是一个正确的列表，数据是列表中给定顺序的元素。如果出现点对标记，则列表的初始元素是标记之前的元素，跟在标记后面的数据是列表的尾部。点对标记通常仅在跟在标记后面的数据本身不是列表时使用。虽然任何正确的列表都可以在不带点对标记的情况下写成，但可以通过在点对标记后面放置一个列表来使用点对标记表示一个正确的列表。
- en: The abbreviations are equivalent to the corresponding two-element lists shown
    below. Once an abbreviation has been read, the result is indistinguishable from
    its nonabbreviated form.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这些缩写等效于下面显示的相应的两元素列表。一旦读取了一个缩写，结果与其非缩写形式不可区分。
- en: '`''<datum> ![<graphic>](gra_9.gif) (quote <datum>)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '`''<datum> ![<graphic>](gra_9.gif) (引语 <datum>)'
- en: '`<datum> ![<graphic>](gra_9.gif) (quasiquote <datum>)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`<datum> ![<graphic>](gra_9.gif) (准引语 <datum>)'
- en: ',<datum> ![<graphic>](gra_9.gif) (unquote <datum>)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ',<datum> ![<graphic>](gra_9.gif) (unquote <datum>)'
- en: ',@<datum> ![<graphic>](gra_9.gif) (unquote-splicing <datum>)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ',@<datum> ![<graphic>](gra_9.gif) (取消引语展开 <datum>)'
- en: '#''<datum> ![<graphic>](gra_9.gif) (syntax <datum>)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '#''<datum> ![<graphic>](gra_9.gif) (语法 <datum>)'
- en: '#`<datum> ![<graphic>](gra_9.gif) (quasisyntax <datum>)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '#`<datum> ![<graphic>](gra_9.gif) (准引语 <datum>)'
- en: '#,<datum> ![<graphic>](gra_9.gif) (unsyntax <datum>)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '#,<datum> ![<graphic>](gra_9.gif) (取消引语 <datum>)'
- en: '#,@<datum> ![<graphic>](gra_9.gif) (unsyntax-splicing <datum>)`'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '#,@<datum> ![<graphic>](gra_9.gif) (解语法展开 <datum>)`'
- en: '**Vectors.**  Vectors are compound datums formed from groups of tokens and
    possibly involving other datums, including other vectors. A vector is written
    as an open vector parenthesis followed by a sequence of datums and a close parenthesis.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**向量。**  向量是由标记组成的复合数据，可能涉及其他数据，包括其他向量。向量被写为一个开放向量括号，后跟一系列数据和一个闭合括号。'
- en: '| <vector> | ![<graphic>](gra_8.gif) | `#(`<datum>*`)` |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| <vector> | ![<graphic>](gra_8.gif) | `#(`<datum>*`)` |'
- en: '**Bytevectors.**  Bytevectors are compound datums formed from groups of tokens,
    but the syntax does not permit them to contain arbitrary nested datums. A bytevector
    is written as an open bytevector parenthesis followed by a sequence of octets
    (unsigned 8-bit exact integers) and a close parenthesis.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**字节向量。** 字节向量是由一组令牌组成的复合数据，但语法不允许它们包含任意嵌套的数据。字节向量由一个开放的字节向量括号，后跟一系列八位八进制数（无符号8位精确整数）和一个闭合括号来表示。'
- en: '| <bytevector> | ![<graphic>](gra_8.gif) | `#vu8(`<octet>*`)` |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| <字节向量> | ![<图形>](gra_8.gif) | `#vu8(`<八进制数>*`)` |'
- en: '| <octet> | ![<graphic>](gra_8.gif) | <any <number> representing an exact integer
    `*n*`, 0 ≤ *n* ≤ 255> |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| <八进制数> | ![<图形>](gra_8.gif) | <表示精确整数`*n*`的任意<数字>，0 ≤ *n* ≤ 255> |'
