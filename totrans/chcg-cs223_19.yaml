- en: Real-Time Queues
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实时队列
- en: '[`RealTimeQueue.elm`](https://www.classes.cs.uchicago.edu/archive/2015/winter/22300-1/public-code/Laziness/RealTimeQueue.elm)'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '[`RealTimeQueue.elm`](https://www.classes.cs.uchicago.edu/archive/2015/winter/22300-1/public-code/Laziness/RealTimeQueue.elm)'
- en: 'Combine `reverse` and `append` into an incremental function that performs one
    step of each at a time:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 将`reverse`和`append`组合成一个增量函数，每次执行一个步骤：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Starting with the `BankersQueue`, use an ordinary `List` to describe the `back`,
    and track a "schedule" `LazyList a` that is a suffix of `front` that needs to
    be forced. The implementation enforces the invariant that the size of `sched`
    is equal to the size of `front` minus the size of `back`. This invariant obviates
    the need to maintain `Int` size information explicitly.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 从`BankersQueue`开始，使用普通的`List`描述`back`，并跟踪一个“schedule”`LazyList a`，它是`front`的一个需要强制的后缀。该实现强制执行不变量，即`sched`的大小等于`front`的大小减去`back`的大小。该不变量消除了显式维护`Int`大小信息的需要。
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The basic operations:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 基本操作：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Because of the invariant, `sched` is empty when the lengths of `front` and `back`
    are the same. So when `enqueue`ing an element, the rotation from `back` to `front`
    is initiated when `sched` is empty.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 因为不变量的存在，当`front`和`back`的长度相同时，`sched`为空。所以在`enqueue`元素时，从`back`到`front`的旋转是在`sched`为空时启动的。
- en: '[PRE3]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Similarly, `dequeue` initiates the rotation when the `back` becomes longer than
    the `front`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，当`back`变得比`front`更长时，`dequeue`启动旋转。
- en: '[PRE4]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The common parts of these operations can be factored out into an `exec` function.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些操作的共同部分可以抽取到一个`exec`函数中。
- en: '[PRE5]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Reading
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 阅读
- en: Recommended
  id: totrans-15
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 推荐
- en: Okasaki, Chapter 7.1—7.2\. Although we will not cover this material carefully
    in class, you are encouraged to read through this material to understand the basic
    ideas.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Okasaki，第7.1—7.2章。虽然我们不会在课堂上仔细讨论这个材料，但鼓励你阅读这个材料以理解基本思想。
