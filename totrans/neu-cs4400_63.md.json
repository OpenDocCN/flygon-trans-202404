["```\n(define counter\u00a0 (let ([counter (box 0)])\u00a0 \u00a0 (lambda ()\u00a0 \u00a0 \u00a0 (set-box! counter (+ 1 (unbox counter)))\u00a0 \u00a0 \u00a0 (unbox counter))))\n```", "```\n(define (make-counter)\u00a0 (let ([counter (box 0)])\u00a0 \u00a0 (lambda ()\u00a0 \u00a0 \u00a0 (set-box! counter (+ 1 (unbox counter)))\u00a0 \u00a0 \u00a0 (unbox counter))))\n```", "```\n(define foo (make-counter))(define bar (make-counter))\n```", "```\n{with {make-counter\u00a0 \u00a0 \u00a0 \u00a0 {fun {}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {with {counter 0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {fun {}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {set! counter {+ counter 1}}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 counter}}}}\u00a0 {with {foo {call make-counter}}\u00a0 \u00a0 {with {bar {call make-counter}}\u00a0 \u00a0 \u00a0 ...}}}\n```", "```\n(define counter\u00a0 (let ([counter (box 0)])\u00a0 \u00a0 (lambda ()\u00a0 \u00a0 \u00a0 (set-box! counter (+ 1 (unbox counter)))\u00a0 \u00a0 \u00a0 (if (zero? (modulo (unbox counter) 4)) 'tock 'tick))))\n```"]