- en: '| [![Alex holding a Cool Water Kong.  Harvard Yard.](../Images/1caa8755a0ad56d2e0172aaa03902fba.jpg)](/http://philip.greenspun.com/images/pcd0866/alex-kong-2.tcl)
    |'
  prefs: []
  type: TYPE_TB
- en: Preface
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: to [SQL for Web Nerds](index.html) by [Philip Greenspun](http://philip.greenspun.com/)
    |
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[![Dublin, Ireland.](../Images/fefaa76c115bf696189c8a290638197d.jpg)](/http://philip.greenspun.com/images/pcd1120/dublin-beer-barrels-13.tcl)
    The last thing the world needs is another SQL tutorial. So here''s ours ...'
  prefs: []
  type: TYPE_NORMAL
- en: We could wallpaper all 500 rooms of the computer science building at MIT with
    different SQL tutorials from various publishers. Yet when it came time to sit
    down with our students and teach them this material, we couldn't bear to use any
    of the commercial texts.
  prefs: []
  type: TYPE_NORMAL
- en: The CS department at MIT doesn't offer a course in SQL (or in any other computer
    language *per se* for that matter). But lots of universities do and therefore
    you can choose from many textbooks designed to teach SQL to 20-year-old CS majors.
    Perfect, eh? Not for us. Part of the problem is that universities try to give
    students what they deem to be eternal knowledge. So rather than focus on the relational
    model and SQL, the overwhelmingly dominant system for the past 20 years, introductory
    database textbooks spend several chapters talking about database management systems
    that were used in the 1960s.
  prefs: []
  type: TYPE_NORMAL
- en: The second part of the problem with college-level texts is that these books
    are too dreary and long. In our class, the students face the tangible problem
    of building a sophisticated db-backed Web service in 12 weeks. This motivates
    them to learn whatever intricacies of SQL that they need. But what keeps a student
    going through 500 pages of SQL and RDBMS? We can't figure this out.
  prefs: []
  type: TYPE_NORMAL
- en: The third problem is that most of the college-level textbooks bring to mind
    the old question "What is the difference between a tenured professor of computer
    science and an ape?" (The ape doesn't think he can program.) Sure, the academic
    egghead author can learn the syntax of SQL but he or she won't have any personal
    experience with real-life interesting systems. That's because no real user of
    the RDBMS is stupid enough to hire a professor to write any SQL code.
  prefs: []
  type: TYPE_NORMAL
- en: 'In our computer-obsessed society, we need not be stuck with the dry theoretical
    offerings of computer scientists. Walk into any bookstore and you''ll find SQL
    tutorials. Sadly, due to structural problems in the trade computer book industry
    (see [http://philip.greenspun.com/wtr/dead-trees/story](/wtr/dead-trees/story.html)),
    most of these books are written by authors who picked up SQL as they were writing.
    There are some good ones, however, our favorite being [The Practical SQL Handbook](http://www.amazon.com/exec/obidos/ASIN/0201703092/pgreenspun-20)
    (Bowman, Emerson, Darnovsky; Addison-Wesley). We truly do like this book so we
    can feel free to pick on it:'
  prefs: []
  type: TYPE_NORMAL
- en: though it is 450 pages long, by straining to offer complete coverage of simple
    boring stuff the authors run out of space and energy to cover the interesting
    and sophisticated stuff
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: students have to learn SQL in the context of a data model; like its competitors
    The Practical SQL Handbook forces readers to live in the dessicated world of business
    data processing for several hundred pages. This is where the RDBMS started in
    the 1970s and if you want to get a job in a corporate IS department, this is not
    a bad place to live while learning SQL. However, we're trying to demonstrate how
    the concurrency control and transaction management capabilities of the RDBMS enable
    the construction of powerful reliable Web services. We can dazzle the students
    with much more interesting and relevant data models than Practical SQL's "bookbiz
    database about a fictitious publishing company".
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the authors write with the assumption that the reader is unaccustomed to thinking
    formally and using formal languages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the authors avoid the ugly fact that SQL is not a standard. Most SQL queries
    involve dates and times. Yet there are only two pages out of 450 involving the
    date data type. Why? The authors don't explain but perhaps it is because they
    didn't want to say "here's what ANSI SQL date-time arithmetic looks like and,
    by the way, Oracle has completely different syntax and semantics."
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the authors assume that the Web doesn't exist, i.e., that the physical book
    must be self-contained and comprehensive. Anyone actually using an RDBMS is going
    to have full documentation on the Web or at least (shudder) on CD-ROM. This book
    started on the Web and therefore we assume that we can cover the interesting and
    pedagogically valuable stuff then link students to the full documentation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bashing other authors and publishers is fun but isn't pedagogically effective.
    Thus it is probably worth stating what this SQL tutorial tries to do.
  prefs: []
  type: TYPE_NORMAL
- en: First and foremost, we keep our readers in the world of Web services. Most often
    they are working within the data model for online communities chronicled in [Philip
    and Alex's Guide to Web Publishing](/panda/). Sometimes we drag readers into the
    dreary world of commerce but at least it is the flashier-than-average corner of
    *ecommerce*.
  prefs: []
  type: TYPE_NORMAL
- en: Second, our examples are all drawn from real production Web sites that get close
    to 1 million requests per day. This should make the examples more interesting,
    particularly as the sites are mostly still up and running so the students will
    be able to visit pages and see the queries in action on up-to-the-minute data
    sets.
  prefs: []
  type: TYPE_NORMAL
- en: Third, we assume that our readers are bright and accustomed to formal languages.
    We don't assume any experience with declarative languages, database query languages,
    or any specific programming language. But once we can assume that the reader has
    written code, it is possible to use more sophisticated examples and get to the
    interesting stuff more quickly. So if this book ends up being a bad choice for
    the office manager who wants to start building marketing reports, we hope that
    we make up for it by making it a great choice for the MIT student or the working
    programmer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fourth, we assume that our readers will be using Oracle. This is a safe assumption
    for our class because we set up the computing facility and, in fact, Oracle8 is
    the only RDBMS running on it! It is also a safe assumption for much of the world:
    Oracle is the most popular RDBMS system available. We find it burdensome to maintain.
    We wish it were open-source. We wish it were free. Yet if we accept Oracle as
    part of the landscape, we don''t have to waste a lot of ink pretending that SQL
    is a standard.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next: [introduction/overview](introduction.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[philg@mit.edu](http://philip.greenspun.com/)[Add a comment](/comments/add?page_id=3457)'
  prefs: []
  type: TYPE_NORMAL
