["```\n(define-class (penguin name)\n    (class-vars (all-penguin nil)\n                (favorite-food 'tuna))\n    (instance-vars (hunger 50)\n                   (weight 350))\n    (method (eat)\n        (set! hunger (- hunger 1))\n        (set! weight (+ weight 5))\n        (se 'That favorite-food '(was delicious!))))\n\n> (define jack (instantiate penguin 'jack))\n\n> (ask jack 'eat)\n(that tuna was delicious!)\n\n> (ask jack 'hunger)\n49\n\n> (ask jack 'weight)\n355 \n```", "```\n(define-class (penguin name)\n    (class-vars (all-penguin nil)\n                (favorite-food tuna))\n    (instance-vars (hunger 50)\n                   (weight 350))\n    **(initialize (print (se '(hi my name is) name))\n                (set! all-penguin (cons name all-penguin)))**\n    (method (eat)\n        (set! hunger (- hunger 1))\n        (set! weight (+ weight 5))\n        (se 'That favorite-food '(was delicious!))))\n\n> (define jack (instantiate penguin 'jack))\n(hi my name is jack)\n\n> (define jennie (instantiate penguin 'jennie))\n(hi my name is jennie)\n\n> (ask penguin 'all-penguin)\n(jennie jack)\n\n> (ask jack 'all-penguin)\n(jennie jack)\n```", "```\n(define-class (penguin name)\n    (class-vars (all-penguin nil)\n                (favorite-food 'tuna))\n    (instance-vars (hunger 50)\n                   (weight 350))\n    (initialize (print (se '(hi my name is) name))\n                (set! all-penguin (cons name all-penguin)))\n    (method (eat)\n        (set! hunger (- hunger 1))\n        (set! weight (+ weight 5))\n        (se 'That favorite-food '(was delicious!)))) \n```", "```\n> (define jack (instantiate penguin 'jack))\n(hi my name is jack)\n\n> (ask jack 'favorite-food)\ntuna\n\n> (ask jack 'eat)\n(That tuna was delicious!)\n\n> (ask jack 'back-flip)\n*** Error: No method back-flip in class penguin \n```", "```\n(define-class (penguin name)\n    (class-vars (all-penguin nil)\n                (favorite-food 'tuna))\n    (instance-vars (hunger 50)\n                   (weight 350))\n    (initialize (print (se '(hi my name is) name))\n                (set! all-penguin (cons name all-penguin)))\n    (method (eat)\n        (set! hunger (- hunger 1))\n        (set! weight (+ weight 5))\n        (se 'That favorite-food '(was delicious!)))\n    **(default-method\n        (print (se '(I dont know how to) message '(I will eat instead)))\n        (ask self 'eat)))**\n```", "```\n> (define jack (instantiate penguin 'jack))\n(hi my name is jack)\n\n> (ask jack 'back-flip)\n(I dont know how to back-flip I will eat instead)\n(that tuna was delicious!)\n\n> (ask jack 'weight)\n355\n\n> (ask jack 'fly)\n(I don't know how to fly I will eat instead)\n(that tuna was delicious!)\n\n> (ask jack 'weight)\n360 \n```", "```\n(ask jack 'do-math 1 2 5 10) \n```"]