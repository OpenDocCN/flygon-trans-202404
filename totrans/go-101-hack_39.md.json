["```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n        var ch chan int\n\n        go func(c chan int) {\n                for v := range c {\n                        fmt.Println(v)\n                }\n        }(ch)\n\n        ch <- 1\n} \n```", "```\nfatal error: all goroutines are asleep - deadlock!\n\ngoroutine 1 [chan send (nil chan)]:\nmain.main()\n        /root/nil_channel.go:14 +0x64\n\ngoroutine 5 [chan receive (nil chan)]:\nmain.main.func1(0x0)\n        /root/nil_channel.go:9 +0x53\ncreated by main.main\n        /root/nil_channel.go:12 +0x37 \n```", "```\npackage main\n\nfunc main() {\n        var ch chan int\n        close(ch)\n} \n```", "```\npanic: close of nil channel\n\ngoroutine 1 [running]:\npanic(0x456500, 0xc82000a170)\n /usr/local/go/src/runtime/panic.go:481 +0x3e6\nmain.main()\n /root/nil_channel.go:5 +0x1e \n```", "```\npackage main\n\nfunc main() {\n        ch := make(chan int)\n        close(ch)\n        close(ch)\n} \n```", "```\npanic: close of closed channel\n\ngoroutine 1 [running]:\npanic(0x456500, 0xc82000a170)\n /usr/local/go/src/runtime/panic.go:481 +0x3e6\nmain.main()\n /root/nil_channel.go:6 +0x4d \n```", "```\npackage main\n\nfunc main() {\n        ch := make(chan int)\n        close(ch)\n        ch <- 1\n} \n```", "```\npanic: send on closed channel\n\ngoroutine 1 [running]:\npanic(0x456500, 0xc82000a170)\n /usr/local/go/src/runtime/panic.go:481 +0x3e6\nmain.main()\n /root/nil_channel.go:6 +0x6c \n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n        ch := make(chan int)\n        close(ch)\n        fmt.Println(<-ch)\n} \n```", "```\n0 \n```"]