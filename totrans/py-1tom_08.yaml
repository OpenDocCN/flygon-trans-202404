- en: 控制台程序
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制台程序
- en: '[http://blog.yhathq.com/posts/11-python-libraries-you-might-not-know.html](http://blog.yhathq.com/posts/11-python-libraries-you-might-not-know.html)'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://blog.yhathq.com/posts/11-python-libraries-you-might-not-know.html](http://blog.yhathq.com/posts/11-python-libraries-you-might-not-know.html)'
- en: sh
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: sh
- en: sh
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: sh
- en: '[sh](https://github.com/amoffat/sh) 库提供了 Shell 命令的封装， 如果你很熟悉 Shell 命令那么一定会喜欢上它。使用方法：'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[sh](https://github.com/amoffat/sh) 库提供了 Shell 命令的封装， 如果你很熟悉 Shell 命令那么一定会喜欢上它。使用方法：'
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: wget
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: wget
- en: wget
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: wget
- en: '[wget](http://bitbucket.org/techtonik/python-wget/) 是一个很强大的 Python 下载库， 使用方法如下：'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[wget](http://bitbucket.org/techtonik/python-wget/) 是一个很强大的 Python 下载库， 使用方法如下：'
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: progressbar
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: progressbar
- en: progressbar
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: progressbar
- en: '[progressbar](https://pypi.python.org/pypi/progressbar) 提供了一个控制台进度条工具，示例代码：'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[progressbar](https://pypi.python.org/pypi/progressbar) 提供了一个控制台进度条工具，示例代码：'
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: colorama
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: colorama
- en: colorama
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: colorama
- en: 提供彩色控制台输出：
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 提供彩色控制台输出：
- en: '![](43e7f1cd.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](43e7f1cd.png)'
- en: Gooey——把 CLI 程序变成 GUI
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gooey——把 CLI 程序变成 GUI
- en: Gooey——把 CLI 程序变成 GUI
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gooey——把 CLI 程序变成 GUI
- en: '[Gooey](https://github.com/chriskiehl/Gooey) 是一个 Python GUI 程序开发框架，基于 [wxPython](http://www.wxpython.org/)
    GUI 库，其使用方法类似于 Python 内置 CLI 开发库 argparse，因此很容易把一个基于 argparse 的 CLI 应用转换成 GUI
    程序。'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[Gooey](https://github.com/chriskiehl/Gooey) 是一个 Python GUI 程序开发框架，基于 [wxPython](http://www.wxpython.org/)
    GUI 库，其使用方法类似于 Python 内置 CLI 开发库 argparse，因此很容易把一个基于 argparse 的 CLI 应用转换成 GUI
    程序。'
- en: 简单的示例
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单的示例
- en: 我们首先从一个简单的基于 argparse 库的 CLI 应用开始：
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先从一个简单的基于 argparse 库的 CLI 应用开始：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 这就有了一个接受 `Filename` 和 `Date` 的两个必填参数的 CLI 程序，为了简化程序我们并没有指定它的功能。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这就有了一个接受 `Filename` 和 `Date` 的两个必填参数的 CLI 程序，为了简化程序我们并没有指定它的功能。
- en: 使用方法：`python cli.py FILENAME DATE`。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用方法：`python cli.py FILENAME DATE`。
- en: 现在我们把它改成
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们把它改成
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 于是我们得到了一个简单的 GUI 对话框，并且基本上没有修过多少代码：
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 于是我们得到了一个简单的 GUI 对话框，并且基本上没有修过多少代码：
- en: '![Gooey Widget](gui.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![Gooey Widget](gui.png)'
- en: 当然，仅仅这样是不够的，我们的 Filename 参数需要对应一个文件，而 Date 参数是一个日期，如果有专用的控件就好了！ Gooey 当然也想到了：
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，仅仅这样是不够的，我们的 Filename 参数需要对应一个文件，而 Date 参数是一个日期，如果有专用的控件就好了！ Gooey 当然也想到了：
- en: '![Gooey Widget](gui-widget.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![Gooey Widget](gui-widget.png)'
- en: 仅仅修改了 2 行代码：
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅修改了 2 行代码：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 控件
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控件
- en: 上面已经看到了两个简单的控件：`FileChooser` 和 `DateChooser`，分别提供了一个“文件选择器”和 “日期选择器”。现在支持的 chooser
    类控件有：
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 上面已经看到了两个简单的控件：`FileChooser` 和 `DateChooser`，分别提供了一个“文件选择器”和 “日期选择器”。现在支持的 chooser
    类控件有：
- en: '| 控件名 | 控件类型 |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 控件名 | 控件类型 |'
- en: '| --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| FileChooser | 文件选择器 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| FileChooser | 文件选择器 |'
- en: '| MultiFileChooser | 文件多选器 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| MultiFileChooser | 文件多选器 |'
- en: '| DirChooser | 目录选择器 |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| DirChooser | 目录选择器 |'
- en: '| MultiDirChooser | 目录多选器 |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| MultiDirChooser | 目录多选器 |'
- en: '| FileSaver | 文件保存 |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| FileSaver | 文件保存 |'
- en: '| DateChooser | 日期选择 |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| DateChooser | 日期选择 |'
- en: '| TextField | 文本输入框 |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| TextField | 文本输入框 |'
- en: '| Dropdown | 下拉列表 |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| Dropdown | 下拉列表 |'
- en: '| Counter | 计数器 |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| Counter | 计数器 |'
- en: '| CheckBox | 复选框 |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| CheckBox | 复选框 |'
- en: '| RadioGroup | 单选框 |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| RadioGroup | 单选框 |'
- en: 国际化
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 国际化
- en: Gooey 的国际化是通过配置实现的，使用方法如下：
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Gooey 的国际化是通过配置实现的，使用方法如下：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 目前仅支持 `russian`，`english`、`dutch`、`french`、`portuguese` 的支持已在计划中。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 目前仅支持 `russian`，`english`、`dutch`、`french`、`portuguese` 的支持已在计划中。
- en: 配置
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置
- en: 和 `language` 参数配置一样，Gooey 还支持很多其它配置，下面是它支持的参数列表：
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 和 `language` 参数配置一样，Gooey 还支持很多其它配置，下面是它支持的参数列表：
- en: '| 参数 | 简介 |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 简介 |'
- en: '| --- | --- |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| advanced | 切换显示全部设置还是仅仅是简化版本 |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| advanced | 切换显示全部设置还是仅仅是简化版本 |'
- en: '| show_config | Skips the configuration all together and runs the program immediately
    |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| show_config | Skips the configuration all together and runs the program immediately
    |'
- en: '| language | 指定从 `gooey/languages` 目录读取哪个语言包 |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| language | 指定从 `gooey/languages` 目录读取哪个语言包 |'
- en: '| program_name | GUI 窗口显示的程序名。默认会显 `sys.argv[0]`。 |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| program_name | GUI 窗口显��的程序名。默认会显 `sys.argv[0]`。 |'
- en: '| program_description | `Settings` 窗口顶栏显示的描述性文字。默认值从 `ArgumentParser` 中获取。
    |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| program_description | `Settings` 窗口顶栏显示的描述性文字。默认值从 `ArgumentParser` 中获取。
    |'
- en: '| default_size | 窗口默认大小。 |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| default_size | 窗口默认大小。 |'
- en: '| required_cols | 设置必选参数行数。 |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| required_cols | 设置必选参数行数。 |'
- en: '| optional_cols | 设置可选参数行数。 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| optional_cols | 设置可选参数行数。 |'
- en: '| dump_build_config | 将设置以 JSON 格式保存在硬盘中以供编辑/重用。 |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| dump_build_config | 将设置以 JSON 格式保存在硬盘中以供编辑/重用。 |'
- en: 布局流
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布局流
- en: 布局实例可以在下载这个 [exmaple 库](https://github.com/chriskiehl/GooeyExamples)体验。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 布局实例可以在下载这个 [exmaple 库](https://github.com/chriskiehl/GooeyExamples)体验。
- en: '| Flat Layout | Column Layout |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| Flat Layout | Column Layout |'
- en: '| --- | --- |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| ![](758b37d9.jpg) | ![](de607872.jpg) |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| ![](758b37d9.jpg) | ![](de607872.jpg) |'
