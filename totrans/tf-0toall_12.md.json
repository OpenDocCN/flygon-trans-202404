["```\n# Lab 4 Multi-variable linear regression\n# https://www.tensorflow.org/programmers_guide/reading_data\n\nimport tensorflow as tf\ntf.set_random_seed(777)  # for reproducibility\n\nfilename_queue = tf.train.string_input_producer(\n    ['data-01-test-score.csv'], shuffle=False, name='filename_queue')\n\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\n\n# Default values, in case of empty columns. Also specifies the type of the\n# decoded result.\nrecord_defaults = [[0.], [0.], [0.], [0.]]\nxy = tf.decode_csv(value, record_defaults=record_defaults)\n\n# collect batches of csv in\ntrain_x_batch, train_y_batch = \\\n    tf.train.batch([xy[0:-1], xy[-1:]], batch_size=10)\n\n# placeholders for a tensor that will be always fed.\nX = tf.placeholder(tf.float32, shape=[None, 3])\nY = tf.placeholder(tf.float32, shape=[None, 1])\n\nW = tf.Variable(tf.random_normal([3, 1]), name='weight')\nb = tf.Variable(tf.random_normal([1]), name='bias')\n\n# Hypothesis\nhypothesis = tf.matmul(X, W) + b\n\n# Simplified cost/loss function\ncost = tf.reduce_mean(tf.square(hypothesis - Y))\n\n# Minimize\noptimizer = tf.train.GradientDescentOptimizer(learning_rate=1e-5)\ntrain = optimizer.minimize(cost)\n\n# Launch the graph in a session.\nsess = tf.Session()\n# Initializes global variables in the graph.\nsess.run(tf.global_variables_initializer())\n\n# Start populating the filename queue.\ncoord = tf.train.Coordinator()\nthreads = tf.train.start_queue_runners(sess=sess, coord=coord)\n\nfor step in range(2001):\n    x_batch, y_batch = sess.run([train_x_batch, train_y_batch])\n    cost_val, hy_val, _ = sess.run(\n        [cost, hypothesis, train], feed_dict={X: x_batch, Y: y_batch})\n    if step % 10 == 0:\n        print(step, \"Cost: \", cost_val, \"\\nPrediction:\\n\", hy_val)\n\ncoord.request_stop()\ncoord.join(threads)\n\n# Ask my score\nprint(\"Your score will be \",\n      sess.run(hypothesis, feed_dict={X: [[100, 70, 101]]}))\n\nprint(\"Other scores will be \",\n      sess.run(hypothesis, feed_dict={X: [[60, 70, 110], [90, 100, 80]]}))\n\n'''\nYour score will be  [[ 177.78144836]]\nOther scores will be  [[ 141.10997009]\n [ 191.17378235]]\n\n''' \n```"]