["```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>\">br</data-lsp> />;// \u63cf\u753b\u7d50\u679c: <br/>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>\">br</data-lsp> />;// \u63cf\u753b\u7d50\u679c: <br/>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>\">br</data-lsp> /> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>\">br</data-lsp> /> </<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <div><br/><br/></div>`\n```", "```\ntsx`const <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp> = ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>\">br</data-lsp> /> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>\">br</data-lsp> /> </<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <div><br/><br/></div>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>I'm a text element.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1>I'm a text element.</h1>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>I'm a text element.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1>I'm a text element.</h1>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>> This is a <<data-lsp lsp=\"(property) JSX.IntrinsicElements.strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>\">strong</data-lsp>>pen</<data-lsp lsp=\"(property) JSX.IntrinsicElements.strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>\">strong</data-lsp>> . </<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <p>This is a<strong>pen</strong>.</p>`\n```", "```\ntsx`const <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp> = ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>> This is a <<data-lsp lsp=\"(property) JSX.IntrinsicElements.strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>\">strong</data-lsp>>pen</<data-lsp lsp=\"(property) JSX.IntrinsicElements.strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>\">strong</data-lsp>> . </<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <p>This is a<strong>pen</strong>.</p>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>> This is a{\" \"} <<data-lsp lsp=\"(property) JSX.IntrinsicElements.strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>\">strong</data-lsp>>pen</<data-lsp lsp=\"(property) JSX.IntrinsicElements.strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>\">strong</data-lsp>> . </<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <p>This is a<!-- --> <strong>pen</strong>.</p>`\n```", "```\ntsx`const <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp> = ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>> This is a{\" \"} <<data-lsp lsp=\"(property) JSX.IntrinsicElements.strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>\">strong</data-lsp>>pen</<data-lsp lsp=\"(property) JSX.IntrinsicElements.strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>\">strong</data-lsp>> . </<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <p>This is a<!-- --> <strong>pen</strong>.</p>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element1: React.JSX.Element\">element1</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.img: React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>\">img</data-lsp>  <data-lsp lsp=\"(property) React.ImgHTMLAttributes<HTMLImageElement>.src?: string | undefined\">src</data-lsp>=\"image.jpg\"  <data-lsp lsp=\"(property) React.ImgHTMLAttributes<HTMLImageElement>.alt?: string | undefined\">alt</data-lsp>=\"A beautiful scene\" />;const  <data-lsp lsp=\"const element2: React.JSX.Element\">element2</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.a: React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>\">a</data-lsp>  <data-lsp lsp=\"(property) React.AnchorHTMLAttributes<HTMLAnchorElement>.href?: string | undefined\">href</data-lsp>=\"http://example.com\">Visit our website</<data-lsp lsp=\"(property) JSX.IntrinsicElements.a: React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>\">a</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const element1: React.JSX.Element\">element1</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.img: React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>\">img</data-lsp> <data-lsp lsp=\"(property) React.ImgHTMLAttributes<HTMLImageElement>.src?: string | undefined\">src</data-lsp>=\"image.jpg\" <data-lsp lsp=\"(property) React.ImgHTMLAttributes<HTMLImageElement>.alt?: string | undefined\">alt</data-lsp>=\"A beautiful scene\" />;const  <data-lsp lsp=\"const element2: React.JSX.Element\">element2</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.a: React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>\">a</data-lsp> <data-lsp lsp=\"(property) React.AnchorHTMLAttributes<HTMLAnchorElement>.href?: string | undefined\">href</data-lsp>=\"http://example.com\">Visit our website</<data-lsp lsp=\"(property) JSX.IntrinsicElements.a: React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>\">a</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>  <data-lsp lsp=\"(property) React.HTMLAttributes<HTMLHeadingElement>.className?: string | undefined\">className</data-lsp>=\"greeting\">Hello, world!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1 class='greeting'>Hello, world!</h1>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp> <data-lsp lsp=\"(property) React.HTMLAttributes<HTMLHeadingElement>.className?: string | undefined\">className</data-lsp>=\"greeting\">Hello, world!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1 class='greeting'>Hello, world!</h1>`\n```", "```\nhtml`<div  style=\"background-color: yellow; color: blue;\">Hello!</div>`\n```", "```\nhtml`<div style=\"background-color: yellow; color: blue;\">Hello!</div>`\n```", "```\njsx`<div  style={{ backgroundColor:  \"yellow\", color:  \"blue\" }}>Hello!</div>;// \u63cf\u753b\u7d50\u679c: <div style='background-color:yellow;color:blue'>Hello!</div>`\n```", "```\njsx`<div style={{ backgroundColor:  \"yellow\", color:  \"blue\" }}>Hello!</div>;// \u63cf\u753b\u7d50\u679c: <div style='background-color:yellow;color:blue'>Hello!</div>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp>  <data-lsp lsp=\"(property) React.InputHTMLAttributes<HTMLInputElement>.disabled?: boolean | undefined\">disabled</data-lsp> />;// \u63cf\u753b\u7d50\u679c: <input disabled=''/>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp> <data-lsp lsp=\"(property) React.InputHTMLAttributes<HTMLInputElement>.disabled?: boolean | undefined\">disabled</data-lsp> />;// \u63cf\u753b\u7d50\u679c: <input disabled=''/>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp>  <data-lsp lsp=\"(property) React.InputHTMLAttributes<HTMLInputElement>.disabled?: boolean | undefined\">disabled</data-lsp>={true} />;// \u63cf\u753b\u7d50\u679c: <input disabled=''/>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp> <data-lsp lsp=\"(property) React.InputHTMLAttributes<HTMLInputElement>.disabled?: boolean | undefined\">disabled</data-lsp>={true} />;// \u63cf\u753b\u7d50\u679c: <input disabled=''/>`\n```", "```\ntsx`const  <data-lsp lsp=\"const name: &quot;Josh Perez&quot;\">name</data-lsp>  =  \"Josh Perez\";const  <data-lsp lsp=\"const greeting: React.JSX.Element\">greeting</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello, {<data-lsp lsp=\"const name: &quot;Josh Perez&quot;\">name</data-lsp>}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1>Hello, <!-- -->Josh Perez</h1>`\n```", "```\ntsx`const  <data-lsp lsp=\"const name: &quot;Josh Perez&quot;\">name</data-lsp>  =  \"Josh Perez\";const  <data-lsp lsp=\"const greeting: React.JSX.Element\">greeting</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello, {<data-lsp lsp=\"const name: &quot;Josh Perez&quot;\">name</data-lsp>}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1>Hello, <!-- -->Josh Perez</h1>`\n```", "```\ntsx`const  <data-lsp lsp=\"const a: 10\">a</data-lsp>  =  10;const  <data-lsp lsp=\"const b: 20\">b</data-lsp>  =  20;const  <data-lsp lsp=\"const sum: React.JSX.Element\">sum</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>{<data-lsp lsp=\"const a: 10\">a</data-lsp> + <data-lsp lsp=\"const b: 20\">b</data-lsp>}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1>30</h1>const  <data-lsp lsp=\"const name: &quot;Josh Perez&quot;\">name</data-lsp>  =  \"Josh Perez\";const  <data-lsp lsp=\"const greeting: React.JSX.Element\">greeting</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello, {<data-lsp lsp=\"const name: &quot;Josh Perez&quot;\">name</data-lsp>.<data-lsp lsp=\"(method) String.toUpperCase(): string\">toUpperCase</data-lsp>()}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1>Hello, <!-- -->JOSH PEREZ</h1>`\n```", "```\ntsx`const  <data-lsp lsp=\"const a: 10\">a</data-lsp>  =  10;const  <data-lsp lsp=\"const b: 20\">b</data-lsp>  =  20;const  <data-lsp lsp=\"const sum: React.JSX.Element\">sum</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>{<data-lsp lsp=\"const a: 10\">a</data-lsp> + <data-lsp lsp=\"const b: 20\">b</data-lsp>}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1>30</h1>const  <data-lsp lsp=\"const name: &quot;Josh Perez&quot;\">name</data-lsp>  =  \"Josh Perez\";const  <data-lsp lsp=\"const greeting: React.JSX.Element\">greeting</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello, {<data-lsp lsp=\"const name: &quot;Josh Perez&quot;\">name</data-lsp>.<data-lsp lsp=\"(method) String.toUpperCase(): string\">toUpperCase</data-lsp>()}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <h1>Hello, <!-- -->JOSH PEREZ</h1>`\n```", "```\ntsx`const  <data-lsp lsp=\"const isUser: true\">isUser</data-lsp>  =  true;const  <data-lsp lsp=\"const greeting: React.JSX.Element\">greeting</data-lsp>  = <data-lsp lsp=\"const isUser: true\">isUser</data-lsp> ? <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Welcome back!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> : <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Please sign up.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const isUser: true\">isUser</data-lsp>  =  true;const  <data-lsp lsp=\"const greeting: React.JSX.Element\">greeting</data-lsp>  = <data-lsp lsp=\"const isUser: true\">isUser</data-lsp> ? <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Welcome back!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> : <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Please sign up.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const message: false | React.JSX.Element\">message</data-lsp>  = <data-lsp lsp=\"const isLoggedIn: boolean\">isLoggedIn</data-lsp> && <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Welcome back!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const message: false | React.JSX.Element\">message</data-lsp>  = <data-lsp lsp=\"const isLoggedIn: boolean\">isLoggedIn</data-lsp> && <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Welcome back!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const message: true | React.JSX.Element\">message</data-lsp>  = <data-lsp lsp=\"const isLoggedIn: boolean\">isLoggedIn</data-lsp> || <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Please sign up.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const message: true | React.JSX.Element\">message</data-lsp>  = <data-lsp lsp=\"const isLoggedIn: boolean\">isLoggedIn</data-lsp> || <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Please sign up.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const message: string | React.JSX.Element\">message</data-lsp>  =  <data-lsp lsp=\"const input: {\n    name?: string | undefined;\n}\">input</data-lsp>.<data-lsp lsp=\"(property) name?: string | undefined\">name</data-lsp> ?? <<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>>No input provided.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const message: string | React.JSX.Element\">message</data-lsp>  =  <data-lsp lsp=\"const input: {\n    name?: string | undefined;\n}\">input</data-lsp>.<data-lsp lsp=\"(property) name?: string | undefined\">name</data-lsp> ?? <<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>>No input provided.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\">p</data-lsp>>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const numbers: number[]\">numbers</data-lsp>  = [1,  2,  3];const  <data-lsp lsp=\"const list: React.JSX.Element\">list</data-lsp>  = ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.ul: React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>\">ul</data-lsp>> {<data-lsp lsp=\"const numbers: number[]\">numbers</data-lsp>.<data-lsp lsp=\"(method) Array<number>.map<React.JSX.Element>(callbackfn: (value: number, index: number, array: number[]) => React.JSX.Element, thisArg?: any): React.JSX.Element[]\">map</data-lsp>((<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>) => ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>\">li</data-lsp>  <data-lsp lsp=\"(property) React.Attributes.key?: React.Key | null | undefined\">key</data-lsp>={<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>.<data-lsp lsp=\"(method) Number.toString(radix?: number | undefined): string\">toString</data-lsp>()}>{<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>\">li</data-lsp>> ))} </<data-lsp lsp=\"(property) JSX.IntrinsicElements.ul: React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>\">ul</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <ul><li>1</li><li>2</li><li>3</li></ul>`\n```", "```\ntsx`const  <data-lsp lsp=\"const numbers: number[]\">numbers</data-lsp>  = [1,  2,  3];const <data-lsp lsp=\"const list: React.JSX.Element\">list</data-lsp> = ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.ul: React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>\">ul</data-lsp>> {<data-lsp lsp=\"const numbers: number[]\">numbers</data-lsp>.<data-lsp lsp=\"(method) Array<number>.map<React.JSX.Element>(callbackfn: (value: number, index: number, array: number[]) => React.JSX.Element, thisArg?: any): React.JSX.Element[]\">map</data-lsp>((<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>) => ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>\">li</data-lsp> <data-lsp lsp=\"(property) React.Attributes.key?: React.Key | null | undefined\">key</data-lsp>={<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>.<data-lsp lsp=\"(method) Number.toString(radix?: number | undefined): string\">toString</data-lsp>()}>{<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>\">li</data-lsp>> ))} </<data-lsp lsp=\"(property) JSX.IntrinsicElements.ul: React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>\">ul</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <ul><li>1</li><li>2</li><li>3</li></ul>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.img: React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>\">img</data-lsp>  <data-lsp lsp=\"(property) React.ImgHTMLAttributes<HTMLImageElement>.src?: string | undefined\">src</data-lsp>=\"myImage.jpg\"  <data-lsp lsp=\"(property) React.ImgHTMLAttributes<HTMLImageElement>.alt?: string | undefined\">alt</data-lsp>=\"\" />;`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.img: React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>\">img</data-lsp> <data-lsp lsp=\"(property) React.ImgHTMLAttributes<HTMLImageElement>.src?: string | undefined\">src</data-lsp>=\"myImage.jpg\" <data-lsp lsp=\"(property) React.ImgHTMLAttributes<HTMLImageElement>.alt?: string | undefined\">alt</data-lsp>=\"\" />;`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = ( <<data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp>.<data-lsp lsp=\"const React.Fragment: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>\">Fragment</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h2</data-lsp>>Good to see you here.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h2</data-lsp>> </<data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp>.<data-lsp lsp=\"const React.Fragment: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>\">Fragment</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <h1>Hello!</h1><h2>Good to see you here.</h2>`\n```", "```\ntsx`const <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp> = ( <<data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp>.<data-lsp lsp=\"const React.Fragment: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>\">Fragment</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h2</data-lsp>>Good to see you here.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h2</data-lsp>> </<data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp>.<data-lsp lsp=\"const React.Fragment: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>\">Fragment</data-lsp>>);// \u63cf\u753b\u7d50\u679c: <h1>Hello!</h1><h2>Good to see you here.</h2>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = ( <> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h2</data-lsp>>Good to see you here.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h2</data-lsp>> </>);// \u63cf\u753b\u7d50\u679c: <h1>Hello!</h1><h2>Good to see you here.</h2>`\n```", "```\ntsx`const <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp> = ( <> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h2</data-lsp>>Good to see you here.</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h2</data-lsp>> </>);// \u63cf\u753b\u7d50\u679c: <h1>Hello!</h1><h2>Good to see you here.</h2>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>>{/* This is a comment */}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <div></div>`\n```", "```\ntsx`const  <data-lsp lsp=\"const element: React.JSX.Element\">element</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>>{/* This is a comment */}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>>;// \u63cf\u753b\u7d50\u679c: <div></div>`\n```", "```\ntsx`type  <data-lsp lsp=\"type ItemType<T> = {\n    prop: T;\n}\">ItemType</data-lsp><<data-lsp lsp=\"(type parameter) T in type ItemType<T>\">T</data-lsp>> = { <data-lsp lsp=\"(property) prop: T\">prop</data-lsp>:  <data-lsp lsp=\"(type parameter) T in type ItemType<T>\">T</data-lsp>;};const  <data-lsp lsp=\"const Item: <T>({ prop }: ItemType<T>) => React.JSX.Element\">Item</data-lsp>  = <<data-lsp lsp=\"(type parameter) T in <T>({ prop }: ItemType<T>): React.JSX.Element\">T</data-lsp>,>({ <data-lsp lsp=\"(parameter) prop: T\">prop</data-lsp> }:  <data-lsp lsp=\"type ItemType<T> = {\n    prop: T;\n}\">ItemType</data-lsp><<data-lsp lsp=\"(type parameter) T in <T>({ prop }: ItemType<T>): React.JSX.Element\">T</data-lsp>>) => <>{<data-lsp lsp=\"(parameter) prop: T\">prop</data-lsp>}</>;`\n```", "```\ntsx`type <data-lsp lsp=\"type ItemType<T> = {\n    prop: T;\n}\">ItemType</data-lsp><<data-lsp lsp=\"(type parameter) T in type ItemType<T>\">T</data-lsp>> = { <data-lsp lsp=\"(property) prop: T\">prop</data-lsp>: <data-lsp lsp=\"(type parameter) T in type ItemType<T>\">T</data-lsp>;};const <data-lsp lsp=\"const Item: <T>({ prop }: ItemType<T>) => React.JSX.Element\">Item</data-lsp> = <<data-lsp lsp=\"(type parameter) T in <T>({ prop }: ItemType<T>): React.JSX.Element\">T</data-lsp>,>({ <data-lsp lsp=\"(parameter) prop: T\">prop</data-lsp> }: <data-lsp lsp=\"type ItemType<T> = {\n    prop: T;\n}\">ItemType</data-lsp><<data-lsp lsp=\"(type parameter) T in <T>({ prop }: ItemType<T>): React.JSX.Element\">T</data-lsp>>) => <>{<data-lsp lsp=\"(parameter) prop: T\">prop</data-lsp>}</>;`\n```", "```\ntsx`const  <data-lsp lsp=\"const item1: React.JSX.Element\">item1</data-lsp>  = <<data-lsp lsp=\"const Item: <T>({ prop }: ItemType<T>) => React.JSX.Element\">Item</data-lsp><string> <data-lsp lsp=\"(property) prop: string\">prop</data-lsp>=\"a\" />; // OKconst  <data-lsp lsp=\"const item2: React.JSX.Element\">item2</data-lsp>  = <<data-lsp lsp=\"const Item: <T>({ prop }: ItemType<T>) => React.JSX.Element\">Item</data-lsp><number> <data-err><data-lsp lsp=\"(property) prop: number\">prop</data-lsp></data-err>=\"a\" />; // ErrorType 'string' is not assignable to type 'number'.2322Type 'string' is not assignable to type 'number'.`\n```", "```\ntsx`const  <data-lsp lsp=\"const item1: React.JSX.Element\">item1</data-lsp>  = <<data-lsp lsp=\"const Item: <T>({ prop }: ItemType<T>) => React.JSX.Element\">Item</data-lsp><string> <data-lsp lsp=\"(property) prop: string\">prop</data-lsp>=\"a\" />; // OKconst  <data-lsp lsp=\"const item2: React.JSX.Element\">item2</data-lsp>  = <<data-lsp lsp=\"const Item: <T>({ prop }: ItemType<T>) => React.JSX.Element\">Item</data-lsp><number> <data-err><data-lsp lsp=\"(property) prop: number\">prop</data-lsp></data-err>=\"a\" />; // ErrorType 'string' is not assignable to type 'number'.2322Type 'string' is not assignable to type 'number'.`\n```", "```\ntsx`// Goodconst  <data-lsp lsp=\"const MyComponent: () => React.JSX.Element\">MyComponent</data-lsp>  = () => {  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp> />;};// Badconst  <data-lsp lsp=\"const myComponent: () => React.JSX.Element\">myComponent</data-lsp>  = () => {  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp> />;};`\n```", "```\ntsx`// Goodconst <data-lsp lsp=\"const MyComponent: () => React.JSX.Element\">MyComponent</data-lsp> = () => {  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp> />;};// Badconst <data-lsp lsp=\"const myComponent: () => React.JSX.Element\">myComponent</data-lsp> = () => {  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp> />;};`\n```", "```\ntsx`// Goodconst  <data-lsp lsp=\"const Good: () => React.JSX.Element\">Good</data-lsp>  = () => {  return ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello, world!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> </<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>> );};// Badconst  <data-lsp lsp=\"const Bad: () => React.JSX.Element\">Bad</data-lsp>  = () => {  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello, world!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> </<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>>;};`\n```", "```\ntsx`// Goodconst <data-lsp lsp=\"const Good: () => React.JSX.Element\">Good</data-lsp> = () => {  return ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello, world!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> </<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>> );};// Badconst <data-lsp lsp=\"const Bad: () => React.JSX.Element\">Bad</data-lsp> = () => {  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>> <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello, world!</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>> </<data-lsp lsp=\"(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\">div</data-lsp>>;};`\n```", "```\ntsx`// \u9577\u3044\u30d0\u30fc\u30b8\u30e7\u30f3const  <data-lsp lsp=\"const a: React.JSX.Element\">a</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp>></<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp>>;// \u77ed\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u81ea\u5df1\u7d42\u4e86\u30bf\u30b0\uff09const  <data-lsp lsp=\"const b: React.JSX.Element\">b</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp> />;`\n```", "```\ntsx`// \u9577\u3044\u30d0\u30fc\u30b8\u30e7\u30f3const  <data-lsp lsp=\"const a: React.JSX.Element\">a</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp>></<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp>>;// \u77ed\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u81ea\u5df1\u7d42\u4e86\u30bf\u30b0\uff09const  <data-lsp lsp=\"const b: React.JSX.Element\">b</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp> />;`\n```", "```\ntsx`// \u9577\u3044\u30d0\u30fc\u30b8\u30e7\u30f3const  <data-lsp lsp=\"const a: React.JSX.Element\">a</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp>  <data-lsp lsp=\"(property) React.InputHTMLAttributes<HTMLInputElement>.required?: boolean | undefined\">required</data-lsp>={true} />;// \u77ed\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u771f\u507d\u5c5e\u6027\uff09const  <data-lsp lsp=\"const b: React.JSX.Element\">b</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp>  <data-lsp lsp=\"(property) React.InputHTMLAttributes<HTMLInputElement>.required?: boolean | undefined\">required</data-lsp> />;`\n```", "```\ntsx`// \u9577\u3044\u30d0\u30fc\u30b8\u30e7\u30f3const  <data-lsp lsp=\"const a: React.JSX.Element\">a</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp> <data-lsp lsp=\"(property) React.InputHTMLAttributes<HTMLInputElement>.required?: boolean | undefined\">required</data-lsp>={true} />;// \u77ed\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u771f\u507d\u5c5e\u6027\uff09const  <data-lsp lsp=\"const b: React.JSX.Element\">b</data-lsp>  = <<data-lsp lsp=\"(property) JSX.IntrinsicElements.input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\">input</data-lsp> <data-lsp lsp=\"(property) React.InputHTMLAttributes<HTMLInputElement>.required?: boolean | undefined\">required</data-lsp> />;`\n```", "```\ntsx`const  <data-lsp lsp=\"const listItems: React.JSX.Element[]\">listItems</data-lsp>  =  <data-lsp lsp=\"const numbers: number[]\">numbers</data-lsp>.<data-lsp lsp=\"(method) Array<number>.map<React.JSX.Element>(callbackfn: (value: number, index: number, array: number[]) => React.JSX.Element, thisArg?: any): React.JSX.Element[]\">map</data-lsp>((<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>) => ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>\">li</data-lsp>  <data-lsp lsp=\"(property) React.Attributes.key?: React.Key | null | undefined\">key</data-lsp>={<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>.<data-lsp lsp=\"(method) Number.toString(radix?: number | undefined): string\">toString</data-lsp>()}>{<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>\">li</data-lsp>>));`\n```", "```\ntsx`const  <data-lsp lsp=\"const listItems: React.JSX.Element[]\">listItems</data-lsp>  =  <data-lsp lsp=\"const numbers: number[]\">numbers</data-lsp>.<data-lsp lsp=\"(method) Array<number>.map<React.JSX.Element>(callbackfn: (value: number, index: number, array: number[]) => React.JSX.Element, thisArg?: any): React.JSX.Element[]\">map</data-lsp>((<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>) => ( <<data-lsp lsp=\"(property) JSX.IntrinsicElements.li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>\">li</data-lsp> <data-lsp lsp=\"(property) React.Attributes.key?: React.Key | null | undefined\">key</data-lsp>={<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>.<data-lsp lsp=\"(method) Number.toString(radix?: number | undefined): string\">toString</data-lsp>()}>{<data-lsp lsp=\"(parameter) number: number\">number</data-lsp>}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>\">li</data-lsp>>));`\n```", "```\n\u30b3\u30f3\u30d1\u30a4\u30eb\u524d\u306eTypeScripttsx`const  <data-lsp lsp=\"const HelloWorld: () => React.JSX.Element\">HelloWorld</data-lsp>  = () => <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello world</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;`\n```", "```\n\u30b3\u30f3\u30d1\u30a4\u30eb\u524d\u306eTypeScripttsx`const <data-lsp lsp=\"const HelloWorld: () => React.JSX.Element\">HelloWorld</data-lsp> = () => <<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>Hello world</<data-lsp lsp=\"(property) JSX.IntrinsicElements.h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\">h1</data-lsp>>;`\n```", "```\nreact\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const  HelloWorld  = () =>  React.createElement(\"h1\",  null,  \"Hello world\");`\n```", "```\nreact\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const HelloWorld = () =>  React.createElement(\"h1\",  null,  \"Hello world\");`\n```", "```\nreact-jsx\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const  HelloWorld  = () =>  _jsx(\"h1\", { children:  \"Hello world\" });`\n```", "```\nreact-jsx\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const HelloWorld = () => _jsx(\"h1\", { children:  \"Hello world\" });`\n```", "```\nreact-jsxdev\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const  HelloWorld  = () =>  _jsxDEV(\"h1\", { children:  \"Hello world\" },  void  0,  false, { fileName: _jsxFileName, lineNumber:  3, columnNumber:  25 },  this);`\n```", "```\nreact-jsxdev\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const HelloWorld = () => _jsxDEV(\"h1\", { children:  \"Hello world\" },  void  0,  false, { fileName: _jsxFileName, lineNumber:  3, columnNumber:  25 },  this);`\n```", "```\npreserve\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const  HelloWorld  = () => <h1>Hello world</h1>;`\n```", "```\npreserve\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const HelloWorld = () => <h1>Hello world</h1>;`\n```", "```\nreact-native\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const  HelloWorld  = () => <h1>Hello world</h1>;`\n```", "```\nreact-native\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c(JavaScript\u30b3\u30fc\u30c9)tsx`const HelloWorld = () => <h1>Hello world</h1>;`\n```"]