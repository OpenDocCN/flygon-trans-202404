- en: Installation and Setup
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和设置
- en: Installation and Setup
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和设置
- en: The content for this chapter is taken from the offical docs but I am trying
    to provide you with a little more information as to why and also its nice to have
    everything in one place. [Official docs](https://github.com/ReactiveX/rxjs)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章内容取自官方文档，但我试图为您提供更多信息，同时将所有内容放在一个地方也很好。[官方文档](https://github.com/ReactiveX/rxjs)
- en: TH Rxjs lib can be consumed in many different ways, namely `ES6`, `CommonJS`
    and as `ES5/CDN`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: TH Rxjs库可以以许多不同的方式使用，即`ES6`，`CommonJS`和`ES5/CDN`。
- en: ES6
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ES6
- en: Install
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Setup
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: GOTCHA
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'This statement `import Rx from ''rxjs/Rx''` utilizes the entire library. It
    is great for testing out various features but once hitting production this is
    *a bad idea* as Rxjs is quite a heave library. In a more realistic scenario you
    would want to use the alternate approach below that only imports the operators
    that you actually use :'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这个语句`import Rx from 'rxjs/Rx'`利用了整个库。这对于测试各种功能很好，但一旦进入生产阶段，这是*一个坏主意*，因为Rxjs是一个相当庞大的库。在更现实的情况下，您会希望使用下面的替代方法，只导入您实际使用的运算符：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: CommonJS
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CommonJS
- en: Same install as with ES6
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 与ES6相同的安装
- en: Install
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Setup
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: Setup is different though
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 设置虽然不同
- en: Below is yet again showcasing the greedy import that is great for testing but
    bad for production
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 下面再次展示了贪婪导入，这对于测试很好，但对于生产不好。
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And the better approach here being:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这里更好的方法是：
- en: '[PRE5]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see `require('rxjs/Observable')` just gives us the Rx object and
    we need to dig one level down to find the Observable.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的`require('rxjs/Observable')`只给我们提供了Rx对象，我们需要深入一级才能找到Observable。
- en: Notice also we just `require('path/to/operator')` to get the operator we want
    to import for our app.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们只需`require('path/to/operator')`即可获取我们想要在应用程序中导入的运算符。
- en: CDN or ES5
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CDN或ES5
- en: 'If I am on neither ES6 or CommonJS there is another approach namely:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我既不是ES6也不是CommonJS，还有另一种方法，即：
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Notice however this will give you the full lib. As you are requiring it externally
    it won't affect your bundle size though.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这将为您提供完整的库。由于您是外部引用它，因此不会影响捆绑大小。
