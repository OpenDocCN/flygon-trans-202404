["```\nts`const  <data-lsp lsp=\"const copied: {}\">copied</data-lsp>  = { ...<data-lsp lsp=\"const obj: object\">obj</data-lsp> };`\n```", "```\nts`const  <data-lsp lsp=\"const copied: {}\">copied</data-lsp>  = { ...<data-lsp lsp=\"const obj: object\">obj</data-lsp> };`\n```", "```\nts`const  <data-lsp lsp=\"const merged: {}\">merged</data-lsp>  = { ...<data-lsp lsp=\"const obj1: object\">obj1</data-lsp>,  ...<data-lsp lsp=\"const obj2: object\">obj2</data-lsp> };`\n```", "```\nts`const  <data-lsp lsp=\"const merged: {}\">merged</data-lsp>  = { ...<data-lsp lsp=\"const obj1: object\">obj1</data-lsp>,  ...<data-lsp lsp=\"const obj2: object\">obj2</data-lsp> };`\n```", "```\nts`const  <data-lsp lsp=\"const merged: {}\">merged</data-lsp>  = {  ...<data-lsp lsp=\"const obj1: object\">obj1</data-lsp>,  ...<data-lsp lsp=\"const obj2: object\">obj2</data-lsp>,  ...<data-lsp lsp=\"const obj3: object\">obj3</data-lsp>,  // ...};`\n```", "```\nts`const  <data-lsp lsp=\"const merged: {}\">merged</data-lsp>  = {  ...<data-lsp lsp=\"const obj1: object\">obj1</data-lsp>,  ...<data-lsp lsp=\"const obj2: object\">obj2</data-lsp>,  ...<data-lsp lsp=\"const obj3: object\">obj3</data-lsp>,  // ...};`\n```", "```\nts`const  <data-lsp lsp=\"const merged: object\">merged</data-lsp>  =  <data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.assign<object, object>(target: object, source: object): object (+3 overloads)\">assign</data-lsp>(<data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.assign<object, object>(target: object, source: object): object (+3 overloads)\">assign</data-lsp>(<data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.assign<{}, object>(target: {}, source: object): object (+3 overloads)\">assign</data-lsp>({}, <data-lsp lsp=\"const obj1: object\">obj1</data-lsp>), <data-lsp lsp=\"const obj2: object\">obj2</data-lsp>), <data-lsp lsp=\"const obj3: object\">obj3</data-lsp>);`\n```", "```\nts`const  <data-lsp lsp=\"const merged: object\">merged</data-lsp>  =  <data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.assign<object, object>(target: object, source: object): object (+3 overloads)\">assign</data-lsp>(<data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.assign<object, object>(target: object, source: object): object (+3 overloads)\">assign</data-lsp>(<data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.assign<{}, object>(target: {}, source: object): object (+3 overloads)\">assign</data-lsp>({}, <data-lsp lsp=\"const obj1: object\">obj1</data-lsp>), <data-lsp lsp=\"const obj2: object\">obj2</data-lsp>), <data-lsp lsp=\"const obj3: object\">obj3</data-lsp>);`\n```", "```\nts`const  <data-lsp lsp=\"const merged: object\">merged</data-lsp>  =  <data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.assign<{}, object, object, object>(target: {}, source1: object, source2: object, source3: object): object (+3 overloads)\">assign</data-lsp>({}, <data-lsp lsp=\"const obj1: object\">obj1</data-lsp>, <data-lsp lsp=\"const obj2: object\">obj2</data-lsp>, <data-lsp lsp=\"const obj3: object\">obj3</data-lsp>);`\n```", "```\nts`const  <data-lsp lsp=\"const merged: object\">merged</data-lsp>  =  <data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.assign<{}, object, object, object>(target: {}, source1: object, source2: object, source3: object): object (+3 overloads)\">assign</data-lsp>({}, <data-lsp lsp=\"const obj1: object\">obj1</data-lsp>, <data-lsp lsp=\"const obj2: object\">obj2</data-lsp>, <data-lsp lsp=\"const obj3: object\">obj3</data-lsp>);`\n```", "```\nts`const  <data-lsp lsp=\"const obj1: object\">obj1</data-lsp>:  object  = { <data-lsp lsp=\"(property) firstName: string\">firstName</data-lsp>:  \"Otto\", <data-lsp lsp=\"(property) middleName: string\">middleName</data-lsp>:  \"von\", <data-lsp lsp=\"(property) lastName: string\">lastName</data-lsp>:  \"Bismarck\",};const  <data-lsp lsp=\"const obj2: object\">obj2</data-lsp>:  object  = { <data-lsp lsp=\"(property) firstName: string\">firstName</data-lsp>:  \"Yuko\", <data-lsp lsp=\"(property) lastName: string\">lastName</data-lsp>:  \"Sato\",};const  <data-lsp lsp=\"const merged: object\">merged</data-lsp>:  object  = { ...<data-lsp lsp=\"const obj1: object\">obj1</data-lsp>,  ...<data-lsp lsp=\"const obj2: object\">obj2</data-lsp> };<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const merged: object\">merged</data-lsp>);{ firstName: \"Yuko\", middleName: \"von\" lastName: \"Sato\" }`\n```", "```\nts`const  <data-lsp lsp=\"const obj1: object\">obj1</data-lsp>:  object  = { <data-lsp lsp=\"(property) firstName: string\">firstName</data-lsp>:  \"Otto\", <data-lsp lsp=\"(property) middleName: string\">middleName</data-lsp>:  \"von\", <data-lsp lsp=\"(property) lastName: string\">lastName</data-lsp>:  \"Bismarck\",};const  <data-lsp lsp=\"const obj2: object\">obj2</data-lsp>:  object  = { <data-lsp lsp=\"(property) firstName: string\">firstName</data-lsp>:  \"Yuko\", <data-lsp lsp=\"(property) lastName: string\">lastName</data-lsp>:  \"Sato\",};const  <data-lsp lsp=\"const merged: object\">merged</data-lsp>:  object  = { ...<data-lsp lsp=\"const obj1: object\">obj1</data-lsp>,  ...<data-lsp lsp=\"const obj2: object\">obj2</data-lsp> };<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const merged: object\">merged</data-lsp>);{ firstName: \"Yuko\", middleName: \"von\" lastName: \"Sato\" }`\n```"]