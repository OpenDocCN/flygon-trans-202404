["```\npublic class Example {\n  private int value;\n\n  public int single(int x) {\n    int retVal = 0;\n\n    if (x == 10) {\n      retVal = -value;\n    } else if (x > 0) {\n      retVal = value + x;\n    }\n\n    return retVal;\n  }\n\n} \n```", "```\npublic class Example {\n  private int value;\n\n  public int multi(int x) {\n    if (x == 10) {\n      return -value;\n    }\n\n    if (x > 0) {\n      return value + x;\n    }\n\n    return 0;\n  }\n} \n```", "```\n public int oneAssignment(int x) {\n    final int retVal;\n\n    if (x == 10) {\n      retVal = -value;\n    } else if (x > 0) {\n      retVal = value + x;\n    } else {\n      retVal = 0;\n    }\n\n    return retVal;\n  } \n```", "```\n public int expression(int x) {\n    return  x ==  10 ? -value\n        : x > 0  ? value + x\n        : 0;\n  } \n```", "```\n public String buffer(String s, int i) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"Foo\");\n    sb.append(s);\n    sb.append(i);\n    return sb.toString();\n  }\n\n  public String concat(String s, int i) {\n    return \"Foo\" + s + i;\n  } \n```", "```\n NEW java/lang/StringBuilder\n    DUP\n    LDC \"Foo\"\n    INVOKESPECIAL java/lang/StringBuilder.<init> (Ljava/lang/String;)V\n    ALOAD 1\n    INVOKEVIRTUAL java/lang/StringBuilder.append /\n       (Ljava/lang/String;)Ljava/lang/StringBuilder;\n    ILOAD 2\n    INVOKEVIRTUAL java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;\n    INVOKEVIRTUAL java/lang/StringBuilder.toString ()Ljava/lang/String;\n    ARETURN \n```"]