["```\n(define (square x) (* x x)) ; takes a single step\n(square 4) ; would take 2 steps (one for the procedure call, and one for the multiplication)\n(square (+ 2 3)) ; 3 steps \n```", "```\n(define (expt b n)\n  (if (= n 0)\n      1\n      (* b (expt b (- n 1))))) \n```", "```\n(define (fast-expt b n)\n  (cond ((= n 0) 1)\n        ((even? n) (square (fast-expt b (/ n 2))))\n        (else (* b (fast-expt b (- n 1))))))\n\n(define (even? n)\n  (= (remainder n 2) 0)) \n```", "```\ndefine (bar n)\n  (if (zero? (remainder n 7))\n      'Bzzst\n      (bar (- n 1)) )) \n```", "```\n(define (sort s)\n  (if (empty? s)\n      '()\n      (insert (sort (bf s)) (first s)) ))\n\n(define (insert sorted-sofar n)\n  (if (empty? sorted-sofar)\n      (se n)\n      (if (< n (first sorted-sofar))\n          (se n sorted-sofar)\n          (se (first sorted-sofar) (insert (bf sorted-sofar) n)) ))) \n```"]