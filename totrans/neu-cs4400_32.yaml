- en: Implementation of Cache FunctionalityTuesday, January 31st
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现缓存功能星期二，一月三十一日
- en: 'First, we need a type for a substitution cache. For this we will use a list
    of lists of two elements each — a name and its value FLANG:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要一个替换缓存的类型。为此，我们将使用一个由两个元素组成的列表的列表 —— 一个名称和其值 FLANG：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We need to have an empty substitution cache, a way to extend it, and a way
    to look things up:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要有一个空的替换缓存，一个扩展它的方法，以及一个查找事物的方法：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Actually, the reason to use such list of lists is that Racket has a built-in
    function called `assq` that will do this kind of search (`assq` is a search in
    an association list using `eq?` for the key comparison). This is a version of
    `lookup` that uses `assq`:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，使用这样的列表列表的原因是 Racket 有一个内置函数叫做 `assq`，它将执行这种搜索（`assq` 是在关联列表中使用 `eq?` 进行键比较的搜索）。这是一个使用
    `assq` 的 `lookup` 版本：
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
