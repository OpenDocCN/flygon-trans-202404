["```\n> bash-2.03$ telnet www.yahoo.com 80\n> Trying 216.32.74.53...\n> Connected to www.yahoo.akadns.net.\n> Escape character is '^]'.\n> GET / HTTP/1.0\n> \n> HTTP/1.0 200 OK\n> Content-Length: 18385\n> Content-Type: text/html\n> \n> <html><head><title>Yahoo!</title><base href=http://www.yahoo.com/>...\n> \n> ```", "````\n> Set-Cookie: cart_contents=1588750019; path=/\n> \n> ````", "````\n> Cookie: cart_contents=1588750019\n> \n> ````", "```\n> bash-2.03$ telnet www.eveandersson.com 80\n> Trying 64.94.245.206...\n> Connected to www.eveandersson.com.\n> Escape character is '^]'.\n> GET / HTTP/1.0\n> \n> HTTP/1.0 200 OK\n> Set-Cookie: ad_browser_id=3291092; Path=/; Expires=Fri, 01-Jan-2010 01:00:00 GMT\n> Set-Cookie: ad_session_id=3291093%2c0%2c6634C478EF46FC%2c10622158; Path=/; Max-Age=86400\n> Set-Cookie: last_visit=1071622158; path=/; expires=Fri, 01-Jan-2010 01:00:00 GMT\n> Content-Type: text/html; charset=iso-8859-1\n> MIME-Version: 1.0\n> Date: Thu, 03 Feb 2005 00:49:18 GMT\n> Server: AOLserver/3.3.1+ad13\n> Content-Length: 8289\n> Connection: close\n> \n> <html>\n>   <head>\n> ...\n> \n> ```", "````\n> My Samoyed is really hairy.\n> ````", "````\n> My Samoyed is <I>really</I> hairy.\n> ````", "````\n> My Samoyed is <EM>really</EM> hairy.\n> ````", "````\n> My Samoyed is <B><I>really</I></B> hairy.\n> \n> ````", "```\n>  <html>\n>  <head>\n>   <title>Nikon D1 Digital Camera Review</title>\n>  </head>\n>  <body bgcolor=white text=black>\n>   <h2>Nikon D1</h2>\n>   by <a href=\"http://philip.greenspun.com/\">Philip Greenspun</a>\n>   <hr>\n>   Little black spots are appearing at the top of every ...\n>   <h3>Basics</h3>\n>   The Nikon D1 is a good digital camera for ... \n>   <p>\n>   The camera's 15.6x23.7mm CCD image sensor ...\n>   <h3>User Interface</h3>\n>   If you wanted a camera with lots of buttons, switches, and dials ...\n>   <hr>\n>   <address>\n>     <a href=\"mailto:philg@mit.edu\">philg@mit.edu</a>\n>   </address>\n>  </body>\n> </html> \n> ```", "````\n> create table my_courses (\n> \tcourse_number\tvarchar(20)\n> );\n> \n> ````", "````\n> insert into my_courses (course_number) values ('6.171');\n> \n> ````", "````\n> select * from my_courses;\n> \n> ````", "````\n> commit;\n> \n> ````", "````\n> select * from my_courses;\n> \n> ````", "````\n> drop table my_courses;\n> \n> ````", "````\n> <quotations>\n>   <onequote>\n>     <quotation_id>1</quotation_id>\n>     <insertion_date>2004-01-26</insertion_date>\n>     <author_name>Britney Spears</author_name>\n>     <category>Pop Musician Leisure Activities</category>\n>     <quote>I shop, go to movies, soak up the sun when possible and go out to eat.</quote>\n>   </onequote>\n>   <onequote>\n>   .. another row from the quotations table ...\n>   </onequote>\n>   ... some more rows\n> </quotations>\n> \n> ````", "````\n> <quotation_id>\n> <insertion_date>\n> <author_name>\n> <category>\n> <quote>\n> \n> ````", "````\n> <!ELEMENT quotations (onequote)+>\n> \n> ````", "````\n> <!ELEMENT onequote (quotation_id,insertion_date,author_name,category,quote)>\n> \n> ````", "````\n> <!ELEMENT quotation_id (#PCDATA)>\n> \n> ````", "````\n> <!-- quotations.dtd -->\n> <!ELEMENT quotations (onequote)+>\n> \n> <!ELEMENT onequote (quotation_id,insertion_date,author_name,category,quote)>\n> \n> <!ELEMENT quotation_id (#PCDATA)>\n> <!ELEMENT insertion_date (#PCDATA)>\n> <!ELEMENT author_name (#PCDATA)>\n> <!ELEMENT category (#PCDATA)>\n> <!ELEMENT quote (#PCDATA)>\n> \n> ````", "```\n    > create table my_stocks (\n    >        symbol\t       varchar(20) not null,\n    >        n_shares\t       integer not null,\n    >        date_acquired   date not null       \n    > );\n    > \n    > ```", "```\n    > create table newly_acquired_stocks (\n    >        symbol\t       varchar(20) not null,\n    >        n_shares\t       integer not null,\n    >        date_acquired   date not null       \n    > );\n    > \n    > ```", "````\n> To: Sam Student\n> From:  Community Nag Robot\n> Date:  Friday, 4:30 pm\n> Subject:  Your Lazy Bones\n> \n> Sam,\n> \n> I notice that you have four assignments due on Monday and that you\n> have not even looked at two of them.  I hope that you aren't planning\n> to go to a fraternity party tonight instead of studying.\n> \n> Very truly yours,\n> \n> Some SQL Code\n> \n> ````", "````\n> avg(similarity(:new_doc, all_docs_marked_as_liked_by_user(:user_id)))\n> -\n> avg(similarity(:new_doc, all_docs_marked_as_disliked_by_user(:user_id)))\n> \n> ````", "````\n> string cmd = \"Insert into quotations(author_name, category, quote) \n>               values ('\" + txtAuthor.Text.Replace(\"'\", \"''\") + \"', \n>                       '\" + ctg.Replace(\"'\", \"''\") + \"', \n>                       '\" + txtQuotation.Text.Replace(\"'\", \"''\") + \"')\";\n> \n> UpdateDB(cmd);  // ship that big string to SQL Server\n> \n> ````", "````\n> string EventQuery = \"select * \n>                      from events \n>                      where event_id = \" + EventIDfromBrowser;\n> \n> ````", "````\n> // associate the name \"event_query\" with a string of SQL\n> PrepareStatement(\"event_query\",\"select * from events where event_id = :event_id\");\n> \n> // associate the bind variable :event_id with the particular value for this page\n> BindVar(\"event_query\",\":event_id\",3722);\n> \n> // ask the RDBMS to execute the completed query\n> ExecuteStatement(\"event_query\");\n> \n> ... fetch results ...\n> \n> ````", "````\n> using System;\n> using System.Configuration;\n> using System.Data;\n> using System.Data.SqlClient;\n> \n> namespace ExecuteScalar\n> {\n>     /// /// An example of how to use named parameters in ADO.NET.\n>     /// \n>     class Class1\n>     {\n>         /// /// The main entry point for the application.\n>         /// \n>         [STAThread]\n>         static void Main(string[] args)\n>         {\n>             object objResult = null;\n>             string strResult = null;\n>             string strEmployeeID = \"PMA42628M\";\n> \n>             //Initialize the database connection, command and parameter objects.\n>             SqlConnection conn = new SqlConnection(\n>                 ConfigurationSettings.AppSettings[\"connStr\"]\n>                 );\n>             SqlCommand cmd = new SqlCommand(\n>                 \"select fname from employee where emp_id = @emp_id\"\n>                 );\n>             SqlParameter param = new SqlParameter(\"@emp_id\",strEmployeeID);\n> \n>             //Associate the connection with the command.\n>             cmd.Connection = conn;\n> \n>             //Bind the parameter value to the command.\n>             cmd.Parameters.Add(param);\n> \n>             //Connect to the database and run the command.\n>             try\n>             {\n>                 conn.Open();\n>                 objResult = cmd.ExecuteScalar();\n>             } \n>             catch (Exception e)\n>             {\n>                 Console.WriteLine(\"Database error: {0}\", e.ToString());\n>             }\n>             finally\n>             {\n>                 //Clean up.\n>                 if (!conn.State.Equals(ConnectionState.Closed))\n>                 {\n>                     conn.Close();\n>                 }\n>             }\n>                 \n> \n>             //Convert the query result to a string.\n>             if (objResult == null)\n>             {\n>                 strResult = \"[NULL]\";\n>             } \n>             else\n>             {\n>                 strResult = objResult.ToString();\n>             }\n> \n>             Console.WriteLine(\"Employee #{0}'s first name is: '{1}'\", strEmployeeID, strResult);\n>             Console.ReadLine();\n>         }\n>     }\n> }\n> \n> ````", "````\n> PreparedStatement updateSales = con.prepareStatement(\n> \t\"UPDATE COFFEES SET SALES = ? WHERE COF_NAME LIKE ? \");\n> updateSales.setInt(1, 75); \n> updateSales.setString(2, \"Colombian\"); \n> updateSales.executeUpdate():\n> \n> ````", "````\n> dbconn = OpenDBConn(\"sysid=local,username=joestest,password=joerocks\");\n> \n> ````", "````\n> create table users (\n> \tuser_id\t\t\tinteger primary key,\n> \tfirst_names\t\tvarchar(50),\n> \tlast_name\t\tvarchar(50) not null,\n> \temail\t\t\tvarchar(100) not null unique,\n> \t-- we encrypt passwords using operating system crypt function\n> \tpassword\t\tvarchar(30) not null,\n> \tregistration_date\ttimestamp(0)\n> );\n> \n> ````", "````\n> create table users (\n> \tuser_id\t\t\tinteger primary key,\n> \tfirst_names\t\tvarchar(50),\n> \tlast_name\t\tvarchar(50) not null,\n> \temail\t\t\tvarchar(100) not null unique,\n> \tpassword\t\tvarchar(30) not null,\n> \t-- user's personal homepage elsewhere on the Internet\n> \turl\t\t\tvarchar(200),\n> \tregistration_date\ttimestamp(0),\n> \t-- an optional photo; if Oracle Intermedia Image is installed\n> \t-- use the image datatype instead of BLOB\n> \tportrait\t\tblob\n> );\n> \n> ````", "````\n> create table users (\n> \tuser_id\t\t\tinteger primary key,\n> \tfirst_names\t\tvarchar(50),\n> \tlast_name\t\tvarchar(50) not null,\n> \temail\t\t\tvarchar(100) not null unique,\n> \tpassword\t\tvarchar(30) not null,\n> \t-- user's personal homepage elsewhere on the Internet\n> \turl\t\t\tvarchar(200),\n> \tregistration_date\ttimestamp(0)\n> \t-- an optional photo; if Oracle Intermedia Image is installed\n> \t-- use the image datatype instead of BLOB\n> \tportrait\t\tblob,\n> \t-- with a 4 GB maximum, we're all set for Life of Johnson\n> \tbiography\t\tclob,\n> \tbirthdate\t\tdate,\n> \t-- current politically correct column name would be \"gender\"\n> \t-- but data models often outlive linguistic fashion so\n> \t-- we stick with more established usage\n> \tsex\t\t\tchar(1) check (sex in ('m','f')),\n> \tcountry_code\t\tchar(2) references country_codes(iso),\n> \tpostal_code\t\tvarchar(80),\n> \thome_phone\t\tvarchar(100),\n> \twork_phone\t\tvarchar(100),\n> \tmobile_phone\t\tvarchar(100),\n> \tpager\t\t\tvarchar(100),\n> \tfax\t\t\tvarchar(100),\n> \taim_screen_name\t\tvarchar(50),\n> \ticq_number\t\tvarchar(50)\n> );\n> \n> ````", "````\n> create table labs (\n> \tlab_id\t\tinteger primary key,\n> \tpatient_id\tinteger not null references patients,\n> \ttest_date\ttimestamp(0),\n> \ttest_name\tvarchar(100) not null,\n> \ttest_units\tvarchar(100) not null,\n> \ttest_value\tnumber not null,\n> \tnote\t\tvarchar(4000)\n> );\n> \n> -- make it fast to query for \"all labs for patient #4527\"\n> -- or \"all labs for patient #4527, ordered by recency\"\n> create index labs_by_patient_and_date on labs(patient_id, test_date);\n> \n> -- make it fast to query for \"complete history for patient #4527 insulin levels\"\n> create index labs_by_patient_and_test on labs(patient_id, test_name);\n> \n> ````", "````\n> create table users (\n> \tuser_id\t\t\tinteger primary key,\n> \tfirst_names\t\tvarchar(50),\n> \tlast_name\t\tvarchar(50) not null,\n> \temail\t\t\tvarchar(100) not null unique,\n> \tpassword\t\tvarchar(30) not null,\n> \tregistration_date\ttimestamp(0)\n> );\n> \n> create table users_extra_info (\n> \tuser_info_id\t\tinteger primary key,\n> \tuser_id\t\t\tnot null references users,\n> \tfield_name\t\tvarchar(100) not null,\n> \tfield_type\t\tvarchar(100) not null,\n> \t-- one of the three columns below will be non-NULL\n> \tvarchar_value\tvarchar(4000),\n> \tblob_value\tblob,\n> \tdate_value\ttimestamp(0),\n> \tcheck ( not (varchar_value is null and \n>                      blob_value is null and\n> \t\t     date_value is null))\n> \t-- in a real system, you'd probably have additional columns\n> \t-- to store when each row was inserted and by whom\n> \n> );\n> \n> -- make it fast to get all extra fields for a particular user\n> create index users_extra_info_by_user on users_extra_info(user_id);\n> \n> ````", "````\n> select average(varchar_value) \n> from users_extra_info\n> where field_name = 'annual_income'\n> \n> ````", "````\n> create unique index users_extra_info_user_id_field_idx on users_extra_info (user_id, field_name);\n> \n> ````", "````\n> select table_name from user_tables;\n> \n> describe users\n>  *** SQL*Plus lists the column names ***\n> describe other_table_name\n>  *** SQL*Plus lists the column names ***\n> describe other_table_name_2\n>  *** SQL*Plus lists the column names ***\n> ...\n> \n> ````", "````\n> create table my_data (\n> \tkey_id\t\t\tinteger,\n> \tfield_name\t\tvarchar,\n> \tfield_type\t\tvarchar,\n> \tfield_value\t\tvarchar\n> );\n> \n> ````", "````\n> create table address_book (\n> \taddress_book_id\tinteger primary key,\n> \tuser_id\t\tnot null references users,\n> \tfirst_names\tvarchar(30),\n> \tlast_name\tvarchar(30),\n> \temail\t\tvarchar(100),\n> \temail2\t\tvarchar(100),\n> \tline1\t\tvarchar(100),\n> \tline2\t\tvarchar(100),\n> \tcity\t\tvarchar(100),\n> \tstate_province\tvarchar(20),\n> \tpostal_code\tvarchar(20),\n> \tcountry_code\tchar(2) references country_codes(iso),\n> \tphone_home\tvarchar(30),\n> \tphone_work\tvarchar(30),\n> \tphone_cell\tvarchar(30),\n> \tphone_other\tvarchar(30),\n> \tbirthdate\tdate,\n> \tdays_in_advance_to_remind\tinteger,\n> \tdate_last_reminded\t\tdate,\n> \tnotes\t\t\t\tvarchar(4000)\n> );\n> \n> ````", "````\n> create table users (\n> \tuser_id\t\t\tinteger primary key,\n>         ...\n> \t-- a space-separated list of group IDs\n> \tgroup_memberships\tvarchar(4000),\n> \t...\n> );\n> \n> ````", "````\n> create table user_group_map (\n> \tuser_id\t\tnot null references users;\n> \tuser_group_id\tnot null references user_groups;\n> \tunique(user_id, user_group_id)\n> );\n> \n> ````", "````\n> select user_groups.group_name\n> from users, user_groups, user_group_map\n> where users.first_names = 'Norman' and users.last_name = 'Horowitz'\n> and users.user_id = user_group_map.user_id\n> and user_groups.user_group_id = user_group_map.user_group_id;\n> \n> ````", "````\n> select count(*) \n> from user_group_map\n> where user_id = (select user_id \n>                  from users \n>                  where first_names = 'Norman' \n>                  and last_name = 'Horowitz')\n> and user_group_id = (select user_group_id \n>                      from user_groups\n>                      where group_name = 'Tanganyikans')\n> \n> ````", "````\n> create view tanganyikan_group_members \n> as\n> select * from users\n> where exists (select 1 \n>               from user_group_map, user_groups\n>               where user_group_map.user_id = users.user_id\n>               and user_group_map.user_group_id = user_groups.user_group_id\n>               and group_name = 'Tanganyikans');\n> \n> ````", "````\n> create view users_augmented\n> as\n> select \n>   users.*,\n>   (select count(*) \n>    from user_group_map ugm, user_groups ug\n>    where users.user_id = ugm.user_id\n>    and ugm.user_group_id = ug.user_group_id\n>    and ug.group_name = 'Tanganyikans') as tanganyikan_group_membership\n> from users\n> where exists (select 1 \n>               from user_group_map, user_groups\n>               where user_group_map.user_id = users.user_id\n>               and user_group_map.user_group_id = user_groups.user_group_id\n>               and group_name = 'Tanganyikans');\n> \n> ````", "````\n> decode(select count(*) ..., 1, 't', 0, 'f') as tanganyikan_group_membership_p\n> \n> ````", "```\n> \t\t\tNot a user\n> \t\t     \t     |\t\n> \t\t             V\n> \t           Need Email Verification          Rejected (via any\n> \t             Need Admin Approval             pre-authorization state)\n>    \t\t\t     |\t\t\t\t\n>    \t\t   \t     |  \t                \n> Need admin approval<--------- -------------=\"\">Need email verification \n>    |\t\t\t\t\t\t        |\n>    |                 \t\t \t\t\t|\n>    --------------------->Authorized<--------------------- |=\"\" banned------------=\"\"><-------- ------=\"\"><---------------deleted <=\"\" pre=\"\">\n> \n> ```", "```\n> Most of you may be wondering, why GET vs. POST in submitting forms? \n> Oftentimes, one will use POST just to keep pretty URLs (without \n> ?var=val&var=val). But that's the wrong way to think about it.\n> \n> A GET implies that you are getting information. You can resubmit a GET \n> any number of times: you are just querying information, not performing \n> any actions on the back-end.\n> \n> A POST implies that you are performing some action with side-effect:\n> inserting a row, updating a row, launching a missile, etc... That's\n> why when you try to reload a POST page, your browser warns you: are\n> you sure you want to launch another missile?\n> \n> In general, you should strive to respect the above principles. Here are \n> two key examples:\n>   - searching users or content. That should be a GET.\n>   - Inserting a user or updating a profile. That should be a POST.\n> \n> Of course, HTML and HTTP have some restrictions that complicate things:\n> \n>   a) GET forms are limited in length by how much your browser can send\n>      in a URL field. This can be a problem for very complicated search\n>      forms, though probably not an issue at this stage. If you do hit\n>      that limit though, then it's okay to use a POST.\n> \n>   b) POST forms can only be performed by having an HTML button, or by \n>      using JavaScript to submit a form. JavaScript is not ideal. Thus,\n>      sometimes you want to have a link that is effectively an action\n>      with side-effect (e.g. \"ban user\"), but you make it a GET.\n> \n> You can use redirects (HTTP return code 302) to make your life easier. \n> The nice thing about correct 302's is that the URL that issues a 302 is \n> never kept in a browser's history, so it is never queried twice unless \n> the user does something really conscious (like click back and actively \n> resubmit the form). Specifically:\n> \n>    1) when you POST data for an insert or update, have your script\n>       process the POST, then redirect to a thank-you page. That way,\n>       if the user clicks \"reload\", they are simply reloading the\n>       thank-you page, which is just a GET and won't cause side-effects\n>       or warnings. You can also redirect to something more meaningful,\n>       perhaps the list of recently registered users once you've edited\n>       one.\n> \n>    2) when you use a GET link to actually perform an action with\n>       side-effect, you can also have that target script perform its\n>       action then immediately redirect to a script with no side\n>       effects. This will prevent the accidental repetition of an\n>       action.\n> \n> Scripts that have side effects should not be reachable at URLs that\n> may enter the cache and be randomly re-requested by the browser. The\n> one exception is if the POST causes some kind of error: it's mostly\n> okay for the script that processes the POST to display the error\n> instead of redirecting to some kind of error-displaying page (which\n> would be clunky to build anyways).\n> \n> .NET folks: when you use ASP.NET and postback, you have no choice of\n> method: it's always POST. Remember to follow the above rule for POST:\n> you can have your handler method perform the side-effects but it\n> should then redirect somewhere else instead of returning content.\n> \n> I hope this helps in making your sites more usable. Let me know if\n> you have any questions.\n> \n> -Ben\n> \n> PS: None of the above solves the \"double-click\" problem which is what\n> happens if a user double-submits a form quickly (especially those\n> users who don't know the difference between single and double\n> clicking).  We'll talk about double-click protection later.\n> \n> ```", "````\n> create table articles (\n> \tarticle_id\t\tinteger primary key,\n> \t-- who contributed this and when\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tnot null date,\n> \t-- what language is this in?\n> \t-- visit http://www.w3.org/International/O-charset-lang\n> \t-- to see the allowable 2-character codes (en is English, ja is Japanese)\n> \tlanguage\t\tchar(2) references language_codes,\n> \t-- could be text/html or text/plain or some sort of XML document\n> \tmime_type\t\tvarchar(100) not null,\n> \t-- will hold the title in most cases\n> \tone_line_summary\tvarchar(200) not null,\n> \t-- the entire article; 4 GB limit\n> \tbody\t\t\tclob\n> );\n> \n> ````", "````\n> create table articles (\n> \tarticle_id\t\tinteger primary key,\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tnot null date,\n> \tlanguage\t\tchar(2) references language_codes,\n> \tmime_type\t\tvarchar(100) not null,\n> \tone_line_summary\tvarchar(200) not null,\n> \tbody\t\t\tclob,\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired'))\n> );\n> \n> ````", "````\n> create table articles_raw (\n> \tarticle_id\t\tinteger primary key,\n> \t...\n> \teditorial_status\tvarchar(30)\n>           check (editorial_status in ('submitted','rejected','approved','expired'))\n> );\n> \n> create view articles_approved \n> as\n> select * \n> from articles_raw\n> where editorial_status = 'approved';\n> \n> ````", "````\n> create table comments_on_articles_raw (\n> \tcomment_id\t\tinteger primary key,\n> \t-- on what article is this a comment?\n> \trefers_to\t\tnot null references articles,\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tnot null date,\n> \tlanguage\t\tchar(2) references language_codes,\n> \tmime_type\t\tvarchar(100) not null,\n> \tone_line_summary\tvarchar(200) not null,\n> \tbody\t\t\tclob,\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired'))\n> );\n> \n> create view comments_on_articles_approved \n> as\n> select * \n> from comments_on_articles_raw\n> where editorial_status = 'approved';\n> \n> ````", "````\n> create table content_raw (\n> \tcontent_id\t\tinteger primary key,\n> \t-- if not NULL, this row represents a comment\n> \trefers_to\t\treferences content_raw,\n> \t-- who contributed this and when\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tnot null date,\n> \t-- what language is this in?\n> \t-- visit http://www.w3.org/International/O-charset-lang\n> \t-- to see the allowable 2-character codes (en is English, ja is Japanese)\n> \tlanguage\t\tchar(2) references language_codes,\n> \t-- could be text/html or text/plain or some sort of XML document\n> \tmime_type\t\tvarchar(100) not null,\n> \tone_line_summary\tvarchar(200) not null,\n> \t-- the entire article; 4 GB limit\n> \tbody\t\t\tclob,\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired'))\n> );\n> \n> -- if we want to be able to write some scripts without having to think\n> -- about the fact that different content types are merged\n> \n> create view articles_approved \n> as\n> select * \n> from content_raw\n> where refers_to is null\n> and editorial_status = 'approved';\n> \n> create view comments_on_articles_approved \n> as\n> select * \n> from content_raw\n> where refers_to is not null\n> and editorial_status = 'approved';\n> \n> -- let's build a single full-text index on both articles and comments\n> -- using Oracle Intermedia Text (formerly known as \"Context\")\n> \n> create index content_ctx on content_raw (body)\n> indextype is ctxsys.context;\n> \n> ````", "````\n> create table content_raw (\n> \tcontent_id\t\tinteger primary key,\n> \trefers_to\t\treferences content_raw,\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tnot null date,\n> \trelease_time\t\tdate,\t-- NULL means \"immediate\"\n> \texpiration_time\t\tdate,\t-- NULL means \"never expires\"\n> \tlanguage\t\tchar(2) references language_codes,\n> \tmime_type\t\tvarchar(100) not null,\n> \tone_line_summary\tvarchar(200) not null,\n> \tbody\t\t\tclob,\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired'))\n> );\n> \n> ````", "````\n> create table content_raw (\n> \tcontent_id\t\tinteger primary key,\n> \tcontent_type\t\tvarchar(100) not null,\n> \trefers_to\t\treferences content,\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tnot null date,\n> \trelease_time\t\tdate,\n> \texpiration_time\t\tdate,\n> \tlanguage\t\tchar(2) references language_codes,\n> \tmime_type\t\tvarchar(100) not null,\n> \tone_line_summary\tvarchar(200) not null,\n> \tbody\t\t\tclob,\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired'))\n> );\n> \n> create view news_current_and_approved\n> as\n> select *\n> from content_raw \n> where content_type = 'news'\n> and (release_time is null or sysdate >= release_time)\n> and (expiration_time is null or sysdate  <= expiration_time)\n> and editorial_status = 'approved';\n> \n> ````", "````\n> and sysdate between release_time and expiration_time\n> \n> ````", "````\n> where sysdate >= release_time\n> \n> ````", "````\n> create table content_raw (\n> \tcontent_id\t\tinteger primary key,\n> \tcontent_type\t\tvarchar(100) not null,\n> \trefers_to\t\treferences content_raw,\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tnot null date,\n> \trelease_time\t\tdate,\n> \texpiration_time\t\tdate,\n> \t-- some of our content is geographically specific \n> \tzip_code\t\tvarchar(5),\n> \t-- a lot of our readers will appreciate Spanish versions\n> \tlanguage\t\tchar(2) references language_codes,\n> \tmime_type\t\tvarchar(100) not null,\n> \tone_line_summary\tvarchar(200) not null,\n> \t-- let's use BLOB in case this is a Microsoft Word doc or JPEG\n> \t-- a BLOB can also hold HTML or plain text\n> \tbody\t\t\tblob,\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired'))\n> );\n> \n> ````", "````\n> create table content_raw (\n> \t-- the combination of these two is the key\n> \tcontent_id\t\tinteger,\n> \tversion_number\t\tinteger,\n> \t...\n> \tprimary key (content_id, version_number)\n> \n> );\n> \n> ````", "````\n> -- note the use of MAX on VARCHAR column; this works just fine\n> \n> select content_id, max(zip_code)\n> from content_raw\n> where content_id = 5657\n> group by content_id\n> \n> ````", "````\n> -- stuff about an item that doesn't change from version to version\n> create table content_raw (\n> \tcontent_id\t\tinteger primary key,\n> \tcontent_type\t\tvarchar(100) not null,\n> \trefers_to\t\treferences content_raw,\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tnot null date,\n> \trelease_time\t\tdate,\n> \texpiration_time\t\tdate,\n> \tmime_type\t\tvarchar(100) not null,\n> \tzip_code\t\tvarchar(5)\n> );\n> \n> -- stuff about a version of an item\n> create table content_versions (\n> \tversion_id\t\tinteger primary key,\n> \tcontent_id\t\tnot null references content_raw,\n> \tversion_date\t\tdate not null,\n> \tlanguage\t\tchar(2) references language_codes,\n> \tone_line_summary\tvarchar(200) not null,\n> \tbody\t\t\tblob,\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired')),\n> \t-- audit the person who made the last change to editorial status\n> \teditor_id\t\treferences users,\n> \teditorial_status_date\tdate\n> );\n> \n> ````", "````\n> select * \n> from content_versions\n> where content_id = 5657\n> and editorial_status = 'approved'\n> and version_date = (select max(version_date)\n>                     from content_versions\n>                     where content_id = 5657\n>                     and editorial_status = 'approved')\n> \n> ````", "````\n> select * \n> from content_versions\n> where content_id = 5657\n> and editorial_status = 'approved'\n> and version_id = (select max(version_id)\n>                   from content_versions\n>                   where content_id = 5657\n>                   and editorial_status = 'approved')\n> \n> ````", "````\n> select * \n> from content_versions\n> where content_id = 5657\n> and editorial_status = 'approved'\n> and rownum = 1\n> order by version_date desc\n> \n> ````", "````\n> select *\n> from (select * \n>       from content_versions\n>       where content_id = 5657\n>       and editorial_status = 'approved'\n>       order by version_date desc)\n> where rownum = 1;\n> \n> ````", "````\n    > select * \n    > from content_versions\n    > where content_id = 5657\n    > and editorial_status = 'approved'\n    > order by version_date desc\n    > \n    > ````", "````\n> create table content_versions (\n> \tversion_id\t\tinteger primary key,\n> \tcontent_id\t\tnot null references content_raw,\n> \tversion_date\t\tdate not null,\n> \t...\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired')),\n> \n> \tcurrent_version_p\tchar(1) check(current_version_p in ('t','f')),\n> \t...\n> );\n> \n> ````", "````\n> create view live_versions \n> as\n> select * \n> from content_versions\n> where current_version_p = 't';\n> \n> ````", "````\n> create table content_versions (\n> \tversion_id\t\tinteger primary key,\n> \tcontent_id\t\tnot null references content_raw,\n> \tversion_date\t\tdate not null,\n> \t...\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired')),\n> \n> \tcurrent_version_p\tchar(1) check(current_version_p in ('t','f')),\n> \t...\n> )\n> partition by range \n>   (current_version_p)\n>   (partition old_crud values less than 's'\n>    tablespace slow_extra_disk_tablespace\n>    partition live_site values less than(maxvalue)\n>    tablespace fast_new_disk_tablespace)\n> ;\n> \n> ````", "````\n> -- use Oracle's unique key generator\n> create sequence config_param_seq start with 1;\n> \n> create table config_param_keys (\n> \tconfig_param_key_id\tinteger primary key,\n> \tkey_name\t\tvarchar(4000) not null,\n> \tparam_comment\t\tvarchar(4000)\n> );\n> \n> -- we store the values in a separate table because there might\n> -- be more than one for a given key\n> create table config_param_values (\n> \tconfig_param_key_id\tnot null references config_param_keys,\n> \tvalue_index\t\tinteger default 1 not null,\n> \tparam_value\t\tvarchar(4000) not null\n> );\n> \n> -- we use the Oracle operator \"nextval\" to get the next \n> -- value from the sequence generator\n> insert into config_param_keys \n> values\n> (config_param_seq.nextval, 'view_source_link_p', 'damn 6.171 instructor is making me do this');\n> \n> -- we use the Oracle operator \"currval\" to get the last\n> -- value from the sequence generator (so that rows inserted in this transaction\n> -- will all have the same ID)\n> insert into config_param_values\n> values\n> (config_param_seq.currval, 1, 't');\n> \n> commit;\n> \n> insert into config_param_keys \n> values\n> (config_param_seq.nextval, 'redirect', 'dropping the /wtr/ directory');\n> \n> insert into config_param_values\n> values\n> (config_param_seq.currval, 1, '/wtr/thebook/');\n> \n> insert into config_param_values\n> values\n> (config_param_seq.currval, 2, '/panda/');\n> \n> commit;\n> \n> ````", "````\n> select cpv.param_value\n> from config_param_keys cpk, config_param_values cpv\n> where cpk.config_param_key_id = cpv.config_param_key_id\n> and key_name = 'view_source_link_p'\n> \n> ````", "````\n> select cpk.config_param_key_id\n> from config_param_keys cpk, config_param_values cpv\n> where cpk.config_param_key_id = cpv.config_param_key_id\n> and key_name = 'redirect'\n> and value_index = 1\n> and param_value = :requested_url\n> \n> ````", "````\n> select cpv2.param_value\n> from \n>   config_param_keys cpk, \n>   config_param_values cpv1, \n>   config_param_values cpv2\n> where cpk.config_param_key_id = cpv1.config_param_key_id\n> and cpk.config_param_key_id = cpv2.config_param_key_id\n> and cpk.key_name = 'redirect'\n> and cpv1.value_index = 1\n> and cpv1.param_value = :requested_url\n> and cpv2.value_index = 2\n> \n> -- that was pretty ugly; maybe we can encapsulate it in a view\n> \n> create view redirects \n> as\n> select cpv1.param_value as from_url, cpv2.param_value as to_url\n> from \n>   config_param_keys cpk, \n>   config_param_values cpv1, \n>   config_param_values cpv2\n> where cpk.config_param_key_id = cpv1.config_param_key_id\n> and cpk.config_param_key_id = cpv2.config_param_key_id\n> and cpk.key_name = 'redirect'\n> and cpv1.value_index = 1\n> and cpv2.value_index = 2\n> \n> -- a couple of Oracle SQL*Plus formatting commands \n> column from_url format a25\n> column to_url format a30\n> \n> -- let's look at our virtual table now\n> select * from redirects;\n> \n> FROM_URL                  TO_URL\n> ------------------------- ------------------------------\n> /wtr/thebook/             /panda/\n> \n> ````", "````\n> <configuration>\n>  <appSettings>\n>   <add key=\"publisherEmail\"\n>    value=\"marketing@mycompany.com\" />\n>  </appSettings>\n> </configuration>\n> \n> ````", "````\n> <%\n> \n> Dim publisherEmail as String\n> publisherEmail = ConfigurationSettings.AppSettings( \"publisherEmail\" )\n> \n> %>\n> \n> <html>\n> <body>\n> \n> ...\n> \n> For further information please contact us at <%= publisherEmail %>\n> \n> ...\n> \n> </body>\n> </html>\n> \n> ````", "````\n> <Context path=\"/myapp\" docBase=\"myapp\" debug=\"0\"\n>          reloadable=\"true\" crossContext=\"true\">\n>   <Parameter name=\"companyName\" value=\"My Company, Inc.\"\n>              override=\"false\"/>\n> </Context>\n> \n> ````", "````\n> <context-param>\n>   <param-name>companyName</param-name>\n>   <param-value>My Company, Inc.</param-value>\n> </context-param>\n> \n> ````", "````\n> getServletContext().getInitParameter(\"companyName\");\n> \n> ````", "````\n> -- content_id is the primary key here; it is possible to have at most\n> -- one row in this table for a row in the content_raw table\n> \n> create table discussion_question_status (\n>        content_id   not null primary key references content_raw,\n>        status       varchar(10) check (status in ('open', 'closed')),\n>        -- if the question is closed the next column will contain\n>        -- the content_id of the posting that closed it\n>        closed_by    references content_raw\n> );\n> \n> -- make it fast to figure out whether a posting closed a question\n> create index discussion_question_status_by_closed_by on\n> discussion_question_status(closed_by);\n> \n> ````", "```\n> % telnet philip.greenspun.com 80\n> Trying 216.127.244.134...\n> Connected to philip.greenspun.com.\n> Escape character is '^]'.\n> GET /seia/mobile/ex1.html HTTP/1.0\n> \n> HTTP/1.0 200 OK\n> MIME-Version: 1.0\n> Content-Type: text/html\n> \n> <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n> <!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.0//EN\"\n>     \"http://www.wapforum.org/DTD/xhtml-mobile10.dtd\">\n> \n> <html  xml:lang=\"en\">\n> \n>   <head>\n>     <title>\n>      XHTML-MP Example\n>     </title>\n>   </head>\n> \n>   <body>\n>     <p>We're not in the 1970s anymore.</p>\n>   </body>\n> \n> </html>\n> \n> Connection closed by foreign host.\n> ```", "```\n% telnet www.google.com 80\nTrying 216.239.57.99...\nConnected to www.google.com.\nEscape character is '^]'.\nGET / HTTP/1.1\n\nHTTP/1.1 200 OK\nDate: Tue, 22 Apr 2003 01:20:53 GMT\nCache-control: private\nContent-Type: text/html\nServer: GWS/2.0\nContent-length: 2691\n\n<html><head>\n<meta http-equiv=\"content-type\" \n  content=\"text/html; charset=ISO-8859-1\">\n<title>Google</title><style>...</style>...\n</head><body>...</body></html>\n\nConnection closed by foreign host.\n\n```", "```\n% telnet www.google.com 80\nTrying 216.239.57.99...\nConnected to www.google.com.\nEscape character is '^]'.\nGET / HTTP/1.1\nUser-Agent: UPG1 UP/4.0 (compatible; Blazer 1.0)\n\nHTTP/1.1 302 Found\nDate: Tue, 22 Apr 2003 01:37:18 GMT\nLocation: http://www.google.com/palm\nContent-Type: text/html\nServer: GWS/2.0\nContent-length: 156\n\n<HTML><HEAD><TITLE>302 Moved</TITLE></HEAD>\n<BODY>\n<H1>302 Moved</H1>\nThe document has moved\n<A HREF=\"http://www.google.com/palm\">here</A>.\n</BODY></HTML>\n\nConnection closed by foreign host.\n\n```", "```\n> <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n> <!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.0//EN\"\n>     \"http://www.wapforum.org/DTD/xhtml-mobile10.dtd\">\n> \n> <html  xml:lang=\"en\">\n> \n>   <head>\n>     <title>\n>      Student Life\n>     </title>\n>   </head>\n>   <body>\n>     <ol>\n>       <li><a href=\"calendar\" accesskey=\"1\">Calendar</a></li>\n>       <li><a href=\"/academics/grades\" accesskey=\"2\">Grades</a></li>\n>       <li><a href=\"urgent-messages\" accesskey=\"3\">Urgent Messages</a></li>\n>       <li><a href=\"events/frat-parties\" accesskey=\"4\">Fraternity Parties</a></li>\n>       <li><a href=\"http://news.google.com/\" accesskey=\"5\">News</a></li>\n>     </ol>\n>   </body>\n> \n> </html>\n>   \n> ```", "```\n<?xml version=\"1.0\"?>\n<vxml version=\"2.0\">\n  <form>\n    <block>\n       <audio>Hello, World</audio>\n    </block>\n  </form>\n</vxml>\n\n```", "```\n<?xml version=\"1.0\"?>\n<vxml version=\"2.0\">\n  <form id=\"animal_questionnaire\">\n    <field name=\"favorite_animal\">\n      <prompt>\n        <audio>Which do you like better, dogs or cats?</audio>\n      </prompt>\n      <grammar>\n      <![CDATA[\n          [\n            [dog dogs] {<option \"dogs\">}\n            [cat cats] {<option \"cats\">}\n          ]\n        ]]>\n      </grammar>\n      <!-- if the user gave a valid response, the filled block\n           is executed. -->\n      <filled>\n        <if cond=\"favorite_animal == 'dogs'\">\n          <!-- this would take the user to a form called\n               popular_dog_facts within the same VoiceXML\n               document -->\n          <goto next=\"#popular_dog_facts\"/>\n        <else/>\n          <!-- this expression is an EMCAScript (JavaScript)\n               expression, composed of a concatenated string\n               and variable; this will take the user to the\n               URI psychological_evaluation.cgi?affliction=cats\n               -->\n          <goto expr=\"'psychological_evaluation.cgi?affliction='\n                + favorite_animal\"/>\n        </if>\n      </filled>\n      <!-- if the user responded but it didn't match the\n           grammar, the nomatch block is executed -->\n      <nomatch>\n        I'm sorry, I didn't understand what you said.\n        <reprompt/>\n      </nomatch>\n      <!-- if there is no response for a few seconds, the\n           noinput block is executed -->\n      <noinput>\n        I'm sorry, I didn't hear you.\n        <reprompt/>\n      </noinput>\n    </field>\n  </form>\n  <!-- additional forms can go here -->\n</vxml>\n\n```", "```\n<grammar xml:lang=\"en-US\"\ntype=\"application/srgs+xml\" version=\"1.0\">\n  <rule id=\"animal\" scope=\"public\">\n    <one-of>\n      <item>\n        <one-of tag=\"dogs\">\n          <item>dog</item>\n          <item>dogs</item>\n        </one-of>\n      </item>\n      <item>\n        <one-of tag=\"cats\">\n          <item>cat</item>\n          <item>cats</item>\n        </one-of>\n      </item>\n    </one-of>\n  </rule>\n</grammar> \n\n```", "```\n> [vancouver toronto halifax] {<option \"valid_city\">}\n> \n> ```", "````\n> create or replace function ec_tax\n>  (v_price IN number, v_shipping IN number, v_order_id IN integer) \n> return number\n> IS\n> \ttaxes\t\t\tec_sales_tax_by_state%ROWTYPE;\n> \ttax_exempt_p\t\tec_orders.tax_exempt_p%TYPE;\n> BEGIN\n> \tSELECT tax_exempt_p INTO tax_exempt_p\n> \tFROM ec_orders\n> \tWHERE order_id = v_order_id;\n> \n> \tIF tax_exempt_p = 't' THEN\n> \t\treturn 0;\n> \tEND IF;\t\n> \t\n> \tSELECT t.* into taxes\n> \tFROM ec_orders o, ec_addresses a, ec_sales_tax_by_state t\n> \tWHERE o.shipping_address=a.address_id\n> \tAND a.usps_abbrev=t.usps_abbrev(+)\n> \tAND o.order_id=v_order_id;\n> \n> \tIF nvl(taxes.shipping_p,'f') = 'f' THEN\n> \t\treturn nvl(taxes.tax_rate,0) * v_price;\n> \tELSE\n> \t\treturn nvl(taxes.tax_rate,0) * (v_price + v_shipping);\n> \tEND IF;\n> END;  \n> \n> ````", "````\n> <a href=\"aim:gochat?RoomName=photonet\">photo.net chatroom</a>\n> \n> ````", "````\n> select * \n> from content\n> where body like '%' || :user_query || '%'\n> \n> ````", "````\n> select * \n> from content\n> where body like '%running%'\n> \n> ````", "````\n> select * \n> from content\n> where upper(body) like upper('%running%')\n> \n> ````", "````\n> select * \n> from content\n> where upper(body) like upper('%running shoes%')\n> \n> ````", "````\n> select * \n> from content\n> where upper(body) like upper('%running%')\n> and upper(body) like upper('%shoes%')\n> \n> ````", "````\n> select * \n> from content\n> where body like '%running%'\n> \n> ````", "````\n> select * \n> from content\n> where body = 'running'\n> \n> ````", "````\n> select * \n> from content\n> where body like 'running%'\n> \n> ````", "````\n> create table content (\n> \tcontent_id\t\tinteger primary key,\n> \trefers_to\t\treferences content_raw,\n> \t-- who contributed this and when\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tnot null date,\n> \tmodified_date\t\tnot null date,\n> \tmime_type\t\tvarchar(100) not null,\n> \tone_line_summary\tvarchar(200) not null,\n> \tbody\t\t\tclob,\n> \teditorial_status\tvarchar(30) \n>           check (editorial_status in ('submitted','rejected','approved','expired'))\n> );\n> \n> -- create an Oracle Text index (the product used to be called\n> -- Oracle Context, hence the CTX prefixes on many procedures)\n> \n> create index content_text \n> on content(body) \n> indextype is ctxsys.context;\n> \n> -- let's look at opinions on running shoes from \n> -- users who registered in the last 30 days, sorting\n> -- results in order of decreasing relevance\n> \n> select \n>   score(1), \n>   content.content_id, \n>   content.one_line_summary, \n>   users.first_names,\n>   users.last_name\n> from content, users\n> where contains(body, 'running shoes', 1) > 0\n> and users.registration_date > current_timestamp - interval '30' day\n> and content.creation_us\n> er = users.user_id\n> order by score(1) desc;\n> \n> ````", "````\n> ctx_ddl.create_preference('content_multi','MULTI_COLUMN_DATASTORE');\n> \n> ctx_ddl.set_attribute('content_multi', 'COLUMNS', 'one_line_summary, body');\n> \n> create index content_text \n> on content(modified_date) \n> indextype is ctxsys.context\n> parameters('datastore content_multi');\n> \n> ````", "````\n> 66.249.71.53 - - [10/Feb/2005:02:13:15 -0500]\n> \"GET /sql/triggers.html HTTP/1.0\" 200 0 \"\"\n> \"Googlebot/2.1 (+http://www.google.com/bot.html)\"\n> \n> ````", "````\n> <meta name=\"keywords\" content=\"web development \n> online communities MIT 6.171 textbook\">\n> \n> <meta name=\"description\" content=\"This is the textbook for the MIT\n> course Software Enginering for Internet Applications\">\n> \n> ````", "````\n> User-agent: *\n> # let's keep the robots away from our half-baked stuff\n> Disallow: /staging\n> \n> ````", "``` POST /services/WhosOnline.asmx HTTP/1.1\n> Host: somehost\n> Content-Type: text/xml; charset=utf-8\n> Content-Length: length\n> SOAPAction: \"http://jpfo.org/WhosOnline\"\n> \n> <?xml version=\"1.0\" encoding=\"utf-8\"?>\n> <soap:Envelope\n>     \n>     \n>     >\n>   <soap:Body>\n>     <WhosOnline >\n>       <n_seconds>600</n_seconds>\n>     </WhosOnline>\n>   </soap:Body>\n> </soap:Envelope>\n> \n> ```", "``` HTTP/1.1 200 OK\n> Content-Type: text/xml; charset=utf-8\n> Content-Length: length\n> \n> <?xml version=\"1.0\" encoding=\"utf-8\"?>\n> <soap:Envelope\n>     \n>     \n>     >\n>   <soap:Body>\n>     <WhosOnlineResponse >\n>       <WhosOnlineResult>\n>         <user>\n>           <first_names>Eve</first_names>\n>           <last_name>Andersson</last_name>\n>           <email>eve@eveandersson.com</email>\n>         </user>\n>         <user>\n>           <first_names>Philip</first_names>\n>           <last_name>Greenspun</last_name>\n>           <email>philg@mit.edu</email>\n>         </user>\n>         <user>\n>           <first_names>Andrew</first_names>\n>           <last_name>Grumet</last_name>\n>           <email>aegrumet@alum.mit.edu</email>\n>         </user>\n>       </WhosOnlineResult>\n>     </WhosOnlineResponse>\n>   </soap:Body>\n> </soap:Envelope>\n> \n> ```", "````\n> <a href=\"http://www.amazon.com/exec/obidos/ASIN/0240804058/pgreenspun-20\"><cite>Basic\n> Photographic Materials and Processes</cite></a>\n> \n> ````", "``` <?xml version=\"1.0\"?>\n> <rss version=\"2.0\">\n>         <channel>\n>                 <title>{site name}</title>\n>                 <link>{site url}</link>\n>                 <description>{site description}</description>\n>                 <language>en-us</language>\n>                 <copyright>Copyright {dates}</copyright>\n>                 <lastBuildDate>{rfc822 date}</lastBuildDate>\n>                 <managingEditor>{your email addr}</managingEditor>\n>                 <pubDate>{rfc822 date}</pubDate>\n>                 <item>\n>                         <title>{item1 title}</title>\n>                         <description>{description for item1}</description>\n>                         <guid>{guid for item1}</guid>\n>                         <pubDate>{rfc822 date for when item1 went live}</pubDate>\n>                         </item>\n> \n>                 <item>\n>                         <title>{item2 title}</title>\n>                         <description>{description for item2}</description>\n>                         <guid>{guid for item2}</guid>\n>                         <pubDate>{rfc822 date for when item2 went live}</pubDate>\n>                         </item>\n>                 </channel>\n>         </rss>\n> \n> ```", "```\n>  -- note that this is designed for the Oracle 8i/9i RDBMS\n> \n> -- we'll have one row in this table for every object type \n> -- and thus for every new SQL table that gets defined; an \n> -- object type and its database table name are the same; \n> -- Oracle limits schema objects to 30 characters and thus\n> -- we limit a table_name to 21 characters so that we can \n> -- have some freedom to create schema objects whose names\n> -- are prefixed with an object type\n> \n> -- a \"pretty name\" is a synonym used when presenting pages\n> -- to users; the prettiness could be as simple as replacing\n> -- underscores with spaces or spelling out abbreviations;\n> -- e.g., for an object type of \"airplane_design\", the pretty\n> -- form might be \"airplane design\", and pretty_plural\n> -- \"airplane designs\"\n> \n> create table km_metadata_object_types (\n>         table_name              varchar(21) primary key,\n>         pretty_name             varchar(100) not null,\n>         pretty_plural           varchar(100)\n> );\n> \n> -- here is the table for elements that are unique to an object type\n> -- (the housekeeping elements can be defined implicitly in the source \n> -- code for the application generator); there will be one row in \n> -- the metadata table per element\n> \n> create table km_metadata_elements (\n>         metadata_id             integer primary key,\n>         table_name              not null references km_metadata_object_types,\n>         column_name             varchar(30) not null,\n>         pretty_name             varchar(100) not null,\n>         abstract_data_type      varchar(30) not null, \t-- ie. \"text\" or \"shorttext\" \"boolean\" \"user\" \n> \t-- this one is not null except when abstract_data_type is \"user\"\n>         oracle_data_type        varchar(30),   -- \"varchar(4000)\"\n>         -- e.g., \"not null\" or \"check foobar in ('christof', 'patrick')\"\n>         extra_sql               varchar(4000),\n>         -- values are 'text', 'textarea', 'select', 'radio', \n> \t-- 'selectmultiple', 'checkbox', 'checkboxmultiple', 'selectsql'\n>         presentation_type       varchar(100) not null,\n>         -- e.g., for textarea, this would be \"rows=6 cols=60\", for select, Tcl list,\n>         -- for selectsql, an SQL query that returns N district values\n>         -- for email addresses mailto:\n>         presentation_options    varchar(4000),\n>         -- pretty_name is going to be the short prompt, \n> \t-- e.g., for an update page, but we also need something\n> \t-- longer if we have to walk the user through a long form\n>         entry_explanation       varchar(4000),\n> \t-- if they click for yet more help \n>         help_text               varchar(4000),\n>         -- note that this does NOT translate into a \"not null\" constraint in Oracle\n>         -- if we did this, it would preclude an interface in which users create rows incrementally\n>         mandatory_p             char(1) check (mandatory_p in ('t','f')),\n>         -- ordering in Oracle table creation, 0 would be on top, 1 underneath, etc.\n>         sort_key                integer,\n>         -- ordering within a form, lower number = higher on page \n>         form_sort_key           integer,\n>         -- if there are N forms, starting with 0, to define this object, \n> \t-- on which does this go?  (relevant for very complex objects where\n> \t-- you need more than one page to submit)\n>         form_number             integer,\n>         -- for full text index\n>         include_in_ctx_index_p  char(1) check (include_in_ctx_index_p in ('t','f')),\n>         -- add forms should be prefilled with the default value\n>         default_value           varchar(200),\n> \tcheck ((abstract_data_type not in ('user') and oracle_data_type is not null)\n>                 or\n>               (abstract_data_type in ('user'))),\n>         unique(table_name,column_name)\n> ); \n> ```", "```\n>  create table km_object_object_map (\n>         object_id_a\t\tinteger not null,\n>         object_id_b\t\tinteger not null,\n> \t-- the objects are uniquely identified above but let's save ourselves\n> \t-- hassle by recording in which tables to find them\n> \ttable_name_a\t\tnot null references km_metadata_object_types,\n>         table_name_b\t\tnot null references km_metadata_object_types,\n>         -- User-entered reason for relating two objects, e.g.\n>         -- to distinguish between John McCarthy the developer of\n> \t-- Lisp and Gerry Sussman and Guy Steele, who added lexical scoping\n>         -- in the Scheme dialect \n> \tmap_comment\t\tvarchar(4000),\n> \tcreation_user\t\tnot null references users,\n> \tcreation_date\t\tdate default sysdate not null,\n>         primary key (object_id_a, object_id_b)\n> ); \n> ```", "```\n>  create sequence km_object_view_id;\n> \n> create table km_object_views (\n> \tobject_view_id\tinteger primary key,\n> \t-- which user\n> \tuser_id\t\tnot null references users,\n> \t-- two columns to specify which object \n> \tobject_id\tinteger not null,\n> \ttable_name\tvarchar(21) not null,\n> \tview_time\ttimestamp(0) not null,\n> \treuse_p\t\tchar(1) default 'f' check(reuse_p in ('t','f'))\t\t\n> ); \n> ```", "````\n> insert into km_object_views (object_view_id, user_id, object_id, table_name, view_time)\n> select km_object_view_id.nextval, 227, 891, 'algorithm', current_timestamp(0)\n> from dual\n> where 0 = (select count(*) \n>            from km_object_views\n>            where user_id = 227\n>            and object_id = 891\n>            and view_time > current_timestamp - interval '1' day);\n> \n> ````", "````\n> insert into km_object_views (user_id, object_id, table_name, view_time)\n> select 227, 891, 'algorithm', current_timestamp\n> where 0 = (select count(*) \n>            from km_object_views\n>            where user_id = 227\n>            and object_id = 891\n>            and datediff(hour, view_time, current_timestamp) < 24)\n> \n> ````", "```\n> 193.2.79.250 - - [06/Mar/2003:09:11:59 -0500] \"GET /dogs/george HTTP/1.1\" 200 0 \"http://www.photo.net/\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 193.2.79.250 - - [06/Mar/2003:09:11:59 -0500] \"GET /dogs/sky-and-philip.jpg HTTP/1.1\" 200 9596 \"http://philip.greenspun.com/dogs/george\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 193.2.79.250 - - [06/Mar/2003:09:11:59 -0500] \"GET /dogs/george-28.jpg HTTP/1.1\" 200 10154 \"http://philip.greenspun.com/dogs/george\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 193.2.79.250 - - [06/Mar/2003:09:11:59 -0500] \"GET /dogs/nika-36.jpg HTTP/1.1\" 200 8627 \"http://philip.greenspun.com/dogs/george\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 193.2.79.250 - - [06/Mar/2003:09:11:59 -0500] \"GET /dogs/george-nika-provoke.jpg HTTP/1.1\" 200 11949 \"http://philip.greenspun.com/dogs/george\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 152.31.2.221 - - [06/Mar/2003:09:11:59 -0500] \"GET /comments/attachment/36106/bmwz81.jpg HTTP/1.1\" 200 38751 \"http://philip.greenspun.com/materialism/cars/nsx.html\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\"\n> 193.2.79.250 - - [06/Mar/2003:09:12:00 -0500] \"GET /dogs/george-nika-grapple.jpg HTTP/1.1\" 200 7887 \"http://philip.greenspun.com/dogs/george\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 193.2.79.250 - - [06/Mar/2003:09:12:00 -0500] \"GET /dogs/george-nika-bite.jpg HTTP/1.1\" 200 10977 \"http://philip.greenspun.com/dogs/george\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 193.2.79.250 - - [06/Mar/2003:09:12:00 -0500] \"GET /dogs/george-29.jpg HTTP/1.1\" 200 10763 \"http://philip.greenspun.com/dogs/george\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 193.2.79.250 - - [06/Mar/2003:09:12:00 -0500] \"GET /dogs/philip-and-george-sm.jpg HTTP/1.1\" 200 9574 \"http://philip.greenspun.com/dogs/george\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 152.31.2.221 - - [06/Mar/2003:09:12:00 -0500] \"GET /comments/attachment/44949/FriendsProjectCar.jpg HTTP/1.1\" 200 36340 \"http://philip.greenspun.com/materialism/cars/nsx.html\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\"\n> 193.2.79.250 - - [06/Mar/2003:09:12:00 -0500] \"GET /comments/attachment/35069/muffin.jpg HTTP/1.1\" 200 15017 \"http://philip.greenspun.com/dogs/george\" \"Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)\"\n> 152.31.2.221 - - [06/Mar/2003:09:12:01 -0500] \"GET /comments/attachment/77819/z06.jpg HTTP/1.1\" 200 46996 \"http://philip.greenspun.com/materialism/cars/nsx.html\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\"\n> 151.199.192.112 - - [06/Mar/2003:09:12:01 -0500] \"GET /comments/attachment/137758/GT%20NSX%202.jpg HTTP/1.1\" 200 12656 \"http://philip.greenspun.com/materialism/cars/nsx\" \"Mozilla/4.0 (compatible; MSIE 5.0; Mac_PowerPC)\"\n> 152.31.2.221 - - [06/Mar/2003:09:12:02 -0500] \"GET /comments/attachment/171519/photo_002.jpg HTTP/1.1\" 200 45618 \"http://philip.greenspun.com/materialism/cars/nsx.html\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\"\n> 151.199.192.112 - - [06/Mar/2003:09:12:27 -0500] \"GET /comments/attachment/143336/Veil%20Side%20Skyline%20GTR2.jpg HTTP/1.1\" 200 40372 \"http://philip.greenspun.com/materialism/cars/nsx\" \"Mozilla/4.0 (compatible; MSIE 5.0; Mac_PowerPC)\"\n> 147.102.16.28 - - [06/Mar/2003:09:12:29 -0500] \"GET /photo/pcd1253/canal-street-43.1.jpg HTTP/1.1\" 302 336 \"http://philip.greenspun.com/wtr/application-servers.html\" \"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT)\"\n> 147.102.16.28 - - [06/Mar/2003:09:12:29 -0500] \"GET /photo/pcd2388/john-harvard-statue-7.1.jpg HTTP/1.1\" 302 342 \"http://philip.greenspun.com/wtr/application-servers.html\" \"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT)\"\n> 147.102.16.28 - - [06/Mar/2003:09:12:31 -0500] \"GET /wtr/application-servers.html HTTP/1.1\" 200 0 \"http://www.google.com/search?q=application+servers&ie=ISO-8859-7&hl=el&lr=\" \"Mozilla/4.0 (compatible; MSIE 5.01; Windows NT)\"\n> \n> ```", "```\n<p>\nDon't look at your instruments and adjust \nthe flight controls to, for example, \nkeep the altimeter steady.  The instruments \nhave a tendency to <b>lag behind reality</b> \nand therefore you're overcorrecting and\noscillating.\n</p>\n```", "````\n> <font face=arial>\n> ````", "````\n> <font face=\"arial narrow\">\n> ````", "```\nYou can fly all day <em>in mid-air</em> \nwithout using the airplane's rudder.\n```", "```\nOn short final, press relatively hard\non <strong>both</strong> rudder pedals.\n```", "```\nAlaska and Hawaii's airports are \nidentified starting with a\n<code>PA</code> for \"Pacific\".\n```", "```\n<h1>Flight Plan</h1>\n```", "```\n<h2>Flight Plan</h2>\n```", "```\n<h3>Flight Plan</h3>\n```", "```\n<h4>Flight Plan</h4>\n```", "```\n<h5>Flight Plan</h5>\n```", "```\n<h6>Flight Plan</h6>\n```", "```\nUse the flight controls \nto keep the nose of the airplane \nat <b>a constant attitude</b>\nrelative to the horizon.\n```", "```\nHave you read <i>Stick and\nRudder</i>?\n```", "```\nFlying in the clouds on a summer\nafternoon, you run the risk of\nentering an <u>embedded\nthunderstorm</u>.\n```", "```\nAvogadro's number is\napproximately equal to 6.022\nx 10<sup>23</sup>\n```", "```\nlog<sub>e</sub>x\n```", "```\nI want a <font size=+2>huge\n</font> house, a\n<font size=+1>big</font>\ndog, and a <font size=-1>\nsmall</font> waist.\n```", "```\nAn airplane's navigation lights\nare <font color=green>green</font>\non the right wing and \n<font color=\"#ff0000\">red</font>\non the left.\n```", "```\nThe <font face=\"arial narrow,\narial, helvetica\">NASA Aviation\nSafety Program</font> is the only\nsource of innovation.\n```", "```\nThe terminal forecast called \nfor winds <tt>02015G25KT</tt>,\nwhich means from the northeast at \n15 knots, gusting to 25 knots.\n```", "```\nWinds aloft for Buffalo, Boston, \nand Nantucket, at 3000, 6000, and\n9000':\n<pre>\n    3000    6000    9000\nBUF 0517 0215+01 3306-01\nBOS 2218 2325+08 2321+03\nACK 2118 2012+08 1917+03\n</pre>\n```", "```\n    3000    6000    9000\nBUF 0517 0215+01 3306-01\nBOS 2218 2325+08 2321+03\nACK 2118 2012+08 1917+03\n\n```", "```\nAviation safety quote:\n<blockquote>\nAll life is the management of\nrisk, not its elimination. \n<br>\n&mdash; Walter Wriston, \nformer Chairman of Citibank \n</blockquote>\n\n```", "````\n> <a href=\"http://aviationweather.gov/\">aviationweather.gov</a>\n> \n> ````", "````\n> <a href=\"glossary\">Glossary</a>\n> \n> ````", "````\n> <a href=\"glossary\" target=\"glossary_window\">Glossary</a>\n> \n> ````", "````\n> <a name=\"DNS\">DNS</a>\n> \n> ````", "````\n> see the <a href=\"glossary#DNS\">glossary entry for DNS</a>\n> \n> ````", "````\n> <a href=\"http://groups.google.com/groups?hl=fr&group=rec.aviation.student\">rec.aviation.student newsgroup</a>\n> \n> ````", "```\n<p>\n\"I'll be seeing you,\"\nhe said.\n</p>\n<p>\nThen he walked away.\n</p>\n```", "```\nCarson's Plumbing<br>\n123 Main St.<br>\nSeattle, WA 98101\n```", "```\nAnd they lived happily\never after.\n<hr>\nThe End\n```", "```\nAlaska summer survival gear:\n\n<ol>\n<li>rations for each occupant \n<li>one axe or hatchet\n<li>one first aid kit\n</ol>\n\nCommon training airplanes:\n\n<ol type=A>\n<li>Cessna 172\n<li>Diamond DA20\n<li>Piper Tomahawk\n</ol>\n\nClass B VFR Weather Minimums:\n<ol type=i>\n<li>3 statute miles visibility\n<li>clear of clouds\n</ol>\n```", "```\nChecklist for Mexican Flying:\n<ul>\n<li>proof of airplane ownership\n<li>proof of liability insurance\n<li>pilot's license and medical\n<li>seldom asked-for documents:\n  <ul>\n  <li>radio station license\n  <li>radio operator's license\n  </ul>\n<li>border-crossing flight plan\n</ul>\n```", "```\n<dl>\n<dt>IFR\n<dd>Instrument Flight Rules\n<dt>VFR\n<dd>Visual Flight Rules\n<dt>VOR\n<dd>Very High Frequency Omni Ranging\nradio navigation beacon\n</dl>\n```", "````\n> <img src=\"http://www.eveandersson.com/alex.jpg\">\n> \n> ````", "```\n<img width=100 height=100\nsrc=\"http://www.eveandersson.com/alex.jpg\">\n```", "```\n<img width=100 height=100 border=2\nsrc=\"http://www.eveandersson.com/alex.jpg\">\n```", "```\n<img align=right\nwidth=100 height=100\nsrc=\"http://www.eveandersson.com/alex.jpg\">\nCanine-American\n```", "```\n<img align=left\nwidth=100 height=100\nsrc=\"http://www.eveandersson.com/alex.jpg\">\nCanine-American\n```", "```\n<img hspace=10\nalign=left width=100 height=100\nsrc=\"http://www.eveandersson.com/alex.jpg\">\nCanine-American\n```", "```\n<img vspace=10\nwidth=100 height=100\nsrc=\"http://www.eveandersson.com/alex.jpg\">\n```", "```\n<table border=2\n  cellspacing=5\n  cellpadding=5>\n<tr>\n <th>Year</th>\n <th>Revenue</th>\n <th>Expenditures</th>\n <th>Profits</th>\n</tr>\n<tr>\n <td>1999</td>\n <td>$58,295</td>\n <td>$73,688</td>\n <td>$(15,393)</td>\n</tr>\n<tr>\n <td>2000</td>\n <td>$902,995</td>\n <td>$145,400</td>\n <td>$757,595</td>\n</tr>\n</table>\n```", "```\n<!-- reduce the\ncellspacing and\nright-align the\ntext in the cells -->\n\n<table border=2\n  cellspacing=2\n  cellpadding=5>\n<tr>\n <th>Year</th>\n <th>Revenue</th>\n <th>Expenditures</th>\n <th>Profits</th>\n</tr>\n<tr>\n <td>1999</td>\n <td align=right>\n   $58,295</td>\n <td align=right>\n   $73,688</td>\n <td align=right>\n   $(15,393)</td>\n</tr>\n<tr>\n <td>2000</td>\n <td align=right>\n   $902,995</td>\n <td align=right>\n   $145,400</td>\n <td align=right>\n   $757,595</td>\n</tr>\n</table>\n```", "```\n<!-- remove the\nborder -->\n\n<table border=0\n   cellspacing=2\n   cellpadding=5>\n<tr>\n <th>Year</th>\n <th>Revenue</th>\n <th>Expenditures</th>\n <th>Profits</th>\n</tr>\n<tr>\n <td>1999</td>\n <td>$58,295</td>\n <td>$73,688</td>\n <td>$(15,393)</td>\n</tr>\n<tr>\n <td>2000</td>\n <td>$902,995</td>\n <td>$145,400</td>\n <td>$757,595</td>\n</tr>\n</table>\n```", "```\n<!-- shade every\nother row -->\n\n<table border=0\n  cellspacing=2\n  cellpadding=5>\n<tr bgcolor=\"#cecece\">\n <th>Year</th>\n <th>Revenue</th>\n <th>Expenditures</th>\n <th>Profits</th>\n</tr>\n<tr bgcolor=white>\n <td>1999</td>\n <td>$58,295</td>\n <td>$73,688</td>\n <td>$(15,393)</td>\n</tr>\n<tr bgcolor=\"#cecece\">\n <td>2000</td>\n <td>$902,995</td>\n <td>$145,400</td>\n <td>$757,595</td>\n</tr>\n</table>\n```", "````\n> <form method=POST action=/register/new>\n> \n> ````", "```\n<form method=POST action=/survey/demographic>\n<input type=hidden name=user_id value=2205>\nAge: <input type=text size=2><br>\nSex: <input type=radio name=sex value=m>male\n     <input type=radio name=sex value=f>female<br>\nWhat are you interested in (check all that apply)?\n<input type=checkbox name=interest value=\"aerobatics\">Aerobatics\n<input type=checkbox name=interest value=\"helicopters\">Helicopters\n<input type=checkbox name=interest value=\"IFR\">IFR\n<input type=checkbox name=interest value=\"seaplanes\">Seaplanes\n<br>\nWhere do you live?\n         <select name=continent_live>\n         <option value=north_america>North America\n         <option value=south_america>South America\n         <option value=africa>Africa\n         <option value=europe>Europe\n         <option value=asia>Asia\n         <option value=australia>Australia\t\n         </select>\n         <br>\nWhich continents have you visited?<br>\n         <select multiple size=3 name=continent_visited>\n         <option value=north_america>North America\n         <option value=south_america>South America\n         <option value=africa>Africa\n         <option value=europe>Europe\n         <option value=asia>Asia\n         <option value=australia>Australia\t\n         </select>\n         <br>\nDescribe your favorite airplane trip:<br>\n<textarea name=favorite_trip_story rows=5 cols=50></textarea>\n<p>\n<input type=submit value=\"Continue\">\n</form>\n```"]