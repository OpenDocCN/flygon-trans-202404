["```\n(* Returns: max x y is the maximum of x and y.  That is,\n * ((max x y = x) or (max x y = y)) and (max x y >= x) and (max x y >= y)\n *\n * Requires: Both x and y are between min_int/2 and max_int/2\n *)\nlet max x y = (x + y + abs(y-x))/2\n\n(* Returns: abs x  is x if x >= 0, -x otherwise. *)\nval abs : int -> int\n\n```", "```\n   (* (+) x y is x + y.\n      Requires: min_int \u2264 x + y \u2264 max_int *)\n   (* (\u2212) x y is x \u2212 y.\n      Requires: min_int \u2264 x \u2212 y \u2264 max_int *)\n\n```", "```\nA: (* find lst x  is an index at which x is\n    *   is found in lst; that is, nth(lst, find lst x) = x\n    * Requires: x is in lst *)\n```", "```\nB: (* find lst x  is the first index at which x is\n    *   is found in lst, starting from zero\n    * Requires: x is in lst *)\n```"]