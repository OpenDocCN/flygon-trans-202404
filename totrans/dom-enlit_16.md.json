["```\n<!DOCTYPE html>\n<html lang=\"en\">\n\n*<!-- inline attribure event handler pattern -->*\n<body onclick=\"console.log('fire/trigger attribure event handler')\">\n\n<div>click me</div>\n\n<script>\nvar elementDiv = document.querySelector('div');\n\n*// property event handler pattern*\nelementDiv.onclick = function(){console.log('fire/trigger property event handler')};\n\n*//addEventListener method pattern*\nelementDiv.addEventListener('click',function(){console.log('fire/trigger addEventListener')}, false);\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me</div>\n\n<script>\nvar elementDiv = document.querySelector('div');\n\n*// property event handler* \nelementDiv.onclick = function(){console.log('I\\'m first, but I get overidden/replace')}; \n*//overrides/replaces the prior value* elementDiv.onclick = function(){console.log('I win')}; \n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me to start event flow</div>\n\n<script>\n\n*/*notice that I am passing the addEventListener() a boolean parameter of true so capture events fire, not just bubbling events*/*\n\n*//1 capture phase*\nwindow.addEventListener('click',function(){console.log(1);},true);\n\n*//2 capture phase*\ndocument.addEventListener('click',function(){console.log(2);},true);\n\n*//3* *capture phase*\ndocument.documentElement.addEventListener('click',function(){console.log(3);},true);\n\n*//4* *capture phase*\ndocument.body.addEventListener('click',function(){console.log(4);},true);\n\n*//5 target phase occurs during capture phase*\ndocument.querySelector('div').addEventListener('click',function(){console.log(5);},true);\n\n*//6 target phase occurs during bubbling phase*\ndocument.querySelector('div').addEventListener('click',function(){console.log(6);},false);\n\n*//7 bubbling phase*\ndocument.body.addEventListener('click',function(){console.log(7);},false);\n\n*//8* *bubbling phase*\ndocument.documentElement.addEventListener('click',function(){console.log(8);},false);\n\n*//9* *bubbling phase*\ndocument.addEventListener('click',function(){console.log(9);},false);\n\n*//10* *bubbling phase*\nwindow.addEventListener('click',function(){console.log(10)},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me to start event flow</div>\n\n<script>\n\n*//1 target phase occurs during bubbling phase*\ndocument.querySelector('div').addEventListener('click',function(){console.log(1);},false);\n\n*//2* *bubbling phase*\ndocument.body.addEventListener('click',function(){console.log(2);},false);\n\n*//3* *bubbling phase*\ndocument.documentElement.addEventListener('click',function(){console.log(3);},false);\n\n*//4* *bubbling phase*\ndocument.addEventListener('click',function(){console.log(4);},false);\n\n*//5* *bubbling phase*\nwindow.addEventListener('click',function(){console.log(5)},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<body>\n\n<div>mouse over me</div>\n\n<script>\n\n*//add a mousemove event to the window object, invoking the event during the bubbling phase*\nwindow.addEventListener('mousemove',function(){console.log('moving over window');},false);\n\n*//add a mousemove event to the document object, invoking the event during the bubbling phase*\ndocument.addEventListener('mousemove',function(){console.log('moving over document');},false);\n\n*//add a mousemove event to a <div> element object, invoking the event during the bubbling phase*\ndocument.querySelector('div').addEventListener('mousemove',function(){console.log('moving over div');},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click to say hi</div>\n\n<script>\n\nvar sayHi = function(){console.log('hi')};\n\n*//adding event listener using anonymous function*\ndocument.body.addEventListener('click',function(){console.log('dude');},false);\n\n*//adding event listener using function reference*\ndocument.querySelector('div').addEventListener('click',sayHi,false);\n\n*//attempt to remove both event listeners, but only the listener added with a funtions reference is removed*\ndocument.querySelector('div').removeEventListener('click',sayHi,false);\n\n*//this of course does not work as the function passed to removeEventListener is a new and different function*\ndocument.body.removeEventListener('click',function(){console.log('dude');},false);\n\n*//clicking the div will still invoke the click event attached to the body element, this event was not removed*\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me</div>\n\n<script>\n\ndocument.querySelector('div').addEventListener('click',function(event){\nObject.keys(event).sort().forEach(function(item){\n\u00a0 \u00a0 \u00a0console.log(item+' = '+event[item]); *//logs event propeties and values*\n});\u00a0 \u00a0\u00a0\u00a0\n},false);\n\n*//assumes 'this' is window*\nthis.addEventListener('load',function(event){\nObject.keys(event).sort().forEach(function(item){\n\u00a0 \u00a0 \u00a0console.log(item+' = '+event[item]); *//logs event propeties and values*\n});\u00a0 \u00a0\u00a0\u00a0\n},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me</div>\n\n<script>\n\ndocument.querySelector('div').addEventListener('click',function(){\n*// 'this' will be the element or node the event listener is attached too*\nconsole.log(this); *//logs '<div>'* \n},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me</div>\n\n<script>\n\n*//click on the <div> or the <body> the value of this remains the <body> element node*\ndocument.body.addEventListener('click',function(){\nconsole.log(this); *//log <body>...</body>*\n},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me</div>\n\n<script>\n\ndocument.addEventListener('click',function(event){\nconsole.log(event.currentTarget);  *//logs '#document'\n//same as...* console.log(this);\n},false);\n\ndocument.body.addEventListener('click',function(event){\nconsole.log(event.currentTarget); *//logs '<body>'\n//same as...* console.log(this);\n},false);\n\ndocument.querySelector('div').addEventListener('click',function(event){\nconsole.log(event.currentTarget); *//logs '<div>'*\n*//same as...*\nconsole.log(this);\n},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me</div>\n\n<script>\n\ndocument.body.addEventListener('click',function(event){\n*//when the <div> is clicked logs '<div>' because the <div> was the target in the event flow*\nconsole.log(event.target); \n},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<a href=\"google.com\">no go</div>\n\n<input type=\"checkbox\" />\n\n<textarea></textarea>\n\n<script>\n\ndocument.querySelector('a').addEventListener('click',function(event){\nevent.preventDefault(); *//stop the default event for <a> which would be to load a url*\n},false);\n\ndocument.querySelector('input').addEventListener('click',function(event){\nevent.preventDefault(); *//stop default event for checkbox, which would be to toggle checkbox state*\n},false);\n\ndocument.querySelector('textarea').addEventListener('keypress',function(event){\nevent.preventDefault(); *//stop default event for textarea, which would be to add characters typed*\n},false);\n\n*/*keep in mind that events still propagate, clicking the link in this html document will stop the default event but not event bubbling*/*\ndocument.body.addEventListener('click',function(){\nconsole.log('the event flow still flows!');\n},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me</div>\n\n<script>\n\ndocument.querySelector('div').addEventListener('click',function(){\nconsole.log('me too, but nothing from the event flow!');\n},false);\n\ndocument.querySelector('div').addEventListener('click',function(event){\nconsole.log('invoked all click events attached, but cancel capture and bubble event phases');\nevent.stopPropagation();\n},false);\n\ndocument.querySelector('div').addEventListener('click',function(){\nconsole.log('me too, but nothing from the event flow!');\n},false);\n\n*/*when the <div> is clicked this event is not invoked because one of the events attached to the <div> stops the capture and bubble flow.*/*\ndocument.body.addEventListener('click',function(){\nconsole.log('What, denied from being invoked!');\n},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me</div>\n\n<script>\n\n*//first event attached*\ndocument.querySelector('div').addEventListener('click',function(){\nconsole.log('I get invoked because I was attached first');\n},false);\n\n*//seond event attached*\ndocument.querySelector('div').addEventListener('click',function(event){\nconsole.log('I get invoked, but stop any other click events on this target');\nevent.stopImmediatePropagation();\n},false);\n *//third event attached, but because stopImmediatePropagation() was called above this event does not get invoked*\ndocument.querySelector('div').addEventListener('click',function(){\nconsole.log('I get stopped from the previous click event listener');\n},false);\n\n*//notice that the event flow is also cancelled as if stopPropagation was called too*\ndocument.body.addEventListener('click',function(){\nconsole.log('What, denied from being invoked!');\n},false);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>click me</div>\u200b\u200b\u200b\u200b\u200b\n\n<script>\n\nvar\u00a0divElement\u00a0=\u00a0document.querySelector('div');\n\n*//create the custom event*\nvar\u00a0cheer\u00a0=\u00a0document.createEvent('CustomEvent'); *//the 'CustomEvent' parameter is required*\n\n*//create an event listener for the custom event*\ndivElement.addEventListener('goBigBlue',function(event){\n\u00a0 \u00a0\u00a0console.log(event.detail.goBigBlueIs)\n},false);\n\n*/*Use the initCustomEvent method to setup the details of the custom event.\nParameters for initCustomEvent are: (event, bubble?, cancelable?, pass values to event.detail)*/*\ncheer.initCustomEvent('goBigBlue',true,false,{goBigBlueIs:'its gone!'});\n\u00a0 \u00a0\u00a0 *//invoke the custom event using dispatchEvent*\ndivElement.dispatchEvent(cheer);\u200b\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<div>no need to click, we programatically trigger it</div>\u200b\u200b\u200b\u200b\n\n<script>\n\nvar\u00a0divElement\u00a0=\u00a0document.querySelector('div');\n\n*//setup click event that will be simulated*\ndivElement.addEventListener('click',function(event){\n\u00a0 \u00a0\u00a0console.log(Object.keys(event));\n},false);\n\n*//create simulated mouse event 'click'*\nvar\u00a0simulateDivClick\u00a0=\u00a0document.createEvent('MouseEvents');\n\n*/*setup simulated mouse 'click'\ninitMouseEvent(type,bubbles,cancelable,view,detail,screenx,screeny,clientx,clienty,ctrlKey,altKey,shiftKey,metaKey,button,relatedTarget)**\nsimulateDivClick.initMouseEvent('click',true,true,document.defaultView,0,0,0,0,0,false,false,false,0,null,null);\n\n*//invoke simulated clicked event*\ndivElement.dispatchEvent(simulateDivClick);\n\n</script> \n</body>\n</html>\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<body>\n\n<p>Click a table cell</p>\n\n<table\u00a0border=\"1\">\n\u00a0 \u00a0\u00a0<tbody>\n\u00a0 \u00a0 \u00a0 \u00a0\u00a0<tr><td>row 1 column 1</td><td>row 1 column 2</td></tr>\n\u00a0 \u00a0 \u00a0 \u00a0\u00a0<tr><td>row 2 column 1</td><td>row 2 column 2</td></tr>\n\u00a0 \u00a0 \u00a0 \u00a0\u00a0<tr><td>row 3 column 1</td><td>row 3 column 2</td></tr>\n\u00a0 \u00a0 \u00a0 \u00a0\u00a0<tr><td>row 4 column 1</td><td>row 4 column 2</td></tr>\n\u00a0 \u00a0 \u00a0 \u00a0\u00a0<tr><td>row 5 column 1</td><td>row 5 column 2</td></tr>\n\u00a0 \u00a0 \u00a0 \u00a0\u00a0<tr><td>row 6 column 1</td><td>row 6 column 2</td></tr>\n\u00a0 \u00a0\u00a0</tbody>\n</table>\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n\n<script>\n\ndocument.querySelector('table').addEventListener('click',function(event){\n\tif(event.target.tagName.toLowerCase() === 'td'){ *//make sure we only run code if a td is the target*\n\t\tconsole.log(event.target.textContent); *//use event.target to gain access to target of the event which is the td*\u00a0\n\t} \u00a0 \u00a0 \u00a0\n},false);\n\n</script> \n</body>\n</html>\n\n```"]