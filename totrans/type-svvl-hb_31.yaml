- en: 型の再利用
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 型の再利用
- en: 原文：[https://typescriptbook.jp/reference/type-reuse](https://typescriptbook.jp/reference/type-reuse)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://typescriptbook.jp/reference/type-reuse](https://typescriptbook.jp/reference/type-reuse)
- en: TypeScriptでは型から別の型を導き出す機能があります。既存の型を再度利用して、新たな型を生み出すことを本書では「型の再利用」と呼ぶことにします。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScriptでは型から別の型を導き出す機能があります。既存の型を再度利用して、新たな型を生み出すことを本書では「型の再利用」と呼ぶことにします。
- en: 型の再利用のメタファー[​](#型の再利用のメタファー "型の再利用のメタファー への直接リンク")
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 型の再利用のメタファー[​](#型の再利用のメタファー "型の再利用のメタファー への直接リンク")
- en: 多くのプログラミング言語では、変数を処理して別の変数を導き出せます。たとえば、あるオブジェクトのキーの配列が欲しいとき、キーの配列を別途宣言してもよいです。しかし、オブジェクトからキーを導きだしたほうが変更に強いコードになります。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 多くのプログラミング言語では、変数を処理して別の変数を導き出せます。たとえば、あるオブジェクトのキーの配列が欲しいとき、キーの配列を別途宣言してもよいです。しかし、オブジェクトからキーを導きだしたほうが変更に強いコードになります。
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 上は変数の再利用の例です。TypeScriptには変数の再利用の型バージョンがあります。それが型の再利用です。たとえば、あるオブジェクトの型からキーの型を導き出すことができます。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 上は変数の再利用の例です。TypeScriptには変数の再利用の型バージョンがあります。それが型の再利用です。たとえば、あるオブジェクトの型からキーの型を導き出すことができます。
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 型の再利用とは、変数の再利用のメタファーなのです。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 型の再利用とは、変数の再利用のメタファーなのです。
