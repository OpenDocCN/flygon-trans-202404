- en: Contents of the book
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 书籍内容
- en: Getting started
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门指南
- en: '[Installing and using F#](index3.html) will get you started.'
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[安装和使用 F#](index3.html) 将帮助你入门。'
- en: '[Why use F#?](index2.html) An interactive tour of F#.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为什么使用 F#？](index2.html) F# 的互动介绍。'
- en: '[Learning F#](index4.html) has tips to help you learn more effectively.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[学习 F#](index4.html) 提供了帮助你更有效地学习的提示。'
- en: '[Troubleshooting F#](index5.html) for when you have problems getting your code
    to compile.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[F# 故障排除](index5.html) 解决代码编译问题。'
- en: and then you can try...
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你可以尝试…
- en: '[Twenty six low-risk ways to use F# at work](low-risk-ways-to-use-fsharp-at-work1.html).
    You can start right now -- no permission needed!'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在工作中使用 F# 的二十六种低风险方法](low-risk-ways-to-use-fsharp-at-work1.html)。你可以立即开始 -
    无需许可！'
- en: Tutorials
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 教程
- en: The following series are tutorials on the key concepts of F#.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 以下系列是关于 F# 的关键概念的教程。
- en: '[Thinking functionally](thinking-functionally.html) starts from basics and
    explains how and why functions work the way they do.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[函数式思考](thinking-functionally.html) 从基础开始解释函数的工作方式以及原因。'
- en: '[Expressions and syntax](expressions-and-syntax.html) covers the common expressions
    such as pattern matching, and has a post on indentation.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[表达式和语法](expressions-and-syntax.html) 包括常见的表达式，如模式匹配，并有一篇关于缩进的文章。'
- en: '[Understanding F# types](understanding-fsharp-types.html) explains how to define
    and use the various types, including tuples, records, unions, and options.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[理解 F# 类型](understanding-fsharp-types.html) 解释了如何定义和使用各种类型，包括元组、记录、联合和选项。'
- en: '[Designing with types](designing-with-types.html) explains how to use types
    as part of the design process, making illegal states unrepresentable.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[设计与类型](designing-with-types.html) 解释了如何在设计过程中使用类型，使非法状态不可表示。'
- en: '[Choosing between collection functions](list-module-functions.html). If you
    are coming to F# from C#, the large number of list functions can be overwhelming,
    so I have written this post to help guide you to the one you want.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[选择集合函数](list-module-functions.html)。如果你是从 C# 转到 F#，那么大量的列表函数可能会让你感到不知所措，因此我写了这篇文章来帮助你找到你想要的函数。'
- en: '[Property-based testing](property-based-testing.html): the lazy programmer''s
    guide to writing 1000''s of tests.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[基于属性的测试](property-based-testing.html)：懒惰程序员编写数千个测试的指南。'
- en: '[Understanding computation expressions](computation-expressions.html) demystifies
    them and shows how you can create your own.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[理解计算表达式](computation-expressions.html) 揭秘它们并展示如何创建自己的表达式。'
- en: Functional patterns
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数式模式
- en: These posts explain some core patterns in functional programming -- concepts
    such as "map", "bind", monads and more.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些文章解释了函数式编程中的一些核心模式 - 如“映射”、“绑定”、“单子”等等。
- en: '[Railway Oriented Programming](recipe-part2.html): A functional approach to
    error handling'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[铁路导向编程](recipe-part2.html)：一个处理错误的函数式方法'
- en: '[State Monad](handling-state.html): An introduction to handling state using
    the tale of Dr Frankenfunctor and the Monadster.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[状态单子](handling-state.html)：通过 Dr Frankenfunctor 和 Monadster 的故事介绍处理状态的方法。'
- en: '[Reader Monad](elevated-world-6.html): Reinventing the Reader monad.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[阅读器单子](elevated-world-6.html)：重新发明阅读器单子。'
- en: '[Map, bind, apply, lift, sequence and traverse](map-and-bind-and-apply-oh-my.html):
    A series describing some of the core functions for dealing with generic data types.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[映射、绑定、应用、提升、序列化和遍历](map-and-bind-and-apply-oh-my.html)：一系列描述处理通用数据类型的核心函数。'
- en: '[Monoids without tears](monoids-without-tears.html): A mostly mathless discussion
    of a common functional pattern.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[无泪单子](monoids-without-tears.html)：一个关于常见函数模式的大部分无数学讨论。'
- en: '[Fold and recursive types](recursive-types-and-folds.html): A look at recursive
    types, catamorphisms, tail recursion, the difference between left and right folds,
    and more.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[折叠和递归类型](recursive-types-and-folds.html)：研究递归类型、折叠函数、尾递归、左右折叠的区别等等。'
- en: '[Understanding Parser Combinators](understanding-parser-combinators1.html):
    Creating a parser combinator library from scratch.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[理解解析器组合子](understanding-parser-combinators1.html)：从头开始创建解析器组合子库。'
- en: '[Thirteen ways of looking at a turtle](13-ways-of-looking-at-a-turtle.html):
    demonstrates many different techniques for implementing a turtle graphics API,
    including state monads, agents, interpreters, and more!'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[观察海龟的十三种方式](13-ways-of-looking-at-a-turtle.html)：演示了许多不同的技术，用于实现海龟图形 API，包括状态单子、代理、解释器等等！'
- en: Worked examples
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作示例
- en: These posts provide detailed worked examples with lots of code!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些文章提供了大量代码的详细示例！
- en: '[Designing for correctness](designing-for-correctness.html): How to make illegal
    states unrepresentable (a shopping cart example).'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为正确性设计[Designing for correctness](designing-for-correctness.html)：如何使非法状态不可表示（购物车示例）。
- en: '[Stack based calculator](stack-based-calculator.html): Using a simple stack
    to demonstrate the power of combinators.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于堆栈的计算器[Stack based calculator](stack-based-calculator.html)：使用简单堆栈演示组合子的强大。
- en: '[Parsing commmand lines](pattern-matching-command-line.html): Using pattern
    matching in conjunction with custom types.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解析命令行](pattern-matching-command-line.html)：使用模式匹配结合自定义类型。'
- en: '[Roman numerals](roman-numerals.html): Another pattern matching example.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[罗马数字](roman-numerals.html)：另一个模式匹配的例子。'
- en: '[Calculator Walkthrough](calculator-design.html): The type-first approach to
    designing a Calculator.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算器设计指南[Calculator Walkthrough](calculator-design.html)：设计计算器的类型优先方法。
- en: '[Enterprise Tic-Tac-Toe](enterprise-tic-tac-toe.html): A walkthrough of the
    design decisions in a purely functional implementation'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业级井字游戏[Enterprise Tic-Tac-Toe](enterprise-tic-tac-toe.html)：纯函数实现中的设计决策指南
- en: '[Writing a JSON Parser](understanding-parser-combinators-4.html).'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[编写 JSON 解析器](understanding-parser-combinators-4.html).'
- en: Specific topics in F#
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: F# 中的特定主题
- en: 'General:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通用：
- en: '[Four key concepts](key-concepts.html) that differentiate F# from a standard
    imperative language.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区别 F# 与标准命令式语言的[四个关键概念](key-concepts.html)。
- en: '[Understanding F# indentation](fsharp-syntax.html).'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 F# 缩进[Understanding F# indentation](fsharp-syntax.html)。
- en: '[The downsides of using methods](type-extensions.html#downsides-of-methods).'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用方法的[缺点](type-extensions.html#downsides-of-methods)。
- en: 'Functions:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 函数：
- en: '[Currying](currying.html).'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[柯里化](currying.html).'
- en: '[Partial Application](partial-application.html).'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[部分应用](partial-application.html)。'
- en: 'Control Flow:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 控制流：
- en: '[Match..with expressions](match-expression.html) and [creating folds to hide
    the matching](match-expression.html#folds).'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[匹配..with 表达式](match-expression.html) 和[创建折叠隐藏匹配](match-expression.html#folds)。'
- en: '[If-then-else and loops](control-flow-expressions.html).'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[If-then-else 和循环](control-flow-expressions.html)。'
- en: '[Exceptions](exceptions.html).'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常[Exceptions](exceptions.html)。
- en: 'Types:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Option Types](the-option-type.html) especially on why [None is not the same
    as null](the-option-type.html#option-is-not-null).'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选项类型[Option Types](the-option-type.html)，特别是为什么[None 不同于 null](the-option-type.html#option-is-not-null)。
- en: '[Record Types](records.html).'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录类型[Record Types](records.html)。
- en: '[Tuple Types](tuples.html).'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组类型[Tuple Types](tuples.html)。
- en: '[Discriminated Unions](the-option-type.html).'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[区分联合](the-option-type.html)。'
- en: '[Algebraic type sizes and domain modelling](type-size-and-design.html).'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代数类型的大小和领域建模[Algebraic type sizes and domain modelling](type-size-and-design.html)。
- en: Controversial posts
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 有争议的帖子
- en: '[Is your programming language unreasonable?](is-your-language-unreasonable.html)
    or, why predictability is important.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的编程语言[是否合理](is-your-language-unreasonable.html)？或者，为什么可预测性很重要。
- en: '[Commentary on ''Roman Numerals Kata with Commentary''](roman-numeral-kata.html).
    My approach to the Roman Numerals Kata.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对'罗马数字 Kata 的评论'的评论[Commentary on 'Roman Numerals Kata with Commentary'](roman-numeral-kata.html)。我对罗马数字
    Kata 的方法。
- en: '[Ten reasons not to use a statically typed functional programming language](ten-reasons-not-to-use-a-functional-programming-language.html).
    A rant against something I don''t get.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[不使用静态类型的函数式编程语言的十个理由](ten-reasons-not-to-use-a-functional-programming-language.html)。针对我不理解的事物的一篇怒斥。'
- en: '[We don''t need no stinking UML diagrams](no-uml-diagrams.html) or, why in
    many cases, using UML for class diagrams is not necessary.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们不需要[这些没用的 UML 图表](no-uml-diagrams.html)，或者说，在许多情况下，使用 UML 绘制类图并不是必需的。
