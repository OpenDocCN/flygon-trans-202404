- en: Chapter 6 - Element Node Inline Styles
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 6.1 Style Attribute (aka element inline CSS properties) Overview
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Every HTML element has a style attribute that can be used to inline CSS properties
    specific to the element. In the code below I am accessing the *style* attribute
    of a *<div>* that contains several inline CSS properties.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/A4Aph](http://jsfiddle.net/domenlightenment/A4Aph)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Notice in the code above that what is returned from the *style* property is
    a *CSSStyleDeclaration* object and not a string. Additionally note that only the
    elements inline styles (i.e. excluding the computed styles, computed styles being
    any styles that have cascaded from style sheets) are included in the *CSSStyleDeclartion*
    object.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: 6.2 Getting, setting, & removing individual inline CSS properties
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Inline CSS styles are individually represented as a property (i.e. object property)
    of the *style* object avaliabe on element node objects. This provides the interface
    for us to get, set, or remove individual CSS properties on an element by simply
    setting an objects property value. In the code below we set, get, and remove styles
    on a *<div>* by manipulating the properties of the *style* object.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/xNT85](http://jsfiddle.net/domenlightenment/xNT85)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Notes
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The property names contained in the style object do not contain the normal hyphen
    that is used in CSS property names. The translation is pretty simple. Remove the
    hyphen and use camel case. (e.g. font-size = *fontSize* or background-image =
    *backgroundImage*). In the case where a css property name is a JavaScript keyword
    the javascript css property name is prefixed with "css" (e.g. float = *cssFloat*).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Short hand properties are available as properties as well. So you can not only
    set *margin*, but also *marginTop*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Remember to include for any css property value that requires a unit of measure
    the appropriate unitÂ  (e.g. *style.width = '300px';* *not style.width = '300';*).
    When a document is rendered in standards mode the unit of measure is require or
    it will be ignored. In quirksmode assumptions are made if not unit of measure
    is included.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '| CSS Property | JavaScript Property |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
- en: '| background | background |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
- en: '| background-attachment | backgroundAttachment |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
- en: '| background-color | backgroundColor |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
- en: '| background-image | backgroundImage |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
- en: '| background-position | backgroundPosition |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
- en: '| background-repeat | backgroundRepeat |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
- en: '| border | border |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
- en: '| border-bottom | borderBottom |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
- en: '| border-bottom-color | borderBottomColor |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
- en: '| border-bottom-style | borderBottomStyle |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
- en: '| border-bottom-width | borderBottomWidth |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
- en: '| border-color | borderColor |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
- en: '| border-left | borderLeft |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
- en: '| border-left-color | borderLeftColor |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
- en: '| border-left-style | borderLeftStyle |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
- en: '| border-left-width | borderLeftWidth |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
- en: '| border-right | borderRight |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
- en: '| border-right-color | borderRightColor |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
- en: '| border-right-style | borderRightStyle |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
- en: '| border-right-width | borderRightWidth |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
- en: '| border-style | borderStyle |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| border-style | borderStyle |'
- en: '| border-top | borderTop |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| border-top | borderTop |'
- en: '| border-top-color | borderTopColor |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| border-top-color | borderTopColor |'
- en: '| border-top-style | borderTopStyle |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| border-top-style | borderTopStyle |'
- en: '| border-top-width | borderTopWidth |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| border-top-width | borderTopWidth |'
- en: '| border-width | borderWidth |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| border-width | borderWidth |'
- en: '| clear | clear |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| clear | clear |'
- en: '| clip | clip |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| clip | clip |'
- en: '| color | color |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| color | color |'
- en: '| cursor | cursor |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| cursor | cursor |'
- en: '| display | display |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| display | display |'
- en: '| filter | filter |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| filter | filter |'
- en: '| font | font |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| font | font |'
- en: '| font-family | fontFamily |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| font-family | fontFamily |'
- en: '| font-size | fontSize |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| font-size | fontSize |'
- en: '| font-variant | fontVariant |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| font-variant | fontVariant |'
- en: '| font-weight | fontWeight |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| font-weight | fontWeight |'
- en: '| height | height |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| height | height |'
- en: '| left | left |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| left | left |'
- en: '| letter-spacing | letterSpacing |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| letter-spacing | letterSpacing |'
- en: '| line-height | lineHeight |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| line-height | lineHeight |'
- en: '| list-style | listStyle |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| list-style | listStyle |'
- en: '| list-style-image | listStyleImage |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| list-style-image | listStyleImage |'
- en: '| list-style-position | listStylePosition |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| list-style-position | listStylePosition |'
- en: '| list-style-type | listStyleType |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| list-style-type | listStyleType |'
- en: '| margin | margin |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| margin | margin |'
- en: '| margin-bottom | marginBottom |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| margin-bottom | marginBottom |'
- en: '| margin-left | marginLeft |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| margin-left | marginLeft |'
- en: '| margin-right | marginRight |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| margin-right | marginRight |'
- en: '| margin-top | marginTop |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| margin-top | marginTop |'
- en: '| overflow | overflow |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| overflow | overflow |'
- en: '| padding | padding |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| padding | padding |'
- en: '| padding-bottom | paddingBottom |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| padding-bottom | paddingBottom |'
- en: '| padding-left | paddingLeft |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| padding-left | paddingLeft |'
- en: '| padding-right | paddingRight |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| padding-right | paddingRight |'
- en: '| padding-top | paddingTop |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| padding-top | paddingTop |'
- en: '| page-break-after | pageBreakAfter |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| page-break-after | pageBreakAfter |'
- en: '| page-break-before | pageBreakBefore |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| page-break-before | pageBreakBefore |'
- en: '| position | position |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| position | position |'
- en: '| float | styleFloat |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| float | styleFloat |'
- en: '| text-align | textAlign |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| text-align | textAlign |'
- en: '| text-decoration | textDecoration |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| text-decoration | textDecoration |'
- en: '| text-decoration: blink | textDecorationBlink |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| text-decoration: blink | textDecorationBlink |'
- en: '| text-decoration: line-through | textDecorationLineThrough |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| text-decoration: line-through | textDecorationLineThrough |'
- en: '| text-decoration: none | textDecorationNone |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| text-decoration: none | textDecorationNone |'
- en: '| text-decoration: overline | textDecorationOverline |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| text-decoration: overline | textDecorationOverline |'
- en: '| text-decoration: underline | textDecorationUnderline |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| text-decoration: underline | textDecorationUnderline |'
- en: '| text-indent | textIndent |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| text-indent | textIndent |'
- en: '| text-transform | textTransform |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| text-transform | textTransform |'
- en: '| top | top |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| top | top |'
- en: '| vertical-align | verticalAlign |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| vertical-align | verticalAlign |'
- en: '| visibility | visibility |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| visibility | visibility |'
- en: '| width | width |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| width | width |'
- en: '| z-index | zIndex |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| z-index | zIndex |'
- en: The style object is a *CSSStyleDeclaration* object and it provides not only
    access to inidividual CSS properties, but also the *setPropertyValue(propertyName)*,
    *getPropertyValue(propertyName,value)*, and *removeProperty()* methods used to
    manipulate individual CSS properties on a element node. In the code below we set,
    get, and remove individual CSS properties on a *<div>* using these methods.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: æ ·å¼å¯¹è±¡æ¯ä¸ä¸ª*CSSStyleDeclaration*å¯¹è±¡ï¼å®ä¸ä»æä¾å¯¹åä¸ªCSSå±æ§çè®¿é®ï¼è¿æä¾äºç¨äºå¨åç´ èç¹ä¸æä½åä¸ªCSSå±æ§ç*setPropertyValue(propertyName)*ï¼*getPropertyValue(propertyName,value)*å*removeProperty()*æ¹æ³ãå¨ä¸é¢çä»£ç ä¸­ï¼æä»¬ä½¿ç¨è¿äºæ¹æ³å¨*<div>*ä¸è®¾ç½®ãè·ååç§»é¤åä¸ªCSSå±æ§ã
- en: 'live code: [http://jsfiddle.net/domenlightenment/X2DyX](http://jsfiddle.net/domenlightenment/X2DyX)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: å®æ¶ä»£ç ï¼[http://jsfiddle.net/domenlightenment/X2DyX](http://jsfiddle.net/domenlightenment/X2DyX)
- en: '[PRE2]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Notes
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: æ³¨é
- en: Take notice that the property name is passed to the *setProperty()* and *getPropertyValue()*
    method using the css property name including a hyphen (e.g. *background-color*
    not *backgroundColor*).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: è¯·æ³¨æï¼å±æ§åç§°éè¿åå«è¿å­ç¬¦çcsså±æ§åç§°ï¼ä¾å¦*background-color*èä¸æ¯*backgroundColor*ï¼ä¼ éç»*setProperty()*å*getPropertyValue()*æ¹æ³ã
- en: For more detailed information about the *setProperty()*, *getPropertyValue()*,
    and *removeProperty()* as well as additional properties and methods have a look
    the [documentation](https://developer.mozilla.org/en/DOM/CSSStyleDeclaration)
    provided by Mozilla.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: è¦äºè§£æ´è¯¦ç»å³äº*setProperty()*ï¼*getPropertyValue()*å*removeProperty()*ä»¥åå¶ä»å±æ§åæ¹æ³çä¿¡æ¯ï¼è¯·æ¥çç±Mozillaæä¾ç[ææ¡£](https://developer.mozilla.org/en/DOM/CSSStyleDeclaration)ã
- en: 6.3 Getting, setting, & removing all inline CSS properties
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.3 è·åãè®¾ç½®åç§»é¤ææåèCSSå±æ§
- en: Its possible using the *cssText* property of the *CSSStyleDeclaration* object
    as well as the *getAttribute()* and *setAttribute()* method to get, set, and remove
    the entire (i.e. all inline CSS properties) value of the style attribute using
    a JavaScript string. In the code below we get, set, and remove all inline CSS
    (as opposed to individually changing CSS proeprties) on a *<div>*.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: å¯ä»¥ä½¿ç¨*CSSStyleDeclaration*å¯¹è±¡ç*cssText*å±æ§ä»¥å*getAttribute()*å*setAttribute()*æ¹æ³ï¼éè¿JavaScriptå­ç¬¦ä¸²è·åãè®¾ç½®åç§»é¤æ´ä¸ªï¼å³ææåèCSSå±æ§ï¼styleå±æ§çå¼ãå¨ä¸é¢çä»£ç ä¸­ï¼æä»¬è·åãè®¾ç½®åç§»é¤*<div>*ä¸çææåèCSSï¼èä¸æ¯åç¬æ´æ¹CSSå±æ§ï¼ã
- en: 'live code: [http://jsfiddle.net/domenlightenment/wSv8M](http://jsfiddle.net/domenlightenment/wSv8M)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: å®æ¶ä»£ç ï¼[http://jsfiddle.net/domenlightenment/wSv8M](http://jsfiddle.net/domenlightenment/wSv8M)
- en: '[PRE3]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Notes
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: æ³¨æ
- en: If its not obvious you should note that replacing the *style* attribute value
    with a new string is the fastest way to make multiple changes to an elements style.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: å¦æä¸ææ¾ï¼æ¨åºè¯¥æ³¨æï¼ç¨æ°å­ç¬¦ä¸²æ¿æ¢*style*å±æ§å¼æ¯å¯¹åç´ æ ·å¼è¿è¡å¤æ¬¡æ´æ¹çæå¿«æ¹æ³ã
- en: 6.4 Getting an elements computed styles (i.e. actual styles including any from
    the cascade) using *getComputedStyle()*
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.4 ä½¿ç¨*getComputedStyle()*è·ååç´ çè®¡ç®æ ·å¼ï¼å³åæ¬æ¥èªçº§èçä»»ä½å®éæ ·å¼ï¼
- en: The *style* property only contains the css that is defined via the style attribute.
    To get an elements css from the cascade (i.e. cascading from inline style sheets,
    external style sheets, browser style sheets) as well as its inline styles you
    can use *getComputedStyle()*. This method provides a read-only *CSSStyleDeclaration*
    object similar to *style*. In the code example below I demonstrate the reading
    of cascading styles, not just element inline styles.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*style*å±æ§ä»åå«éè¿styleå±æ§å®ä¹çCSSãè¦ä»çº§èä¸­è·ååç´ çCSSï¼å³ä»åèæ ·å¼è¡¨ãå¤é¨æ ·å¼è¡¨ãæµè§å¨æ ·å¼è¡¨çº§èï¼ä»¥åå¶åèæ ·å¼ï¼å¯ä»¥ä½¿ç¨*getComputedStyle()*ãè¯¥æ¹æ³æä¾ä¸ä¸ªç±»ä¼¼äº*style*çåªè¯»*CSSStyleDeclaration*å¯¹è±¡ãå¨ä¸é¢çä»£ç ç¤ºä¾ä¸­ï¼ææ¼ç¤ºäºè¯»åçº§èæ ·å¼ï¼èä¸ä»ä»æ¯åç´ åèæ ·å¼ã'
- en: 'live code: [http://jsfiddle.net/domenlightenment/k3G5Q](http://jsfiddle.net/domenlightenment/k3G5Q)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: å®æ¶ä»£ç ï¼[http://jsfiddle.net/domenlightenment/k3G5Q](http://jsfiddle.net/domenlightenment/k3G5Q)
- en: '[PRE4]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Make sure you note that *getComputedStyle()* method honors the [CSS specificity
    hierarchy](http://css-tricks.com/specifics-on-css-specificity/). For example in
    the code just shown the *backgroundColor* of the *<div>* is reported as green
    not red because inline styles are at the top of the specificity hierarchy thus
    its the inline *backgroundColor* value that is applied to the element by the browser
    and consider its final computed style.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: è¯·ç¡®ä¿æ¨æ³¨æ*getComputedStyle()*æ¹æ³éµå®[CSSç¹å¼æ§å±æ¬¡ç»æ](http://css-tricks.com/specifics-on-css-specificity/)ãä¾å¦ï¼å¨ååæ¾ç¤ºçä»£ç ä¸­ï¼*<div>*ç*backgroundColor*è¢«æ¥åä¸ºç»¿è²èä¸æ¯çº¢è²ï¼å ä¸ºåèæ ·å¼ä½äºç¹å¼æ§å±æ¬¡ç»æçé¡¶é¨ï¼å æ­¤æµè§å¨åºç¨çæ¯åè*backgroundColor*å¼ï¼å¹¶èèå¶æç»è®¡ç®æ ·å¼ã
- en: Notes
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: æ³¨æ
- en: No values can by set on a *CSSStyleDeclaration* object returned from *getComputedStyles()*
    its read only.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: ä»*getComputedStyles()*è¿åç*CSSStyleDeclaration*å¯¹è±¡ä¸ä¸è½è®¾ç½®ä»»ä½å¼ï¼å®æ¯åªè¯»çã
- en: The *getComputedStyles()* method returns color values in the *rgb(#,#,#)* format
    regardless of how they were originally authored.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*getComputedStyles()*æ¹æ³ä»¥*rgb(#,#,#)*æ ¼å¼è¿åé¢è²å¼ï¼æ è®ºå®ä»¬æåæ¯å¦ä½ç¼åçã'
- en: '[Shorthand](http://www.w3.org/TR/CSS21/about.html#shorthand) properties are
    not computed for the *CSSStyleDeclaration* object you will have to use non-shorthand
    property names for property access (e.g. marginTop not margin)*.*'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[ç®å](http://www.w3.org/TR/CSS21/about.html#shorthand)å±æ§ä¸ä¼è®¡ç®ä¸º*CSSStyleDeclaration*å¯¹è±¡ï¼æ¨å¿é¡»ä½¿ç¨éç®åå±æ§åç§°æ¥è®¿é®å±æ§ï¼ä¾å¦marginTopèä¸æ¯marginï¼ã'
- en: 6.5 Apply & remove css properties on an element using *class* & *id* attributes
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6.5 åºç¨åç§»é¤åç´ ä¸çCSSå±æ§ä½¿ç¨*class*å*id*å±æ§
- en: Style rules defined in a inline style sheet or external style sheet can be added
    or removed from an element using the *class* and *id* attribute. This is a the
    most common pattern for manipulating element styles. In the code below, leveraging
    *setAttribute()* and *classList.add(),* inline style rules are applied to a *<div>*
    by setting the *class* and *id* attribute value. Using *removeAttribute()* and
    *classList.remove()* these CSS rules can be removed as well.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: å¨åèæ ·å¼è¡¨æå¤é¨æ ·å¼è¡¨ä¸­å®ä¹çæ ·å¼è§åå¯ä»¥ä½¿ç¨*class*å*id*å±æ§æ·»å æä»åç´ ä¸­ç§»é¤ãè¿æ¯æä½åç´ æ ·å¼çæå¸¸è§æ¨¡å¼ãå¨ä¸é¢çä»£ç ä¸­ï¼å©ç¨*setAttribute()*å*classList.add()*ï¼éè¿è®¾ç½®*class*å*id*å±æ§å¼ï¼å°åèæ ·å¼è§ååºç¨äº*<div>*ãä½¿ç¨*removeAttribute()*å*classList.remove()*ä¹å¯ä»¥ç§»é¤è¿äºCSSè§åã
- en: 'live code: [http://jsfiddle.net/domenlightenment/BF9gM](http://jsfiddle.net/domenlightenment/BF9gM)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: å®æ¶ä»£ç ï¼[http://jsfiddle.net/domenlightenment/BF9gM](http://jsfiddle.net/domenlightenment/BF9gM)
- en: '[PRE5]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
