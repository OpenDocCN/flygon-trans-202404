- en: Thrashing and Working Sets
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 抖动和工作集
- en: Lecture Notes for CS 140
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: CS 140的讲座笔记
- en: Spring 2014
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 2014年春季
- en: John Ousterhout
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 约翰·奥斯特豪特
- en: 'Readings for this topic from *Operating Systems: Principles and Practice*:
    Section 9.7.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自*操作系统：原理与实践*第9.7节的本主题阅读。
- en: Normally, if a thread takes a page fault and must wait for the page to be read
    from disk, the operating system runs a different thread while the I/O is occurring.
    Thus page faults are "free"?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，如果一个线程发生页面错误并必须等待页面从磁盘读取，操作系统会在I/O发生时运行另一个线程。因此页面错误是“免费”的？
- en: What happens if memory gets overcommitted?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果内存过度分配会发生什么？
- en: Suppose the pages being actively used by the current threads don't all fit in
    physical memory.
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设当前线程活动使用的页面不能全部适应物理内存。
- en: Each page fault causes one of the active pages to be moved to disk, so another
    page fault will occur soon.
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每次页面错误导致一个活动页面移至磁盘，因此很快会发生另一个页面错误。
- en: The system will spend all its time reading and writing pages, and won't get
    much work done.
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统将花费所有时间读写页面，而不会完成太多工作。
- en: This situation is called *thrashing*; it was a serious problem in early demand
    paging systems.
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这种情况称为*抖动*；在早期需求分页系统中是一个严重的问题。
- en: How to deal with thrashing?
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何处理抖动？
- en: If a single process is too large for memory, there is nothing the OS can do.
    That process will simply thrash.
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果单个进程太大而无法放入内存，操作系统无能为力。该进程将简单地抖动。
- en: 'If the problem arises because of the sum of several processes:'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果问题是由几个进程的总和引起的：
- en: Figure out how much memory each process needs to prevent thrashing. This is
    called its *working set*.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弄清楚每个进程需要多少内存以防止抖动。这称为其*工作集*。
- en: Only allow a few processes to execute at a time, such that their working sets
    fit in memory.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一次只允许少数进程执行，以使其工作集适合内存。
- en: '*Page fault frequency*: one technique for computing working sets'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*页面错误频率*：计算工作集的一种技术'
- en: At any given time, each process is allocated a fixed number of physical page
    frames (assumes per-process replacement).
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在任何给定时间，每个进程被分配一个固定数量的物理页面帧（假设每个进程替换）。
- en: Monitor the rate at which page faults are occurring for each process.
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控每个进程发生页面错误的速率。
- en: If the rate gets too high for a process, assume that its memory is overcommitted;
    increase the size of its memory pool.
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果某个进程的速率过高，假设其内存已过度分配；增加其内存池的大小。
- en: If the rate gets too low for a process, assume that its memory pool can be reduced
    in size.
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果某个进程的速率过低，假设其内存池可以缩小。
- en: Scheduling with working sets
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用工作集进行调度
- en: If the sum of all working sets of all processes exceeds the size of memory,
    then stop running some of the processes for a while.
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果所有进程的所有工作集之和超过内存大小，则暂停运行其中一些进程一段时间。
- en: 'Divide processes into two groups: active and inactive:'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将进程分为两组：活动和非活动：
- en: 'When a process is active its entire working set must always be in memory: never
    execute a thread whose working set is not resident.'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当进程活动时，其整个工作集必须始终在内存中：永远不要执行其工作集不在驻留的线程。
- en: When a process becomes inactive, its working set can migrate to disk.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当进程变为非活动状态时，其工作集可以迁移到磁盘。
- en: Threads from inactive processes are never scheduled for execution.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不会为非活动进程的线程调度执行。
- en: The collection of active processes is called the *balance set*.
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有活动进程的集合称为*平衡集*。
- en: The system must have a mechanism for gradually moving processes into and out
    of the balance set.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统必须有一个机制逐渐将进程移入和移出平衡集。
- en: As working sets change, the balance set must be adjusted.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着工作集的变化，平衡集必须进行调整。
- en: 'None of these solutions is very good:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些解决方案都不是很好：
- en: Once a process becomes inactive, it has to stay inactive for a long time (many
    seconds), which results in poor response for the user.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦进程变为非活动状态，它必须保持非活动状态很长时间（许多秒），这会导致用户响应不佳。
- en: Scheduling the balance set is tricky.
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调度平衡集是棘手的。
- en: 'In practice, today''s operating systems don''t worry much about thrashing:'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上，今天的操作系统不太担心抖动：
- en: 'With personal computers, users can notice thrashing and handle it themselves:'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用个人计算机，用户可以注意到抖动并自行处理：
- en: Typically, just buy more memory
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，只需购买更多内存
- en: Or, manage balance set by hand
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者，手动管理平衡集
- en: Memory is cheap enough that there's no point in operating a machine in in a
    range where memory is even slightly overcommitted; better to just buy more memory.
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存足够便宜，没有必要在内存略微过度分配的范围内运行机器；最好只是购买更多内存。
- en: 'Thrashing was a bigger issue for timesharing machines with dozens or hundreds
    of users:'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于具有数十或数百用户的分时共享计算机而言，抢占资源是一个更大的问题：
- en: Why should I stop my processes just so you can make progress?
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么我要停止我的进程，只是为了让你取得进展呢？
- en: System had to handle thrashing automatically.
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统必须自动处理抢占。
