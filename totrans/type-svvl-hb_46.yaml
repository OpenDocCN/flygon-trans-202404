- en: TypeScript Playgroundの使い方
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://typescriptbook.jp/how-to-use-typescript-playground](https://typescriptbook.jp/how-to-use-typescript-playground)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: TypeScript Playgroundとは[​](#typescript-playgroundとは "TypeScript Playgroundとは
    への直接リンク")
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 公式が提供している Web で TypeScript を手軽に試すことができる実行環境です。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: TypeScript Playgroundを使う[​](#typescript-playgroundを使う "TypeScript Playgroundを使う
    への直接リンク")
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[TypeScript Playground](https://www.typescriptlang.org/play) にアクセスすれば、すぐに使いはじめることができます。'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: プログラムの実行結果を確認する[​](#プログラムの実行結果を確認する "プログラムの実行結果を確認する への直接リンク")
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Playground にアクセスできたら、早速コードを実行してみましょう。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 次のサンプルコードを Playground のエディターに入力します。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'ts`function add(a:  number, b:  number) {  return a + b;}``console.log(add(1,  2));`'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: 入力が終わったらエディターの上部にある`RUN`をクリックして、コードを実行できます。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: 実行後は右側の`Logs`のタブで実行結果が確認できます。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a1c42123671436813c282d0a9fbcce16.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
- en: JavaScriptのコンパイル結果を確認する[​](#javascriptのコンパイル結果を確認する "JavaScriptのコンパイル結果を確認する
    への直接リンク")
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: TypeScript を書いていると実際に生成される JavaScript のコードを確認したい時があると思います。そんな時は、右側の`.JS`タブを開くことで生成される
    JavaScript のコードを確認することができます。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 試しに TypeScript 固有の機能である`enum`のコンパイル結果を確認してみます。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: エディターに次のコードを入力して`.JS`タブを開いてみてください。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: ts`enum Color { RED =  "red", BLUE =  "blue", GREEN =  "green",}``console.log(Color.RED);`
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: TypeScript が`enum`をどのように JavaScript へコンパイルしているか簡単に確認することができます。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7d5affe0b02caf493851c1d133d8a4ca.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
- en: コンパイルエラーの確認方法[​](#コンパイルエラーの確認方法 "コンパイルエラーの確認方法 への直接リンク")
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 次のサンプルコードをエディター上で入力してみてください。エディター上に表示される赤の波線にマウスオーバーをすることでリアルタイムにコンパイルエラーを確認することができます。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: また、エディターでマウスオーバーをする以外にも右側の`Errors`タブを表示して、すべてのエラーを一覧で確認することができます。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0a6365a227772eb65b23475ba9485f8b.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
- en: 型定義の確認方法[​](#型定義の確認方法 "型定義の確認方法 への直接リンク")
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`.D.TS`タブを開くことでエディターのコードから生成される型定義を確認することができます。'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'ts`// コードfunction add(a:  number, b:  number) {  return a + b;}``// .D.TSの出力declare  function
    add(a:  number, b:  number):  number;`'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: 書いたコードを共有する[​](#書いたコードを共有する "書いたコードを共有する への直接リンク")
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ↓のURLを開いてみてください。エディターにコードが入力された状態で TypeScript Playground が表示されます。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAQwCaoBTIFxhAWwCMBTAJwBpFDcCTSBKRAbwChF3FTioRSllEAaioBuFgF8WLCAgDOcADbEAdArgBzLOgwBGSgCZ69EUA](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAQwCaoBTIFxhAWwCMBTAJwBpFDcCTSBKRAbwChF3FTioRSllEAaioBuFgF8WLCAgDOcADbEAdArgBzLOgwBGSgCZ69EUA)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: TypeScript Playground はページのURLを共有するだけで書いたコードを他の人に共有することができます。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: これは
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: エディターのコードを文字列圧縮ライブラリで圧縮して文字列をURLに設定する
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: URLを共有する
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 共有されたURLが開かれる時に圧縮された文字列をデコードしてエディターに展開する
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: という仕組みでコードが共有されています。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 新規で Playground を開き上記のリンク先と同じコードをエディターに入力すると、同じURLが生成されるのを確認できます。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 色々な形式でコードを共有する[​](#色々な形式でコードを共有する "色々な形式でコードを共有する への直接リンク")
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 上部の`Export`タブから色々な形式でコードを共有するためのテキストを出力することができます。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: たとえば`Copy as Markdown Link with Preview`を選択した場合は次のような形式のテキストを出力することができます。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]`function add(a:number, b:number) { return a + b;}[PRE6][Playground Link](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAQwCaoBTIFxhAWwCMBTAJwBpFDcCTSBKRAbwFgAoRTxU4qEUpMkQBqKgG52AX3bsICAM5wANsQB0SuAHMs6DAEZKAJnr0xQA)`'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: TypeScript Playgroundの設定方法[​](#typescript-playgroundの設定方法 "TypeScript Playgroundの設定方法
    への直接リンク")
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: TypeScript のバージョンの設定[​](#typescript-のバージョンの設定 "TypeScript のバージョンの設定 への直接リンク")
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TypeScript のバージョンの設定[​](#typescript-のバージョンの設定 "TypeScript のバージョンの設定 への直接リンク")
- en: 左上のバージョンが記載されたタブをクリックすることで、実行する Type Script のバージョンを変更することができます。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 左上のバージョンが記載されたタブをクリックすることで、実行する Type Script のバージョンを変更することができます。
- en: デフォルトでは TypeScript のバージョンは 4.1 以上なので、次のサンプルコードはコンパイルエラーが発生しません。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: デフォルトでは TypeScript のバージョンは 4.1 以上なので、次のサンプルコードはコンパイルエラーが発生しません。
- en: バージョンを 4.1 未満に変更してみてください。TypeScript のバージョンが変更されたことで
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: バージョンを 4.1 未満に変更してみてください。TypeScript のバージョンが変更されたことで
- en: '`Template Literal Types`が非対応となりコンパイルエラーが発生するのが確認できます。'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`Template Literal Types`が非対応となりコンパイルエラーが発生するのが確認できます。'
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: TS Config の設定[​](#ts-config-の設定 "TS Config の設定 への直接リンク")
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TS Config の設定[​](#ts-config-の設定 "TS Config の設定 への直接リンク")
- en: 画面上部の`TS Config`のタブをクリックすることで TS Config の設定をすることができます。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 画面上部の`TS Config`のタブをクリックすることで TS Config の設定をすることができます。
- en: 次のサンプルコードをエディターに入力して、出力される JavaScript のコードを`.JS`で確認をするとデフォルトでは
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 次のサンプルコードをエディターに入力して、出力される JavaScript のコードを`.JS`で確認をするとデフォルトでは
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Playground の初期設定では`module: ''esnext''`が選択されているので、次の出力結果になります。'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 'Playground の初期設定では`module: ''esnext''`が選択されているので、次の出力結果になります。'
- en: '[PRE11]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '`TS Config`タブを開き`Module`の設定を`CommonJS`に変更をしてみます。TS Config の設定が変更されて`CommonJS`形式で出力される
    JavaScript のコードを確認することができます。'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`TS Config`タブを開き`Module`の設定を`CommonJS`に変更をしてみます。TS Config の設定が変更されて`CommonJS`形式で出力される
    JavaScript のコードを確認することができます。'
- en: '[PRE13]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
