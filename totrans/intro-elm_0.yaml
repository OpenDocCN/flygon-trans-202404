- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: An Introduction to Elm
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Elm 简介
- en: '**Elm is a functional language that compiles to JavaScript.** It competes with
    projects like React as a tool for creating websites and web apps. Elm has a very
    strong emphasis on simplicity, ease-of-use, and quality tooling.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**Elm 是一种编译成 JavaScript 的函数式语言。** 它与像 React 这样的项目竞争，作为创建网站和 Web 应用程序的工具。 Elm
    非常强调简单性、易用性和高质量的工具。'
- en: 'This guide will:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南将：
- en: Teach you the fundamentals of programming in Elm.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 教你 Elm 编程的基础知识。
- en: Show you how to make interactive apps with *The Elm Architecture*.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向你展示如何使用*Elm 架构*制作交互式应用程序。
- en: Emphasize the principles and patterns that generalize to programming in any
    language.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强调适用于任何编程语言的原则和模式。
- en: By the end I hope you will not only be able to create great web apps in Elm,
    but also understand the core ideas and patterns that make Elm nice to use.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我希望你不仅能在 Elm 中创建出色的 Web 应用程序，还能理解使 Elm 使用起来愉快的核心思想和模式。
- en: If you are on the fence, I can safely guarantee that if you give Elm a shot
    and actually make a project in it, you will end up writing better JavaScript and
    React code. The ideas transfer pretty easily!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还在犹豫不决，我可以肯定地保证，如果你尝试一下 Elm 并实际上在其中做一个项目，你最终会写出更好的 JavaScript 和 React 代码。这些想法相当容易转移！
- en: A Quick Sample
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个快速示例
- en: Of course *I* think Elm is good, so look for yourself.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，*我*认为 Elm 很好，所以你自己看看吧。
- en: 'Here is [a simple counter](http://elm-lang.org/examples/buttons). If you look
    at the code, it just lets you increment and decrement the counter:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是[一个简单的计数器](http://elm-lang.org/examples/buttons)。如果你看一下代码，它只是让你增加和减少计数器：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Notice that the `update` and `view` are entirely decoupled. You describe your
    HTML in a declarative way and Elm takes care of messing with the DOM.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 注意`update`和`view`完全解耦。你以声明方式描述你的 HTML，而 Elm 负责处理 DOM。
- en: Why a *functional* language?
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么选择*函数式*语言？
- en: 'Forget what you have heard about functional programming. Fancy words, weird
    ideas, bad tooling. Barf. Elm is about:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 忘记你听到的关于函数式编程的一切。花哨的词汇，奇怪的想法，糟糕的工具。呕。Elm 是关于：
- en: No runtime errors in practice. No `null`. No `undefined` is not a function.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在实践中没有运行时错误。没有`null`。没有`undefined`不是一个函数。
- en: Friendly error messages that help you add features more quickly.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 友好的错误消息帮助您更快地添加功能。
- en: Well-architected code that *stays* well-architected as your app grows.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 良好架构的代码在应用程序增长时*保持*良好架构。
- en: Automatically enforced semantic versioning for all Elm packages.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有 Elm 包都自动强制执行语义版本控制。
- en: No combination of JS libraries can ever give you this, yet it is all free and
    easy in Elm. Now these nice things are *only* possible because Elm builds upon
    40+ years of work on typed functional languages. So Elm is a functional language
    because the practical benefits are worth the couple hours you'll spend reading
    this guide.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 任何 JS 库的组合都无法给你这个，但在 Elm 中所有这些都是免费且易于实现。现在这些好处*只有*在 Elm 上才可能，因为 Elm 建立在 40 多年关于类型化函数式语言的工作基础之上。因此
    Elm 是一种函数式语言，因为实际的好处值得你花几个小时阅读本指南。
- en: I have put a huge emphasis on making Elm easy to learn and use, so all I ask
    is that you give Elm a shot and see what you think. I hope you will be pleasantly
    surprised!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我非常强调让 Elm 易于学习和使用，所以我只是要求你尝试一下 Elm，看看你的想法。我希望你会感到惊喜！
