["```\nlet stream$ = Rx.Observable.of(5,4,7,-1)\n.max(); \n```", "```\nfunction comparer(x,y) {\n    if( x > y ) {\n        return 1;\n    } else if( x < y ) {\n        return -1;\n    } else return 0;\n}\n\nlet stream$ = Rx.Observable.of(5,4,7,-1)\n.max(comparer); \n```", "```\nfunction comparer(x,y) {\n    if( x.age > y.age ) {\n        return 1;\n    } else if( x.age < y.age ) {\n        return -1;\n    } else return 0;\n}\n\nlet stream$ = Rx.Observable.of({ name : 'chris', age : 37 }, { name : 'chross', age : 32 })\n.max(comparer); \n```", "```\nlet stream$ = Rx.Observable.of(1,2,3,4)\n.reduce((accumulated, current) => accumulated + current ) \n```", "```\nlet objectStream$ = Rx.Observable.of( { name : 'chris' }, { age : 11 } )\n.reduce( (acc,curr) => Object.assign({}, acc,curr )); \n```", "```\nlet stream$ = Rx.Observable.of( 3, 6 ,9 )\n.map( x => { return { sum : x, counter : 1 } } )\n.reduce( (acc,curr) => {\n    return Object.assign({}, acc, { sum : acc.sum + curr.sum ,counter : acc.counter + 1  }) \n})\n.map( x => x.sum / x.counter ) \n```"]