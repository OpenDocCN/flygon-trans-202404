- en: Pass slice as a function argument
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将切片作为函数参数传递
- en: Pass slice as a function argument
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将切片作为函数参数传递
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'In `Go`, the function parameters are passed by value. With respect to use slice
    as a function argument, that means the function will get the copies of the slice:
    a pointer which points to the starting address of the underlying array, accompanied
    by the length and capacity of the slice. Oh boy! Since you know the address of
    the memory which is used to store the data, you can tweak the slice now. Let''s
    see the following example:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Go` 中，函数参数是按值传递的。就使用切片作为函数参数而言，这意味着函数将获得切片的副本：一个指向底层数组起始地址的指针，以及切片的长度和容量。哦，天哪！既然你知道用于存储数据的内存的地址，你现在可以调整切片了。让我们看下面的例子：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The result is here:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 结果在这里：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can see, after running `modifyValue` function, the content of slice `s`
    is changed. Although the `modifyValue` function just gets a copy of the memory
    address of slice's underlying array, it is enough!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，运行 `modifyValue` 函数后，切片 `s` 的内容发生了变化。尽管 `modifyValue` 函数只是得到切片底层数组的内存地址的副本，但已经足够了！
- en: 'See another example:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 再看另一个例子：
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The result is like this:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This time, the `addValue` function doesn't take effect on the `s` slice in `main`
    function. That's because it just manipulate the copy of the `s`, not the "real"
    `s`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，`addValue` 函数对 `main` 函数中的 `s` 切片没有产生影响。这是因为它只是操作 `s` 的副本，而不是“真正的” `s`。
- en: 'So if you really want the function to change the content of a slice, you can
    pass the address of the slice:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你真的想让函数改变切片的内容，你可以传递切片的地址：
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The result is like this:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE5]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
