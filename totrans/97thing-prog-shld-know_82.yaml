- en: Test While You Sleep (and over Weekends)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 睡前进行测试（还有周末）
- en: Test While You Sleep (and over Weekends)
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 睡前进行测试（还有周末）
- en: Relax. I am not referring to offshore development centers, overtime on weekends,
    or working the night shift. Rather, I want to draw your attention to how much
    computing power we have at our disposal. Specifically, how much we are not harnessing
    to make our lives as programmers a little easier. Are you constantly finding it
    difficult to get enough computing power during the work day? If so, what are your
    test servers doing outside of normal work hours? More often than not, the test
    servers are idling overnight and over the weekend. You can use this to your advantage.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 放松。我不是指海外开发中心、周末加班或夜班工作。相反，我想吸引你注意我们拥有多少计算能力。具体来说，我们没有利用多少计算能力来让我们程序员的生活变得更容易。你在工作日是否经常发现很难获得足够的计算能力？如果是这样，你的测试服务器在正常工作时间以外的时间在做什么？往往测试服务器在晚上和周末都处于闲置状态。你可以利用这一点。
- en: '*Have you been guilty of committing a change without running all the tests?*
    One of the main reasons programmers don''t run test suites before committing code
    is because of the length of time they may take. When deadlines are looming and
    push comes to shove, humans naturally start cutting corners. One way to address
    this is to break down your large test suite into two or more profiles. A smaller,
    mandatory test profile that is quick to run, will help to ensure that tests are
    run before each commit. All of the test profiles (including the mandatory profile
    — just to be sure) can be automated to run overnight, ready to report their results
    in the morning.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*你有没有犯过在未运行所有测试的情况下进行更改的错？* 程序员在提交代码之前不运行测试套件的主要原因之一是因为测试可能需要的时间太长。当截止日期逼近，情况紧急时，人们自然而然地开始走捷径。解决这个问题的一种方法是将大型测试套件拆分为两个或更多个配置文件。一个较小的，强制性的测试配置文件可以快速运行，这将有助于确保在每次提交之前都运行了测试。所有的测试配置文件（包括强制性配置文件
    —— 以确保）都可以自动化运行，准备好在第二天早上报告结果。'
- en: '*Have you had enough opportunity to test the stability of your product?* Longer-running
    tests are vital for identifying memory leaks and other stability issues. They
    are seldom run during the day as it will tie up time and resources. You could
    automate a soak test to be run during the night, and a bit longer over the weekend.
    From 6.00 pm Friday to 6.00 am the following Monday there are 60 hours worth of
    potential testing time.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*你是否有足够的机会测试产品的稳定性？* 长时间运行的测试对于识别内存泄漏和其他稳定性问题至关重要。它们很少在白天运行，因为这会占用时间和资源。您可以自动运行一个泡沫测试，让它在夜间运行，而在周末运行时间更长一点。从星期五下午6点到下周一上午6点，有60个小时的潜在测试时间。'
- en: '*Are you getting quality time on your Performance testing environment?* I have
    seen teams bickering with each other to get time on the performance testing environment.
    In most cases neither team gets enough quality time during the day, while the
    environment is virtually idle after hours. The servers and the network are not
    as busy during the night or over the weekend. It''s an ideal time to run some
    quality performance tests.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*您是否在性能测试环境上获得了足够的时间？* 我看到团队争吵着争夺性能测试环境的时间。在大多数情况下，白天团队都没有足够的高质量时间，而在晚上环境几乎闲置。在夜间或周末，服务器和网络都不太忙碌。这是进行一些高质量性能测试的理想时间。'
- en: '*Are there too many permutations to test manually?* In many cases your product
    is targeted to run on a variety of platforms. For example, both 32-bit and 64-bit,
    on Linux, Solaris, and Windows, or simply on different versions of the same operating
    system. To make matters worse, many modern applications expose themselves to a
    plethora of transport mechanisms and protocols (HTTP, AMQP, SOAP, CORBA, etc.).
    Manually testing all of these permutations is very time consuming and most likely
    done close to a release due to resource pressure. Alas, it may be too late in
    the cycle to catch certain nasty bugs.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*手动测试的排列组合太多了吗？* 在许多情况下，您的产品目标是在各种平台上运行。例如，32位和64位，Linux、Solaris和Windows，或者仅仅在同一操作系统的不同版本上。更糟糕的是，许多现代应用程序暴露给各种传输机制和协议（HTTP、AMQP、SOAP、CORBA等）。手动测试所有这些排列组合非常耗时，而且很可能在资源压力下接近发布时才完成。可惜的是，在周期的后期捕捉某些讨厌的错误可能太迟了。'
- en: Automated tests run during the night or over weekends will ensure all these
    permutations are tested more often. With a little bit of thinking and some scripting
    knowledge, you can schedule a few *cron* jobs to kick off some testing at night
    and over the weekend. There are also many testing tools out there that could help.
    Some organizations even have server grids that pool servers across different departments
    and teams to ensure that resources are utilized efficiently. If this is available
    in your organization, you can submit tests to be run at night or over weekends.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在夜间或周末运行自动化测试将更频繁地确保测试了所有这些排列组合。只需稍加思考和一些脚本知识，你就可以安排一些*cron*作业在夜间和周末启动一些测试。还有许多测试工具可用。一些组织甚至拥有服务器网格，跨不同部门和团队汇集服务器，以确保资源的有效利用。如果你的组织有这种设施，你可以提交测试以在夜间或周末运行。
- en: by [Rajith Attapattu](http://programmer.97things.oreilly.com/wiki/index.php/Rajith_Attapattu)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由[Rajith Attapattu](http://programmer.97things.oreilly.com/wiki/index.php/Rajith_Attapattu)提供。
