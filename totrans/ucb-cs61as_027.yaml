- en: Variables and Environments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Defining Variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We use `define` to assign values to variables.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, `(define x 2)` assigns the value `2` to `x`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: After calling `(define x 2)`, we say that `x` is *bound* to `2`. Variable bindings
    are stored in *environments*, which we'll talk more about in Unit 3.
  prefs: []
  type: TYPE_NORMAL
- en: Check for Understanding
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Suppose the following is typed into the Racket interpreter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: What would `area` evaluate to? What would `circumference` evaluate to?
  prefs: []
  type: TYPE_NORMAL
