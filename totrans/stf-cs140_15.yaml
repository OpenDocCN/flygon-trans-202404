- en: Protection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Lecture Notes for CS 140
  prefs: []
  type: TYPE_NORMAL
- en: Spring 2014
  prefs: []
  type: TYPE_NORMAL
- en: John Ousterhout
  prefs: []
  type: TYPE_NORMAL
- en: 'Readings for this topic from *Operating Systems: Principles and Practice*:
    none.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Protection: mechanisms that prevent accidental or intentional misuse of a system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Accidents: generally easier to solve (make them unlikely)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Malicious abuse: much more difficult to eliminate (can''t leave any loopholes,
    can''t use probabilities).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Three aspects to a protection mechanism:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Authentication: identify a responsible party (*principal*) behind each action.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Authorization: determine which principals are allowed to perform which actions.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Access enforcement: combine authentication and authorization to control access.A
    tiny flaw in any of these areas can compromise the entire protection mechanism.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Authentication
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Typically done with *passwords*:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A secret piece of information used to establish identity of a user.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Passwords should be relatively long and obscure (only useful if hard to guess).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The password database is a vulnerability and must be carefully protected; for
    example, don't store passwords in a directly-readable form (use one-way transformations).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Alternate form of authentication: badge or key.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does not have to be kept secret.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Can be stolen, but owner will know if it is.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Should not be forgable or copyable.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Paradox: key must be cheap to make, hard to duplicate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once authentication is complete, the identity of the principal must be protected
    from tampering, since other parts of the system will rely on it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After you log in, your user id is associated with every process executed under
    that login: each process inherits the user id from its parent.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Authorization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Goal: determine which principals can perform which operations on which objects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Logically, authorization information represented as an *access matrix*:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One row per principal.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: One column per object.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Each entry indicates what that principle can do to that object.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In practice a full access matrix would be too bulky, so it gets stored in one
    of two compressed ways: access control lists or capabilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Access Control Lists* (ACLs): organize by columns.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With each object, store information about which users are allowed to perform
    which operations.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Most general form: list of <user, privilege> pairs.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For simplicity, users can be organized into groups, with a single ACL entry
    for an entire group.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ACLs can be very general (Windows) or simplified (Unix).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'UNIX: 9 bits per file:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: owner, group, anyone
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: read, write, execute permissions for each of the above
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, user "root" has all permissions for everything
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ACLs are simple and are used in almost all file systems.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Capabilities*: organize by rows.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With each user, indicate which objects may be accessed, and in what ways.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Store a list of <object, privilege> pairs with each user. This is called a *capability
    list*.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Typically, capabilities also act as names for objects: can''t even name objects
    not referred to in your capability list.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Systems based on ACLs encourage visibility of objects: shared public namespace.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Capability systems discourage visibility; namespaces are private by default.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Capabilities have been used in experimental systems attempting to be secure.
    However, they have proven to be clumsy to use (painful to share things), so they
    have mostly fallen out of favor for managing objects such as files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access Enforcement
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some part of the system must be responsible for enforcing access controls and
    protecting authentication and authorization info.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This portion of the system has total power, so it should be as small and simple
    as possible. Example: the portion of the system that sets up page tables.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'One possible approach: *Security kernel*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An inner layer of the operating system that enforces security; only this layer
    has total power.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Most operating systems have no security kernel: the entire OS has unlimited
    power.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Miscellaneous Issues
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Rights amplification*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A mechanism that causes a callee to acquire more privileges (or different privileges)
    than its caller.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Simple example: kernel call'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Another example: Unix *set user id* (setuid):'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Each file has one extra protection bit "s" (for setuid).
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Normally, each process runs with the same user id as the process that created
    it.
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If an executable is invoked with setuid set, the effective user id for that
    process changes to the owner of the executable file.
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Typical use: setuid to root to perform protected operations in a safe and controlled
    fashion.'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: It is extremely difficult to make all of these mechanisms work with no loopholes
    that can be exploited by evil-doers. Take CS 155 to learn more.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
