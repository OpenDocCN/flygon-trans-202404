- en: 3 Styles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 3 Styles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.Declare Style
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 2.Using Styles
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 3.Properties
  prefs: []
  type: TYPE_NORMAL
- en: '[View Properties](https://facebook.github.io/react-native/docs/view.html#style)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Image Properties](https://facebook.github.io/react-native/docs/image.html#style)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Text Properties](https://facebook.github.io/react-native/docs/text.html#style)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Flex Properties](https://facebook.github.io/react-native/docs/flexbox.html#content)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Transform Properties](https://facebook.github.io/react-native/docs/transforms.html#content)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.1 Flexbox
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 3.1 Flexbox
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.[Flexbox layout](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)
  prefs: []
  type: TYPE_NORMAL
- en: The main idea behind the flex layout is to give the container the ability to
    alter its items' width/height (and order) to best fill the available space (mostly
    to accommodate to all kind of display devices and screen sizes). A flex container
    expands items to fill available free space, or shrinks them to prevent overflow.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](QQ20160705-15.png)'
  prefs: []
  type: TYPE_IMG
- en: 2.flex:1
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160705-2.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 3.flexDirection:'row'|'column'
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160705-7.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](QQ20160705-8.png)'
  prefs: []
  type: TYPE_IMG
- en: 4.justifyContent:'flex-start'|'flex-end'|'center'|'space-between'|'space-around'
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160705-10.png)'
  prefs: []
  type: TYPE_IMG
- en: 5.alignItems:'flex-start'|'flex-end'|'center'|'stretch'
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160705-12.png)'
  prefs: []
  type: TYPE_IMG
- en: 6.alignSelf:'auto'|'flex-start'|'flex-end'|'center'|'stretch'
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160705-13.png)'
  prefs: []
  type: TYPE_IMG
- en: 7.flexWrap:'wrap'|'nowrap'
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160705-14.png)'
  prefs: []
  type: TYPE_IMG
- en: 8.Box model
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160705-16.png)'
  prefs: []
  type: TYPE_IMG
- en: width = borderLeftWidth(25)+paddingLeft(25)+100+borderRightWidth(25)+paddingRight(25)=200
  prefs: []
  type: TYPE_NORMAL
- en: height = borderTopWidth(25)+paddingTop(25)+100+borderBottomWidth(25)+paddingBottom(25)=200
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](QQ20160705-17.png)'
  prefs: []
  type: TYPE_IMG
- en: 3.2 Absolute & Relative
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 3.2 Absolute & Relative
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.absolute
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160706-0.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 2.zIndex, [v0.29](https://github.com/facebook/react-native/commit/d64368b9e239b574039f4a6508bf2aeb0806121b)
    or [transform](http://facebook.github.io/react-native/docs/transforms.html)
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160706-2.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 3.relative(default)
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160706-1.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 4.fixed
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160706-3.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 3.3 Size & Dimensions & onLayout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 3.3 Size & Dimensions & onLayout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.window size
  prefs: []
  type: TYPE_NORMAL
- en: '![](QQ20160706-4.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 2.[onLayout](http://facebook.github.io/react-native/releases/0.28/docs/view.html#onlayout)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 3.4 Inheritance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 3.4 Inheritance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 1.pass styles as props
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 2.concatenation styles
  prefs: []
  type: TYPE_NORMAL
- en: BaseStyles.js
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '![](QQ20160706-5.png)'
  prefs: []
  type: TYPE_IMG
- en: 3.5 Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 3.5 Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[A Complete Guide to Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Visual Guide to CSS3 Flexbox Properties](https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding Flex Direction](http://www.standardista.com/understanding-flex-direction/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DEMO scripts for this chapter](https://github.com/unbug/react-native-train-scripts)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
