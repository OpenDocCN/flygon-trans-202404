["```\ncp ~cs61as/autograder/templates/hw6.rkt . \n```", "```\nRacket-1:\n((lambda (f n)  ; this lambda is defining MAP \n    ((lambda (map) (map map f n)) \n    (lambda (map f n) \n        (if (null? n) \n            '() \n            (cons (f (car n)) (map map f (cdr n))) )) )) ;end of lambda defining MAP \nfirst              ; the argument f for MAP\n'(the rain in spain)) ; the argument n for MAP\n\n(t r i s) \n```", "```\nRacket-1: \n(map first '(the rain in spain))`\n\nRacket-1: \n(map (lambda (x) (first x)) '(the rain in spain)) \n```", "```\n? (the type can't be inferred)\n\nprocedure (the parameter appeared as the first word in an unquoted expression or as the first argument of map or every)\n\nnumber (the parameter appeared as an argument of +, -, max, or min)\n\nlist (the parameter appeared as an argument of append or as the second argument of map or member)\n\nsentence-or-word (the parameter appeared as an argument of first, butfirst, sentence, or member?, or as the second argument of every)\n\nx (conflicting types were inferred) \n```", "```\n(inferred-types\n    '(define (foo a b c d e f)\n        (f (append (a b) c '(b c))\n           (+ 5 d)\n           (sentence (first e) f)) ) ) \n```", "```\n((a procedure) (b ?) (c list) (d number)\n (e sentence-or-word) (f x)) \n```"]