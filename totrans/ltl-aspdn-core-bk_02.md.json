["```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Mvc;\n\nnamespace AspNetCoreTodo.Controllers\n{\n    public class TodoController : Controller\n    {\n        // Actions go here\n    }\n} \n```", "```\nlocalhost:5000/Home         -> Index()\nlocalhost:5000/Home/About   -> About()\nlocalhost:5000/Home/Contact -> Contact() \n```", "```\npublic class TodoController : Controller\n{\n    public IActionResult Index() {\n        // Get to-do items from database\n\n        // Put items into a model\n\n        // Render view using the model\n    }\n} \n```", "```\nusing System;\n\nnamespace AspNetCoreTodo.Models\n{\n    public class TodoItem\n    {\n        public Guid Id { get; set; }\n\n        public bool IsDone { get; set; }\n\n        public string Title { get; set; }\n\n        public DateTimeOffset? DueAt { get; set; }\n    }\n} \n```", "```\nusing System.Collections.Generic;\n\nnamespace AspNetCoreTodo.Models\n{\n    public class TodoViewModel\n    {\n        public IEnumerable<TodoItem> Items { get; set; }\n    }\n} \n```", "```\n@model TodoViewModel\n\n@{\n    ViewData[\"Title\"] = \"Manage your todo list\";\n}\n\n<div class=\"panel panel-default todo-panel\">\n  <div class=\"panel-heading\">@ViewData[\"Title\"]</div>\n\n  <table class=\"table table-hover\">\n      <thead>\n          <tr>\n              <td>&#x2714;</td>\n              <td>Item</td>\n              <td>Due</td>\n          </tr>\n      </thead>\n\n      @foreach (var item in Model.Items)\n      {\n          <tr>\n              <td>\n                <input type=\"checkbox\" name=\"@item.Id\" value=\"true\" class=\"done-checkbox\">\n              </td>\n              <td>@item.Title</td>\n              <td>@item.DueAt</td>\n          </tr>\n      }\n  </table>\n\n  <div class=\"panel-footer add-item-form\">\n    <form>\n        <div id=\"add-item-error\" class=\"text-danger\"></div>\n        <label for=\"add-item-title\">Add a new item:</label>\n        <input id=\"add-item-title\">\n        <button type=\"button\" id=\"add-item-button\">Add</button>\n    </form>\n  </div>\n</div> \n```", "```\ndiv.todo-panel {\n  margin-top: 15px;\n}\n\ntable tr.done {\n  text-decoration: line-through;\n  color: #888;\n} \n```", "```\nusing System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing AspNetCoreTodo.Models;\n\nnamespace AspNetCoreTodo.Services\n{\n    public interface ITodoItemService\n    {\n        Task<IEnumerable<TodoItem>> GetIncompleteItemsAsync();\n    }\n} \n```", "```\nThe type or namespace name 'TodoItem' could not be found (are you missing a using directive or an assembly reference?) \n```", "```\nusing System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing AspNetCoreTodo.Models;\n\nnamespace AspNetCoreTodo.Services\n{\n    public class FakeTodoItemService : ITodoItemService\n    {\n        public Task<IEnumerable<TodoItem>> GetIncompleteItemsAsync()\n        {\n            // Return an array of TodoItems\n            IEnumerable<TodoItem> items = new[]\n            {\n                new TodoItem\n                {\n                    Title = \"Learn ASP.NET Core\",\n                    DueAt = DateTimeOffset.Now.AddDays(1)\n                },\n                new TodoItem\n                {\n                    Title = \"Build awesome apps\",\n                    DueAt = DateTimeOffset.Now.AddDays(2)\n                }\n            };\n\n            return Task.FromResult(items);\n        }\n    }\n} \n```", "```\npublic class TodoController : Controller\n{\n    private readonly ITodoItemService _todoItemService;\n\n    public TodoController(ITodoItemService todoItemService) {\n        _todoItemService = todoItemService;\n    }\n\n    public IActionResult Index() {\n        // Get to-do items from database\n\n        // Put items into a model\n\n        // Pass the view to a model and render\n    }\n} \n```", "```\nusing AspNetCoreTodo.Services; \n```", "```\npublic IActionResult Index() {\n    var todoItems = await _todoItemService.GetIncompleteItemsAsync();\n\n    // ...\n} \n```", "```\npublic async Task<IActionResult> Index() {\n    var todoItems = await _todoItemService.GetIncompleteItemsAsync();\n\n    // Put items into a model\n\n    // Pass the view to a model and render\n} \n```", "```\npublic void ConfigureServices(IServiceCollection services) {\n    // (... some code)\n\n    services.AddMvc();\n} \n```", "```\nservices.AddSingleton<ITodoItemService, FakeTodoItemService>(); \n```", "```\npublic async Task<IActionResult> Index() {\n    var todoItems = await _todoItemService.GetIncompleteItemsAsync();\n\n    var model = new TodoViewModel()\n    {\n        Items = todoItems\n    };\n\n    return View(model);\n} \n```", "```\nusing AspNetCoreTodo.Services;\nusing AspNetCoreTodo.Models; \n```"]