- en: Improve Code by Removing It
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过移除它来改善代码
- en: Improve Code by Removing It
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过移除它来改善代码
- en: '*Less* is more. It''s a quite trite little maxim, but sometimes it really is
    true.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*更少*就是更多。这是一个相当陈词滥调的格言，但有时确实如此。'
- en: One of the improvements I've made to our codebase over the last few weeks is
    to remove chunks of it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几周里，我对我们的代码库做的一项改进是删除了其中的一些部分。
- en: We'd written the software following XP tenets, including YAGNI (that is, You
    Aren't Gonna Need It). Human nature being what it is, we inevitably fell short
    in a few places.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们遵循了XP原则编写软件，包括YAGNI（即，你现在不需要它）。由于人性的局限性，我们不可避免地在一些地方做得不够好。
- en: I observed that the product was taking too long to execute certain tasks — simple
    tasks that should have been near instantaneous. This was because they were overimplemented;
    festooned with extra bells and whistles that were not required, but at the time
    had seemed like a good idea.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我观察到产品执行某些任务花费的时间太长了 —— 应该是近乎瞬间完成的简单任务。这是因为它们被过度实现了；被额外的不需要的花哨东西所装饰，但是在当时似乎是个好主意。
- en: So I've simplified the code, improved the product performance, and reduced the
    level of global code entropy simply by removing the offending features from the
    codebase. Helpfully, my unit tests tell me that I haven't broken anything else
    during the operation.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我简化了代码，提高了产品性能，并通过从代码库中移除有问题的功能，降低了全局代码熵水平。令人欣慰的是，在操作过程中，我的单元测试告诉我我没有破坏其他任何东西。
- en: A simple and thoroughly satisfying experience.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一次简单而彻底令人满意的体验。
- en: 'So why did the unnecessary code end up there in the first place? Why did one
    programmer feel the need to write extra code, and how did it get past review or
    the pairing process? Almost certainly something like:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 那么为什么不必要的代码最终会出现在那里呢？为什么有一个程序员觉得有必要编写额外的代码，它是如何通过审查或配对过程的？几乎肯定是类似于：
- en: 'It was a fun bit of extra stuff, and the programmer wanted to write it. *(Hint:
    Write code because it adds value, not because it amuses you.)*'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一段有趣的额外内容，程序员想写下来。*(提示：编写代码是为了增加价值，而不是为了自娱自乐。)*
- en: 'Someone thought that it might be needed in the future, so felt it was best
    to code it now. *(Hint: That isn''t YAGNI. If you don''t need it right now, don''t
    write it right now.)*'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有人认为将来可能会需要，因此认为最好现在就编写它。*(提示：这不是YAGNI。如果你现在不需要它，就不要现在就写。)*
- en: 'It didn''t appear to be that big an "extra," so it was easier to implement
    it rather than go back to the customer to see whether it was really required.
    *(Hint: It always takes longer to write and to maintain extra code. And the customer
    is actually quite approachable. A small extra bit of code snowballs over time
    into a large piece of work that needs maintenance.)*'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 看起来并不是那么大的一个“额外”，所以更容易实现它，而不是回到客户那里看看它是否真的是必需的。*(提示：编写和维护额外代码总是需要更长的时间。而且客户实际上是相当好接触的。一小部分额外的代码随着时间的推移会成为需要维护的大型工作。)*
- en: 'The programmer invented extra requirements that were neither documented nor
    discussed that justified the extra feature. The requirement was actually bogus.
    *(Hint: Programmers do not set system requirements; the customer does.)*'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序员虚构了既不记录也不讨论的额外要求，以证明额外功能的存在是有道理的。实际上，这个需求是虚假的。*(提示：程序员不制定系统要求；客户制定。)*
- en: What are you working on right now? Is it all needed?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在正在做什么？这一切都是必需的吗？
- en: By [Pete Goodliffe](http://programmer.97things.oreilly.com/wiki/index.php/Pete_Goodliffe)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 由[Pete Goodliffe](http://programmer.97things.oreilly.com/wiki/index.php/Pete_Goodliffe)提供
