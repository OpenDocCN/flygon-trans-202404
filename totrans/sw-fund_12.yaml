- en: RelProperties of Relations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-1
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Require Export IndProp.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Definition relation (X: Type) := X → X → Prop.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Print le.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: (* ====> Inductive le (n : nat) : nat -> Prop :=              le_n : n <= n
               | le_S : forall m : nat, n <= m -> n <= S m *)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'Check le : nat → nat → Prop.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: 'Check le : relation nat.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Basic Properties
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As anyone knows who has taken an undergraduate discrete math
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: course, there is a lot to be said about relations in general,
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: including ways of classifying relations (as reflexive, transitive,
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: etc.), theorems that can be proved generically about certain sorts
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: of relations, constructions that build one relation from another,
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: etc.  For example...
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Partial Functions
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A relation R on a set X is a *partial function* if, for every
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: x, there is at most one y such that R x y — i.e., R x y[1]
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: and R x y[2] together imply y[1] = y[2].
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For example, the next_nat relation defined earlier is a partial
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: function.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: However, the ≤ relation on numbers is not a partial
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: function.  (Assume, for a contradiction, that ≤ is a partial
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: function.  But then, since 0 ≤ 0 and 0 ≤ 1, it follows that
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 0 = 1.  This is nonsense, so our assumption was
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: contradictory.)
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Exercise: 2 stars, optional'
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Show that the total_relation defined in earlier is not a partial
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: function.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: ☐
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Exercise: 2 stars, optional'
  id: totrans-37
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Show that the empty_relation that we defined earlier is a
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: partial function.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: ☐
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Reflexive Relations
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A *reflexive* relation on a set X is one for which every element
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: of X is related to itself.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Transitive Relations
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A relation R is *transitive* if R a c holds whenever R a b
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: and R b c do.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Exercise: 2 stars, optional'
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We can also prove lt_trans more laboriously by induction,
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: without using le_trans.  Do this.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: ☐
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Exercise: 2 stars, optional'
  id: totrans-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Prove the same thing again by induction on o.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: ☐
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The transitivity of le, in turn, can be used to prove some facts
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: that will be useful later (e.g., for the proof of antisymmetry
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: below)...
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Exercise: 1 star, optional'
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: ☐
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Exercise: 2 stars, optional (le_Sn_n_inf)'
  id: totrans-66
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Provide an informal proof of the following theorem:'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Theorem: For every n, ¬ (S n ≤ n)'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A formal proof of this is an optional exercise below, but try
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: writing an informal proof without doing the formal proof first.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Proof:'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: (* FILL IN HERE *)
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ☐
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Exercise: 1 star, optional'
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: ☐
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Reflexivity and transitivity are the main concepts we'll need for
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: later chapters, but, for a bit of additional practice working with
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: relations in Coq, let's look at a few other common ones...
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Symmetric and Antisymmetric Relations
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A relation R is *symmetric* if R a b implies R b a.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Exercise: 2 stars, optional'
  id: totrans-83
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: ☐
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A relation R is *antisymmetric* if R a b and R b a together
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: imply a = b — that is, if the only "cycles" in R are trivial
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ones.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Exercise: 2 stars, optional'
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: ☐
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Exercise: 2 stars, optional'
  id: totrans-93
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: ☐
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Equivalence Relations
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A relation is an *equivalence* if it's reflexive, symmetric, and
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: transitive.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Partial Orders and Preorders
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A relation is a *partial order* when it's reflexive,
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*anti*-symmetric, and transitive.  In the Coq standard library'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: it's called just "order" for short.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 简称为“order”。
- en: '[PRE22]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: A preorder is almost like a partial order, but doesn't have to be
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 预序几乎类似于偏序，但不必
- en: antisymmetric.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 反对称的。
- en: '[PRE23]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Reflexive, Transitive Closure
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自反传递闭包
- en: The *reflexive, transitive closure* of a relation R is the
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关系R的*自反传递闭包*是
- en: smallest relation that contains R and that is both reflexive and
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含R并且既是自反的又是最小关系
- en: transitive.  Formally, it is defined like this in the Relations
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 传递性。形式上，它是这样在Relations中定义的
- en: 'module of the Coq standard library:'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Coq标准库的模块：
- en: '[PRE24]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: For example, the reflexive and transitive closure of the
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，关系的自反传递闭包
- en: next_nat relation coincides with the le relation.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: next_nat关系与le关系一致。
- en: '[PRE25]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The above definition of reflexive, transitive closure is natural:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述自反传递闭包的定义是自然的：
- en: it says, explicitly, that the reflexive and transitive closure of
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 明确表示，关系R的自反传递闭包是
- en: R is the least relation that includes R and that is closed
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: R是包含R并且是封闭的最小关系
- en: under rules of reflexivity and transitivity.  But it turns out
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在自反性和传递性规则下。但事实证明
- en: that this definition is not very convenient for doing proofs,
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个定义并不是做证明很方便，
- en: since the "nondeterminism" of the rt_trans rule can sometimes
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于rt_trans规则的“非确定性”有时候
- en: 'lead to tricky inductions.  Here is a more useful definition:'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 导致棘手的归纳。这里是一个更有用的定义：
- en: '[PRE26]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Our new definition of reflexive, transitive closure "bundles"
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们的新定义的自反传递闭包“捆绑”
- en: the rt_step and rt_trans rules into the single rule step.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将rt_step和rt_trans规则合并为单一规则step。
- en: The left-hand premise of this step is a single use of R,
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这一步的左侧前提是R的单次使用，
- en: leading to a much simpler induction principle.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 导致了一个更简单的归纳原理。
- en: Before we go on, we should check that the two definitions do
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在继续之前，我们应该检查一下这两个定义
- en: indeed define the same relation...
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确实定义了相同的关系...
- en: First, we prove two lemmas showing that clos_refl_trans_1n mimics
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，我们证明两个引理，表明clos_refl_trans_1n模拟
- en: the behavior of the two "missing" clos_refl_trans
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 两个“缺失”的clos_refl_trans的行为
- en: constructors.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 构造函数。
- en: '[PRE27]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Exercise: 2 stars, optional (rsc_trans)'
  id: totrans-135
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习：2星，可选（rsc_trans）
- en: '[PRE28]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: ☐
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ☐
- en: Then we use these facts to prove that the two definitions of
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后我们利用这些事实证明了两个定义
- en: reflexive, transitive closure do indeed define the same
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自反传递闭包确实定义了相同的
- en: relation.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关系。
- en: 'Exercise: 3 stars, optional (rtc_rsc_coincide)'
  id: totrans-141
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习：3星，可选（rtc_rsc_coincide）
- en: '[PRE29]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: ☐
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ☐
- en: '[PRE30]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
