- en: Postscript
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '后记 '
- en: '[PRE0]'
  id: totrans-1
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: logic                        calculus
  id: totrans-2
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '逻辑                        微积分 '
- en: '--------------------   ~   ----------------------------'
  id: totrans-3
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '--------------------   ~   ---------------------------- '
- en: software engineering       mechanical/civil engineering
  id: totrans-4
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '软件工程       机械/土木工程 '
- en: '[PRE1]'
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Looking Around
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '四处看看 '
- en: Large-scale applications of these core topics can be found
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '这些核心主题的大规模应用可以找到 '
- en: everywhere, both in ongoing research projects and in real-world
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '到处都是，无论是正在进行的研究项目还是实际世界 '
- en: software systems.  Here are a few recent examples involving
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '软件系统。 这里有一些涉及的最新例子 '
- en: formal, machine-checked verification of real-world software and
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '实际软件和机器检查验证的形式验证 '
- en: hardware systems, to give a sense of what is being done
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '硬件系统，以了解正在进行的工作 '
- en: today...
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '今天... '
- en: CompCert
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'CompCert '
- en: '*CompCert* is a fully verified optimizing compiler for almost all'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*CompCert*是一个几乎所有的完全验证的优化编译器 '
- en: of the ISO C[90] / ANSI C language, generating code for x[86], ARM,
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ISO C[90] / ANSI C语言的代码，为x[86]，ARM生成代码， '
- en: and PowerPC processors.  The whole of CompCert is is written in
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '和PowerPC处理器。 CompCert的整体都是用 '
- en: Gallina and extracted to an efficient OCaml program using Coq's
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Gallina并提取为一个高效的OCaml程序，使用Coq的 '
- en: extraction facilities.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '提取设施。 '
- en: '"The CompCert project investigates the formal verification of'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"CompCert项目调查了 '
- en: realistic compilers usable for critical embedded software. Such
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '适用于关键嵌入式软件的现实编译器。 这样的 '
- en: verified compilers come with a mathematical, machine-checked proof
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '验证的编译器���带数学的，机器检查的证明 '
- en: that the generated executable code behaves exactly as prescribed
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '生成的可执行代码的行为与规定完全一致 '
- en: by the semantics of the source program. By ruling out the
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '通过源程序的语义。 通过排除 '
- en: possibility of compiler-introduced bugs, verified compilers
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '编译器引入的错误的可能性，验证的编译器 '
- en: strengthen the guarantees that can be obtained by applying formal
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '加强可以通过应用形式获得的保证 '
- en: methods to source programs."
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '方法到源程序。 '
- en: In 2011, CompCert was included in a landmark study on fuzz-testing
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '2011年，CompCert被纳入一项关于模糊测试的里程碑研究 '
- en: a large number of real-world C compilers using the CSmith tool.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '大量真实世界的C编译器使用CSmith工具。 '
- en: 'The CSmith authors wrote:'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'CSmith的作者写道： '
- en: 'The striking thing about our CompCert results is that the middle-end bugs we
    found in all other compilers are absent. As of early 2011, the under-development
    version of CompCert is the only compiler we have tested for which Csmith cannot
    find wrong-code errors. This is not for lack of trying: we have devoted about
    six CPU-years to the task. The apparent unbreakability of CompCert supports a
    strong argument that developing compiler optimizations within a proof framework,
    where safety checks are explicit and machine-checked, has tangible benefits for
    compiler users.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '我们CompCert结果的显着之处在于我们在所有其他编译器中发现的中间错误在其中都不存在。 截至2011年初，我们测试过的正在开发中的CompCert版本是我们测试过的唯一一个Csmith找不到错误代码错误的编译器。
    这不是因为没有尝试：我们已经致力于这项任务约六个CPU年。 CompCert的明显不可破坏性支持了一个强有力的论点，即在证明框架内开发编译器优化，其中安全检查是明确的并且经过机器检查，对于编译器用户具有切实的好处。 '
- en: '[http://compcert.inria.fr](http://compcert.inria.fr)'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://compcert.inria.fr](http://compcert.inria.fr) '
- en: seL4
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'seL4 '
- en: '*seL4* is a fully verified microkernel, considered to be the'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*seL4*是一个完全验证的微内核，被认为是 '
- en: world's first OS kernel with an end-to-end proof of implementation
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '具有实现端到端证明的世界第一的OS内核 '
- en: correctness and security enforcement.  It is implemented in C and
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '正确性和安全执行。 它是用C实现的 '
- en: ARM assembly and specified and verified using Isabelle.  The code
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ARM汇编并使用Isabelle指定和验证。 代码 '
- en: is available as open source.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可作为开源提供。
- en: '"seL4 has been comprehensively formally verified: a rigorous'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"seL4已经全面形式验证：一个严格的 '
- en: process to prove mathematically that its executable code, as it
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '证明其可执行代码的数学过程，因为它 '
- en: runs on hardware, correctly implements the behaviour allowed by
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '在硬件上运行，正确实现了允许的行为 '
- en: the specification, and no others. Furthermore, we have proved that
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '规范，并没有其他。 此外，我们已经证明 '
- en: the specification has the desired safety and security
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '规范具有所需的安全性和安全性 '
- en: properties (integrity and confidentiality)... The verification was
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '属性（完整性和机密性）...验证已经完成 '
- en: achieved at a cost that is significantly less than that of
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '达到的成本明显低于 '
- en: traditional high-assurance development approaches, while giving
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '传统的高保障开发方法，同时给予 '
- en: guarantees traditional approaches cannot provide."
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '传统方法无法提供的保证。 '
- en: '[https://sel4.systems](https://sel4.systems).'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://sel4.systems](https://sel4.systems)。 '
- en: CertiKOS
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 'CertiKOS '
- en: '*CertiKOS* is a clean-slate, fully verified hypervisor, written in'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*CertiKOS*是一个全面验证的清洁状态虚拟化程序，编写在 '
- en: CompCert C and verified in Coq.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CompCert C和Coq中的验证
- en: '"The CertiKOS project aims to develop a novel and practical'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “CertiKOS项目旨在开发一种新颖实用的
- en: programming infrastructure for constructing large-scale certified
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于构建大规模认证的编程基础设施
- en: system software. By combining recent advances in programming
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 系统软件。通过结合最近的编程进步
- en: languages, operating systems, and formal methods, we hope to
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语言，操作系统和形式方法，我们希望
- en: 'attack the following research questions: (1) what OS kernel'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 攻击以下研究问题：（1）什么操作系统内核
- en: structure can offer the best support for extensibility, security,
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结构可以为可扩展性、安全性提供最佳支持，
- en: and resilience? (2) which semantic models and program logics can
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 和韧性？（2）哪些语义模型和程序逻辑可以
- en: best capture these abstractions? (3) what are the right
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最好捕捉这些抽象？（3）什么是正确的
- en: programming languages and environments for developing such
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于开发此类环境的编程语言和环境
- en: certified kernels? and (4) how to build automation facilities to
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 认证内核？和（4）如何构建自动化设施
- en: make certified software development really scale?"
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使认证软件开发真正扩展？
- en: '[http://flint.cs.yale.edu/certikos/](http://flint.cs.yale.edu/certikos/)'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://flint.cs.yale.edu/certikos/](http://flint.cs.yale.edu/certikos/)'
- en: Ironclad
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 铁甲
- en: '*Ironclad Apps* is a collection of fully verified web'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*铁甲应用程序*是一组完全验证的网络'
- en: applications, including a "notary" for securely signing
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 应用程序，包括用于安全签名的“公证人”
- en: statements, a password hasher, a multi-user trusted counter, and a
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句，密码哈希器，多用户可信计数器和
- en: differentially-private database.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 差分私有数据库。
- en: The system is coded in the verification-oriented programming
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该系统是以面向验证的编程编写的
- en: language Dafny and verified using Boogie, a verification tool
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语言Dafny并使用Boogie进行验证，一种验证工具
- en: based on Hoare logic.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 基于霍尔逻辑。
- en: '"An Ironclad App lets a user securely transmit her data to a'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “一个铁甲应用程序允许用户安全地传输她的数据到
- en: remote machine with the guarantee that every instruction executed
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 远程机器，保证每条指令都得到执行
- en: on that machine adheres to a formal abstract specification of the
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该机器上的应用程序遵循正式的抽象规范
- en: app’s behavior. This does more than eliminate implementation
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 应用程序的行为。这不仅消除了实现
- en: vulnerabilities such as buffer overflows, parsing errors, or data
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 漏洞，如缓冲区溢出，解析错误或数据
- en: leaks; it tells the user exactly how the app will behave at all
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 泄漏；它告诉用户应用程序将如何在所有情况下表现
- en: times. We provide these guarantees via complete, low-level
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 时间。我们通过完整的低级别提供这些保证
- en: software verification. We then use cryptography and secure
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 软件验证。然后我们使用加密和安全
- en: hardware to enable secure channels from the verified software to
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 硬件，以实现从经过验证的软件到安全通道
- en: remote users."
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 远程用户。”
- en: '[https://github.com/Microsoft/Ironclad/tree/master/ironclad-apps](https://github.com/Microsoft/Ironclad/tree/master/ironclad-apps)'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://github.com/Microsoft/Ironclad/tree/master/ironclad-apps](https://github.com/Microsoft/Ironclad/tree/master/ironclad-apps)'
- en: Verdi
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Verdi
- en: '*Verdi* is a framework for implementing and formally verifying'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*Verdi*是一个用于实现和正式验证的框架'
- en: distributed systems.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 分布式系统。
- en: '"Verdi supports several different fault models ranging from'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “Verdi支持几种不同的故障模型，范围从
- en: idealistic to realistic. Verdi's verified system
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 理想到现实。Verdi的验证系统
- en: transformers (VSTs) encapsulate common fault tolerance
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 变压器（VSTs）封装了常见的容错
- en: techniques. Developers can verify an application in an idealized
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 技术。开发人员可以在理想化的环境中验证应用程序
- en: fault model, and then apply a VST to obtain an application that is
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 故障模型，然后应用VST获得一个应用程序
- en: guaranteed to have analogous properties in a more adversarial
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保证在更具对抗性的环境中具有类似的属性
- en: environment.  Verdi is developed using the Coq proof assistant,
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 环境。Verdi是使用Coq证明助手开发的
- en: and systems are extracted to OCaml for execution. Verdi systems,
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 系统被提取到OCaml以供执行。Verdi系统，
- en: including a fault-tolerant key-value store, achieve comparable
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包括容错键值存储，实现可比较的
- en: performance to unverified counterparts."
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 性能与未经验证的对应物相比。”
- en: '[http://verdi.uwplse.org](http://verdi.uwplse.org)'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://verdi.uwplse.org](http://verdi.uwplse.org)'
- en: DeepSpec
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DeepSpec
- en: '*The Science of Deep Specification* is an NSF "Expedition"'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*深度规范的科学*是NSF的“远征”'
- en: project (running from 2016 to 2020) that focuses on the
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 项目（从2016年到2020年）专注于
- en: specification and verification of full functional correctness of
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完全正确的规范和验证
- en: both software and hardware.  It also sponsors workshops and summer
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 软件和硬件。它还赞助研讨会和暑期
- en: schools.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 学校。
- en: 'Website: [http://deepspec.org/](http://deepspec.org/)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站：[http://deepspec.org/](http://deepspec.org/)
- en: 'Overview presentations:'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概述演示：
- en: '[http://deepspec.org/about/](http://deepspec.org/about/)'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://deepspec.org/about/](http://deepspec.org/about/)'
- en: '[https://www.youtube.com/watch?v=IPNdsnRWBkk](https://www.youtube.com/watch?v=IPNdsnRWBkk)'
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.youtube.com/watch?v=IPNdsnRWBkk](https://www.youtube.com/watch?v=IPNdsnRWBkk)'
- en: REMS
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: REMS
- en: '*REMS* is a european project on Rigorous Engineering of Mainstream'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*REMS*是一个关于主流严格工程的欧洲项目'
- en: Systems.  It has produced detailed formal specifications of a wide
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 系统。它已经制定了广泛的正式规范
- en: range of critical real-world interfaces, protocols, and APIs,
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一系列关键的现实世界接口、协议和API，
- en: including
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包括
- en: the C language,
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C语言，
- en: the ELF linker format,
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ELF链接器格式，
- en: the ARM, Power, MIPS, CHERI, and RISC-V instruction sets,
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ARM、Power、MIPS、CHERI和RISC-V指令集，
- en: the weak memory models of ARM and Power processors, and
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ARM和Power处理器的弱内存模型，以及
- en: POSIX filesystems.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: POSIX文件系统。
- en: '"The project is focussed on lightweight rigorous methods: precise'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “该项目专注于轻量级严格方法：精确
- en: specification (post hoc and during design) and testing against
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 规范（事后和设计期间）和针对
- en: specifications, with full verification only in some cases. The
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 规范，在某些情况下进行全面验证。该
- en: project emphasises building useful (and reusable) semantics and
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 项目强调构建有用（和可重用）的语义和
- en: tools. We are building accurate full-scale mathematical models of
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 工具。我们正在构建准确的全尺度数学模型
- en: some of the key computational abstractions (processor
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一些关键的计算抽象（处理器
- en: architectures, programming languages, concurrent OS interfaces,
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 架构、编程语言、并发操作系统接口，
- en: and network protocols), studying how this can be done, and
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 和网络协议），研究如何实现这一点，以及
- en: investigating how such models can be used for new verification
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 研究如何利用这些模型进行新的验证
- en: research and in new systems and programming language
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 研究和新的系统和编程语言
- en: research. Supporting all this, we are also working on new
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 研究。为了支持所有这些，我们还在研究新的
- en: specification tools and their foundations."
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 规范工具及其基础。
- en: '[http://www.cl.cam.ac.uk/~pes20/rems/](http://www.cl.cam.ac.uk/~pes20/rems/)'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://www.cl.cam.ac.uk/~pes20/rems/](http://www.cl.cam.ac.uk/~pes20/rems/)'
- en: Others
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他
- en: 'There''s much more.  Other projects worth checking out include:'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 还有更多。其他值得关注的项目包括：
- en: Vellvm (formal specification and verification of LLVM optimization passes)
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vellvm（LLVM优化通道的形式化规范和验证）
- en: Zach Tatlock's formally certified browser
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扎克·塔特洛克的正式认证的浏览器
- en: Tobias Nipkow's formalization of most of Java
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托比亚斯·尼普考对大部分Java的形式化
- en: The CakeML verified ML compiler
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CakeML验证ML编译器
- en: Greg Morrisett's formal specification of the x[86] instruction set and the RockSalt
    Software Fault Isolation tool (a better, faster, more secure version of Google's
    Native Client)
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 格雷格·莫里塞特对x[86]指令集和RockSalt软件故障隔离工具（谷歌原生客户端的更好、更快、更安全版本）的正式规范
- en: Ur/Web, a programming language for verified web applications embedded in Coq
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ur/Web，一种用于在Coq中嵌入的验证Web应用程序的编程语言
- en: the Princeton Verified Software Toolchain
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 普林斯顿验证软件工具链
- en: '[PRE2]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: (* $Date: 2016-12-08 16:57:10 -0500 (Thu, 08 Dec 2016) $ *)
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: (* $Date: 2016-12-08 16:57:10 -0500 (Thu, 08 Dec 2016) $ *)
- en: '[PRE3]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
