- en: String
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: String
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'In `Go`, string is an immutable array of bytes. So if created, we can''t change
    its value. E.g.:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The compiler will complain:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To modify the content of a string, you could convert it to a `byte` array.
    But in fact, you **do not** operate on the original string, just a copy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Since `Go` uses `UTF-8` encoding, you must remember the `len` function will
    return the string''s byte number, not character number:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Because each Chinese character occupied `3` bytes, `s` in the above example
    contains `5` characters and `9` bytes.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to access every character, `for ... range` loop can give a help:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The result is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Reference:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Strings, bytes, runes and characters in Go](https://blog.golang.org/strings);'
  prefs: []
  type: TYPE_NORMAL
- en: '[The Go Programming Language](http://www.gopl.io/).'
  prefs: []
  type: TYPE_NORMAL
