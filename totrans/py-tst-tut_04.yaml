- en: Fixtures
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Fixtures
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Exercise 1: A module for test data'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Create a new module `conftest.py` with a string variable that contains a sentence
    with lots of special characters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a function that returns a `mobydick.TextCorpus` object with the sample
    text above. Use the following as a header:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Exercise 2: Using the fixture'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now create a module `test_sample.py` with a function that uses the fixture:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Execute the module with `pytest`. Note that you **do not** need to import `conftest`.
    Pytest does that automatically.
  prefs: []
  type: TYPE_NORMAL
- en: 'Exercise 3: Create more fixtures'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create fixtures for the two text corpora in the files `mobydick_full.txt` and
    `mobydick_summary.txt` as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Exercise 4: Fixtures from fixtures'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Create a fixture in `conftest.py` that uses another fixture:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Write a simple test that makes sure the fixture is not `None`
  prefs: []
  type: TYPE_NORMAL
