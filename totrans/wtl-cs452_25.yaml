- en: Lecture 25 - Demos, Reservations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Public Service Annoucements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you will give you demo
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tuesday, 3 July.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: I will put a sign-up schedule in the lab with fifteen minute slots at different
    times on Tuesday morning. Choose which is the most convenient for you.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Giving a Demo
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The notes below assume particular roles: `we'' are the prof and TAs, the audience
    of the demo; `you'' are the students giving the demo.'
  prefs: []
  type: TYPE_NORMAL
- en: Remember these rules
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: You may choose
  prefs: []
  type: TYPE_NORMAL
- en: which track you wish to use,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: which train you wish to use
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: but, if one or the other is not available
  prefs: []
  type: TYPE_NORMAL
- en: you should be able to run with a different locomotive or the other track.,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Demos are Important
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We give two marks for each part of the project
  prefs: []
  type: TYPE_NORMAL
- en: one for the demo, which shows us what you project is doing in reality
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: one for the documentation, which shows us what your project is doing on paper
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Stay in Control
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Dead air
  prefs: []
  type: TYPE_NORMAL
- en: When there is nothing being said in a social situation people feel awkward.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They will talk to fill the empty space.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At a demo they will ask questions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One question leads to another.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You reach the end of the demo with the best things not shown.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Think about how to get back in control
  prefs: []
  type: TYPE_NORMAL
- en: '`Now we want to show you how we do X.'''
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is okay to be quite direct, `It's getting late and we want you to see Y.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the train needs to run for a minute to refresh its calibration, spend the
    time
  prefs: []
  type: TYPE_NORMAL
- en: telling us what you are going to show
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: telling us where you succeeded
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Know in Advance what You Want to Demo
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Make a list, progress from easy things to harder ones
  prefs: []
  type: TYPE_NORMAL
- en: First the basic parts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next the neat extra things you did
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make your plan really concrete
  prefs: []
  type: TYPE_NORMAL
- en: which locomotive you want to use
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: where it starts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: where you will ask it to go
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tell us what was difficult to achieve in what you're showing
  prefs: []
  type: TYPE_NORMAL
- en: Make your demo easy to do
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: put the train on the tracks in places that are easy to reach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stop the train at places that are easy for us to measure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stop the train in a location that's good for starting the next part.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: drive the train to where you need it instead of picking it up.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write down the details so you don't forget.
  prefs: []
  type: TYPE_NORMAL
- en: Test Everything You Want to Demo
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Have at least one older executable available
  prefs: []
  type: TYPE_NORMAL
- en: There are Two of You
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Ways to take advantage of it
  prefs: []
  type: TYPE_NORMAL
- en: One at the terminal controlling the train, one explaining what is what is happening
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One at the terminal readying the next part, the other at the train readying
    the train part and telling us what we will see next and why it's important
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Switch roles to give the demo more variety
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be ready for questions
  prefs: []
  type: TYPE_NORMAL
- en: Explicitly asking us if we have questions to control when they get asked.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Put as much information as you can think of onto the terminal.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how much the idle task is running
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: where your calibration thinks the train is
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: keep track of this even after you have given the stop command
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: errors in your predictions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: in time (milliseconds) and distance (cm)
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Your Hands
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: For the most part we don't know where the things you're explaining are on the
    track or the terminal.
  prefs: []
  type: TYPE_NORMAL
- en: point to them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Reservations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Somebody has been doing something right for the last century. The answer is
    reservations.
  prefs: []
  type: TYPE_NORMAL
- en: Two Level Train Control
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The two levels are completely independent of one another.
  prefs: []
  type: TYPE_NORMAL
- en: On heavily used sections of track the lower level is done completely by hardware
    with no possibility (almost) of human intervention
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upper Level
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Train asks despatcher for a route
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Despatcher provides a route that he/she thinks to be conflict free
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Train follows the route, reporting back to the despatcher as landmarks (sensors)
    are passed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The despatcher gets two reports
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: One from the hardware
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: One from the engineer
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: It is up to the despatcher to make certain that they do not conflict.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: What is to come on the route is communicated to the train driver by the lights
    along the track
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Lower Level
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The lower level is encoded in the coloured lights you see along the track. In
    cases of conflict between the upper and lower levels, the lower level wins.
  prefs: []
  type: TYPE_NORMAL
- en: Everything is rigidly enforced by hardware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The human enters the loop only in that the lights tell the engineer what he/she
    is allowed to do
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The engineer loses his licence, FOREVER, if he/she ever goes through a red light.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If the system detects a violation of its rules or a state that should never
    occur it enters a failsafe mode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All lights go red.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Something Essential that You Ought to Do
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Design your reservation system before coding it.
  prefs: []
  type: TYPE_NORMAL
- en: Before coding your reservation system work it out on paper and make sure that
    it works for all the generic cases you can think of
  prefs: []
  type: TYPE_NORMAL
- en: One train following another
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Two trains on a collision course
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are one or more switches in the path
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Stopping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A conservative train control system ensures that
  prefs: []
  type: TYPE_NORMAL
- en: At all times
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: every train is travelling slowly enough that
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the next time there is an information update
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: it can give a stop command
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and stop without running into another train
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: or off the end of the track.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For simplicity we assume that
  prefs: []
  type: TYPE_NORMAL
- en: all trains follow the same set of rules.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How much clear track does a train need?
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The stopping distance? Not enough unless the train starts to stop immediately.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The stopping distance plus time for the command to arrive at the train? Not
    enough the stop request is given immediately.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You have, no doubt, defined stopping distance in a variety of different ways.
    Here it is defined as the distance it takes the train to stop from the point where
    the command is processed at the locomotive.
  prefs: []
  type: TYPE_NORMAL
- en: The stopping distance plus the time for the command to arrive at the train plus
    the amount of time until the train next decides whether or not to stop. This is
    enough if all other trains are stationary..
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To be concrete, suppose the train decides what to do next each time it arrives
    at a sensor. Then,
  prefs: []
  type: TYPE_NORMAL
- en: If it just passed sensor *n,*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the next time it will decide is when it arrives at sensor *n+*1,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the amount of clear track it needs is the stopping distance part sensor *n*+1.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What if other trains are moving?
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Every train needs in front of it an amount of clear track calculated as above.
  prefs: []
  type: TYPE_NORMAL
- en: Head on.
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: The train coming at me needs his amount of distance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I need my amount of distance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We must both start to stop when we are the sum of the distance apart.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remember that the distance any train needs diminishes as it slows down.
  prefs: []
  type: TYPE_NORMAL
- en: Following
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: If a train and the train it is following, initiate stopping at the same time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the inter-train distance changes only by the difference in stopping distance,
    which ought to be small.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This suggests that one train can follow another train quite closely, but it
    assumes that the leading train will not do something unexpected, such as
  prefs: []
  type: TYPE_NORMAL
- en: stalling or
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: running into another train.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is it possible to guarantee that such things won't ever happen?
  prefs: []
  type: TYPE_NORMAL
- en: Train safety, like everything else in the world, is a trade-off.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Bill Cowan''s lecture notes for CS452 in s12](index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bill Cowan''s Spring 2012 CS452 page](../index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bill Cowan''s CS452 page](../../index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bill Cowan''s teaching page](../../../index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bill Cowan''s home page](../../../../index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
