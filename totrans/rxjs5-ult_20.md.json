["```\nbuffer([breakObservable]) \n```", "```\nlet breakWhen$ = Rx.Observable.timer(1000);\n\nlet stream$ = Rx.Observable.interval(200)\n.buffer( breakWhen$ );\n\nstream$.subscribe((data) => console.log( 'values',data )); \n```", "```\nlet input = document.getElementById('example');\nlet input$  = Rx.Observable.fromEvent( input, 'keyup' )\n\nlet breakWhen$ = Rx.Observable.timer(1000);\nlet debounceBreak$ = input$.debounceTime( 2000 );\n\nlet stream$ = input$\n.map( ev => ev.key )\n.buffer( debounceBreak$ );\n\nstream$.subscribe((data) => console.log( 'values',data )); \n```", "```\nlet input = document.getElementById('example');\nlet input$  = Rx.Observable.fromEvent( input, 'keyup' )\n\nlet breakWhen$ = Rx.Observable.timer(1000);\nlet debounceBreak$ = input$.debounceTime( 2000 );\n\nlet stream$ = input$\n.map( ev => { \n    return ev.key })\n.buffer( debounceBreak$ )\n.switchMap((allTypedKeys) => {\n    // do ajax\n    console.log('Everything that happened during 2 sec', allTypedKeys)\n    return Rx.Observable.of('ajax based on ' + input.value);\n});\n\nstream$.subscribe((data) => console.log( 'values',data )); \n```", "```\n// from switchMap\nEverything that happened during 2 sec [\"a\", \"a\", \"a\", \"Backspace\", \"Backspace\", \"Backspace\", \"Backspace\", \"b\", \"b\", \"Backspace\", \"Backspace\", \"Backspace\", \"f\", \"g\", \"h\", \"f\", \"h\", \"g\"]\n\n// in the subscribe(fnValue)\napp-buffer.js:31 values ajax based on fghfgh \n```", "```\nlet btn = document.getElementById('btn2');\nlet btn$  = Rx.Observable.fromEvent( btn, 'click' )\n\nlet debounceMouseBreak$ = btn$.debounceTime( 300 );\n\nlet btnBuffered$ = btn$\n.buffer( debounceMouseBreak$ )\n.map( array => array.length )\n.filter( count => count >= 2 )\n;\n\nbtnBuffered$.subscribe((data) => console.log( 'values',data )); \n```", "```\nbufferTime([ms]) \n```", "```\nlet input = document.getElementById('example');\nlet input$  = Rx.Observable.fromEvent( input, 'input' )\n.bufferTime(1000);\n\ninput$.subscribe((data) => console.log('all inputs in 1 sec', data)); \n```", "```\nall inputs in 1 sec [ Event, Event... ] \n```", "```\nlet input = document.getElementById('example');\nlet input$  = Rx.Observable.fromEvent( input, 'keyup' )\n.map( ev => ev.key)\n.bufferTime(1000);\n\ninput$.subscribe((data) => console.log('all inputs in 1 sec', data)); \n```"]