- en: Debugging
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Debugging
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'No one can write bug-free code, so debugging is a requisite skill for every
    software engineer. Here are some tips about debugging `Go` programs:'
  prefs: []
  type: TYPE_NORMAL
- en: (1) Print
  prefs: []
  type: TYPE_NORMAL
- en: Yes! Printing logs seems the easiest method, but it is indeed the most effective
    approach in most cases. `Go` has provided a big family of printing functions in
    [fmt](https://golang.org/pkg/fmt/) package, and using them neatly is an expertise
    you should grasp.
  prefs: []
  type: TYPE_NORMAL
- en: (2) Debugger
  prefs: []
  type: TYPE_NORMAL
- en: In some scenarios, maybe you need the specialized debugger tools to help you
    spot the root cause. You can use `gdb`, but since "`GDB does not understand Go
    programs well.`" (from [here](https://golang.org/doc/gdb)), I suggest taking [Delve](https://github.com/derekparker/delve),
    a dedicated debugger for `Go`, instead.
  prefs: []
  type: TYPE_NORMAL
- en: No matter using `gdb` or `Delve`, if you want to debug the executable file,
    you must pass `-gcflags "-N -l"` during compiling binary to disable code optimization,
    else some weird things can happen during debugging, such as you can't print the
    value of an already declared variable.
  prefs: []
  type: TYPE_NORMAL
- en: 'Except debugging the precompiled file, `Delve` can compile and debug the code
    on the fly, see the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Debugging flow is like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Compared with `gdb`, `Delve` doesn't provide `start` command, so you need to
    set breakpoint first, then run `continue` command. You can see, `Delve` provides
    fruitful commands, e.g., you can check every goroutine status, so I think you
    should practice it frequently, and you will love it!
  prefs: []
  type: TYPE_NORMAL
- en: Happy debugging!
  prefs: []
  type: TYPE_NORMAL
