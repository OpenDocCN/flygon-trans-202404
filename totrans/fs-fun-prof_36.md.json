["```\nvar x = 2;\nDoSomething(x);\n\n// What value is y? \nvar y = x - 1; \n```", "```\nfunction DoSomething (foo) { x = false}\n\nvar x = 2;\nDoSomething(x);\nvar y = x - 1; \n```", "```\n// create two customers\nvar cust1 = new Customer(99, \"J Smith\");\nvar cust2 = new Customer(99, \"J Smith\");\n\n// true or false?\ncust1.Equals(cust2); \n```", "```\n// true or false?\ncust1.Equals(cust2); \n```", "```\n// create a customer and an order\nvar cust = new Customer(99, \"J Smith\");\nvar order = new Order(99, \"J Smith\");\n\n// true or false?\ncust.Equals(order); \n```", "```\n// true or false?\ncust.Equals(order); \n```", "```\n// create a customer\nvar cust = new Customer();\n\n// what is the expected output?\nConsole.WriteLine(cust.Address.Country); \n```", "```\n// what is the expected output?\nConsole.WriteLine(cust.Address.Country); \n```", "```\n// create a customer\nvar cust = new Customer(99, \"J Smith\");\n\n// add it to a set\nvar processedCustomers = new HashSet<Customer>();\nprocessedCustomers.Add(cust);\n\n// process it\nProcessCustomer(cust);\n\n// Does the set contain the customer? true or false?\nprocessedCustomers.Contains(cust); \n```", "```\n// Does the set contain the customer?\nprocessedCustomers.Contains(cust); \n```", "```\n// create a customer\nvar cust = new ImmutableCustomer(99, \"J Smith\");\n\n// add it to a set\nvar processedCustomers = new HashSet<ImmutableCustomer>();\nprocessedCustomers.Add(cust);\n\n// process it and return the changes\nvar changedCustomer = ProcessCustomer(cust);\n\n// true or false?\nprocessedCustomers.Contains(cust); \n```", "```\nvar changedCustomer = ProcessCustomer(cust); \n```", "```\n// create a repository\nvar repo = new CustomerRepository();\n\n// find a customer by id\nvar customer = repo.GetById(42);\n\n// what is the expected output?\nConsole.WriteLine(customer.Id); \n```", "```\nvar customer = repo.GetById(42);\n\n// what is the expected output?\nConsole.WriteLine(customer.Id); \n```", "```\n// create a repository\nvar repo = new CustomerRepository();\n\n// find a customer by id and\n// return a CustomerOrError result\nvar customerOrError = repo.GetById(42); \n```", "```\n// handle both cases\nif (customerOrError.IsCustomer)\n    Console.WriteLine(customerOrError.Customer.Id);\n\nif (customerOrError.IsError)\n    Console.WriteLine(customerOrError.ErrorMessage); \n```"]