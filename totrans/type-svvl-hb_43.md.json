["```\nts`const  <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>  = [\"CNY\",  \"EUR\",  \"GBP\",  \"JPY\",  \"KRW\",  \"USD\"] as  <data-lsp lsp=\"type const = readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">const</data-lsp>;type  <data-lsp lsp=\"type Currency = &quot;CNY&quot; | &quot;EUR&quot; | &quot;GBP&quot; | &quot;JPY&quot; | &quot;KRW&quot; | &quot;USD&quot;\" style=\"border-bottom:solid 2px lightgrey\">Currency</data-lsp>  = (typeof <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>)[number];` `type Currency = \"CNY\" | \"EUR\" | \"GBP\" | \"JPY\" | \"KRW\" | \"USD\"`\n\n```", "```\nts`const  <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>  = [\"CNY\",  \"EUR\",  \"GBP\",  \"JPY\",  \"KRW\",  \"USD\"] as  <data-lsp lsp=\"type const = readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">const</data-lsp>;type  <data-lsp lsp=\"type Currency = &quot;GBP&quot;\" style=\"border-bottom:solid 2px lightgrey\">Currency</data-lsp>  = (typeof <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>)[2];` `type Currency = \"GBP\"`\n\n```", "```\nts`const  <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>  = [\"CNY\",  \"EUR\",  \"GBP\",  \"JPY\",  \"KRW\",  \"USD\"] as  <data-lsp lsp=\"type const = readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">const</data-lsp>;const  <data-lsp lsp=\"const index: 2\">index</data-lsp>  =  2  as  <data-lsp lsp=\"type const = 2\">const</data-lsp>;type  <data-lsp lsp=\"type Currency = &quot;CNY&quot; | &quot;EUR&quot; | &quot;GBP&quot; | &quot;JPY&quot; | &quot;KRW&quot; | &quot;USD&quot;\">Currency</data-lsp>  = (typeof <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>)[<data-err><data-lsp lsp=\"type index = /*unresolved*/ any\">index</data-lsp></data-err>];'index' refers to a value, but is being used as a type here. Did you mean 'typeof index'?2749'index' refers to a value, but is being used as a type here. Did you mean 'typeof index'?`\n```", "```\nts`const  <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>  = [\"CNY\",  \"EUR\",  \"GBP\",  \"JPY\",  \"KRW\",  \"USD\"] as  <data-lsp lsp=\"type const = readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">const</data-lsp>;const  <data-lsp lsp=\"const index: 2\">index</data-lsp>  =  2  as  <data-lsp lsp=\"type const = 2\">const</data-lsp>;type <data-lsp lsp=\"type Currency = &quot;CNY&quot; | &quot;EUR&quot; | &quot;GBP&quot; | &quot;JPY&quot; | &quot;KRW&quot; | &quot;USD&quot;\">Currency</data-lsp> = (typeof <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>)[<data-err><data-lsp lsp=\"type index = /*unresolved*/ any\">index</data-lsp></data-err>];'index' refers to a value, but is being used as a type here. Did you mean 'typeof index'?2749'index' refers to a value, but is being used as a type here. Did you mean 'typeof index'?`\n```", "```\nts`const  <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>  = [\"CNY\",  \"EUR\",  \"GBP\",  \"JPY\",  \"KRW\",  \"USD\"] as  <data-lsp lsp=\"type const = readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">const</data-lsp>;type  <data-lsp lsp=\"type Index = 2\">Index</data-lsp>  =  2;type  <data-lsp lsp=\"type Currency = &quot;GBP&quot;\" style=\"border-bottom:solid 2px lightgrey\">Currency</data-lsp>  = (typeof <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>)[<data-lsp lsp=\"type Index = 2\">Index</data-lsp>];` `type Currency = \"GBP\"`\n\n```", "```\nts`const  <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>  = [\"CNY\",  \"EUR\",  \"GBP\",  \"JPY\",  \"KRW\",  \"USD\"] as  <data-lsp lsp=\"type const = readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">const</data-lsp>;type  <data-lsp lsp=\"type Currency = &quot;CNY&quot; | &quot;EUR&quot; | &quot;GBP&quot; | &quot;JPY&quot; | &quot;KRW&quot; | &quot;USD&quot;\" style=\"border-bottom:solid 2px lightgrey\">Currency</data-lsp>  = (typeof <data-lsp lsp=\"const currencies: readonly [&quot;CNY&quot;, &quot;EUR&quot;, &quot;GBP&quot;, &quot;JPY&quot;, &quot;KRW&quot;, &quot;USD&quot;]\">currencies</data-lsp>)[0  |  1  |  2  |  3  |  4  |  5];` `type Currency = \"CNY\" | \"EUR\" | \"GBP\" | \"JPY\" | \"KRW\" | \"USD\"`\n\n```", "```\nts`type  <data-lsp lsp=\"type List = (string | number | boolean)[]\">List</data-lsp>  = (string  |  number  |  boolean)[];type  <data-lsp lsp=\"type Elem = string | number | boolean\" style=\"border-bottom:solid 2px lightgrey\">Elem</data-lsp>  =  <data-lsp lsp=\"type List = (string | number | boolean)[]\">List</data-lsp>[number];` `type Elem = string | number | boolean`\n\n```", "```\nts`type  <data-lsp lsp=\"type List = (string | number | boolean)[]\">List</data-lsp>  = (string  |  number  |  boolean)[];type  <data-lsp lsp=\"type Elem = string | number | boolean\" style=\"border-bottom:solid 2px lightgrey\">Elem</data-lsp>  =  <data-lsp lsp=\"type List = (string | number | boolean)[]\">List</data-lsp>[0]; // \u907f\u3051\u308b\u3079\u304d\u66f8\u304d\u65b9` `type Elem = string | number | boolean`\n\n```", "```\n\n```", "```\n\n```", "```\n\n```", "```\n\n```", "```\n\n```", "```\n\n```"]