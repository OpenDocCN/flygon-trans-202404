- en: Lecture 18 - Projects, Calibration III, Projects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Public Service Annoucements
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Exam: 9.00, August 8'
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First milestone.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Route finding is part of this milestone only so that you can do things that
    show your calibration to be correct. For milestone 2 you will have to do route
    finding on track graphs with edges missing, so choose an approach to route finding
    that generalizes.
  id: totrans-4
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In the demo you can use your preferred train and your preferred track, but only
    if they are working, and either may not be working. In that case we expect you
    to run your demo using another train and/or another track. Be prepared!
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Projects
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 1\. Train style
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Give trains roles and objectives. For example,
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Passenger train travels on a repetitive route meeting a schedule.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Freight train travels to random destinations as fast as possible.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Objective is to deliver as much freight as possible while keeping a passenger
    train on time.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another example,
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Trains are taxis.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When a load appears they race to see if they can get it.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another example,
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Trains are buses, which travel long routes from one place on the track to another.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At the end of the route is a scheduled trip to a different location.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When a bus is late arriving, the dispatcher must find another, unused bus to
    leave at the scheduled leaving time.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '2\. Game style: AI'
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The track is a graph.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Several different ways to choose vertices and edges
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Many games are played on graphs
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Checkers, snakes & ladders, maze games, etc.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement a graph game played on the track graph.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, watchmen and bandit.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: One train is the bandit, which tries to move from one hide-out to another.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The other trains are watchmen, who try to prevent the bandit from getting to
    a hide-out once he is out in the open.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another example, PAC man
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: One train tries to cover as much track as possible.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other trains try to trap him so that he can't get reservations that would allow
    him to keep moving.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '3\. Game style: interactive'
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the games you play for pleasure, the user normally controls one or more of
    the game entities.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: the bandit
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the trapping trains
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Students often want to make an interactive project. It has been done successfully
    in the past, but constructing a usable interface is a real challenge
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Calibration
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 1\. Calibrating Stopping Distance
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Hint.** Interacting with other groups is useful to confirm that you are on
    track. Of course, simply using another group''s calibration without saying so
    is `academic dishonesty''.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Calibrating Constant Velocity
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: At this point there are a few places on the track where you can stop with a
    precision of a trainlength or better. However, suppose you want to reverse direction
    at a switch.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: You want to be close to the switch, clear of the switch, and on the right side
    of the switch when you stop.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You want to know when the train has stopped because, until then you cannot give
    the command to start moving again.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How Much Time does it Take to Stop?
  id: totrans-46
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Try the following exercise.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Choose a sensor.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Put the train on a course that will cross the sensor.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the train up to a constant speed.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Give the speed zero command at a location that stops the train with its contact
    on the sensor. (You know the stopping distance.).
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Calculate the time between when you gave the command and when the sensor triggered.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Look for regularities.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How Long does it Take the Train to Get up to Speed?
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We call the time the train takes to get up to speed the *acceleration time*.
    Finding the acceleration time is left as an exercise for the reader.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '**Hint.** The distance travelled from a standing start, graphed as a function
    of time, is a straight line after the train reaches a constant speed'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Stage 3\. Calibrating Acceleration and Deceleration
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Thinking again about the problem of following a route that has reverses.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Reverses always occur in order to go a different direction at a turn-out.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to move as little beyond the switch as possible.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Much of this manoeuvering is done at non-constant velocities.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Physics of Acceleration and Deceleration
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Suppose a train is at x1=x(t1) with velocity v1=v(t1) at time t1, and we want
    to get it go x2=x(t2) with velocity v2=v(t2) at time t2, and we want to do it
    without exceeding any of the physical limits of the train.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: At the core is a relation, (x, t), which is a space-time point. The relation
    says that as time passes a train takes up successive positions x(t). Velocity
    is deduced as the time derivative of x(t).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: Our task is to create a physically possible path x(t) obeying such constraints.
    To do so we must know how the train's velocity varies when its speed is changed.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Our task is simplified because the velocity change function is artificial,
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: created by programmers just like us, and
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: intended to imitate real trains.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We try to get into the programmer/designer's head and think their thoughts
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: Teleportation
  id: totrans-71
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The simplest way of moving the train from one place to another.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: At time t teleport the train to x=x2, v=0.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At time t2 increase the velocity to v2\.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The first thing that we rule out is teleportation.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: Why?
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A train having infinite velocity is impossible in practice
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: Leave to the physicists whether or not it is possible for a train to have infinite
    velocity in theory.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No teleportation means that x(t) must be continuous.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Constant Velocity
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Suppose you have a train at (x1, t1) and you have to get it to (x2, t2).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: 'Two questions:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Is it possible? If the maximum velocity is vmax, and vmax < (x2 - x1) / (t2
    - t1), then it's impossible.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do you do it? If vmax > (x2 - x1) / (t2 - t1) then you might try
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set v = (x2 - x1) / (t2 - t1) at t1
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Use your velocity calibration for this!
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Set v = 0 at t2.
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Doesn't quite work.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Because of acceleration you arrive at x2 after t2.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Because of deceleration you don't stop until the stopping distance beyond x2.
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: You could
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: curse the inadequate train dynamics
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: constrain vmax to be very small
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: only accept requests for long in the future and be successful because the acceleration
    and deceleration times are negligible.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: But
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: It's against the rules.
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是违反规则的。
- en: You would be unsuccessful because of stalling on curves.
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会因为在曲线上熄火而失败。
- en: Your project would only be interesting to trees and other long-lived creatures.
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的项目只会对树木和其他长寿生物感兴趣。
- en: More Fundamental
  id: totrans-99
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 更基础的
- en: Infinite acceleration is impossible because the train would be crushed, if not
    vaporized!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 无限加速是不可能的，因为火车会被压碎，如果不是蒸发！
- en: This is true both in theory and in practice.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这在理论和实践中都是真实的。
- en: Constant Acceleration/Deceleration
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 恒定加速度/减速度
- en: Intuitively a good idea to minimize acceleration
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 直观上最小化加速度是一个好主意
- en: Accelerate at a from t1 to (t2 + t1) / 2
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 t1 加速到 (t2 + t1) / 2
- en: Velocity is a*(t-t1)
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 速度是 a*(t-t1)
- en: Position is x1 + (1/2)*a*(t-t1)^2
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 位置是 x1 + (1/2)*a*(t-t1)^2
- en: Decelerate at -a from (t2 + t1) / 2 to t2
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 (t2 + t1) / 2 减速到 t2
- en: Velocity is a*(t2-t1) / 2 - a*(t - (t2+t1)/2 )
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 速度是 a*(t2-t1) / 2 - a*(t - (t2+t1)/2 )
- en: Position is ...
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 位置是...
- en: At t2
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 t2 时
- en: Velocity is 0
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 速度为0
- en: Position is x1 + (1/8)*a*(t2 - t1) ^2, which should be x2.
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 位置是 x1 + (1/8)*a*(t2 - t1) ^2，应该是 x2。
- en: Therefore choose a = (8 * (x2 - x1)) / (t2 - t1)^2
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此选择 a = (8 * (x2 - x1)) / (t2 - t1)^2
- en: But, what happens at t = t1, (t2 + t1) / 2, t2?
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，在 t = t1，(t2 + t1) / 2，t2 时会发生什么？
- en: discontinuities in acceleration
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速度的不连续性
- en: experienced as jerk, in fact, infinite jerk
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事实上，体验到的是抖动，实际上是无限抖动
- en: And you know from experience that when you jerk things hard enough they break.
    E.g.,
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你从经验中知道，当你用力抖动东西时，它们会断裂。例如，
- en: tooth
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 牙齿
- en: knuckle
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指关节
- en: Constant Jerk
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 恒定的抖动
- en: Third order curve for position, second order for velocity, linear acceleration.
    We usually go one better, and try to minimize jerk over the whole journey.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 位置的三阶曲线，速度的二阶曲线，线性加速度。我们通常更进一步，尝试在整个旅程中尽量减少抖动。
- en: Minimize Jerk
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最小化抖动
- en: Acceleration/Deceleration is continuous
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度/减速度是连续的
- en: The result is a fourth order curve in position, third order in velocity, which
    is what you try to achieve when you drive.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是位置的四阶曲线，速度的三阶曲线，这是你驾驶时尝试实现的目标。
- en: '* * *'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Is it Worth Having an Explicit Function?
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 值得拥有明确的功能吗？
- en: Benefits
  id: totrans-127
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 好处
- en: You can calculate position explicitly without having to do numerical integration.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以明确计算位置，而无需进行数值积分。
- en: Euler integration is unstable because of accumulating error.
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欧拉积分不稳定，因为误差会累积。
- en: You can calculate the parameters of a function with less measurement. How?
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过更少的测量计算函数的参数。如何？
- en: Start at x = t = 0, which assumes that you get the same function regrardless
    of position on the track and time of day.
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 x = t = 0 开始，这假设你在轨道上的位置和一天中的时间都是相同的函数。
- en: Check deceleration inverse of acceleration?
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查减速是否是加速的反向？
- en: '&c.'
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等等。
- en: The idea is that the person who programmed acceleration/deceleration into the
    train was lazy, so there's probably one basic function used over and over again
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个想法是，将加速度/减速度编程到火车中的人很懒，所以可能一直使用一个基本函数。
- en: Drawbacks
  id: totrans-135
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 缺点
- en: You need to check that the functional form you have is the right one, or a right-enough
    one.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要检查你拥有的函数形式是否正确，或者足够正确。
- en: For practical purposes small look-up tables may be perfectly adequate.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于实际目的，小的查找表可能完全足够。
- en: '* * *'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Return to:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 返回至：
- en: '[Bill Cowan''s lecture notes for CS452 in s12](index.html)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩在 s12 学期的 CS452 讲义](index.html)'
- en: '[Bill Cowan''s Spring 2012 CS452 page](../index.html)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩 2012 年春季 CS452 页面](../index.html)'
- en: '[Bill Cowan''s CS452 page](../../index.html)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的 CS452 页面](../../index.html)'
- en: '[Bill Cowan''s teaching page](../../../index.html)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的教学页面](../../../index.html)'
- en: '[Bill Cowan''s home page](../../../../index.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的主页](../../../../index.html)'
