- en: '[Map](data_mining_map.htm) > [Problem Definition](problem_definition.htm) >
    [Data Preparation](data_preparation.htm) > [Data Exploration](data_exploration.htm)
    > [Modeling](modeling.htm) > [Evaluation](model_evaluation.htm) > Deployment'
  prefs: []
  type: TYPE_NORMAL
- en: Model Deployment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The concept of deployment in data science refers to the application of a model
    for prediction using a new data. Building a model is generally not the end of
    the project. Even if the purpose of the model is to increase knowledge of the
    data, the knowledge gained will need to be organized and presented in a way that
    the customer can use it. Depending on the requirements, the deployment phase can
    be as simple as generating a report or as complex as implementing a repeatable
    data science process. In many cases, it will be the customer, not the data analyst,
    who will carry out the deployment steps. For example, a credit card company may
    want to deploy a trained model or set of models (e.g., neural networks, meta-learner)
    to quickly identify transactions, which have a high probability of being fraudulent.
    However, even if the analyst will not carry out the deployment effort it is important
    for the customer to understand up front what actions will need to be carried out
    in order to actually make use of the created models. **Model deployment methods:**In
    general, there is four way of deploying the models in data science.
  prefs: []
  type: TYPE_NORMAL
- en: Data science tools (or cloud)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Programming language (Java, C, VB, �)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Database and SQL script (TSQL, PL-SQL, �)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: PMML (Predictive Model Markup Language)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The following table shows the result of a survey on the different methods of
    model deployment ([KDnuggets](http://www.kdnuggets.com/polls/2009/deployment-data-mining-models.htm)).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1455696710e8bb60ebbc71fb02e3f427.jpg)'
  prefs: []
  type: TYPE_IMG
- en: An example of using a data mining tool ([Orange](http://www.ailab.si/orange/))
    to deploy a decision tree model.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8a7e82a88688b228bbe81ae7183f22b9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: An example of using a programming language (Visual Basic) to deploy a regression
    model.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/eca1084e32010388e46e21de0bc6978b.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Same regression model deployed in the SQL script.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/49bef8952fdf65cb3b6ff19d0d7c2f66.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Predictive Model Markup Language (PMML)**PMML is an XML-based language used
    to define statistical and data science models and to share these between compliant
    applications. It defines a standard not only to represent data-science models,
    but also data handling and data transformations (pre and post processing). PMML
    is developed by [DMG](http://www.dmg.org/) to avoid proprietary issues and incompatibilities
    and to deploy models. PMML eliminates the need for custom model deployment and
    allows for the clear separation of model development and model deployment tasks.
    The following data science methods are supported by PMML.'
  prefs: []
  type: TYPE_NORMAL
- en: Regression
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Neural Networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support Vector Machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decision Trees
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Na�ve Bayes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clustering
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sequences
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rule Sets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Association Rules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time-Series
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Text Models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PMML Processes**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Pre-Processing**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Data Dictionary: Allows for the explicit specification of valid, invalid and
    missing values.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Mining Schema: Used to define the appropriate treatment to be applied to missing
    and invalid values.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Transformations: Allow for variable discretization, normalization, and mapping
    with handling of missing and default values.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Built-in Functions: Arithmetic expressions, handling of date and time as well
    as strings. In addition, used for implementing IF-THEN-ELSE logic and Boolean
    operations.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Models**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: PMML allows for several predictive modeling techniques to be fully expressed.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Post-Processing**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scaling of model outputs can be performed with PMML element Targets.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PMML Components****Header**: contains general information about the PMML
    document, such as copyright information for the model, its description, and information
    about the application used to generate the model such as name and version. It
    also contains an attribute for a timestamp which can be used to specify the date
    of model creation.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cc3605dac506dca2fef978559b834a57.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Data Dictionary**: contains definitions for all the possible fields used
    by the model. It is here that a field is defined as continuous, categorical, or
    ordinal. Depending on this definition, the appropriate value ranges are then defined
    as well as the data type (such as, string or double).'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/31b99e915afe0ac4c3e687054a311b59.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Data Transformations**: transformations allow for the mapping of user data
    into a more desirable form to be used by the mining model. PMML defines several
    kinds of simple data transformations.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Normalization: map values to numbers, the input can be continuous or discrete.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Discretization: map continuous values to discrete values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Value mapping: map discrete values to discrete values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Functions: derive a value by applying a function to one or more parameters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Aggregation: used to summarize or collect groups of values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/35e44c64b3cf1f3b369d9f4996982b20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Model**: contains the definition of the data science model. For example a
    fee-forward neural network is represented in PMML by a "NeuralNetwork" element
    which contains attributes such as:'
  prefs: []
  type: TYPE_NORMAL
- en: Model Name (attribute modelName)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Function Name (attribute functionName)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Algorithm Name (attribute algorithmName)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Activation Function (attribute activationFunction)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Number of Layers (attribute numberOfLayers)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mining Schema**: the mining schema lists all fields used in the model. This
    can be a subset of the fields as defined in the data dictionary. It contains specific
    information about each field, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Name (attribute name): must refer to a field in the data dictionary'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Usage type (attribute usageType): defines the way a field is to be used in
    the model. Typical values are: active, predicted, and supplementary. Predicted
    fields are those whose values are predicted by the model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Outlier Treatment (attribute outliers): defines the outlier treatment to be
    use. In PMML, outliers can be treated as missing values, as extreme values (based
    on the definition of high and low values for a particular field), or as is.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Missing Value Replacement Policy (attribute missingValueReplacement): if this
    attribute is specified then a missing value is automatically replaced by the given
    values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Missing Value Treatment (attribute missingValueTreatment): indicates how the
    missing value replacement was derived (e.g. as value, mean or median).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/279d83d32529c58677e0d659015ec6fb.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Targets**: allow for post-processing of the predicted value in the format
    of scaling if the output of the model is continuous. Targets can also be used
    for classification tasks. In this case, the attribute prior Probability specifies
    a default probability for the corresponding target category. It is used if the
    prediction logic itself did not produce a result. This can happen, e.g., if an
    input value is missing and there is no other method for treating missing values.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/77183600299eb2f259efe1b50f2010f3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**PMML 4.0 � New Features**'
  prefs: []
  type: TYPE_NORMAL
- en: Improved Pre-Processing Capabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additions to built-in functions include a range of Boolean operations and an
    If-Then-Else function.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Time Series Models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New exponential Smoothing models; also place holders for ARIMA, Seasonal Trend
    Decomposition, and Spectral Analysis, which are to be supported in the near future.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Model Explanation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saving of evaluation and model performance measures to the PMML file itself.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiple Models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Capabilities for model composition, ensembles, and segmentation (e.g., combining
    of regression and decision trees).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Extensions of Existing Elements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Addition of multi-class classification for Support Vector Machines, improved
    representation for Association Rules, and the addition of Cox Regression Models.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
