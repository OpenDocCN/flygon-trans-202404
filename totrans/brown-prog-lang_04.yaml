- en: 4Introduction to Tabular Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '|     [4.1 Creating Tabular Data](#%28part._.Creating_.Tabular_.Data%29) |'
  id: totrans-1
  prefs: []
  type: TYPE_TB
- en: '|     [4.2 Processing Rows](#%28part._.Processing_.Rows%29) |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
- en: '|       [4.2.1 Keeping](#%28part._.Keeping%29) |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
- en: '|       [4.2.2 Ordering](#%28part._.Ordering%29) |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
- en: '|       [4.2.3 Combining Keeping and Ordering](#%28part._.Combining_.Keeping_and_.Ordering%29)
    |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
- en: '|       [4.2.4 Extending](#%28part._.Extending%29) |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
- en: '|       [4.2.5 Transforming, Cleansing, and Normalizing](#%28part._.Transforming__.Cleansing__and_.Normalizing%29)
    |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
- en: '|       [4.2.6 Selecting](#%28part._table-select%29) |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
- en: '|       [4.2.7 Summary of Row-Wise Table Operations](#%28part._.Summary_of_.Row-.Wise_.Table_.Operations%29)
    |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
- en: 'Many interesting data in computing are tabular—<wbr>i.e., like a table—<wbr>in
    form. First we’ll see a few examples of them, before we try to identify what they
    have in common. Here are some of them:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: 'An email inbox is a list of messages. For each message, your inbox stores a
    bunch of information: its sender, the subject line, the conversation it’s part
    of, the body, and quite a bit more.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/87443a8666b51bcfcc730fef7616ced6.jpg)'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'A music playlist. For each song, your music player maintains a bunch of information:
    its name, the singer, its length, its genre, and so on.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/c5c737640931243aa2d28c6448200137.jpg)'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: A filesystem folder or directory. For each file, your filesystem records a name,
    a modification date, size, and other information.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/68998957c4dec453b7c0df5ea9ac8c83.jpg)'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Do Now!
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Can you come up with more examples?
  id: totrans-19
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'How about:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Responses to a party invitation.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A gradebook.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A calendar agenda.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can think of many more in your life!What do all these have in common? The
    characteristics of tabular data are:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: They consists of rows and columns. For instance, each song or email message
    or file is a row. Each of their characteristics—<wbr>the song title, the message
    subject, the filename—<wbr>is a column.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each row has the same columns as the other rows, in the same order.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A given column has the same type, but different columns can have different types.
    For instance, an email message has a sender’s name, which is a string; a subject
    line, which is a string; a sent date, which is a date; whether it’s been read,
    which is a Boolean; and so on.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The rows are usually in some particular order. For instance, the emails are
    ordered by which was most recently sent.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exercise
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Find the characteristics of tabular data in the other examples described above,
    as well as in the ones you described.
  id: totrans-31
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
- en: We will now learn how to program with tables and to think about decomposing
    tasks involving them.You can also look up the full Pyret documentation for [table
    operations](https://www.pyret.org/docs/latest/tables.html).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 4.1Creating Tabular Data
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Pyret provides multiple easy ways of creating tabular data. The simplest is
    to define the datum in a program as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: That is, a table is followed by the names of the columns in their desired order,
    followed by a sequence of rows. Each row must contain as many data as the column
    declares, and in the same order.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，一个表格后面跟着列的名称以它们期望的顺序，然后是一系列的行。每一行必须包含与列声明相同数量的数据，并且顺序相同。
- en: Exercise
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 练习
- en: ''
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Change different parts of the above example—<wbr>e.g., remove a necessary value
    from a row, add an extraneous one, remove a comma, add an extra comma, leave an
    extra comma at the end of a row—<wbr>and see what errors you get.
  id: totrans-39
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 改变上述示例的不同部分—<wbr>例如，从一行中删除一个必要的值，添加一个多余的值，删除一个逗号，添加一个额外的逗号，在一行的末尾留下一个额外的逗号—<wbr>并查看你会得到什么错误。
- en: 'Note that in a table, the order of columns matters: two tables that are otherwise
    identical but with different column orders are not considered equal.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在表格中，列的顺序很重要：除了列的顺序不同以外，两个否则相同的表格不被认为是相等的。
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Observe that the example above uses is-not, i.e., the test passes, meaning
    that the tables are not equal.Of course, we can write literal tables using table.
    However, Pyret provides other ways to get tabular data, too! In particular, you
    can import tabular data from a spreadsheet [FILL], so any mechanism that lets
    you create such a sheet can also be used. You might:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，上面的示例使用了is-not，即，测试通过，这意味着表不相等。当然，我们可以使用table写入文字表。但是，Pyret还提供了其他获取表格数据的方法！特别是，您可以从电子表格中导入表格数据[FILL]，因此任何允许您创建这样的表的机制也都可以使用。你可以：
- en: create the sheet on your own,
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自行创建表格，
- en: create a sheet collaboratively with friends,
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与朋友一起协作创建一个表格，
- en: find data on the Web that you can import into a sheet,
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在网上找到可以导入表格的数据，
- en: create a Google Form that you get others to fill out, and obtain a sheet out
    of their responses
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个Google表格，让其他人填写，并从他们的回答中获得一个表格
- en: and so on. Let your imagination run wild! Once the data are in Pyret, the language
    doesn’t care where they came from.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 等等。让你的想象力奔放！一旦数据在Pyret中，语言就不关心它们来自哪里。
- en: 4.2Processing Rows
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.2处理行
- en: Let’s now learn how we can actually process a table. Pyret offers a variety
    of built-in operations that make it quite easy to perform interesting computations
    over tables. In addition, as we will see later [REF], if we don’t find these sufficient,
    we can write our own. For now, we’ll focus on the operations Pyret provides.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们学习如何实际处理表格。 Pyret提供了各种内置操作，使得对表格执行有趣的计算变得非常容易。此外，正如我们后面将看到的[REF]，如果我们觉得这些不够用，我们可以编写自己的操作。现在，我们将专注于Pyret提供的操作。
- en: 'Let’s think about some of the questions we might want to ask about our data:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们思考一下我们可能想要询问关于我们的数据的一些问题：
- en: Which emails were sent by a particular user?
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些邮件是由特定用户发送的？
- en: Which songs were sung by a particular artist?
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些歌曲是由特定艺术家演唱的？
- en: Which are the most frequently played songs in a playlist?
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 播放列表中哪些歌曲播放频率最高？
- en: Which are the least frequently played songs in a playlist?
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 播放列表中哪些歌曲播放频率最低？
- en: We see that some of these correspond to keeping some rows and some correspond
    to ordering them. Pyret provides tabular operations corresponding to these.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到其中一些对应于保留一些行，一些对应于对它们进行排序。 Pyret提供了与此相对应的表操作。
- en: 4.2.1Keeping
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.1保持
- en: 'We keep rows from a table as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们保留表的行如下：
- en: '[PRE2]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'says to use the email table, and specifically to employ the sender column.
    This operation processes every row of the table. In each row, sender refers to
    the value of the sender column of that row. The expression in the body (between
    : and end) must evaluate to a Boolean; if it is true, then Pyret keeps that row
    in the resulting table, otherwise it is discarded. The outcome of running this
    query is a fresh table with the same columns but only some (perhaps as few as
    none) of the rows; those rows that remain will be in the same order as in the
    original table.In the same way, we can keep rows based on the artist:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用邮件表，并特别使用发送者列。此操作处理表的每一行。在每行中，发送者指的是该行的发送者列的值。主体中的表达式（在:和end之间）必须评估为布尔值；如果为true，则Pyret将保留结果表中的该行，否则将丢弃该行。运行此查询的结果是一个具有相同列但只有一些（可能一些也没有）行的新表；保留的那些行将与原始表中的顺序相同。同样，我们可以根据艺术家来保留行：
- en: '[PRE3]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This shows that we can write complex expressions to select rows.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明我们可以编写复杂的表达式来选择行。
- en: 4.2.2Ordering
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.2排序
- en: 'We can similarly order the rows of a table, which produces a new table that
    has the rows in the described order:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以类似地对表格的行进行排序，这将产生一个新的表，其中的行按照描述的顺序排列：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: orders the rows with the play-count values in ascending order, so that the earliest
    rows in the table tell us which songs we’ve listened to least frequently.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 按播放次数值按升序对行进行排序，以便表中最早的行告诉我们我们最不经常听的歌曲。
- en: 'Note that what goes between the : and end is not an expression. Therefore,
    we cannot write arbitrary code here. We can only name columns and indicate which
    way they should be ordered.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：在冒号和结束之间的内容不是表达式。因此，我们不能在这里编写任意代码。我们只能命名列，并指示它们应该如何排序。
- en: 4.2.3Combining Keeping and Ordering
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.3组合保留和排序
- en: 'Naturally, we are not limited to performing only one of these operations. Since
    each of them consumes a table and produces one, we can easily combine them. Let’s
    first think of what we might want to do in English:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们不仅限于执行其中一种操作。由于每个操作都消耗一个表并产生一个表，我们可以轻松地将它们结合起来。让我们先考虑一下我们可能想要用英语做什么：
- en: Of the emails from a particular person, which is the oldest?
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 某个人发来的电子邮件中，哪封是最旧的？
- en: Of the songs by a particular artist, which have we played the least often?
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 某位特定艺术家的歌曲，我们播放得最少的是哪些？
- en: Do Now!
  id: totrans-71
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在就开始吧！
- en: ''
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Take a moment to think about how you would write these with what you have seen
    so far.
  id: totrans-73
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请花一点时间思考一下，根据你目前所见的内容，你会如何编写这些内容。
- en: 'Here is the first example:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第一个例子：
- en: '[PRE5]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that in the order expression, we order not email, which is the table of
    all emails, but only mf-email, the table of just the emails from that one sender.
    Now, looking at the earliest rows in the result gives us the earliest emails from
    that one person.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在 order 表达式中，我们不是对 email 进行排序，而是对 mf-email 进行排序，这是来自那个发件人的邮件表。现在，查看结果中最早的行将给我们提供来自该发件人的最早的电子邮件。
- en: Exercise
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 练习
- en: ''
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Write the second example as a composition of keep and order operations on a
    playlist table.
  id: totrans-79
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 将第二个示例写成对播放列表表进行保留和排序操作的组合。
- en: 4.2.4Extending
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.4扩展
- en: 'Sometimes, we want to create a new column whose value is based on those of
    existing columns. For instance, our table might reflect employee records, and
    have columns named hourly-wage and hours-worked, representing the corresponding
    quantities. We would now like to extend this table with a new column to reflect
    each employee’s total wage:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，我们想要创建一个新列，其值基于现有列的值。例如，我们的表可能反映了员工记录，并具有名为 hourly-wage 和 hours-worked 的列，表示相应的数量。现在我们希望扩展此表，以反映每个员工的总工资：
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This creates a new column, total-wage, whose value in each row is the product
    of the two named columns in that row. Pyret will put the new column at the right
    end; as we will soon see, we can easily change the order of columns ([Selecting](#%28part._table-select%29)).Naturally,
    we can combine extension with other table operations. For instance, we might have
    noticed that messages with short subject lines usually don’t contain high-priority
    tasks. Therefore, we might first extend the email table with the length of the
    subject line:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这会创建一个新列，名为 total-wage，其每行的值是该行中命名列的乘积。Pyret 将新列放在最右边；正如我们很快会看到的，我们可以轻松地更改列的顺序（[选择](#%28part._table-select%29)）。当然，我们可以将扩展与其他表操作结合起来。例如，我们可能已经注意到，主题行较短的消息通常不包含高优先级任务。因此，我们可能首先将电子邮件表扩展到主题行的长度：
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will create a table where the longest subject lines are at the top and
    the shortest subject lines are at the bottom.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个表，其中最长的主题行位于顶部，而最短的主题行位于底部。
- en: 4.2.5Transforming, Cleansing, and Normalizing
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.5转换、清理和规范化
- en: There are times when a table is “almost right”, but requires a little adjusting.
    For instance, we might have a table of customer requests for a free sample, and
    want to limit each customer to at most a certain number. We might get temperature
    readings from different countries in different formats, and want to convert them
    all to one single format.Because [unit errors can be dangerous](http://mentalfloss.com/article/25845/quick-6-six-unit-conversion-disasters)!
    We might have a gradebook where different graders have used different levels of
    precision, and want to standardize all of them to have the same level of precision.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，表“几乎正确”，但需要稍微调整。例如，我们可能有一个免费样品的客户请求表，并且希望将每位客户限制在最多一定数量。我们可能会从不同国家以不同格式获取温度读数，并希望将它们全部转换为一个单一的格式。因为[单位错误可能是危险的](http://mentalfloss.com/article/25845/quick-6-six-unit-conversion-disasters)！我们可能有一个成绩单，不同的评分者使用不同的精度级别，我们希望将它们全部标准化为相同的精度级别。
- en: 'In all these cases, we want the resulting table to have the same “shape” as
    the original—<wbr>the same columns, the same rows, in the same order—<wbr>but
    with some of the column values transformed slightly. Pyret provides transform
    to do this. For instance, here is how we limit customer orders:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些情况下，我们希望生成的表格与原始表格具有相同的“形状”——相同的列，相同的行，以相同的顺序——但某些列值略有变化。Pyret 提供 transform
    来做到这一点。例如，这是我们如何限制客户订单的方法：
- en: '[PRE8]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here’s how we round the total grades:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们如何四舍五入总分的方法：
- en: '[PRE9]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Of course, a transformation can involve columns other than the one being transformed:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，转换可能涉及除了正在转换的列之外的其他列：
- en: '[PRE10]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This alters the table so that all temperatures are converted to celsius.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这会改变表格，使所有温度都转换为摄氏度。
- en: Do Now!
  id: totrans-95
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在开始！
- en: ''
  id: totrans-96
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this example, why do we also transform unit?
  id: totrans-97
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在这个例子中，为什么我们还要转换单位？
- en: It’s because we should keep the temperature and unit in sync. If we transform
    the temperature but not the unit, a later user of this table might assume the
    unit column is accurate, and accidentally treat the converted temperature as if
    it were still in Fahrenheit.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为我们应该保持温度和单位同步。如果我们转换温度但不转换单位，那么此表格的后续用户可能会假设单位列是准确的，并意外地将转换后的温度视为仍然是华氏度。
- en: 4.2.6Selecting
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.6选择
- en: 'Finally, for presentation purposes, it is sometimes useful to see just a few
    of the columns, especially in tables with many of them; it can also be helpful
    to change the order of columns so that items that are meant to be viewed together
    are made adjacent. Suppose our gradebook has numerous columns representing all
    the intermediate scores, at the end of which is the total; when we’re done assigning
    grades, we want to see each student’s name with just their final score:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，出于演示目的，有时只看到其中几列是有用的，尤其是在列很多的表格中；将项目意图一起查看的列放在一起也很有帮助。假设我们的成绩表有许多列，代表所有中间得分，最后一列是总分；当我们分配好成绩后，我们想看到每个学生的名字和他们的最终分数：
- en: '[PRE11]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Again, we can combine this operation with others. For instance, we may want
    to see just the artists and songs in our playlist, sorted in order by the artist’s
    name:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以将此操作与其他操作结合使用。例如，我们可能只想看到播放列表中的艺术家和歌曲，并按照艺术家名称的顺序排序：
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 4.2.7Summary of Row-Wise Table Operations
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2.7按行操作的总结
- en: 'We’ve seen a lot in a short span. Specifically, we have seen several operations
    that consume a table and produce a new one according to some criterion. It’s worth
    summarizing the impact each of them has in terms of key table properties (where
    “-” means the entry is left unchanged):'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在短时间内看到了很多内容。具体来说，我们看到了几个根据某些标准消耗表格并生成新表格的操作。值得总结一下它们在关键表格属性方面的影响（“-”表示条目保持不变）：
- en: '| Operation |  | Cell contents |  | Row order |  | Number of rows |  | Column
    order |  | Number of columns |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| 操作 |  | 单元格内容 |  | 行顺序 |  | 行数 |  | 列顺序 |  | 列数 |'
- en: '| Keeping |  | - |  | - |  | reduced |  | - |  | - |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| 保持 |  | - |  | - |  | 减少 |  | - |  | - |'
- en: '| Ordering |  | - |  | changed |  | - |  | - |  | - |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| 排序 |  | - |  | 改变 |  | - |  | - |  | - |'
- en: '| Extending |  | existing unchanged, new computed |  | - |  | - |  | - |  |
    augmented |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| 扩展 |  | 现有不变，新计算 |  | - |  | - |  | - |  | 增加 |'
- en: '| Transforming |  | altered |  | - |  | - |  | - |  | - |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| 转换 |  | 改变的 |  | - |  | - |  | - |  | - |'
- en: '| Selecting |  | - |  | - |  | - |  | changed |  | reduced |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| 选择 |  | - |  | - |  | - |  | 改变 |  | 减少 |'
- en: The italicized entries reflect how the new table may differ from the old. Note
    that an entry like “reduced” or “altered” should be read as potentially reduced
    or altered; depending on the specific operation and the content of the table,
    there may be no change at all. (For instance, if a table is already sorted according
    to the criterion given in an order expression, the row order will not change.)
    However, in general one should expect the kind of change described in the above
    grid.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 斜体条目反映了新表格与旧表格可能不同的方式。请注意，“减少”或“改变”之类的条目应视为可能被减少或改变；根据具体操作和表格内容的不同，可能根本不会发生任何变化。（例如，如果表格已根据指定的顺序表达式排序，行顺序将不会改变。）然而，一般情况下，我们应该期望上述网格中描述的变化类型。
- en: 'Observe that both dimensions of this grid provide interesting information.
    Unsurprisingly, each row has at least some kind of impact on a table (otherwise
    the operation would be useless and would not exist). Likewise, each column also
    has at least one way of impacting it. Furthermore, observe that most entries leave
    the table unchanged: that means each operation has limited impact on the table,
    careful to not overstep the bounds of its mandate.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到这个网格的两个维度都提供了有趣的信息。毫不奇怪，每一行对表格都有至少某种影响（否则这个操作将是无用的，也不会存在）。同样，每一列也至少有一种影响方式。此外，请注意大多数条目都不会改变表格：这意味着每个操作对表格的影响有限，要小心不要超越其授权的范围。
- en: 'On the one hand, the decision to limit the impact of each operation means that
    to achieve complex tasks, we may have to compose several operations together.
    We have already seen examples of this earlier this chapter. However, there is
    also a much more subtle consequence: it also means that to achieve complex tasks,
    we can compose several operations and get exactly what we want. If we had fewer
    operations that each did more, then composing them might have various undesired
    or (worse) unintended consequences, making it very difficult for us to obtain
    exactly the answer we want. Instead, the operations above follow the principle
    of orthogonality: no operation shadows what any other operation does, so they
    can be composed freely.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一方面，限制每个操作的影响意味着为了完成复杂的任务，我们可能需要将几个操作组合在一起。我们在本章前面已经看到了这方面的例子。然而，还有一个更微妙的后果：这也意味着为了完成复杂的任务，我们可以组合几个操作并获得我们想要的结果。如果我们的操作更少，每个操作做的事情更多，那么将它们组合起来可能会产生各种不希望的或（更糟糕的）意外后果，这将使我们很难获得我们想要的确切答案。相反，上面的操作遵循正交性原则：没有一个操作会掩盖其他操作的作用，因此它们可以自由组合。
- en: 'As a result of having these operations, we can think of tables also algebrically.
    Concretely, when given a problem, we should again begin with concrete examples
    of what we’re starting with and where we want to end. Then we can ask ourselves
    questions like, “Does the number of columns stay the same, grow, or shrink?”,
    “Does the number of rows stay the same or shrink?”, and so on. The grid above
    now provides us a toolkit by which we can start to decompose the task into individual
    operations. Of course, we still have to think: the order of operations matters,
    and sometimes we have to perform an operation mutiple times. Still, this grid
    is a useful guide to hint us towards the operations that might help solve our
    problem.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 由于有了这些操作，我们也可以从代数的角度来思考表格。具体来说，当面临问题时，我们应该再次从我们开始的具体例子和我们想要达到的目标开始。然后我们可以问自己一些问题，比如，“列数是否保持不变，增加还是减少？”，“行数是否保持不变还是减少？”，等等。上面的网格现在为我们提供了一个工具箱，通过它我们可以开始将任务分解为单个操作。当然，我们仍然需要思考：操作的顺序很重要，有时我们必须多次执行一个操作。但是，这个网格是一个有用的指南，可以提示我们可能有助于解决问题的操作。
