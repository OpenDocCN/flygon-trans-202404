- en: Select operation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择操作
- en: Select operation
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择操作
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '`Go`''s `select` operation looks similar to `switch`, but it''s dedicated to
    poll send and receive operations channels. Check the following example:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`Go`的`select`操作看起来类似于`switch`，但专门用于轮询发送和接收操作的通道。查看以下示例：'
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The running result is like this:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 运行结果如下：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `select` operation will check which `case` branch can be run, that means
    the send or receive action can be executed successfully. If more than one `case`
    are ready now, the `select` will randomly choose one to execute. If no `case`
    is ready, but there is a `default` branch, then the `default` block will be executed,
    else the `select` operation will block. In the above example, if the `main` goroutine
    doesn't sleep (`time.Sleep(time.Second)`), the other `2 func` goroutines won't
    obtain the opportunity to run, so only `default` block in `select` statement will
    be executed.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`select`操作将检查哪个`case`分支可以运行，这意味着发送或接收操作可以成功执行。如果现在有多个`case`准备就绪，`select`将随机选择一个来执行。如果没有`case`准备就绪，但有一个`default`分支，则将执行`default`块，否则`select`操作将阻塞。在上面的示例中，如果`main`协程不休眠（`time.Sleep(time.Second)`），其他`2
    func`协程将无法获得运行的机会，因此`select`语句中只会执行`default`块。'
- en: 'The `select` statement won''t process `nil` channel, so if a channel used for
    receive operation is closed, you should mark its value as `nil`, then it will
    be kicked out of the selection list. So a common pattern of selection on multiple
    receive channels looks like this:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`select`语句不会处理`nil`通道，因此如果用于接收操作的通道已关闭，您应将其值标记为`nil`，然后它将被从选择列表中移除。因此，对多个接收通道进行选择的常见模式如下所示：'
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'References:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：
- en: '[The Go Programming Language Specification](https://golang.org/ref/spec);'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[Go编程语言规范](https://golang.org/ref/spec);'
- en: '[breaking out of a select statement when all channels are closed](http://stackoverflow.com/questions/13666253/breaking-out-of-a-select-statement-when-all-channels-are-closed);'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[当所有通道关闭时跳出选择语句](http://stackoverflow.com/questions/13666253/breaking-out-of-a-select-statement-when-all-channels-are-closed);'
- en: '[Curious Channels](http://dave.cheney.net/2013/04/30/curious-channels).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[好奇的通道](http://dave.cheney.net/2013/04/30/curious-channels).'
