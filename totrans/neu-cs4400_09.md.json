["```\n;; map : (A -> B) (Listof A) -> (Listof B)\n```", "```\n;; map : (A B -> C) (Listof A) (Listof B) -> (Listof C)\n```", "```\n(define (foo x y)\u00a0 (map map x y))\n```", "```\n;; the first `map', consumes a function and two listsmap1 : (A B -> C) (Listof A) (Listof B) -> (Listof C);; the second `map', consumes a function and one listmap2 : (X -> Y) (Listof X) -> (Listof Y)\n```", "```\n(A B -> C) = (X -> Y) (Listof X) -> (Listof Y)\n```", "```\nA = (X -> Y)B = (Listof X)C = (Listof Y)\n```", "```\nmap1 : ((X -> Y) (Listof X) -> (Listof Y))\u00a0 \u00a0 \u00a0  (Listof (X -> Y))\u00a0 \u00a0 \u00a0  (Listof (Listof X))\u00a0 \u00a0 \u00a0  -> (Listof (Listof Y))\n```", "```\n;; foo : (Listof (X -> Y));;\u00a0 \u00a0 \u00a0  (Listof (Listof X));;\u00a0 \u00a0 \u00a0  -> (Listof (Listof Y))(define (foo x y)\u00a0 (map map x y))\n```", "```\n(foo (list add1 sub1 add1) (list 1 2 3))\n```", "```\n(foo (list add1 sub1 add1) (map list (list 1 2 3)))\n```", "```\ns = (-b + sqrt(b^2 - 4*a*c)) / (2*a)\n```", "```\nx = b * by = 4 * ay = y * cx = x - yx = sqrt(x)y = -bx = y + xy = 2 * as = x / y\n```"]