- en: Vercelにデプロイしてみよう
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://typescriptbook.jp/tutorials/vercel-deploy](https://typescriptbook.jp/tutorials/vercel-deploy)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: このチュートリアルでは前のNext.jsのハンズオンで作成した猫画像ジェネレーターをVercelへデプロイする方法を学びます。
  prefs: []
  type: TYPE_NORMAL
- en: Vercelとは？[​](#vercelとは "Vercelとは？ への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next.jsを開発しているVercel社が提供しているフロントエンド向けのクラウドプラットフォームで、特徴としては次の点があります。
  prefs: []
  type: TYPE_NORMAL
- en: 特別な設定をせずにゼロコンフィグでGitHubリポジトリと連携をするだけで簡単にデプロイ環境を構築できる
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: プルリク単位で自動でプレビュー環境を利用できる
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScriptやCSSファイルを自動で圧縮してCDN環境で配信
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 特にVercelはNext.jsをホスティングする環境として開発されており、Next.jsのAPIルートの自動スケールや特別な対応がなくISRを利用できるので、他のクラウドプラットフォームを利用する理由がない場合はNext.jsのホスティング環境としてVercelを利用することをオススメします。
  prefs: []
  type: TYPE_NORMAL
- en: このチュートリアルに必要なもの[​](#このチュートリアルに必要なもの "このチュートリアルに必要なもの への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 今回のチュートリアルではGitHubリポジトリとの連携を利用してデプロイ環境を構築するために、次のものが必要です。
  prefs: []
  type: TYPE_NORMAL
- en: GitHubアカウント
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 「[Next.jsで猫画像ジェネレーターを作ろう](/tutorials/nextjs)」で作成したコードと、それをpush済みのGitHubリポジトリ
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 上のチュートリアルを実施された方は、ご自身のGitHubアカウントのリポジトリにコードをpushしておいてください。
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 自分で作ったコードでなくても構わない方は、本書が提供する[random-catリポジトリ](https://github.com/yytypescript/random-cat)を[フォーク](https://docs.github.com/ja/get-started/quickstart/fork-a-repo)しておくのでも構いません。
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: デプロイの流れ[​](#デプロイの流れ "デプロイの流れ への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Vercelアカウントを作成する
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vercelにログインする
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GitHubリポジトリを連携する
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vercelアカウントを作成する[​](#vercelアカウントを作成する "Vercelアカウントを作成する への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 注記
  prefs: []
  type: TYPE_NORMAL
- en: Vercelのアカウントをすでにお持ちの方は、この手順を飛ばしてください。
  prefs: []
  type: TYPE_NORMAL
- en: 最初に[Vercel](https://vercel.com/signup)にアクセスをして、GitHubアカウントでVercelのアカウントを作成しましょう。アカウント作成後に連携するGitHubリポジトリの選択画面が表示されるので、「GitHubリポジトリを連携する」にお進みください。
  prefs: []
  type: TYPE_NORMAL
- en: Vercelにログインする[​](#vercelにログインする "Vercelにログインする への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Vercelのログイン画面](https://vercel.com/login)に遷移してGitHubアカウントでログインをします。'
  prefs: []
  type: TYPE_NORMAL
- en: GitHubリポジトリを連携する[​](#githubリポジトリを連携する "GitHubリポジトリを連携する への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[VercelのGitHubリポジトリ連携のページ](https://vercel.com/new)へアクセスして猫画像ジェネレーターのGitHubリポジトリを検索して「Import」ボタンをクリックします。'
  prefs: []
  type: TYPE_NORMAL
- en: '![連携するGitHubリポジトリの選択](../Images/34f378e1205819d32ff7fef4d450b11c.png)'
  prefs: []
  type: TYPE_IMG
- en: プロジェクトの設定画面が表示されるので、設定はデフォルトのままで「Deploy」ボタンをクリックしてください。
  prefs: []
  type: TYPE_NORMAL
- en: '![プロジェクトの設定画面](../Images/9cfc3cd2431fc90e69d9b324e8b32210.png)'
  prefs: []
  type: TYPE_IMG
- en: デプロイ完了画面が表示されればデプロイは完了です。🎉画面のプレビュー表示がリンクになっており、クリックすることでデプロイされたアプリを表示することができます。
  prefs: []
  type: TYPE_NORMAL
- en: '![デプロイ完了画面](../Images/32b54770027a53442d58ad291fd7eefa.png)'
  prefs: []
  type: TYPE_IMG
- en: 「Continue To Dashboard」のボタンをクリックすることでプロジェクトのダッシュボードページへ遷移できます。ダッシュボード上でVercelが自動生成したドメインを確認できます。このドメインはプロジェクトが存続している限り変更されないため、このURLを他の人に共有することでアプリを公開することができます。
  prefs: []
  type: TYPE_NORMAL
- en: '![ダッシュボード](../Images/12ceb54b79dde452fea1690a5eb351f9.png)'
  prefs: []
  type: TYPE_IMG
- en: 自動デプロイを体験[​](#自動デプロイを体験 "自動デプロイを体験 への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: プルリクエストを作成・マージして自動デプロイを実行してみます。VercelではGitHub連携が完了した段階で自動デプロイのCI/CD環境も自動で構築されるので、プルリクエストを作成・マージするだけで自動でデプロイがされる状態になっています。
  prefs: []
  type: TYPE_NORMAL
- en: 実際に猫画像ジェネレーターのコードの一部を修正して自動デプロイを実行してみましょう。
  prefs: []
  type: TYPE_NORMAL
- en: 次のようにボタンの文言を「他のにゃんこも見る」を「One more cat!」に変更してGitHubリポジトリでプルリクエストを作成してください。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Vercelは連携しているGitHubリポジトリに新たにブランチがプッシュされると自動でビルドが実行されて、プレビュー環境をデプロイしてくれます。
  prefs: []
  type: TYPE_NORMAL
- en: プルリクエストを作成するとVercel BOTが画像のようにビルドのステータスとプレビュー環境のURLをコメントとしてくれるので、「Visit Preview」のリンクをクリックすることでレビュアーは簡単に新しい変更の確認をすることができます。
  prefs: []
  type: TYPE_NORMAL
- en: '![VercelのBOTがプルリクエストのプレビュー環境のURLをコメント](../Images/94fe9f02e1cd9a11882e88c33e50ad75.png)'
  prefs: []
  type: TYPE_IMG
- en: ビルドの結果はプルリクエストのstatus checksにも表示されるので、ビルドが失敗している状態で誤ってデプロイをする事故も防ぐこともできます。
  prefs: []
  type: TYPE_NORMAL
- en: '![プルリクエストのステータスチェック](../Images/a18945a124521169d3fef622e5d07c73.png)'
  prefs: []
  type: TYPE_IMG
- en: 「Merge pull request」ボタンをクリックして、このプルリクエストをマージしてみましょう。ベースブランチに新しくブランチがマージされると本番環境に更新が自動でデプロイされます。
  prefs: []
  type: TYPE_NORMAL
- en: 先ほど確認した本番環境のURLにアクセスをすることで、ボタンのデザインが変更されており今回の修正が本番環境に自動でデプロイされたのを確認できます。😺
  prefs: []
  type: TYPE_NORMAL
- en: '![ボタンのデザインを変更した画面](../Images/7b86d727fabef8745392e52c16b83418.png)'
  prefs: []
  type: TYPE_IMG
- en: プロジェクトを削除[​](#プロジェクトを削除 "プロジェクトを削除 への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: プロジェクトが残って気になる方は、Settingsページに移動して`Delete`ボタンをクリックし、ダイアログで必要なテキストを入力することでプロジェクトを削除できます。
  prefs: []
  type: TYPE_NORMAL
- en: '![プロジェクトの削除ボタン](../Images/9b805d9925b1b854a37a7bca7ac52e84.png)'
  prefs: []
  type: TYPE_IMG
- en: '![プロジェクトの削除ダイアログ](../Images/20f846fd78c661ff9d76202fed41fece.png)'
  prefs: []
  type: TYPE_IMG
