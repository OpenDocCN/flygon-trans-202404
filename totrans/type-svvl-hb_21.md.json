["```\nshell`npm install -g yarn`\n```", "```\nshell`npm install -g yarn`\n```", "```\nshell`yarn create react-app component-test-tutorial --template typescript`\n```", "```\nshell`yarn create react-app component-test-tutorial --template typescript`\n```", "```\nshell`cd component-test-tutorial`\n```", "```\nshell`cd component-test-tutorial`\n```", "```\ntext`\u251c\u2500\u2500 .gitignore\u251c\u2500\u2500 node_modules\u251c\u2500\u2500 README.md\u251c\u2500\u2500 package.json\u251c\u2500\u2500 public\u2502   \u251c\u2500\u2500 favicon.ico\u2502   \u251c\u2500\u2500 index.html\u2502   \u251c\u2500\u2500 logo192.png\u2502   \u251c\u2500\u2500 logo512.png\u2502   \u251c\u2500\u2500 manifest.json\u2502   \u2514\u2500\u2500 robots.txt\u251c\u2500\u2500 src\u2502   \u251c\u2500\u2500 App.css\u2502   \u251c\u2500\u2500 App.test.tsx\u2502   \u251c\u2500\u2500 App.tsx\u2502   \u251c\u2500\u2500 index.css\u2502   \u251c\u2500\u2500 index.tsx\u2502   \u251c\u2500\u2500 logo.svg\u2502   \u251c\u2500\u2500 react-app-env.d.ts\u2502   \u251c\u2500\u2500 reportWebVitals.ts\u2502   \u2514\u2500\u2500 setupTests.ts\u251c\u2500\u2500 tsconfig.json\u2514\u2500\u2500 yarn.lock`\n```", "```\ntext`\u251c\u2500\u2500 .gitignore\u251c\u2500\u2500 node_modules\u251c\u2500\u2500 README.md\u251c\u2500\u2500 package.json\u251c\u2500\u2500 public\u2502   \u251c\u2500\u2500 favicon.ico\u2502   \u251c\u2500\u2500 index.html\u2502   \u251c\u2500\u2500 logo192.png\u2502   \u251c\u2500\u2500 logo512.png\u2502   \u251c\u2500\u2500 manifest.json\u2502   \u2514\u2500\u2500 robots.txt\u251c\u2500\u2500 src\u2502   \u251c\u2500\u2500 App.css\u2502   \u251c\u2500\u2500 App.test.tsx\u2502   \u251c\u2500\u2500 App.tsx\u2502   \u251c\u2500\u2500 index.css\u2502   \u251c\u2500\u2500 index.tsx\u2502   \u251c\u2500\u2500 logo.svg\u2502   \u251c\u2500\u2500 react-app-env.d.ts\u2502   \u251c\u2500\u2500 reportWebVitals.ts\u2502   \u2514\u2500\u2500 setupTests.ts\u251c\u2500\u2500 tsconfig.json\u2514\u2500\u2500 yarn.lock`\n```", "```\nshell`yarn start`\n```", "```\nshell`yarn start`\n```", "```\nshell`cd srctouch SimpleButton.tsx`\n```", "```\nshell`cd srctouch SimpleButton.tsx`\n```", "```\ntext`\u251c\u2500\u2500 App.css\u251c\u2500\u2500 App.test.tsx\u251c\u2500\u2500 App.tsx\u251c\u2500\u2500 SimpleButton.tsx\u251c\u2500\u2500 index.css\u251c\u2500\u2500 index.tsx\u251c\u2500\u2500 logo.svg\u251c\u2500\u2500 react-app-env.d.ts\u251c\u2500\u2500 reportWebVitals.ts\u2514\u2500\u2500 setupTests.ts`\n```", "```\ntext`\u251c\u2500\u2500 App.css\u251c\u2500\u2500 App.test.tsx\u251c\u2500\u2500 App.tsx\u251c\u2500\u2500 SimpleButton.tsx\u251c\u2500\u2500 index.css\u251c\u2500\u2500 index.tsx\u251c\u2500\u2500 logo.svg\u251c\u2500\u2500 react-app-env.d.ts\u251c\u2500\u2500 reportWebVitals.ts\u2514\u2500\u2500 setupTests.ts`\n```", "```\nSimpleButton.tsxtsx`import { <data-lsp lsp=\"(alias) function useState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>] (+1 overload)\nimport useState\">useState</data-lsp> } from  \"react\";export  const  <data-lsp lsp=\"const SimpleButton: () => JSX.Element\">SimpleButton</data-lsp>: () =>  <data-lsp lsp=\"namespace JSX\">JSX</data-lsp>.<data-lsp lsp=\"interface JSX.Element\">Element</data-lsp>  = () => {  const [<data-lsp lsp=\"const state: boolean\">state</data-lsp>,  <data-lsp lsp=\"const setState: React.Dispatch<React.SetStateAction<boolean>>\">setState</data-lsp>] =  <data-lsp lsp=\"(alias) useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)\nimport useState\">useState</data-lsp>(false);  const  <data-lsp lsp=\"const handleClick: () => void\">handleClick</data-lsp>  = () => {  <data-lsp lsp=\"const setState: (value: React.SetStateAction<boolean>) => void\">setState</data-lsp>((<data-lsp lsp=\"(parameter) prevState: boolean\">prevState</data-lsp>) =>  !<data-lsp lsp=\"(parameter) prevState: boolean\">prevState</data-lsp>); };  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\">button</data-lsp>  <data-lsp lsp=\"(property) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined\">onClick</data-lsp>={<data-lsp lsp=\"const handleClick: () => void\">handleClick</data-lsp>}>{<data-lsp lsp=\"const state: boolean\">state</data-lsp> ?  \"ON\"  :  \"OFF\"}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\">button</data-lsp>>;};`\n```", "```\nSimpleButton.tsxtsx`import { <data-lsp lsp=\"(alias) function useState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>] (+1 overload)\nimport useState\">useState</data-lsp> } from  \"react\";export  const <data-lsp lsp=\"const SimpleButton: () => JSX.Element\">SimpleButton</data-lsp>: () => <data-lsp lsp=\"namespace JSX\">JSX</data-lsp>.<data-lsp lsp=\"interface JSX.Element\">Element</data-lsp> = () => {  const [<data-lsp lsp=\"const state: boolean\">state</data-lsp>,  <data-lsp lsp=\"const setState: React.Dispatch<React.SetStateAction<boolean>>\">setState</data-lsp>] = <data-lsp lsp=\"(alias) useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)\nimport useState\">useState</data-lsp>(false);  const <data-lsp lsp=\"const handleClick: () => void\">handleClick</data-lsp> = () => { <data-lsp lsp=\"const setState: (value: React.SetStateAction<boolean>) => void\">setState</data-lsp>((<data-lsp lsp=\"(parameter) prevState: boolean\">prevState</data-lsp>) =>  !<data-lsp lsp=\"(parameter) prevState: boolean\">prevState</data-lsp>); };  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\">button</data-lsp> <data-lsp lsp=\"(property) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined\">onClick</data-lsp>={<data-lsp lsp=\"const handleClick: () => void\">handleClick</data-lsp>}>{<data-lsp lsp=\"const state: boolean\">state</data-lsp> ?  \"ON\"  :  \"OFF\"}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\">button</data-lsp>>;};`\n```", "```\nindex.tsxtsx`import <data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp> from  \"react\";import <data-lsp lsp=\"import ReactDOM\">ReactDOM</data-lsp> from  \"react-dom/client\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";const  <data-lsp lsp=\"const root: any\">root</data-lsp>  =  <data-lsp lsp=\"import ReactDOM\">ReactDOM</data-lsp>.<data-lsp lsp=\"any\">createRoot</data-lsp>(  <data-lsp lsp=\"var document: Document\">document</data-lsp>.<data-lsp lsp=\"(method) Document.getElementById(elementId: string): HTMLElement | null\">getElementById</data-lsp>(\"root\") as  <data-lsp lsp=\"interface HTMLElement\">HTMLElement</data-lsp>);<data-lsp lsp=\"const root: any\">root</data-lsp>.<data-lsp lsp=\"any\">render</data-lsp>( <<data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp>.<data-lsp lsp=\"const React.StrictMode: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>\">StrictMode</data-lsp>> <<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> /> </<data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp>.<data-lsp lsp=\"const React.StrictMode: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>\">StrictMode</data-lsp>>);`\n```", "```\nindex.tsxtsx`import <data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp> from  \"react\";import <data-lsp lsp=\"import ReactDOM\">ReactDOM</data-lsp> from  \"react-dom/client\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";const  <data-lsp lsp=\"const root: any\">root</data-lsp>  =  <data-lsp lsp=\"import ReactDOM\">ReactDOM</data-lsp>.<data-lsp lsp=\"any\">createRoot</data-lsp>(  <data-lsp lsp=\"var document: Document\">document</data-lsp>.<data-lsp lsp=\"(method) Document.getElementById(elementId: string): HTMLElement | null\">getElementById</data-lsp>(\"root\") as <data-lsp lsp=\"interface HTMLElement\">HTMLElement</data-lsp>);<data-lsp lsp=\"const root: any\">root</data-lsp>.<data-lsp lsp=\"any\">render</data-lsp>( <<data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp>.<data-lsp lsp=\"const React.StrictMode: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>\">StrictMode</data-lsp>> <<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> /> </<data-lsp lsp=\"(alias) namespace React\nimport React\">React</data-lsp>.<data-lsp lsp=\"const React.StrictMode: React.ExoticComponent<{\n    children?: React.ReactNode;\n}>\">StrictMode</data-lsp>>);`\n```", "```\nshell`yarn start`\n```", "```\nshell`yarn start`\n```", "```\nshell`yarn add \\ @testing-library/react@14 \\ @testing-library/jest-dom@5 \\ @testing-library/user-event@14`\n```", "```\nshell`yarn add \\ @testing-library/react@14 \\ @testing-library/jest-dom@5 \\ @testing-library/user-event@14`\n```", "```\nshell`touch SimpleButton.test.tsx`\n```", "```\nshell`touch SimpleButton.test.tsx`\n```", "```\nSimpleButton.test.tsxtsx`<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => {  // \u3053\u3053\u306b\u30c6\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059});`\n```", "```\nSimpleButton.test.tsxtsx`<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => {  // \u3053\u3053\u306b\u30c6\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp> } from  \"@testing-library/react\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => {  <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp> } from  \"@testing-library/react\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => { <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp>, <data-lsp lsp=\"import screen\">screen</data-lsp> } from  \"@testing-library/react\";//               ^^^^^^\u8ffd\u52a0import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => {  <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);  const  <data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>  =  <data-lsp lsp=\"import screen\">screen</data-lsp>.<data-lsp lsp=\"any\">getByRole</data-lsp>(\"button\");});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp>, <data-lsp lsp=\"import screen\">screen</data-lsp> } from  \"@testing-library/react\";//               ^^^^^^\u8ffd\u52a0import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => { <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);  const  <data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>  =  <data-lsp lsp=\"import screen\">screen</data-lsp>.<data-lsp lsp=\"any\">getByRole</data-lsp>(\"button\");});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp>, <data-lsp lsp=\"import screen\">screen</data-lsp> } from  \"@testing-library/react\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => {  <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);  const  <data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>  =  <data-lsp lsp=\"import screen\">screen</data-lsp>.<data-lsp lsp=\"any\">getByRole</data-lsp>(\"button\");  <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>).<data-lsp lsp=\"any\">toHaveTextContent</data-lsp>(\"OFF\");});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp>, <data-lsp lsp=\"import screen\">screen</data-lsp> } from  \"@testing-library/react\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => { <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);  const  <data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>  =  <data-lsp lsp=\"import screen\">screen</data-lsp>.<data-lsp lsp=\"any\">getByRole</data-lsp>(\"button\"); <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>).<data-lsp lsp=\"any\">toHaveTextContent</data-lsp>(\"OFF\");});`\n```", "```\nshell`yarn test`\n```", "```\nshell`yarn test`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp>, <data-lsp lsp=\"import screen\">screen</data-lsp> } from  \"@testing-library/react\";import <data-lsp lsp=\"import userEvent\">userEvent</data-lsp> from  \"@testing-library/user-event\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => {  const  <data-lsp lsp=\"const user: any\">user</data-lsp>  =  <data-lsp lsp=\"import userEvent\">userEvent</data-lsp>.<data-lsp lsp=\"any\">setup</data-lsp>();  <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);  const  <data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>  =  <data-lsp lsp=\"import screen\">screen</data-lsp>.<data-lsp lsp=\"any\">getByRole</data-lsp>(\"button\");  <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>).<data-lsp lsp=\"any\">toHaveTextContent</data-lsp>(\"OFF\");  await  <data-lsp lsp=\"const user: any\">user</data-lsp>.<data-lsp lsp=\"any\">click</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>);});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp>, <data-lsp lsp=\"import screen\">screen</data-lsp> } from  \"@testing-library/react\";import <data-lsp lsp=\"import userEvent\">userEvent</data-lsp> from  \"@testing-library/user-event\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => {  const  <data-lsp lsp=\"const user: any\">user</data-lsp>  =  <data-lsp lsp=\"import userEvent\">userEvent</data-lsp>.<data-lsp lsp=\"any\">setup</data-lsp>(); <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);  const  <data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>  =  <data-lsp lsp=\"import screen\">screen</data-lsp>.<data-lsp lsp=\"any\">getByRole</data-lsp>(\"button\"); <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>).<data-lsp lsp=\"any\">toHaveTextContent</data-lsp>(\"OFF\");  await  <data-lsp lsp=\"const user: any\">user</data-lsp>.<data-lsp lsp=\"any\">click</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>);});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp>, <data-lsp lsp=\"import screen\">screen</data-lsp> } from  \"@testing-library/react\";import <data-lsp lsp=\"import userEvent\">userEvent</data-lsp> from  \"@testing-library/user-event\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => {  const  <data-lsp lsp=\"const user: any\">user</data-lsp>  =  <data-lsp lsp=\"import userEvent\">userEvent</data-lsp>.<data-lsp lsp=\"any\">setup</data-lsp>();  <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);  const  <data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>  =  <data-lsp lsp=\"import screen\">screen</data-lsp>.<data-lsp lsp=\"any\">getByRole</data-lsp>(\"button\");  <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>).<data-lsp lsp=\"any\">toHaveTextContent</data-lsp>(\"OFF\");  await  <data-lsp lsp=\"const user: any\">user</data-lsp>.<data-lsp lsp=\"any\">click</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>);  <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>).<data-lsp lsp=\"any\">toHaveTextContent</data-lsp>(\"ON\");});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp>, <data-lsp lsp=\"import screen\">screen</data-lsp> } from  \"@testing-library/react\";import <data-lsp lsp=\"import userEvent\">userEvent</data-lsp> from  \"@testing-library/user-event\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068ON/OFF\u306e\u8868\u793a\u304c\u5207\u308a\u66ff\u308f\u308b\",  async () => {  const  <data-lsp lsp=\"const user: any\">user</data-lsp>  =  <data-lsp lsp=\"import userEvent\">userEvent</data-lsp>.<data-lsp lsp=\"any\">setup</data-lsp>(); <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);  const  <data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>  =  <data-lsp lsp=\"import screen\">screen</data-lsp>.<data-lsp lsp=\"any\">getByRole</data-lsp>(\"button\"); <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>).<data-lsp lsp=\"any\">toHaveTextContent</data-lsp>(\"OFF\");  await  <data-lsp lsp=\"const user: any\">user</data-lsp>.<data-lsp lsp=\"any\">click</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>); <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const simpleButton: any\">simpleButton</data-lsp>).<data-lsp lsp=\"any\">toHaveTextContent</data-lsp>(\"ON\");});`\n```", "```\nshell`touch SimpleButton.test.tsx`\n```", "```\nshell`touch SimpleButton.test.tsx`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp> } from  \"@testing-library/react\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u63cf\u753b\u3055\u308c\u3066\u3059\u3050\u306fOFF\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308b\", () => {  const  <data-lsp lsp=\"const view: any\">view</data-lsp>  =  <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />);  <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const view: any\">view</data-lsp>.<data-lsp lsp=\"any\">container</data-lsp>).<data-lsp lsp=\"any\">toMatchSnapshot</data-lsp>();});`\n```", "```\nSimpleButton.test.tsxtsx`import { <data-lsp lsp=\"import render\">render</data-lsp> } from  \"@testing-library/react\";import { <data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> } from  \"./SimpleButton\";<data-lsp lsp=\"any\">test</data-lsp>(\"\u63cf\u753b\u3055\u308c\u3066\u3059\u3050\u306fOFF\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308b\", () => {  const  <data-lsp lsp=\"const view: any\">view</data-lsp>  = <data-lsp lsp=\"import render\">render</data-lsp>(<<data-lsp lsp=\"import SimpleButton\">SimpleButton</data-lsp> />); <data-lsp lsp=\"any\">expect</data-lsp>(<data-lsp lsp=\"const view: any\">view</data-lsp>.<data-lsp lsp=\"any\">container</data-lsp>).<data-lsp lsp=\"any\">toMatchSnapshot</data-lsp>();});`\n```", "```\nshell`yarn test`\n```", "```\nshell`yarn test`\n```", "```\nSimpleButton.test.tsx.snapjs`// Jest Snapshot v1, https://goo.gl/fbAQLP<data-lsp lsp=\"module &quot;/vercel/path0/index&quot;\">exports</data-lsp>[`\u63cf\u753b\u3055\u308c\u3066\u3059\u3050\u306fOFF\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308b 1`] =  `<div> <button> OFF </button></div>`;`\n```", "```\nSimpleButton.test.tsx.snapjs`// Jest Snapshot v1, https://goo.gl/fbAQLP<data-lsp lsp=\"module &quot;/vercel/path0/index&quot;\">exports</data-lsp>[`\u63cf\u753b\u3055\u308c\u3066\u3059\u3050\u306fOFF\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308b 1`] =  `<div> <button> OFF </button></div>`;`\n```", "```\nSimpleButton.tsxtsx`import { <data-lsp lsp=\"(alias) function useState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>] (+1 overload)\nimport useState\">useState</data-lsp> } from  \"react\";export  const  <data-lsp lsp=\"const SimpleButton: () => JSX.Element\">SimpleButton</data-lsp>: () =>  <data-lsp lsp=\"namespace JSX\">JSX</data-lsp>.<data-lsp lsp=\"interface JSX.Element\">Element</data-lsp>  = () => {  const [<data-lsp lsp=\"const state: boolean\">state</data-lsp>,  <data-lsp lsp=\"const setState: React.Dispatch<React.SetStateAction<boolean>>\">setState</data-lsp>] =  <data-lsp lsp=\"(alias) useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)\nimport useState\">useState</data-lsp>(true);  // false\u304b\u3089true\u306b\u5909\u66f4               ^^^^  const  <data-lsp lsp=\"const handleClick: () => void\">handleClick</data-lsp>  = () => {  <data-lsp lsp=\"const setState: (value: React.SetStateAction<boolean>) => void\">setState</data-lsp>((<data-lsp lsp=\"(parameter) prevState: boolean\">prevState</data-lsp>) =>  !<data-lsp lsp=\"(parameter) prevState: boolean\">prevState</data-lsp>); };  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\">button</data-lsp>  <data-lsp lsp=\"(property) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined\">onClick</data-lsp>={<data-lsp lsp=\"const handleClick: () => void\">handleClick</data-lsp>}>{<data-lsp lsp=\"const state: boolean\">state</data-lsp> ?  \"ON\"  :  \"OFF\"}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\">button</data-lsp>>;};`\n```", "```\nSimpleButton.tsxtsx`import { <data-lsp lsp=\"(alias) function useState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>] (+1 overload)\nimport useState\">useState</data-lsp> } from  \"react\";export  const <data-lsp lsp=\"const SimpleButton: () => JSX.Element\">SimpleButton</data-lsp>: () => <data-lsp lsp=\"namespace JSX\">JSX</data-lsp>.<data-lsp lsp=\"interface JSX.Element\">Element</data-lsp> = () => {  const [<data-lsp lsp=\"const state: boolean\">state</data-lsp>,  <data-lsp lsp=\"const setState: React.Dispatch<React.SetStateAction<boolean>>\">setState</data-lsp>] = <data-lsp lsp=\"(alias) useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)\nimport useState\">useState</data-lsp>(true);  // false\u304b\u3089true\u306b\u5909\u66f4               ^^^^  const <data-lsp lsp=\"const handleClick: () => void\">handleClick</data-lsp> = () => { <data-lsp lsp=\"const setState: (value: React.SetStateAction<boolean>) => void\">setState</data-lsp>((<data-lsp lsp=\"(parameter) prevState: boolean\">prevState</data-lsp>) =>  !<data-lsp lsp=\"(parameter) prevState: boolean\">prevState</data-lsp>); };  return <<data-lsp lsp=\"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\">button</data-lsp> <data-lsp lsp=\"(property) React.DOMAttributes<HTMLButtonElement>.onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined\">onClick</data-lsp>={<data-lsp lsp=\"const handleClick: () => void\">handleClick</data-lsp>}>{<data-lsp lsp=\"const state: boolean\">state</data-lsp> ?  \"ON\"  :  \"OFF\"}</<data-lsp lsp=\"(property) JSX.IntrinsicElements.button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\">button</data-lsp>>;};`\n```", "```\nshell`yarn test`\n```", "```\nshell`yarn test`\n```"]