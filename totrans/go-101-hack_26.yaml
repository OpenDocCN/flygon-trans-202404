- en: Buffered read
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Buffered read
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[bufio](https://golang.org/pkg/bufio/) package provides buffered read functions.
    Let''s see an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '(1) Create a `test.txt` file first:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: You can see `test.txt` contains `4` lines.
  prefs: []
  type: TYPE_NORMAL
- en: '(2) See the following program:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: (a)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Open `test.txt` file.
  prefs: []
  type: TYPE_NORMAL
- en: (b)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '`bufio.NewReader(f)` creates a [bufio.Reader](https://golang.org/pkg/bufio/#Reader)
    struct which implements buffered read function.'
  prefs: []
  type: TYPE_NORMAL
- en: (c)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Read and print each line.
  prefs: []
  type: TYPE_NORMAL
- en: 'The running result is here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'We can also use [bufio.Scanner](https://golang.org/pkg/bufio/#Scanner) to implement
    above "print each line" function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: (a)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '`bufio.NewScanner(f)` creates a new [bufio.Scanner](https://golang.org/pkg/bufio/#Scanner)
    struct which splits the content by line by default.'
  prefs: []
  type: TYPE_NORMAL
- en: (b)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '`s.Scan()` advances the `bufio.Scanner` to the next token (in this case, it
    is one optional carriage return followed by one mandatory newline), and we can
    use `s.Text()` function to get the content.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also customize [SplitFunc](https://golang.org/pkg/bufio/#SplitFunc)
    function which doesn''t separate content by line. Check the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The `split` function separates the content by "`h`", and the running result
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
