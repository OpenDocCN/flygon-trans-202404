- en: First steps in the IPython Shell
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First steps on the IPython Shell
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are two ways to use Python: The *interactive mode* or *IPython shell*
    and *writing programs*. We will use the interactive mode to store data on **U.S.
    baby names**.'
  prefs: []
  type: TYPE_NORMAL
- en: In the first part of the tutorial, you will use the IPython shell to write simple
    commands.
  prefs: []
  type: TYPE_NORMAL
- en: Goals
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The commands on the IPython shell cover:'
  prefs: []
  type: TYPE_NORMAL
- en: How to store a number?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to add two numbers together?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to store text?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to convert a number to text and back?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Python as a calculator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using Python as a calculator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Exercise 1:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Enter Python in the interactive mode. You should see a message
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Complete the following calculations by filling in the blanks:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Enter the commands to see what happens (**do not** type the first part `In [1]`
    etc., these will appear automatically).
  prefs: []
  type: TYPE_NORMAL
- en: 'Exercise 2:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Which operations result in 8?
  prefs: []
  type: TYPE_NORMAL
- en: '`0 + 8`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`4 4`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`8 /`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`65 // 8`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`17 % 9`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`2 * * 4`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`64 ** 0.5`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Exercise 3:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Collect the Python operators you already know in a table (`+`, `-`, `*` etc.).
  prefs: []
  type: TYPE_NORMAL
- en: Storing numbers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Storing numbers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The U.S. authorities record the names of all babies born since 1880\. How many
    babies with more or less popular names were born in 2000? Let's store the numbers
    in *variables*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Exercise 1:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s define some variables. Fill in the gaps:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Exercise 2:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let's change the content. Insert the correct values and variable names into
    the blanks.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '*If you like maths, you may sigh loud at the notion of redefining a variable
    every few lines.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Exercise 3:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Which of the following variable names are correct? Try assigning some numbers
    to them.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Exercise 4:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Which are correct variable assignments?
  prefs: []
  type: TYPE_NORMAL
- en: '`a = 1 * 2`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`2 = 1 + 1`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`5 + 6 = y`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`seven = 3 * 4`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storing text
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Storing text
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Exercise 1:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: So far, we have only worked with numbers. Now we will work with text as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Exercise 2:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: What do the following statements do?
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Exercise 3:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Is it possible to include the following special characters in a string?
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Exercise 4:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: What does `name` contain after the following statements? Explain the code.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
