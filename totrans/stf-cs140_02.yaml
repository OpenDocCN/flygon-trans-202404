- en: Threads, Processes, and Dispatching
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线程、进程和调度
- en: Lecture Notes for CS 140
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: CS 140课程讲义
- en: Spring 2014
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 2014年春季
- en: John Ousterhout
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 约翰·奥斯特豪特
- en: 'Readings for this topic from *Operating Systems: Principles and Practice*:
    Chapter 4.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从*操作系统：原理与实践*这个主题的阅读：第4章。
- en: Threads and Processes
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线程和进程
- en: 'Thread: a sequential execution stream'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线程：一个顺序执行流
- en: Executes a series of instructions in order (only one thing happens at a time).
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按顺序执行一系列指令（一次只发生一件事）。
- en: 'Process: one or more threads, along with their execution state.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进程：一个或多个线程，以及它们的执行状态。
- en: 'Execution state: everything that can affect, or be affected by, a thread:'
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行状态：一切可能影响或受线程影响的东西：
- en: Code, data, registers, call stack, open files, network connections, time of
    day, etc.
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码、数据、寄存器、调用堆栈、打开文件、网络连接、当天时间等。
- en: Part of the process state is private to a thread
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进程状态的一部分是线程私有的
- en: Part is shared among all threads in the process
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部分信息在进程中所有线程之间共享
- en: 'Evolution of operating system process model:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统进程模型的演变：
- en: Early operating systems supported a single process with a single thread at a
    time (*single tasking*). They ran batch jobs (one user at a time).
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 早期操作系统支持一次只能运行一个进程的单线程（*单任务*）。它们运行批处理作业（一次一个用户）。
- en: Some early personal computer operating systems used single-tasking (e.g. MS-DOS),
    but these systems are almost unheard of today.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些早期个人计算机操作系统使用单任务处理（例如MS-DOS），但这些系统今天几乎听都没听说过。
- en: 'By late 1970''s most operating systems were *multitasking* systems: they supported
    multiple processes, but each process had only a single thread.'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到了20世纪70年代末，大多数操作系统都是*多任务*系统：它们支持多个进程，但每个进程只有一个线程。
- en: 'In the 1990''s most systems converted to *multithreading*: multiple threads
    within each process.'
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在20世纪90年代，大多数系统转换为*多线程*：每个进程内有多个线程。
- en: Is a process the same as a program?
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进程和程序是一样的吗？
- en: Dispatching
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调度
- en: 'Almost all computers today can execute multiple threads simultaneously:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几乎所有计算机今天都可以同时执行多个线程：
- en: Each processor chip typically contains multiple *cores*
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个处理器芯片通常包含多个*核心*
- en: Each core contains a complete CPU capable of executing threads
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个核心包含一个完整的CPU，能够执行线程
- en: 'Many modern processors support *hyperthreading*: each physical core behaves
    as if it is actually two cores, so it can run two threads simultaneously (e.g.
    execute one thread while the other is waiting on a cache miss).'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多现代处理器支持*超线程*：每个物理核心表现得好像实际上是两个核心，因此它可以���时运行两个线程（例如，在一个线程等待缓存未命中时执行另一个线程）。
- en: For example, a server might contain 2 Intel Xeon E5-2670 processors, each with
    8 cores that supports 2-way hyperthreading. Overall, this computer can run 32
    threads simultaneously.
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，一个服务器可能包含2个Intel Xeon E5-2670处理器，每个处理器有8个支持2路超线程的核心。总体而言，这台计算机可以同时运行32个线程。
- en: May have more threads than cores
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能有比核心更多的线程
- en: At any given time, most threads do not need to execute (they are waiting for
    something).
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在任何给定时间，大多数线程不需要执行（它们正在等待某些事情）。
- en: 'OS uses a *process control block* to keep track of each process:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统使用*进程控制块*来跟踪每个进程：
- en: Execution state for each thread (saved registers, etc.)
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个线程的执行状态（保存的寄存器等）
- en: Scheduling information
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调度信息
- en: Information about memory used by this process
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关此进程使用的内存信息
- en: Information about open files
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关打开文件的信息
- en: Accounting and other miscellaneous information
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 会计和其他杂项信息
- en: 'At any given time a thread is in one of 3 states:'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在任何给定时间，一个线程处于以下3种状态之一：
- en: Running
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行中
- en: 'Blocked: waiting for an event (disk I/O, incoming network packet, etc.)'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻塞：等待事件（磁盘I/O，传入网络数据包等）
- en: 'Ready: waiting for CPU time'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 就绪：等待CPU时间
- en: '*Dispatcher*: innermost portion of the OS that runs on each core:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*调度程序*：运行在每个核心上的操作系统的最内部部分：'
- en: Run a thread for a while
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行一个线程一段时间
- en: Save its state
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存它的状态
- en: Load state of another thread
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载另一个线程的状态
- en: Run it ...
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行它...
- en: '*Context switch*: changing the thread currently running on a core by first
    saving the state of the old process, then loading the state of the new thread.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*上下文切换*：通过首先保存旧进程的状态，然后加载新线程的状态来更改当前在核心上运行的线程。'
- en: 'Note: the dispatcher is not itself a thread!'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意：调度程序本身不是一个线程！
- en: 'Core can only do one thing at a time. If a thread is executing, dispatcher
    isn''t: OS has lost control. How does OS regain control of core?'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 核心一次只能做一件事。如果一个线程正在执行，调度程序不是：操作系统失去了控制。操作系统如何重新获得核心的控制？
- en: 'Traps (events occurring in current thread that cause a change of control into
    the operating system):'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 陷阱（发生在当前线程中导致控制权转移到操作系统的事件）：
- en: System call.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统调用。
- en: Error (illegal instruction, addressing violation, etc.).
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误（非法指令，寻址违规等）。
- en: Page fault.
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面错误。
- en: 'Interrupts (events occurring outside the current thread that cause a state
    switch into the operating system):'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中断（发生在当前线程之外的事件，导致状态切换到操作系统）：
- en: Character typed at keyboard.
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在键盘上键入的字符。
- en: Completion of disk operation.
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完成磁盘操作。
- en: 'Timer: to make sure OS eventually gets control.'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定时器：确保操作系统最终获得控制。
- en: How does dispatcher decide which thread to run next?
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调度程序如何决定下一个要运行的线程？
- en: 'Plan 0: search process table from front, run first ready thread.'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划 0：从前面搜索进程表，运行第一个准备好的线程。
- en: 'Plan 1: link together the ready threads into a queue. Dispatcher grabs first
    thread from the queue. When threads become ready, insert at back of queue.'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划 1：将准备好的线程链接成队列。调度程序从队列中获取第一个线程。当线程准备就绪时，插入到队列的末尾。
- en: 'Plan 2: give each thread a priority, organize the queue according to priority.
    Or, perhaps have multiple queues, one for each priority class.'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划 2：为每个线程分配优先级，根据优先级组织队列。或者，可能有多个队列，每个队列对应一个优先级类。
- en: Process Creation
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进程创建
- en: 'How the operating system creates a process:'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统如何创建进程：
- en: Load code and data into memory.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码和数据加载到内存中。
- en: Create and initialize process control block.
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和初始化进程控制块。
- en: Create first thread with call stack.
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用调用堆栈创建第一个线程。
- en: Provide initial values for "saved state" for the thread
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为线程提供“保存状态”的初始值
- en: Make thread known to dispatcher; dispatcher "resumes" to start of new program.
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使调度程序知道线程；调度程序“恢复”到新程序的起始点。
- en: 'System calls for process creation in UNIX:'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UNIX 中用于进程创建的系统调用：
- en: fork makes copy of current process, with one thread.
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: fork 复制当前进程，带有一个线程。
- en: exec replaces memory with code and data from a given executable file. Doesn't
    return ("returns" to starting point of new program).
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: exec 用给定可执行文件的代码和数据替换内存。不返回（"返回"到新程序的起始点）。
- en: waitpid waits for a given process to exit.
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: waitpid 等待给定进程退出。
- en: 'Example:'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例子：
- en: '[PRE0]'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Advantage: can modify process state before calling exec (e.g. change environment,
    open files).'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优点：可以在调用 exec 之前修改进程状态（例如更改环境，打开文件）。
- en: 'Disadvantage: wasted work (most of forked state gets thrown away).'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺点：浪费工作（大部分 forked 状态被丢弃）。
- en: 'System calls for process creation in Windows:'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 中用于进程创建的系统调用：
- en: CreateProcess combines fork and exec
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: CreateProcess 结合了 fork 和 exec
- en: '[PRE1]'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Must pass arguments for any state changes between parent and child.
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须传递父子进程之间任何状态更改的参数。
- en: 'Process creation in Pintos: exec combines UNIX fork and exec.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pintos 中的进程创建：exec 结合了 UNIX 的 fork 和 exec。
