- en: アプリの構成要素
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序的组成要素
- en: 原文：[https://jsprimer.net/use-case/todoapp/app-structure/](https://jsprimer.net/use-case/todoapp/app-structure/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://jsprimer.net/use-case/todoapp/app-structure/](https://jsprimer.net/use-case/todoapp/app-structure/)
- en: HTMLとJavaScriptの[エントリーポイント](../entrypoint/)を作成しましたが、次はこのTodoアプリの構成要素を改めて見ていきましょう。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了HTML和JavaScript的[入口点](../entrypoint/)，接下来让我们重新审视一下这个Todo应用程序的组成要素。
- en: Todoアプリには、次のような機能を実装していきます。 Todoアイテムの追加、更新、削除、現在の状態の表示など複数の機能を持っています。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Todo应用程序将实现以下功能。 添加、更新、删除Todo项目，以及显示当前状态等多个功能。
- en: Todoアイテムを追加する
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加Todo项目
- en: Todoアイテムを更新する
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新Todo项目
- en: Todoアイテムを削除する
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Todo项目删除
- en: Todoアイテム数（合計）の表示
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示Todo项目数（总数）
- en: また、アプリと呼ぶからには見た目もちょっとしたものにしないと雰囲気が出ません。 このセクションでは、まずウェブアプリケーションを構成するHTML、CSS、JavaScriptの役割について見ていきます。
    このセクションで見た目だけで機能がないハリボテのTodoアプリを完成させ、次のセクションから実際にJavaScriptを使ってTodoアプリの機能を実装していきます。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，要称之为应用程序，外观也必须稍微精心设计。 在本节中，首先我们将了解构成Web应用程序的HTML、CSS和JavaScript的角色。 在本节中，我们将完成一个只有外观没有功能的Todo应用程序，然后从下一节开始，我们将使用JavaScript实际实现Todo应用程序的功能。
- en: '[](#html-css-javascript)*HTMLとCSSとJavaScript*'
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#html-css-javascript)*HTML、CSS和JavaScript*'
- en: '*Todoアプリはブラウザで動くアプリケーションとして作成しますが、ウェブアプリを作成するにはHTMLやCSS、JavaScriptを組み合わせて書いていきます。
    今回はHTTP通信などはいらないクライアントサイドのみで解決するウェブアプリなので、サーバーサイドの言語は登場しません。'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*Todo应用程序将作为在浏览器中运行的应用程序创建，但是要创建Web应用程序，需要结合HTML、CSS和JavaScript进行编写。 由于这次是一个仅在客户端解决的Web应用程序，不涉及HTTP通信等，因此不涉及服务器端语言。'
- en: 'HTML: コンテンツの構造を記述するためのマークアップ言語'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML：用于描述内容结构的标记语言
- en: 'CSS: HTMLの見た目を装飾するスタイルシート言語'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSS：用于装饰HTML外观的样式表语言
- en: 'JavaScript: インタラクションといった動作を扱うプログラミング言語'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript：处理交互等操作的编程语言
- en: 多くのウェブアプリケーションはHTMLでコンテンツの構造を定義し、CSSで見た目を装飾し、JavaScriptで動作をつけることで実装されます。 そのため、ウェブアプリはHTML、CSS、JavaScriptを組み合わせて作られています。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 许多Web应用程序通过定义HTML的内容结构，使用CSS装饰外观，并通过JavaScript添加功能来实现。 因此，Web应用程序是由HTML、CSS和JavaScript组合而成的。
- en: 一方、ブラウザにはiOSやAndroidのようにOSが提供するようなUIフレームワークの標準はありません。 また、ユーザーが実装したさまざまな種類のUIフレームワークがあります。
    そのため、Todoアプリという題材をとってみても、フレームワークや人によって書き方がまったく異なる場合もあります。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，浏览器没有像iOS或Android那样由操作系统提供的UI框架标准。 此外，用户实现了各种类型的UI框架。 因此，即使以Todo应用程序为例，不同的框架或人员可能会有完全不同的编写方式。
- en: 今回のTodoアプリは特別なUIフレームワークを使わずに、そのままのHTML、CSS、JavaScriptを組み合わせて書いていきます。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本次Todo应用程序将直接使用原始的HTML、CSS和JavaScript进行编写，而不使用特殊的UI框架。
- en: '[](#todo-html)*Todoアプリの構造をHTMLで定義する*'
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#todo-html)*使用HTML定义Todo应用程序的结构*'
- en: '*最初に今回作成するTodoアプリのHTMLの構造を定義しています。 ここで定義したHTMLとCSSは最後までこの形のまま利用します。 次のセクションから変更していくのはJavaScriptだけということになります。'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*首先定义了要创建的Todo应用程序的HTML结构。 此处定义的HTML和CSS将在整个过程中保持不变。 从下一部分开始，将仅更改JavaScript。'
- en: 「[エントリーポイント](../entrypoint/)」のセクションで作成した`todoapp`ディレクトリの`index.html`を次の内容に変更します。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在“[入口点](../entrypoint/)”部分中，将`todoapp`目录的`index.html`更改为以下内容。
- en: index.html
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: index.html
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: HTMLの内容を変更後にブラウザでアクセスすると次のような表示になります。 まだJavaScriptでTodoアプリの機能は実装していませんが、見た目だけのTodoアプリはこれで完成です。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 更改HTML内容后，在浏览器中访问将显示如下内容。 尽管尚未使用JavaScript实现Todo应用程序的功能，但仅外��的Todo应用程序已经完成。
- en: '![todoappのHTMLとCSSによる骨組み](../Images/7d0716a98c167ce762c64e586506700e.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![todoapp的HTML和CSS框架](../Images/7d0716a98c167ce762c64e586506700e.png)'
- en: 実際に変更したHTMLを上から順番に見てみましょう。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步查看实际更改的HTML。
- en: '[](#comment-css-file-load)*1\. CSSファイルを読み込み*'
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#comment-css-file-load)*1\. 加载CSS文件*'
- en: '*`head`要素の中で`link`タグを使い、外部のCSSファイルを読み込んでいます。 今回読み込んでいるCSSファイルは、Todoアプリらしい表示に必要なCSSを定義したファイルになっています。'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*在`head`元素中使用`link`标签，加载外部CSS文件。 此次加载的CSS文件包含了实现Todo应用程序外观所需的CSS定义。'
- en: '[https://jsprimer.net/use-case/todoapp/final/final/index.css](https://jsprimer.net/use-case/todoapp/final/final/index.css)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://jsprimer.net/use-case/todoapp/final/final/index.css](https://jsprimer.net/use-case/todoapp/final/final/index.css)'
- en: このCSSは動作には影響がないため、今回のユースケースでは外部ファイルをそのまま取り込むだけにして解説は省略します。 CSSに定義したスタイルを正しく適用するには、`class`属性やHTML要素の構造が一致している必要があります。
    表示が崩れている場合は、`class`属性が正しいか、HTMLの構造が同じになっているかを確認してください。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 由于此CSS对操作没有影响，因此在本用例中仅导入外部文件而省略解释。 要正确应用定义的样式，`class`属性或HTML元素的结构必须匹配。 如果显示出现问题，请检查`class`属性是否正确，HTML结构是否相同。
- en: '[](#comment-class-for-css)*2\. class属性をCSSのために指定*'
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#comment-class-for-css)*2\. 为CSS指定class属性*'
- en: '*`div`タグの`class`属性に`todoapp`という値（クラス名）を設定しています。 `class`属性は基本的にはCSSから装飾するための目印として利用されます。
    また、1つのページの中で同じクラス名を複数の要素に対して設定できます。 HTMLの`class`属性はJavaScriptの`class`構文とは無関係なことには注意が必要です。'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*`div`标签的`class`属性设置为`todoapp`。 `class`属性基本上用作CSS装饰的标志。 此外，在同一页面中，可以为多个元素设置相同的类名。
    需要注意的是，HTML的`class`属性与JavaScript的`class`语法无关。'
- en: 今回の`todoapp`というクラス名を持つ要素を、CSSから`.todoapp`というCSSセレクタで指定できます。 [CSSセレクタ](https://developer.mozilla.org/ja/docs/Learn/CSS/Building_blocks/Selectors)とはクラス名などを使って、HTML要素を指定できる記法です。
    特定の「クラス名」を持つ要素の場合は`.クラス名`（クラス名の前にドット）で選択できます。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`.todoapp` CSS选择器从CSS中选择具有`todoapp`类名的元素。 [CSS选择器](https://developer.mozilla.org/ja/docs/Learn/CSS/Building_blocks/Selectors)是一种通过类名等选择HTML元素的记法。
    对于具有特定“类名”的元素，可以使用`.class name`（在类名前加上点）进行选择。
- en: 次のCSSコードでは、`todoapp`というクラス名を持つ要素の`background`プロパティの値を`black`にしています。 つまり`todoapp`クラス名の要素の背景色を黒色にするという意味になります。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的CSS代码中，将具有名为`todoapp`的类名的元素的`background`属性值设置为`black`。 这意味着将`todoapp`类名元素的背景颜色设置为黑色。
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: CSSセレクタではタグ名、`id`属性や構造などに対する指定もできます。 たとえば、特定の「id名」を持つ要素の場合は`#id名`で選択できます。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: CSS选择器还可以指定标签名称、`id`属性和结构等。 例如，可以使用`#id name`选择具有特定“id name”的元素。
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[](#comment-id-for-js)*3\. id属性をJavaScriptのために指定*'
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#comment-id-for-js)*3\. 为JavaScript指定id属性*'
- en: '*`id`属性は、その要素に対するページ内でユニークな識別子をつけるための属性です。 `id`属性はCSS、JavaScript、リンクのアンカーなど、さまざまな用途で利用されます。
    また1つのページの中では同じid属性名を複数の要素に対して設定できません。'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*`id`属性用于为该元素指定页面内唯一的标识符。 `id`属性用于CSS、JavaScript、链接锚点等各种用途。 此外，在同一页面中，不能为多个元素设置相同的id属性名。'
- en: 今回のTodoアプリではJavaScriptから要素を選択するために`id`属性を設定しています。 先ほどのCSSセレクタはCSSから要素を指定するだけではなく、JavaScriptから要素を指定する際にも利用できます。
    ブラウザのDOM APIの`document.querySelector` APIではCSSセレクタを使って要素を選択できます。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次待办事项应用中，我们设置了`id`属性以便从JavaScript中选择元素。 前面提到的CSS选择器不仅可以用于从CSS中选择元素，还可以用于从JavaScript中选择元素。
    在浏览器的DOM API中，可以使用`document.querySelector` API通过CSS选择器选择元素。
- en: 次のコードでは、`document.querySelector("CSSセレクタ")`を利用して特定のid属性名の要素を取得しています。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们使用`document.querySelector("CSS选择器")`来获取特定id属性名的元素。
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: そのため、JavaScriptで参照する要素には`id`属性を目印としてつけています。 わかりやすくするために、JavaScriptから扱うid属性は慣習的に`js-`からはじまる名前にしています。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了JavaScript能够引用这些元素，我们给元素添加了`id`属性作为标识。 为了更好地理解，我们约定JavaScript处理的id属性以`js-`开头命名。
- en: '[](#comment-todo-list)*4\. TodoアプリのメインとなるTodoリスト*'
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#comment-todo-list)*4\. 待办事项应用的主要待办事项列表*'
- en: '*`js-todo-list`という`id`属性をつけた`div`要素が、今回のTodoアプリのメインとなるTodoリストです。 この`div`要素の中身はJavaScriptで動的に更新されるため、HTMLでは目印となる`id`属性をつけています。'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*带有`id`属性`js-todo-list`的`div`元素是本次待办事项应用的主要待办事项列表。 由于这个`div`元素的内容会在JavaScript中动态更新，因此在HTML中我们添加了一个标识性的`id`属性。'
- en: 初期表示時はTodoリストの中身がまだ空であるため、何も表示されていません。 また`<!--`と`-->`で囲まれた範囲はHTMLのコメントであるため、表示されません。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 初次显示时，待办事项列表还是空的，因此没有任何内容显示。 同时，被`<!--`和`-->`包围的部分是HTML注释，不会被显示。
- en: '[](#comment-todo-count)*5\. Todoアイテム数の表示*'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#comment-todo-count)*5\. 显示待办事项数*'
- en: '*`js-todo-count`という`id`属性をつけた`span`要素は、現在のTodoリストのアイテム数を表示します。 初期表示時はTodoリストが空であるため0個となりますが、Todoアイテムを追加や削除する際には合わせて更新する必要があります。'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*带有`id`属性`js-todo-count`的`span`元素用于显示当前待办事项的数量。 初次显示时，由于待办事项列表为空，数量为0，但在添加或删除待办事项时需要相应更新。'
- en: '[](#conclusion)*まとめ*'
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#conclusion)*总结*'
- en: '*このセクションではHTMLでアプリの構造を定義し、CSSでアプリのスタイルを定義しました。 次のセクションではJavaScriptモジュールを作成していき、現在は空であるTodoリストを更新していきます。'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '*在这一部分中，我们使用HTML定义了应用的结构，用CSS定义了应用的样式。 在接下来的部分中，我们将创建JavaScript模块，并更新当前为空的待办事项列表。'
- en: '[](#section-checklist)*このセクションのチェックリスト*'
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#section-checklist)*本节的检查清单*'
- en: '**   実装するTodoアプリの構成要素を理解した'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**   理解了要实现的待办事项应用的组成要素'
- en: HTML、CSS、JavaScriptの役割の違いを理解した
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解了HTML、CSS、JavaScript的不同作用
- en: Todoアプリの見た目をHTMLとCSSで定義した
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Todo应用的外观是用HTML和CSS定义的
- en: ここまでのTodoアプリは次のURLで確認できます。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下URL中查看到目前为止的待办事项应用。
- en: '[https://jsprimer.net/use-case/todoapp/app-structure/todo-html/](https://jsprimer.net/use-case/todoapp/app-structure/todo-html/)*********'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://jsprimer.net/use-case/todoapp/app-structure/todo-html/](https://jsprimer.net/use-case/todoapp/app-structure/todo-html/)*********'
