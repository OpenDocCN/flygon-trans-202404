- en: Choose Your Tools with Care
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择工具时要谨慎
- en: Choose Your Tools with Care
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择工具时要谨慎
- en: 'Modern applications are very rarely built from scratch. They are assembled
    using existing tools — components, libraries, and frameworks — for a number of
    good reasons:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现代应用程序很少从零开始构建。它们使用现有工具——组件、库和框架——进行组装，有许多很好的理由：
- en: Applications grow in size, complexity, and sophistication, while the time available
    to develop them grows shorter. It makes better use of developers' time and intelligence
    if they can concentrate on writing more business-domain code and less infrastructure
    code.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序的规模、复杂性和复杂性不断增长，而开发它们的时间却越来越短。如果开发者可以集中精力编写更多的业务领域代码，而不是基础设施代码，那么就更好地利用了他们的时间和智力。
- en: Widely used components and frameworks are likely to have fewer bugs than the
    ones developed in-house.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广泛使用的组件和框架可能比内部开发的组件和框架bug更少。
- en: There is a lot of high-quality software available on the web for free, which
    means lower development costs and greater likelihood of finding developers with
    the necessary interest and expertise.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有很多高质量的免费软件可供使用，这意味着开发成本更低，更有可能找到具有必要兴趣和专业知识的开发人员。
- en: Software production and maintenance is human-intensive work, so buying may be
    cheaper than building.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件的生产和维护是人力密集型的工作，所以购买可能比建造更便宜。
- en: 'However, choosing the right mix of tools for your application can be a tricky
    business requiring some thought. In fact when making a choice, there are a few
    things you should keep in mind:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为您的应用程序选择合适的工具组合可能是一项需要一些思考的棘手任务。实际上，在做出选择时，有几件事情你应该记住：
- en: Different tools may rely on different assumptions about their context — e.g.,
    surrounding infrastructure, control model, data model, communication protocols,
    etc. — which can lead to an architectural mismatch between the application and
    the tools. Such a mismatch leads to hacks and workarounds that will make the code
    more complex than necessary.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的工具可能依赖于关于其上下文的不同假设——例如，周围的基础设施、控制模型、数据模型、通信协议等——这可能导致应用程序和工具之间的架构不匹配。这样的不匹配会导致需要比必要更复杂的代码来进行黑客和解决方法。
- en: Different tools have different lifecycles, and upgrading one of them may become
    an extremely difficult and time-consuming task since the new functionality, design
    changes, or even bug fixes may cause incompatibilities with the other tools. The
    greater the number tools the worse the problem can become.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的工具有不同的生命周期，升级其中一个可能会变成一项极其困难和耗时的任务，因为新的功能、设计更改甚至是错误修复可能会导致与其他工具的不兼容性。工具数量越多，问题就会变得越糟糕。
- en: Some tools require quite a bit of configuration, often by means of one or more
    XML files, which can grow out of control very quickly. The application may end
    up looking as if it was all written in XML plus a few odd lines of code in some
    programming language. The configurational complexity will make the application
    difficult to maintain and to extend.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有些工具需要相当多的配置，通常通过一个或多个 XML 文件来配置，这可能会很快失控。应用程序最终可能看起来就像全部都是用 XML 编写的，再加上一些奇怪的行代码。配置复杂性会使应用程序难以维护和扩展。
- en: 'Vendor lock-in occurs when code that depends heavily on specific vendor products
    ends up being constrained by them on several counts: maintainability, performances,
    ability to evolve, price, etc.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 供应商锁定发生在那些严重依赖特定供应商产品的代码最终被它们限制在多个方面：可维护性、性能、能力进化、价格等。
- en: If you plan to use free software, you may discover that it's not so free after
    all. You may need to buy commercial support, which is not necessarily going to
    be cheap.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您计划使用免费软件，您可能会发现它实际上并不那么免费。您可能需要购买商业支持，这并不一定会便宜。
- en: Licensing terms matter, even for free software. For example, in some companies
    it is not acceptable to use software licensed under the GNU license terms because
    of its viral nature — i.e., software developed with it must be distributed along
    with its source code.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许可证条款很重要，即使对于免费软件也是如此。例如，在某些公司中，使用根据 GNU 许可证条款许可的软件是不可接受的，因为它的病毒性质——即，使用它开发的软件必须与其源代码一起分发。
- en: My personal strategy to mitigate these problems is to start small by using only
    the tools that are absolutely necessary. Usually the initial focus is on removing
    the need to engage in low-level infrastructure programming (and problems), e.g.,
    by using some middleware instead of using raw sockets for distributed applications.
    And then add more if needed. I also tend to isolate the external tools from my
    business domain objects by means of interfaces and layering, so that I can change
    the tool if I have to with just a small amount of pain. A positive side effect
    of this approach is that I generally end up with a smaller application that uses
    fewer external tools than originally forecast.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人缓解这些问题的策略是从小处着手，只使用绝对必要的工具。通常，最初的重点是消除参与低级基础设施编程（和问题）的需求，例如，使用一些中间件而不是为分布式应用程序使用原始套接字。然后根据需要添加更多。我还倾向于通过接口和分层将外部工具与我的业务域对象隔离，这样，如果必要的话，我可以只需付出少量痛苦就能更改工具。这种方法的一个积极副作用是，我通常最终得到一个比最初预测使用更少外部工具的较小应用程序。
- en: By [Giovanni Asproni](http://programmer.97things.oreilly.com/wiki/index.php/Giovanni_Asproni)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 由[Giovanni Asproni](http://programmer.97things.oreilly.com/wiki/index.php/Giovanni_Asproni)
