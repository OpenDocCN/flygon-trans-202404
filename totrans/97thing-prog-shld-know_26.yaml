- en: Don't Ignore that Error!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要忽视那个错误！
- en: Don't Ignore that Error!
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要忽视那个错误！
- en: '*I was walking down the street one evening to meet some friends in a bar. We
    hadn''t shared a beer in some time and I was looking forward to seeing them again.
    In my haste, I wasn''t looking where I was going. I tripped over the edge of a
    curb and ended up flat on my face. Well, it serves me right for not paying attention,
    I guess.*'
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*一天晚上我在街上走着去酒吧见一些朋友。我们有段时间没喝啤酒了，我很期待再次见到他们。在我的匆忙中，我没注意到我在哪里。我绊倒在路边的路缘石上，摔倒在地。嗯，我不注意，这是我自找的吧，我猜。*'
- en: ''
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*It hurt my leg, but I was in a hurry to meet my friends. So I pulled myself
    up and carried on. As I walked further the pain was getting worse. Although I''d
    initially dismissed it as shock, I rapidly realized there was something wrong.*'
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*我的腿受伤了，但我急着去见朋友。所以我振作起来继续前行。当我走得更远时，疼痛加剧了。尽管我最初将其视为震惊，但我迅速意识到有问题。*'
- en: ''
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*But I hurried on to the bar regardless. I was in agony by the time I arrived.
    I didn''t have a great night out, because I was terribly distracted. In the morning
    I went to the doctor and found out I''d fractured my shin bone. Had I stopped
    when I felt the pain, I''d''ve prevented a lot of extra damage that I caused by
    walking on it. Probably the worst morning after of my life.*'
  id: totrans-6
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*但我还是匆匆赶往酒吧。我到达时已经非常痛苦了。我度过了不愉快的夜晚，因为我分心得厉害。第二天早上我去看医生，发现我胫骨骨折了。如果我在感到疼痛时停下来，我就能防止我因继续行走而造成的额外损伤。可能是我一生中最糟糕的第二天早上。*'
- en: Too many programmers write code like my disastrous night out.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 太多的程序员写出像我那场灾难般的代码。
- en: '*Error, what error? It won''t be serious. Honestly. I can ignore it.* This
    is not a winning strategy for solid code. In fact, it''s just plain laziness.
    (The wrong sort.) No matter how unlikely you think an error is in your code, you
    should always check for it, and always handle it. Every time. You''re not saving
    time if you don''t: You''re storing up potential problems for the future.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*错误，什么错误？不会很严重的。真的。我可以忽略它的。* 这不是一个制作可靠代码的成功策略。事实上，这只是纯粹的懒惰。（错误的一种。）无论你认为代码中错误的可能性有多小，你都应该始终检查并处理它。每一次都是如此。如果你不这样做，你并没有节省时间：你正在为将来存储潜在的问题。'
- en: 'We report errors in our code in a number of ways, including:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以多种方式报告代码中的错误，包括：
- en: '**Return codes** can be used as the resulting value of a function to mean "it
    didn''t work." Error return codes are far too easy to ignore. You won''t see anything
    in the code to highlight the problem. Indeed, it''s become standard practice to
    ignore some standard C functions'' return values. How often do you check the return
    value from printf?'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**返回代码**可用作函数的结果值，意味着“它没用”。错误返回代码太容易被忽视了。你在代码中看不到任何突出问题的东西。事实上，忽略某些标准 C 函数的返回值已成为标准做法。你多久检查一次
    printf 的返回值？'
- en: '**errno** is a curious C aberration, a separate global variable set to signal
    error. It''s easy to ignore, hard to use, and leads to all sorts of nasty problems
    — for example, what happens when you have multiple threads calling the same function?
    Some platforms insulate you from pain here; others do not.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**errno** 是一个奇怪的 C 异常，一个单独的全局变量，用来表示错误。它很容易被忽视，难以使用，并导致各种各样的问题——例如，当你有多个线程调用同一个函数时会发生什么？有些平台在这里为你屏蔽痛苦；其他则不然。'
- en: '**Exceptions** are a more structured language-supported way of signaling and
    handling errors. And you can''t possibly ignore them. Or can you? I''ve seen lots
    of code like this:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**异常** 是一种更结构化、由语言支持的信号和处理错误的方式。你不可能忽略它们。或者你能？我见过很多这样的代码：'
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The saving grace of this awful construct is that it highlights the fact you're
    doing something morally dubious.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个可怕构造的救赎之处在于，它突显了你正在做一些道德上可疑的事情。
- en: If you ignore an error, turn a blind eye, and pretend that nothing has gone
    wrong, you run great risks. Just as my leg ended up in a worse state than if I'd
    stopped walking on it immediately, plowing on regardless can lead to very complex
    failures. Deal with problems at the earliest opportunity. Keep a short account.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你忽视一个错误，视而不见，并假装什么都没发生，你会承担很大的风险。就像我的腿最终比我立即停下来时更糟糕一样，不顾一切地继续下去会导致非常复杂的失败。尽早解决问题。记账要及时。
- en: 'Not handling errors leads to:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 不处理错误会导致：
- en: '**Brittle code.** Code that''s filled with exciting, hard-to-find bugs.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**脆弱的代码。** 充满令人兴奋的、难以发现的错误的代码。'
- en: '**Insecure code.** Crackers often exploit poor error handling to break into
    software systems.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不安全的代码。** 黑客经常利用糟糕的错误处理方式来入侵软件系统。'
- en: '**Poor structure.** If there are errors from your code that are tedious to
    deal with continually, you have probably have a poor interface. Express it so
    that the errors are less intrusive and the their handling is less onerous.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结构不佳。** 如果你的代码中有一些错误是令人厌烦的，你可能有一个糟糕的接口。设计它，使错误不那么显眼，处理它们也不那么繁琐。'
- en: Just as you should check all potential errors in your code, you need to expose
    all potentially erroneous conditions in your interfaces. Do not hide them, pretending
    that your services will always work.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 就像你应该检查代码中的所有潜在错误一样，你需要暴露接口中所有潜在错误的条件。不要隐藏它们，假装你的服务总是正常工作。
- en: Why don't we check for errors? There are a number of common excuses. Which of
    these do you agree with? How would you counter each one?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么我们不检查错误？有许多常见的借口。你同意其中哪些？你会如何反驳每一个？
- en: Error handling clutters up the flow of the code, making it harder to read, and
    harder to spot the "normal" flow of execution.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误处理会使代码流程混乱，使其更难阅读，更难发现“正常”执行流程。
- en: It's extra work and I have a deadline looming.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是额外的工作，而且我有一个迫在眉睫的截止日期。
- en: I know that this function call will *never* return an error (printf always works,
    malloc always returns new memory — if it fails we have bigger problems...).
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我知道这个函数调用将*永远*不会返回错误（printf总是有效，malloc总是返回新内存——如果失败，我们会有更大的问题……）。
- en: It's only a toy program, and needn't be written to a production-worthy level.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这只是一个玩具程序，不需要达到生产水平的程度。
- en: By [Pete Goodliffe](http://programmer.97things.oreilly.com/wiki/index.php/Pete_Goodliffe)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：[皮特·古德利夫](http://programmer.97things.oreilly.com/wiki/index.php/Pete_Goodliffe)
