["```\n(define (f x) (lambda () x))(define a (f 2))(a)\u00a0 -->\u00a0 2(define b (f 3))(b)\u00a0 -->\u00a0 3\n```", "```\n(define aa (f a))(aa)\u00a0 \u00a0 -->\u00a0 #<procedure> (this is a)((aa))\u00a0 -->\u00a0 2\n```", "```\n(define (kons x y)\u00a0 (lambda (b)\u00a0 \u00a0 (if b x y)))(define (kar p) (p #t))(define (kdr p) (p #f))(define a (kons 1 2))(define b (kons 3 4))(list (kar a) (kdr a))(list (kar b) (kdr b))\n```", "```\n(: kons : (All (A B) A B -> (Boolean -> (U A B))))(define (kons x y)\u00a0 (lambda (b)\u00a0 \u00a0 (if b x y)))(: kar : (All (T) (Boolean -> T) -> T))(define (kar p) (p #t))(: kdr : (All (T) (Boolean -> T) -> T))(define (kdr p) (p #f))(define a (kons 1 2))(define b (kons 3 4))(list (kar a) (kdr a))(list (kar b) (kdr b))\n```", "```\n(define (kons x y) (lambda (s) (s x y)))(define (kar p) (p (lambda (x y) x)))(define (kdr p) (p (lambda (x y) y)))(define a (kons 1 2))(define b (kons 3 4))(list (kar a) (kdr a))(list (kar b) (kdr b))\n```", "```\n(define-type (Kons A B) = ((A B -> (U A B)) -> (U A B)))(: kons : (All (A B) A B -> (Kons A B)))(define (kons x y) (lambda (s) (s x y)))(: kar : (All (A B) (Kons A B) -> (U A B)))(define (kar p) (p (lambda (x y) x)))(: kdr : (All (A B) (Kons A B) -> (U A B)))(define (kdr p) (p (lambda (x y) y)))(define a (kons 1 2))(define b (kons 3 4))(list (kar a) (kdr a))(list (kar b) (kdr b))\n```", "```\n(define-type Kons = (All (A B) (A B -> (U A B)) -> (U A B)))\n```", "```\nfunction kons(x,y) { return function(s) { return s(x, y); } }function kar(p) { return p(function(x,y){ return x; }); }function kdr(p) { return p(function(x,y){ return y; }); }a = kons(1,2);b = kons(3,4);console.log('a = <' + kar(a) + ',' + kdr(a) + '>' );console.log('b = <' + kar(b) + ',' + kdr(b) + '>' );\n```", "```\nvar kons = (x,y) => s => s(x,y);var kar\u00a0 = p => p((x,y) => x);var kdr\u00a0 = p => p((x,y) => y);\n```"]