["```\nvar array [3]int \n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var a1 [2]int\n    var a2 [3]int\n    a2 = a1\n    fmt.Println(a2)\n} \n```", "```\ncannot use a1 (type [2]int) as type [3]int in assignment \n```", "```\narray := [...]int {1, 2, 3} \n```", "```\npackage main\n\nimport (\n    \"fmt\"\n    \"reflect\"\n)\n\nfunc main() {\n    array := [...]int {1, 2, 3}\n    slice := []int{1, 2, 3}\n    fmt.Println(reflect.TypeOf(array), reflect.TypeOf(slice))\n} \n```", "```\n[3]int []int \n```", "```\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc changeArray(array [3]int) {\n    for i, _ := range array {\n        array[i] = 1\n    }\n    fmt.Printf(\"In changeArray function, array address is %p, value is %v\\n\", &array, array)\n}\n\nfunc main() {\n    var array [3]int\n\n    fmt.Printf(\"Original array address is %p, value is %v\\n\", &array, array)\n    changeArray(array)\n    fmt.Printf(\"Changed array address is %p, value is %v\\n\", &array, array)\n} \n```", "```\nOriginal array address is 0xc082008680, value is [0 0 0]\nIn changeArray function, array address is 0xc082008700, value is [1 1 1]\nChanged array address is 0xc082008680, value is [0 0 0] \n```"]