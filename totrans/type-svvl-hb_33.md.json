["```\nsample.tsts`interface  <data-lsp lsp=\"interface Person\">Person</data-lsp> { <data-lsp lsp=\"(property) Person.firstName: string\">firstName</data-lsp>:  string; <data-lsp lsp=\"(property) Person.lastName: string\">lastName</data-lsp>:  string;}function  <data-lsp lsp=\"function greeter(person: Person): string\">greeter</data-lsp>(<data-lsp lsp=\"(parameter) person: Person\">person</data-lsp>:  <data-lsp lsp=\"interface Person\">Person</data-lsp>):  string {  return  \"Hello, \"  +  <data-lsp lsp=\"(parameter) person: Person\">person</data-lsp>.<data-lsp lsp=\"(property) Person.firstName: string\">firstName</data-lsp> +  \" \"  +  <data-lsp lsp=\"(parameter) person: Person\">person</data-lsp>.<data-lsp lsp=\"(property) Person.lastName: string\">lastName</data-lsp>;}`\n```", "```\nsample.tsts`interface <data-lsp lsp=\"interface Person\">Person</data-lsp> { <data-lsp lsp=\"(property) Person.firstName: string\">firstName</data-lsp>:  string; <data-lsp lsp=\"(property) Person.lastName: string\">lastName</data-lsp>:  string;}function <data-lsp lsp=\"function greeter(person: Person): string\">greeter</data-lsp>(<data-lsp lsp=\"(parameter) person: Person\">person</data-lsp>: <data-lsp lsp=\"interface Person\">Person</data-lsp>):  string {  return  \"Hello, \"  +  <data-lsp lsp=\"(parameter) person: Person\">person</data-lsp>.<data-lsp lsp=\"(property) Person.firstName: string\">firstName</data-lsp> +  \" \"  +  <data-lsp lsp=\"(parameter) person: Person\">person</data-lsp>.<data-lsp lsp=\"(property) Person.lastName: string\">lastName</data-lsp>;}`\n```", "```\nbash`tsc -d`\n```", "```\nbash`tsc -d`\n```", "```\nsample.jsjs`function  <data-lsp lsp=\"function greeter(person: any): string\">greeter</data-lsp>(<data-lsp lsp=\"(parameter) person: any\">person</data-lsp>) {  return  \"Hello, \"  +  <data-lsp lsp=\"(parameter) person: any\">person</data-lsp>.<data-lsp lsp=\"any\">firstName</data-lsp> +  \" \"  +  <data-lsp lsp=\"(parameter) person: any\">person</data-lsp>.<data-lsp lsp=\"any\">lastName</data-lsp>;}//# sourceMappingURL=sample.js.map`\n```", "```\nsample.jsjs`function <data-lsp lsp=\"function greeter(person: any): string\">greeter</data-lsp>(<data-lsp lsp=\"(parameter) person: any\">person</data-lsp>) {  return  \"Hello, \"  +  <data-lsp lsp=\"(parameter) person: any\">person</data-lsp>.<data-lsp lsp=\"any\">firstName</data-lsp> +  \" \"  +  <data-lsp lsp=\"(parameter) person: any\">person</data-lsp>.<data-lsp lsp=\"any\">lastName</data-lsp>;}//# sourceMappingURL=sample.js.map`\n```", "```\nsample.d.tsts`interface  <data-lsp lsp=\"interface Person\">Person</data-lsp> { <data-lsp lsp=\"(property) Person.firstName: string\">firstName</data-lsp>:  string; <data-lsp lsp=\"(property) Person.lastName: string\">lastName</data-lsp>:  string;}declare  function  <data-lsp lsp=\"function greeter(person: Person): string\">greeter</data-lsp>(<data-lsp lsp=\"(parameter) person: Person\">person</data-lsp>:  <data-lsp lsp=\"interface Person\">Person</data-lsp>):  string;`\n```", "```\nsample.d.tsts`interface <data-lsp lsp=\"interface Person\">Person</data-lsp> { <data-lsp lsp=\"(property) Person.firstName: string\">firstName</data-lsp>:  string; <data-lsp lsp=\"(property) Person.lastName: string\">lastName</data-lsp>:  string;}declare  function <data-lsp lsp=\"function greeter(person: Person): string\">greeter</data-lsp>(<data-lsp lsp=\"(parameter) person: Person\">person</data-lsp>: <data-lsp lsp=\"interface Person\">Person</data-lsp>):  string;`\n```", "```\nbash`npm install date-fns`\n```", "```\nbash`npm install date-fns`\n```", "```\nbash`npm install express --save # express\u672c\u4f53\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30ebnpm install @types/express --save-dev # \u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb`\n```", "```\nbash`npm install express --save # express\u672c\u4f53\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30ebnpm install @types/express --save-dev # \u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb`\n```", "```\njs`function  <data-lsp lsp=\"function hello(name: any): string\">hello</data-lsp>(<data-lsp lsp=\"(parameter) name: any\">name</data-lsp>) {  return  \"Hello, \"  + <data-lsp lsp=\"(parameter) name: any\">name</data-lsp>;}`\n```", "```\njs`function <data-lsp lsp=\"function hello(name: any): string\">hello</data-lsp>(<data-lsp lsp=\"(parameter) name: any\">name</data-lsp>) {  return  \"Hello, \"  + <data-lsp lsp=\"(parameter) name: any\">name</data-lsp>;}`\n```", "```\nts`<data-err><data-lsp lsp=\"any\">hello</data-lsp></data-err>(\"taro\");Cannot find name 'hello'.2304Cannot find name 'hello'.`\n```", "```\nts`<data-err><data-lsp lsp=\"any\">hello</data-lsp>(</data-err>\"taro\");Cannot find name 'hello'.2304Cannot find name 'hello'.`\n```", "```\nts`declare  function  <data-lsp lsp=\"function hello(name: string): string\">hello</data-lsp>(<data-lsp lsp=\"(parameter) name: string\">name</data-lsp>:  string):  string;<data-lsp lsp=\"function hello(name: string): string\">hello</data-lsp>(\"taro\");\"hello, taro\"`\n```", "```\nts`declare  function <data-lsp lsp=\"function hello(name: string): string\">hello</data-lsp>(<data-lsp lsp=\"(parameter) name: string\">name</data-lsp>:  string):  string;<data-lsp lsp=\"function hello(name: string): string\">hello</data-lsp>(\"taro\");\"hello, taro\"`\n```", "```\nnode_modules/@types/jest/index.d.tsts`declare  var <data-lsp lsp=\"var beforeAll: jest.Lifecycle\">beforeAll</data-lsp>:  <data-lsp lsp=\"namespace jest\">jest</data-lsp>.<data-lsp lsp=\"type jest.Lifecycle = (fn: ProvidesHookCallback, timeout?: number) => any\">Lifecycle</data-lsp>;declare  namespace  <data-lsp lsp=\"namespace jest\">jest</data-lsp> {  type  <data-lsp lsp=\"type jest.Lifecycle = (fn: ProvidesHookCallback, timeout?: number) => any\">Lifecycle</data-lsp>  = (<data-lsp lsp=\"(parameter) fn: ProvidesHookCallback\">fn</data-lsp>:  <data-lsp lsp=\"type ProvidesHookCallback = /*unresolved*/ any\">ProvidesHookCallback</data-lsp>, <data-lsp lsp=\"(parameter) timeout: number | undefined\">timeout</data-lsp>?:  number) =>  any;}`\n```", "```\nnode_modules/@types/jest/index.d.tsts`declare  var <data-lsp lsp=\"var beforeAll: jest.Lifecycle\">beforeAll</data-lsp>: <data-lsp lsp=\"namespace jest\">jest</data-lsp>.<data-lsp lsp=\"type jest.Lifecycle = (fn: ProvidesHookCallback, timeout?: number) => any\">Lifecycle</data-lsp>;declare  namespace <data-lsp lsp=\"namespace jest\">jest</data-lsp> {  type <data-lsp lsp=\"type jest.Lifecycle = (fn: ProvidesHookCallback, timeout?: number) => any\">Lifecycle</data-lsp> = (<data-lsp lsp=\"(parameter) fn: ProvidesHookCallback\">fn</data-lsp>: <data-lsp lsp=\"type ProvidesHookCallback = /*unresolved*/ any\">ProvidesHookCallback</data-lsp>, <data-lsp lsp=\"(parameter) timeout: number | undefined\">timeout</data-lsp>?:  number) =>  any;}`\n```", "```\nnode_modules/typescript/lib/lib.dom.d.tsts`interface  <data-lsp lsp=\"interface Element\">Element</data-lsp>  extends  <data-lsp lsp=\"interface Node\">Node</data-lsp>,  <data-lsp lsp=\"interface ARIAMixin\">ARIAMixin</data-lsp>,  <data-lsp lsp=\"interface Animatable\">Animatable</data-lsp>,  <data-lsp lsp=\"interface ChildNode\">ChildNode</data-lsp>,  <data-lsp lsp=\"interface InnerHTML\">InnerHTML</data-lsp>,  <data-lsp lsp=\"interface NonDocumentTypeChildNode\">NonDocumentTypeChildNode</data-lsp>,  <data-lsp lsp=\"interface ParentNode\">ParentNode</data-lsp>,  <data-lsp lsp=\"interface Slottable\">Slottable</data-lsp> {  readonly <data-lsp lsp=\"(property) Element.attributes: NamedNodeMap\">attributes</data-lsp>:  <data-lsp lsp=\"interface NamedNodeMap\">NamedNodeMap</data-lsp>;  /** Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object. */  readonly <data-lsp lsp=\"(property) Element.classList: DOMTokenList\">classList</data-lsp>:  <data-lsp lsp=\"interface DOMTokenList\">DOMTokenList</data-lsp>;  // \u7701\u7565}`\n```", "```\nnode_modules/typescript/lib/lib.dom.d.tsts`interface <data-lsp lsp=\"interface Element\">Element</data-lsp>  extends <data-lsp lsp=\"interface Node\">Node</data-lsp>, <data-lsp lsp=\"interface ARIAMixin\">ARIAMixin</data-lsp>, <data-lsp lsp=\"interface Animatable\">Animatable</data-lsp>, <data-lsp lsp=\"interface ChildNode\">ChildNode</data-lsp>, <data-lsp lsp=\"interface InnerHTML\">InnerHTML</data-lsp>, <data-lsp lsp=\"interface NonDocumentTypeChildNode\">NonDocumentTypeChildNode</data-lsp>, <data-lsp lsp=\"interface ParentNode\">ParentNode</data-lsp>, <data-lsp lsp=\"interface Slottable\">Slottable</data-lsp> {  readonly <data-lsp lsp=\"(property) Element.attributes: NamedNodeMap\">attributes</data-lsp>: <data-lsp lsp=\"interface NamedNodeMap\">NamedNodeMap</data-lsp>;  /** Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object. */  readonly <data-lsp lsp=\"(property) Element.classList: DOMTokenList\">classList</data-lsp>: <data-lsp lsp=\"interface DOMTokenList\">DOMTokenList</data-lsp>;  // \u7701\u7565}`\n```", "```\nts`// hello.d.tsinterface  <data-lsp lsp=\"interface Element\">Element</data-lsp> { <data-lsp lsp=\"(property) Element.id: string\">id</data-lsp>:  string;}// index.tsconst  <data-err><data-lsp lsp=\"const e: Element\">e</data-lsp></data-err>:  <data-lsp lsp=\"interface Element\">Element</data-lsp>  = {Type '{ id: string; }' is missing the following properties from type 'Element': attributes, classList, className, clientHeight, and 163 more.2740Type '{ id: string; }' is missing the following properties from type 'Element': attributes, classList, className, clientHeight, and 163 more. <data-lsp lsp=\"(property) Element.id: string\">id</data-lsp>:  \"1\",};`\n```", "```\nts`// hello.d.tsinterface <data-lsp lsp=\"interface Element\">Element</data-lsp> { <data-lsp lsp=\"(property) Element.id: string\">id</data-lsp>:  string;}// index.tsconst  <data-err><data-lsp lsp=\"const e: Element\">e</data-lsp></data-err>: <data-lsp lsp=\"interface Element\">Element</data-lsp> = {Type '{ id: string; }' is missing the following properties from type 'Element': attributes, classList, className, clientHeight, and 163 more.2740Type '{ id: string; }' is missing the following properties from type 'Element': attributes, classList, className, clientHeight, and 163 more. <data-lsp lsp=\"(property) Element.id: string\">id</data-lsp>:  \"1\",};`\n```", "```\nts`// @filename: hello.d.tsnamespace  <data-lsp lsp=\"namespace Hello\">Hello</data-lsp> {  interface  <data-lsp lsp=\"interface Hello.Element\">Element</data-lsp> { <data-lsp lsp=\"(property) Hello.Element.id: number\">id</data-lsp>:  number; }}// @filename: index.tsconst  <data-lsp lsp=\"const e: Hello.Element\">e</data-lsp>:  <data-lsp lsp=\"namespace Hello\">Hello</data-lsp>.<data-lsp lsp=\"interface Hello.Element\">Element</data-lsp>  = { <data-lsp lsp=\"(property) Hello.Element.id: number\">id</data-lsp>:  1,};`\n```", "```\nts`// @filename: hello.d.tsnamespace <data-lsp lsp=\"namespace Hello\">Hello</data-lsp> {  interface <data-lsp lsp=\"interface Hello.Element\">Element</data-lsp> { <data-lsp lsp=\"(property) Hello.Element.id: number\">id</data-lsp>:  number; }}// @filename: index.tsconst  <data-lsp lsp=\"const e: Hello.Element\">e</data-lsp>: <data-lsp lsp=\"namespace Hello\">Hello</data-lsp>.<data-lsp lsp=\"interface Hello.Element\">Element</data-lsp> = { <data-lsp lsp=\"(property) Hello.Element.id: number\">id</data-lsp>:  1,};`\n```", "```\nts`// @filename: node_modules/@types/react/index.d.tsdeclare <data-lsp lsp=\"namespace global\">global</data-lsp> {  namespace  <data-lsp lsp=\"namespace global.JSX\">JSX</data-lsp> {  interface  <data-lsp lsp=\"interface global.JSX.Element\">Element</data-lsp>  extends  <data-lsp lsp=\"any\">React</data-lsp>.<data-lsp lsp=\"any\">ReactElement</data-lsp><any,  any> {}  // \u7701\u7565 }}`\n```", "```\nts`// @filename: node_modules/@types/react/index.d.tsdeclare <data-lsp lsp=\"namespace global\">global</data-lsp> {  namespace <data-lsp lsp=\"namespace global.JSX\">JSX</data-lsp> {  interface <data-lsp lsp=\"interface global.JSX.Element\">Element</data-lsp> extends <data-lsp lsp=\"any\">React</data-lsp>.<data-lsp lsp=\"any\">ReactElement</data-lsp><any,  any> {}  // \u7701\u7565 }}`\n```", "```\nnode_modules/@types/react/index.d.tsts`/// <reference  path=\"global.d.ts\" />`\n```", "```\nnode_modules/@types/react/index.d.tsts`/// <reference  path=\"global.d.ts\" />`\n```", "```\nnode_modules/@types/express/index.d.tsts`/// <reference  types=\"express-serve-static-core\" />/// <reference  types=\"serve-static\" />`\n```", "```\nnode_modules/@types/express/index.d.tsts`/// <reference  types=\"express-serve-static-core\" />/// <reference  types=\"serve-static\" />`\n```"]