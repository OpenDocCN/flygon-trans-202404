["```\npackage main\n\nimport (\n    \"encoding/json\"\n    \"log\"\n    \"fmt\"\n)\n\ntype People struct {\n    Name string\n    age int\n    Career string `json:\"career\"`\n    Married bool `json:\",omitempty\"`\n}\n\nfunc main()  {\n    p := &People{\n        Name: \"Nan\",\n        age: 34,\n        Career: \"Engineer\",\n    }\n\n    data, err := json.Marshal(p)\n    if err != nil {\n        log.Fatalf(\"JSON marshaling failed: %s\", err)\n    }\n    fmt.Printf(\"%s\\n\", data)\n} \n```", "```\n{\"Name\":\"Nan\",\"career\":\"Engineer\"} \n```", "```\n\"Name\":\"Nan\" \n```", "```\n\"career\":\"Engineer\" \n```", "```\npackage main\n\nimport (\n    \"encoding/json\"\n    \"log\"\n    \"fmt\"\n)\n\ntype People struct {\n    Name string\n    age int\n    Career string `json:\"career\"`\n    Married bool `json:\",omitempty\"`\n}\n\nfunc main()  {\n    var p People\n    data, err := json.Marshal(&People{Name: \"Nan\", age: 34, Career: \"Engineer\", Married: true})\n\n    if err != nil {\n        log.Fatalf(\"JSON marshaling failed: %s\", err)\n    }\n\n    err = json.Unmarshal(data, &p)\n    if err != nil {\n        log.Fatalf(\"JSON unmarshaling failed: %s\", err)\n    }\n\n    fmt.Println(p)\n} \n```", "```\n{Nan 0 Engineer true} \n```", "```\nfunc postFunc(w http.ResponseWriter, r *http.Request) {\n    ......\n\n    if err := json.NewDecoder(r.Body).Decode(&request); err != nil {\n        http.Error(w, err.Error(), http.StatusBadRequest)\n        return\n    }\n\n    ......\n} \n```"]