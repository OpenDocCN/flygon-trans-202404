- en: Unbuffered and buffered channels
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unbuffered and buffered channels
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The channel is divided into two categories: unbuffered and buffered.'
  prefs: []
  type: TYPE_NORMAL
- en: (1) Unbuffered channel
  prefs: []
  type: TYPE_NORMAL
- en: 'For unbuffered channel, the sender will block on the channel until the receiver
    receives the data from the channel, whilst the receiver will also block on the
    channel until sender sends data into the channel. Check the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The running result likes this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: After the `main` goroutine is launched, it will sleep immediately("`Main goroutine
    sleeps 2 seconds`" is printed), and this will cause `main` goroutine relinquishes
    the `CPU` to the `func` goroutine("`Func goroutine begins sending data`" is printed).
    But since the `main` goroutine is sleeping and can't receive data from the channel,
    so `ch <- 1` operation in `func` goroutine can't complete until `d := <- ch` in
    `main` goroutine is executed(The final `3` logs are printed).
  prefs: []
  type: TYPE_NORMAL
- en: (2) Buffered channel
  prefs: []
  type: TYPE_NORMAL
- en: 'Compared with unbuffered counterpart, the sender of buffered channel will block
    when there is **no** empty slot of the `channel`, while the receiver will block
    on the channel when it is empty. Modify the above example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The executing result is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: In this sample, since the channel has `2` slots, so the `func` goroutine will
    not block until it sends the third element.
  prefs: []
  type: TYPE_NORMAL
- en: P.S., "`make(chan int, 0)`" is equal to "`make(chan int)`", and it will create
    an unbuffered `int` channel too.
  prefs: []
  type: TYPE_NORMAL
