- en: Chapter 9 - CSS Style Sheets & CSS rules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 9.1 CSS Style sheet overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A style sheet is added to an HTML document by either using the *HTMLLinkElement*
    node (i.e. *<link href="stylesheet.css" rel="stylesheet" type="text/css">*) to
    include an external style sheet or the *HTMLStyleElement* node (i.e. *<style></style>*)
    to define a style sheet inline. In the HTML document below both of these *Element*
    node's are in the DOM and I verify which constructor, constructs these nodes.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/yPYyC](http://jsfiddle.net/domenlightenment/yPYyC)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Once a style sheet is added to an HTML document its represented by the *CSSStylesheet*
    object. Each CSS rule (e.g. *body{background-color:red;}*) inside of a style sheet
    is represent by a *CSSStyleRule* object. In the code below I verify which constructor
    constructed the style sheet and each CSS rule (selector & its css properties and
    values) in the style sheet.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/UpLzm](http://jsfiddle.net/domenlightenment/UpLzm)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*Keep in mind that selecting the element that includes the style sheet (i.e.
    *<link>* or *<style*>) is not the same as accessing the actual object (*CSSStyleSheet*)
    that represents the style sheet itself.'
  prefs: []
  type: TYPE_NORMAL
- en: 9.2 Accessing all style sheets (i.e. *CSSStylesheet* objects) in the DOM
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*document.styleSheets* gives access to a list of all style sheet objects (aka
    *CSSStylesheet*) explicitly linked (i.e. *<link>*) or embedded (i.e. *<style>*)
    in an HTML document. In the code below *styleSheets* is leverage to gain access
    to all of the style sheets contained in the document.'
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: N/A'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Notes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*styleSheet* is live just like other node lists'
  prefs: []
  type: TYPE_NORMAL
- en: The *length* property returns the number of stylesheets contained in the list
    starting at 0 index (i.e. *document.styleSheets.length*)
  prefs: []
  type: TYPE_NORMAL
- en: The style sheets included in a *styleSheets* list typically includes any style
    sheets created using the *<style>* element or using a *<link>* element where *rel*
    is set to *"stylesheet"*
  prefs: []
  type: TYPE_NORMAL
- en: In addtion to using *styleSheets* to access a documents styles sheets its also
    possible to access a style sheet in an HTML document by first selecting the element
    in the DOM (*<style>* or *<link>*) and using the *.sheet* property to gain access
    to the *CSSStyleSheet* object. In the code below I access the style sheets in
    the HTML docment by first selecting the element used to include the style sheet
    and then leveraging the *sheet* property.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/jFwKw](http://jsfiddle.net/domenlightenment/jFwKw)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '***## 9.3 *CSSStyleSheet* properties and methods'
  prefs: []
  type: TYPE_NORMAL
- en: To get accurate information pertaining to the available properties and methods
    on an *CSSStyleSheet* node its best to ignore the specification and to ask the
    browser what is available. Examine the arrays created in the code below detailing
    the properties and methods available from a *CSSStyleSheet* node.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/kNyL2](http://jsfiddle.net/domenlightenment/kNyL2)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'A *CSSStyleSheet* object accessed from a *styleSheets* list or via the *.sheet*
    property has the following properties and methods:'
  prefs: []
  type: TYPE_NORMAL
- en: '*disabled*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*href*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*media*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*ownerNode*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*parentStylesheet*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*title*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*type*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*cssRules*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*ownerRule*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*deleteRule*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*inserRule*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*href*, *media*, *ownerNode*, *parentStylesheet*, *title*, and *type* are read
    only properties, you can''t set its value using these properteis'
  prefs: []
  type: TYPE_NORMAL
- en: 9.4 *CSSStyleRule* overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A *CSSStyleRule* object represents each CSS rule contained in a style sheet.
    Basicly a *CSSStyleRule* is the interface to the CSS properties and values attached
    to a selector. In the code below we programaticlly access the details of each
    rule contained in the inline style sheet by accessing the *CSSStyleRule* object
    that represents the CSS rule in the style sheet.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/fPVS8](http://jsfiddle.net/domenlightenment/fPVS8)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 9.5 *CSSStyleRule* properties and methods
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To get accurate information pertaining to the available properties and methods
    on an *CSSStyleRule* node its best to ignore the specification and to ask the
    browser what is available. Examine the arrays created in the code below detailing
    the properties and methods available from a *CSSStyleRule*node.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/hCX3U](http://jsfiddle.net/domenlightenment/hCX3U)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Scripting the rules (e.g. *body{background-color:red;}*) contained inside of
    a style sheet is made possible by the *CSSrule* object. This object provides the
    following properties:'
  prefs: []
  type: TYPE_NORMAL
- en: '*cssText*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*parentRule*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*parentStylesSheet*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*selectorText*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*style*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*type*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 9.6 Getting a list of CSS Rules in a style sheet using *CSSRules*
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As previously discussed the *styleSheets* list provides a list of style sheets
    contained in a document. The *CSSRules* list provides a list (aka *CSSRulesList*)
    of all the CSS rules (i.e. *CSSStyleRule* objects) in a specific style sheet.
    The code below logs a *CSSRules* list to the console.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/qKqhJ](http://jsfiddle.net/domenlightenment/qKqhJ)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 9.7 Inserting & deleting CSS rules in a style sheet using *.insertRule()* and
    *.deleteRule()*
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *insertRule()* and *deleteRule()* methods provided the ability to programatically
    manipulate the CSS rules in a style sheet. In the code below I use *insertRule()*
    to add the css rule *p{color:red}* to the inline style sheet at index 1\. Remeber
    the css rules in a style sheet are numerical index starting at 0\. So by inserting
    a new rule at index 1 the current rule at index 1 (i.e. *p{font-size:50px;}*)
    is push to index 2\.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/T2jzJ](http://jsfiddle.net/domenlightenment/T2jzJ)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Deleting or removing a rule is as simple as calling *deleteRule()* method on
    a style sheet and passing it the index of the rule in the style sheet to be deleted.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Inserting and deleting rules is not a common practice given the difficulty around
    managing the cascaade and using a numeric indexing system to update a style sheet
    (i.e. determining at what index a style is located without previewing the contents
    of the style sheet itself.). Its much simpler working with CSS rules in CSS and
    HTML files before they are served to a client than programaticlly altering them
    in the client after the fact.
  prefs: []
  type: TYPE_NORMAL
- en: 9.8 Editing the value of a *CSSStyleRule* using the *.style* property
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Just like the *.style* property that facilitates the manipulation of inline
    styles on element nodes there is a also *.style* property for *CSSStyleRule* objects
    that orchestrates the same manipulation of styles in style sheets. In the code
    below I levereage the *.style* property to set and get the value of css rules
    contained in the inline style sheet.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/aZ9CQ](http://jsfiddle.net/domenlightenment/aZ9CQ)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 9.9 Creating a new inline CSS style sheets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To craft a new style sheet on the fly after an html page is loaded one only
    has to create a new *<style>* node, add CSS rules using *innerHTML* to this node,
    then append the *<style>* node to the HTML document. In the code below I programatily
    craft a style sheet and add the *body{color:red}* CSS rule to the style sheet,
    then append the stylesheet to the DOM.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/bKXAk](http://jsfiddle.net/domenlightenment/bKXAk)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 9.10 Programatically adding external style sheets to an HTML document
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To add a CSS file to an HTML document programatically a *<link>* element node
    is created with the appropriate attributes and then the *<link>* element node
    is appended to the DOM. In the code below I programatically include an external
    style sheet by crafting a new *<link>* element and appending it to the DOM.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/dtwgC](http://jsfiddle.net/domenlightenment/dtwgC)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 9.11 Disabling/Enabling style sheets using *disabled* property
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using the *.disabled* property of a *CSSStyleSheet* object its possible to enable
    or disabled a style sheet. In the code below we access the current disabled value
    of each style sheet in the document then proceed to disabled each style sheet
    leveraging the *.disabled* property.
  prefs: []
  type: TYPE_NORMAL
- en: 'live code: [http://jsfiddle.net/domenlightenment/L952Z](http://jsfiddle.net/domenlightenment/L952Z)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Notes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Disabled is not an avaliable attributre of a <link> or <style> element according
    to the specification. Trying to add this as an attribute in the HTML document
    itself will fail (and likley cause parsing errors where styles are ignored) in
    the majority of modern browsers in use today.****
  prefs: []
  type: TYPE_NORMAL
