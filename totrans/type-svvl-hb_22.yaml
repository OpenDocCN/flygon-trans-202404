- en: Prettierでコード整形を自動化しよう
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://typescriptbook.jp/tutorials/prettier](https://typescriptbook.jp/tutorials/prettier)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: このチュートリアルでは、コードフォーマッターの「Prettier」を使いTypeScriptのコードフォーマットを自動化することを学びます。
  prefs: []
  type: TYPE_NORMAL
- en: 本章で学べること[​](#本章で学べること "本章で学べること への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 本章ではPrettierを導入してコード整形を自動化することを目標に次のことを学びます。
  prefs: []
  type: TYPE_NORMAL
- en: Prettierの導入方法
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prettierの実行方法
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 整形ルールの設定方法
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prettierとは[​](#prettierとは "Prettierとは への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Prettierはコードのフォーマットを自動整形するツールです。Prettierがサポートしている形式は幅広く次の形式をサポートしています。
  prefs: []
  type: TYPE_NORMAL
- en: また、プラグインを利用することでPHPなどの他の言語のフォーマットを行うこともできます。
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TypeScript
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[JSX](/reference/jsx)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JSON
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTML
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Angular
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ember
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Css
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Less
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SCSS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: styled-components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: styled-jsx
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GraphQL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Markdown
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MDX
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: YAML
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Svelte
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: なぜPrettierを導入するのか[​](#なぜprettierを導入するのか "なぜPrettierを導入するのか への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 複数人で開発していると、人によってインデントがズレていたり、オブジェクトの最後のカンマをつけるorつけないといったコードスタイルの違いが発生します。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'ts`// オブジェクトの最後にカンマが付いている// 文字列はダブルクォート// 行末にセミコロンが付いているconst  user1  = { name:  "太郎",
    age:  20,};``// オブジェクトの最後にカンマが付かない// 文字列はシングルクォート// 行末にセミコロンが付かないconst  user2  =
    { name:  ''まさる'', age:  30}`'
  prefs: []
  type: TYPE_NORMAL
- en: 手動でこれらのコードスタイルを統一するには、ガイドラインを作成してチーム内で共有をしてコードレビューで注意深くチェックする必要があります。また、新しいメンバーがチームに参加した際にはルールを共有する手間も発生します。
  prefs: []
  type: TYPE_NORMAL
- en: Prettierを導入してコード整形を自動化することで、簡単にコードのスタイルを統一することができます。開発者は細かいコードスタイルのことを意識する必要がなくなり開発に集中することができるようになるので、より効率的に開発をすることができます。
  prefs: []
  type: TYPE_NORMAL
- en: このチュートリアルに必要なもの[​](#このチュートリアルに必要なもの "このチュートリアルに必要なもの への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: このチュートリアルで必要なものは次のとおりです。
  prefs: []
  type: TYPE_NORMAL
- en: Node.js v16以上
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yarn v1系 (このチュートリアルはv1.22.19で動作確認しています)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Node.jsの導入については、[開発環境の準備](/tutorials/setup)をご覧ください。
  prefs: []
  type: TYPE_NORMAL
- en: パッケージ管理ツールとしてYarnを利用します。最初にインストールをしておきましょう。すでにインストール済みの方はここのステップはスキップして大丈夫です。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: プロジェクトを作成する[​](#プロジェクトを作成する "プロジェクトを作成する への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: このチュートリアルに使うプロジェクトを作成します。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: プロジェクトのルートにpackage.jsonを作成してください。内容は次のようにします。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Prettierをインストール[​](#prettierをインストール "Prettierをインストール への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Prettierは開発時にだけ使うパッケージなので`-D`オプションをつけてインストールします。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: バージョンを表示してインストールを確認してください。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: TypeScriptを自動整形する[​](#typescriptを自動整形する "TypeScriptを自動整形する への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`prettier`コマンドを利用して、TypeScriptのファイルをPrettierで自動整形してみましょう。'
  prefs: []
  type: TYPE_NORMAL
- en: 最初に`src`ディレクトリを作成して、`src/helloWorld.ts`を作成してください。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '`helloWorld.ts`の内容を次のように変更します。'
  prefs: []
  type: TYPE_NORMAL
- en: このコードは自動整形を確認するために、わざと見づらいコードになっています。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '`prettier`コマンドを実行してみましょう。'
  prefs: []
  type: TYPE_NORMAL
- en: コマンドは`prettier [オプション] [ファイル/ディレクトリ]`の形式で実行できます。
  prefs: []
  type: TYPE_NORMAL
- en: 次の例では`src`を引数で指定することで`src`ディレクトリ配下のすべてファイルを対象として自動整形を実行します。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 整形結果が表示されていますが、`helloWorld.ts`を確認するとファイル内容が変更されていないことに気づくと思います。`prettier`コマンドをオプションなしで実行した場合は整形結果だけが表示されて、ファイルの書き換えは実行されません。
  prefs: []
  type: TYPE_NORMAL
- en: ファイルの書き換えを一緒に実行する場合は`--write`オプションを指定します。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 実行後に`helloWorld.ts`を確認してみると、次のようにコードが整形されているのが確認できます。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Prettierのデフォルトの整形ルール[​](#prettierのデフォルトの整形ルール "Prettierのデフォルトの整形ルール への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Prettierはデフォルトの整形ルールが定義されています。先ほどの実行結果を見るとインデントが幅2つのスペースでインデントがされているのが分かります。
  prefs: []
  type: TYPE_NORMAL
- en: 代表的な項目のデフォルト値は次のようになっています。
  prefs: []
  type: TYPE_NORMAL
- en: すべての項目のデフォルト値を確認したい場合は、[Prettierの公式ドキュメント](https://prettier.io/docs/en/options.html)を参照してください。
  prefs: []
  type: TYPE_NORMAL
- en: '| 項目 | デフォルト値 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1行の最大文字数 | 80 |'
  prefs: []
  type: TYPE_TB
- en: '| インデント幅 | 2 |'
  prefs: []
  type: TYPE_TB
- en: '| インデント | スペース |'
  prefs: []
  type: TYPE_TB
- en: '| セミコロン | つける |'
  prefs: []
  type: TYPE_TB
- en: '| クォート | ダブルクォート |'
  prefs: []
  type: TYPE_TB
- en: Prettierの整形ルールを設定する[​](#prettierの整形ルールを設定する "Prettierの整形ルールを設定する への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: CLIオプションで設定[​](#cliオプションで設定 "CLIオプションで設定 への直接リンク")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 整形ルールは`prettier`コマンドを実行する時にオプションとして指定することができます。
  prefs: []
  type: TYPE_NORMAL
- en: 先ほど整形した`helloWorld.ts`を別の整形ルールで整形してみます。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 整形されたコードを見るとセミコロンが消えて、インデント幅が2から4に変更されているのを確認できます。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 設定ファイルを作成する[​](#設定ファイルを作成する "設定ファイルを作成する への直接リンク")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Prettierは整形ルールを設定ファイルに記述することもできます。
  prefs: []
  type: TYPE_NORMAL
- en: プロジェクトのルートに`.prettierrc`を作成します。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 次に`.prettierrc`を次のように変更します。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 設定ファイルが作成できたら、`prettier`コマンドを実行してみましょう。
  prefs: []
  type: TYPE_NORMAL
- en: Prettierはプロジェクトルートに`.prettierrc`が存在する場合は自動で設定ファイルを読み込んで整形ルールを設定してくれます。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 設定ファイルで記述した整形ルールで`helloWorld.ts`が変更されているのを確認できます。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 上記の例ではJSONフォーマットで設定ファイルを作成しましたが、PrettierはJSON以外にもJS,YAML,TOMLのフォーマットをサポートしています。
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '`.prettierrc`以外でも自動で設定ファイルとして認識可能なファイル名がいくつか存在します。'
  prefs: []
  type: TYPE_NORMAL
- en: フォーマットとファイル名の組み合わせは次のとおりです。
  prefs: []
  type: TYPE_NORMAL
- en: '| フォーマット | ファイル名 |'
  prefs: []
  type: TYPE_TB
- en: '| :-- | :-- |'
  prefs: []
  type: TYPE_TB
- en: '| json | `.prettierrc`, `.prettierrc.json`, `.prettierrc.json5` |'
  prefs: []
  type: TYPE_TB
- en: '| js | `.prettierrc.js`, `.prettierrc.cjs`, `prettier.config.js`,   `prettier.config.cjs`
    |'
  prefs: []
  type: TYPE_TB
- en: '| yaml | `.prettierrc`, `.prettierrc.yml`, `.prettierrc.yaml` |'
  prefs: []
  type: TYPE_TB
- en: '| toml | `.prettierrc.toml` |'
  prefs: []
  type: TYPE_TB
- en: 他の整形ルールを確認する[​](#他の整形ルールを確認する "他の整形ルールを確認する への直接リンク")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: ここで紹介した以外にもいくつかの整形ルールが存在します。
  prefs: []
  type: TYPE_NORMAL
- en: 他の整形ルールやCLIコマンドのオプション名、設定ファイルのキー名などを確認したい場合は[Prettierの公式ドキュメント](https://prettier.io/docs/en/options.html)をご参照ください。
  prefs: []
  type: TYPE_NORMAL
- en: どのような整形ルールがよいのか？[​](#どのような整形ルールがよいのか "どのような整形ルールがよいのか？ への直接リンク")
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Prettierをプロジェクトに導入する時に整形ルールについて悩む場合があるかもしれません。
  prefs: []
  type: TYPE_NORMAL
- en: 整形ルールについては好みの部分も大きいので、プロジェクトの開発者で話し合って決めるようにしましょう。整形ルールを変更したい場合は`prettier`コマンドを実行するだけなので、後から簡単に変更できる前提で決めてしまっても問題ありません。
  prefs: []
  type: TYPE_NORMAL
- en: 特にこだわりが無い場合は、Prettierのデフォルトの整形ルールをそのまま利用するのがオススメです。
  prefs: []
  type: TYPE_NORMAL
- en: Prettierの自動整形を無効にする[​](#prettierの自動整形を無効にする "Prettierの自動整形を無効にする への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`prettier-ignore`をコメントとして記述することで、一部のコードをPrettierの自動整形の対象から除外することができます。'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
