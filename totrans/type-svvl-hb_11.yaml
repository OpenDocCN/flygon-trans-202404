- en: ECMAScript
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://typescriptbook.jp/overview/ecmascript](https://typescriptbook.jp/overview/ecmascript)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ECMAScriptはJavaScriptの仕様です。TypeScriptもECMAScriptに準拠しています。ECMAScriptとは何なのか、仕様改定のプロセス、ECMAScriptとブラウザの関係がどのようになっているかについて解説します。
  prefs: []
  type: TYPE_NORMAL
- en: JavaScriptとECMAScriptの関係[​](#javascriptとecmascriptの関係 "JavaScriptとECMAScriptの関係
    への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ECMAScriptはJavaScriptの仕様を定義したものです。仕様とは決まりごとのことで、ブラウザなどがJavaScriptを読み込んだときに、どのような文法を解釈しなければならないか、処理がどのように動くべきかといったことを決めたものです。ECMAScriptという異なる名前がついていますが、JavaScriptと別の言語があるわけではありません。
  prefs: []
  type: TYPE_NORMAL
- en: 歴史的には、JavaScriptを標準化するべく、ECMAScriptが策定されました。JavaScriptはNetscape社が開発した言語です。Netscape社が発表してすぐに、Microsoft社もJScriptという名前で実装しました。Netscape社は、JavaScriptを標準化するために、国際規格策定団体Ecmaインターナショナルに依頼します。Ecmaによって標準化されたJavaScriptは「ECMAScript」と呼ばれることになりました。
  prefs: []
  type: TYPE_NORMAL
- en: 現在のECMAScriptは、JavaScriptの仕様という立場です。ブラウザなどのJavaScript実装が、従うべき仕様という位置づけです。この関係性から、ECMAScriptの実装のこと指してJavaScriptと呼ぶことがあります。ECMAScriptは仕様なので、ECMAScriptというプログラムがあるわけではありません。ダウンロードしたりインストールするものではないということです。
  prefs: []
  type: TYPE_NORMAL
- en: JavaScriptの仕様が「ECMAScript」と名付けられた理由は諸説あります。当時、競争関係だったNetscape社とMicrosoft社で、ECMAScriptが合意できる妥協案だった説があります。Netscape社はJavaScriptという名前で開発し、Microsoft社はJScriptという名前で開発していました。JavaScriptが商標というのも一因だと考えられています。JavaScriptは当時Sunが所有する商標でした。その後、権利はOracleに引き継がれます。
  prefs: []
  type: TYPE_NORMAL
- en: ECMAScriptはEcmaインターナショナルが策定しています。この団体では、情報通信技術のさまざまな国際規格を策定しています。各規格には番号が割り振られています。ECMAScriptの規格番号はECMA-262です。他にもJSON(ECMA-404)やC#(ECMA-334)などがあります。Ecmaインターナショナルにはさまざまな専門委員会があり、ECMAScriptを策定する委員会の名称はTC39です。
  prefs: []
  type: TYPE_NORMAL
- en: ECMAScriptの仕様改定[​](#ecmascriptの仕様改定 "ECMAScriptの仕様改定 への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ECMAScriptは毎年1回、仕様改定されます。改定されるごとにバージョンが上がります。ECMAScriptのバージョンはリリースされた西暦になってます。たとえば、2021年に改定されたECMAScriptはES2021となります。TypeScriptもECMAScriptの仕様改定に合わせて、アップデートされていきます。
  prefs: []
  type: TYPE_NORMAL
- en: ECMAScriptの改定は、募集された提案から始まります。応募のあった改定案は[TC39のGitHub](https://github.com/tc39/proposals)で一覧できます。
  prefs: []
  type: TYPE_NORMAL
- en: 進捗に応じて、各提案にはステージ0からステージ4までのランクがつきます。条件を満たすとそのステージに進めます。
  prefs: []
  type: TYPE_NORMAL
- en: '| ステージ | 条件 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 0 Strawperson | なし |'
  prefs: []
  type: TYPE_TB
- en: '| 1 Proposal | チャンピオン(委員会の改定推進パートナー)が決まっていること。課題と解決策を説明したリポジトリが公開されていること。デモがあるとよい
    |'
  prefs: []
  type: TYPE_TB
- en: '| 2 Draft | ECMAScriptの仕様記述言語で主要な部分の仕様が書かれていること |'
  prefs: []
  type: TYPE_TB
- en: '| 3 Candidate | 完全な仕様書があること。レビュアとECMAScript編集者の署名があること |'
  prefs: []
  type: TYPE_TB
- en: '| 4 Finished | 2つ以上のJSエンジンに実装が存在していること。ECMAScriptへプルリクエストが送信されており、ECMAScript編集者に承認されていること
    |'
  prefs: []
  type: TYPE_TB
- en: ステージ2以下の提案は仕様が大きく変わる可能性が高いです。提案が取り下げられる可能性も高いです。
  prefs: []
  type: TYPE_NORMAL
- en: ステージ3になると、改定が確実視されます。TypeScriptはステージ3に達した提案に対応します。この頃にはブラウザでもステージ3の提案が実装されます。中には実装が遅れるケースもあります。
  prefs: []
  type: TYPE_NORMAL
- en: ステージ4になると、ほぼ間違いなくECMAScriptの仕様になります。ステージ4の提案は、例年6月のECMAScriptの改定に加えられます。改定までのおおよその年間スケジュールは次の流れです。
  prefs: []
  type: TYPE_NORMAL
- en: '2月: 候補ドラフトが作成される'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '3月: ステージ4の提案が組み込まれ、最終的な仕様が承認される'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '4月〜6月: ECMA CCおよびECMA GAのレビュー期間'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '6月: ECMAの総会による承認を経て、改定仕様の確定'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ECMAScriptとブラウザの仕様[​](#ecmascriptとブラウザの仕様 "ECMAScriptとブラウザの仕様 への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: ECMAScriptが決めるクライアントサイドJavaScriptの仕様は部分的です。ECMAScriptが定める範囲は、言語の文法、構文の解釈方法、コアのAPIなど言語の中核部分です。たとえば、次のようなことを定めています。
  prefs: []
  type: TYPE_NORMAL
- en: 関数宣言の書き方はこういう文法になる
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 変数が宣言されたとき、JavaScriptエンジンはこういう動作になる
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`String`や`Array`オブジェクトにはこういうメソッドがある'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScriptのうちブラウザ仕様に関する部分は、HTML Living Standardが決めています。ブラウザでJavaScriptを使うと、触れることになるのが`window`オブジェクトや`HTMLDivElement`、ローカルストレージなどのAPIです。これらは[HTML
    Living Standard](https://html.spec.whatwg.org/)と呼ばれる規格が定めています。この規格はEcmaインターナショナルとは異なる標準化団体WHATWGが策定しています。
  prefs: []
  type: TYPE_NORMAL
- en: JavaScriptの機能の中でも、ECMAScriptとHTML Living Standardで役割分担があるものもあります。たとえばモジュールです。ECMAScriptはモジュールの仕様を定めます。`import`や`export`の構文や、モジュール内部の仕様などは、ECMAScriptが定めます。一方、モジュールの具体的なロード方法はHTML
    Living Standardが定めています。たとえば、`import "指定子";`の指定子の部分にどんな文字列を書いていいか、モジュールはどの順番でロードするかなどはHTML
    Living Standardが定めます。
  prefs: []
  type: TYPE_NORMAL
- en: '[## 📄️ 🚧モジュール'
  prefs: []
  type: TYPE_NORMAL
- en: Experimental! このページは執筆途中の草稿です。構成が大きく変わることがありえますので、リンクなどをする場合はリンク切れが起こる可能性がある点をご留意ください。このページの内容は、import、export、requireをもとに再構成・加筆しています。](/reference/modules)
  prefs: []
  type: TYPE_NORMAL
- en: 「JavaScript」と一言で言っても、複数の規格で構成されているわけです。
  prefs: []
  type: TYPE_NORMAL
- en: ECMAScriptとブラウザの関係性[​](#ecmascriptとブラウザの関係性 "ECMAScriptとブラウザの関係性 への直接リンク")
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 主要なブラウザの内部を分解すると、レンダリングエンジンやJavaScriptエンジンと呼ばれる部品の単位があります。
  prefs: []
  type: TYPE_NORMAL
- en: JavaScriptエンジンは、ECMAScriptを実装したモジュールです。JavaScriptエンジンには、主要なものでV8、SpiderMonkey、JavaScriptCoreがあります。
  prefs: []
  type: TYPE_NORMAL
- en: レンダリングエンジンは、JavaScriptエンジンを組み込んだブラウザの表示機能を担うモジュールです。有名なレンダリングエンジンは、Blink、Gecko、WebKitがあります。たとえば、BlinkはV8をJavaScriptエンジンに採用しています。レンダリングエンジンはJavaScriptだけでなく、HTMLやCSSを解釈し、画面描画を総合的に行います。
  prefs: []
  type: TYPE_NORMAL
- en: ブラウザは、レンダリングエンジンを組み込み、その他にブックマーク機能などの付属機能をつけてアプリケーションというかたちでユーザーに提供されます。たとえば、Google
    ChromeはBlinkを、SafariはWebKitを組み込んでいます。ブラウザはレンダリングエンジンを変更することもあります。Microsoft Edgeはかつて、EdgeHTMLを採用していましたが、のちにGoogle
    Chromeと同じBlinkに移行しました。OperaのレンダリングエンジンもPrestoでしたが、Blinkに変更した経緯があります。
  prefs: []
  type: TYPE_NORMAL
- en: 同じブラウザブランドでも、iOS版のブラウザのレンダリングエンジンはWebKitです。たとえば、Google ChromeはBlinkを採用していますが、iOS版のGoogle
    ChromeのレンダリングエンジンはWebKitです。これは、iOSのレンダリングエンジンにWebKitだけが独占的に利用を許されているためです。
  prefs: []
  type: TYPE_NORMAL
- en: ブラウザ、レンダリングエンジン、JavaScriptエンジン、ECMAScriptの関係図
  prefs: []
  type: TYPE_NORMAL
- en: '[![](../Images/72c54927bdbf05722d1fb99c8926f482.png)](/img/overview/ecmascript/browser-rendering-engine-javascript-engine-ecmascript-relations.svg)'
  prefs: []
  type: TYPE_NORMAL
- en: TypeScriptプログラマーがブラウザとエンジンの対応を理解しておくことは重要です。エンジンを知ることは、開発したプログラムが実行される環境を把握することと同義です。エンジンは仕様にできるだけ準拠しますが、エンジンによって実装が異なることがあります。エンジンによっては実装がされていない仕様がある場合もあります。また、ブラウザによっては古いエンジンを使っている場合もあります。
  prefs: []
  type: TYPE_NORMAL
- en: プログラムをテストするときも、ブラウザとエンジンの組み合わせが理解できていると、同じエンジンを採用しているブラウザはテストを省略できる場合もあります。iOSのWebKit独占の例のように、同じブランド名のブラウザでもエンジンが異なる場合があります。この場合、テストで網羅するブラウザを増やすといった意思決定が行えるようになります。
  prefs: []
  type: TYPE_NORMAL
- en: 学びをシェアする
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: ・ECMAScript(ES)はJavaScriptの仕様
  prefs: []
  type: TYPE_NORMAL
- en: ・ESはEcmaインターナショナルのTC39委員会が定める
  prefs: []
  type: TYPE_NORMAL
- en: ・ESは毎年6月に改定される
  prefs: []
  type: TYPE_NORMAL
- en: ・ESの改定提案は公募され、ステージ4で採用される
  prefs: []
  type: TYPE_NORMAL
- en: ・ブラウザはレンダリングエンジンとJSエンジンを持つ
  prefs: []
  type: TYPE_NORMAL
- en: ・JSエンジンはESを実装する
  prefs: []
  type: TYPE_NORMAL
- en: 『サバイバルTypeScript』より
  prefs: []
  type: TYPE_NORMAL
- en: '[この内容をツイートする](https://twitter.com/intent/tweet?text=%E3%83%BBECMAScript(ES)%E3%81%AFJavaScript%E3%81%AE%E4%BB%95%E6%A7%98%0A%E3%83%BBES%E3%81%AFEcma%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%8A%E3%82%B7%E3%83%A7%E3%83%8A%E3%83%AB%E3%81%AETC39%E5%A7%94%E5%93%A1%E4%BC%9A%E3%81%8C%E5%AE%9A%E3%82%81%E3%82%8B%0A%E3%83%BBES%E3%81%AF%E6%AF%8E%E5%B9%B46%E6%9C%88%E3%81%AB%E6%94%B9%E5%AE%9A%E3%81%95%E3%82%8C%E3%82%8B%0A%E3%83%BBES%E3%81%AE%E6%94%B9%E5%AE%9A%E6%8F%90%E6%A1%88%E3%81%AF%E5%85%AC%E5%8B%9F%E3%81%95%E3%82%8C%E3%80%81%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B84%E3%81%A7%E6%8E%A1%E7%94%A8%E3%81%95%E3%82%8C%E3%82%8B%0A%E3%83%BB%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%AF%E3%83%AC%E3%83%B3%E3%83%80%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E3%81%A8JS%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%92%E6%8C%81%E3%81%A4%0A%E3%83%BBJS%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E3%81%AFES%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B%0A%0A%E3%80%8E%E3%82%B5%E3%83%90%E3%82%A4%E3%83%90%E3%83%ABTypeScript%E3%80%8F%E3%82%88%E3%82%8A)'
  prefs: []
  type: TYPE_NORMAL
