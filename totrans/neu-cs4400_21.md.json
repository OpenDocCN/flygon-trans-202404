["```\neval({with {x E1} E2}) = eval(E2[eval(E1)/x])\n```", "```\n[(With bound-id named-expr bound-body) (eval (subst bound-body\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bound-id\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (Num (eval named-expr))))]\n```", "```\neval({with {x E1} E2}) = eval(E2[E1/x])\n```", "```\n(: eval : WAE -> Number);; evaluates WAE expressions by reducing them to numbers(define (eval expr)\u00a0 (cases expr\u00a0 \u00a0 [(Num n) n]\u00a0 \u00a0 [(Add l r) (+ (eval l) (eval r))]\u00a0 \u00a0 [(Sub l r) (- (eval l) (eval r))]\u00a0 \u00a0 [(Mul l r) (* (eval l) (eval r))]\u00a0 \u00a0 [(With bound-id named-expr bound-body)\u00a0 \u00a0  (eval (subst bound-body\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bound-id\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 named-expr))] ;*** no eval and no Num wrapping\u00a0 \u00a0 [(Id name) (error 'eval \"free identifier: ~s\" name)]))\n```", "```\n> (trace eval) ; (put this in the definitions window)> (run \"{with {x {+ 1 2}} {* x x}}\")\n```", "```\n{with {x {/ 8 0}} 7}\n```", "```\n{with {x y} 7}\n```", "```\n{with {y x}\u00a0 {with {x 2}\u00a0 \u00a0 {+ x y}}}\n```", "```\n{with {y E1} E2}[v/x]\u00a0 if `x' and `y' are equal\u00a0 \u00a0 = {with {y E1[v/x]} E2} = {with {x E1[v/x]} E2}\u00a0 if `y' has a free occurrence in `v'\u00a0 \u00a0 = {with {y1 E1[v/x]} E2[y1/y][v/x]} ; `y1' is \"fresh\"\u00a0 otherwise\u00a0 \u00a0 = {with {x E1[v/x]} E2[v/x]}\n```"]