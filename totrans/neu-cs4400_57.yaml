- en: Implementing `rec` Using Cyclic StructuresTuesday, February 21st
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PLAI §10](plai.pdf#chapter.10 "Implementing Recursion")'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Looking at the arrows in the environment diagrams, what we’re really looking
    for is a closure that has an environment pointer which is the same environment
    in which it was defined. This will make it possible for `fact` to be bound to
    a closure that can refer to *itself* since its environment is the same one in
    which it is defined. However, so far we have no tools that makes it possible to
    do this.
  prefs: []
  type: TYPE_NORMAL
- en: 'What we need is to create a “cycle of pointers”, and so far we do not have
    a way of achieving that: when we create a closure, we begin with an environment
    which is saved in the slot’s environment slot, but we want that closure to be
    the value of a binding in that same environment.'
  prefs: []
  type: TYPE_NORMAL
