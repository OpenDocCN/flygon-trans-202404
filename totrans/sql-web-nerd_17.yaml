- en: '| [![](../Images/775407c0aeb415013fcf9e6fda8f6ab3.jpg)](/http://philip.greenspun.com/images/pcd0795/fountain-eccentric-50.tcl)
    |'
  prefs: []
  type: TYPE_TB
- en: I'm OK, You're Abnormal
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: part of [SQL for Web Nerds](index.html) by [Philip Greenspun](http://philip.greenspun.com/)
    |
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[![The rules. Mutianyu (Great Wall of China)](../Images/306ee4a553c4c299b5e5522cb968c922.jpg)](/http://philip.greenspun.com/images/2000pcd1670/mutianyu-cablecar-rules-24.tcl)
    Normalization is a way of splitting up data until each table represents propositions
    about a single type of thing. Normalization is a beloved subject in academic courses
    on database management systems and in job interviews because (1) it has a patina
    of formalism, and (2) it is easy to test. If you tell people that you took a DBMS
    course and then look blank when they ask you whether your data are in Third Normal
    Form, you''ll never get any respect from database nerds. A lot of the ideas will
    seem like common sense and much of the debate is held over from the 1960s before
    the RDBMS was conceived and grew to dominate data storage. However, the mid-1990s
    object-relational database fad has revived some of these issues and it is therefore
    worth examining normalization.'
  prefs: []
  type: TYPE_NORMAL
- en: Abnormal
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Suppose that you're determined to marry Winona Ryder, the movie actress who
    was born "Winona Horowitz" on October 29, 1971\. Thanks to the convergence of
    Hollywood and Silicon Valley, you've managed to get a seat at the Academy Awards
    ceremony. You'll want to be well-informed about Ms. Ryder's work while sounding
    casual. You decide to make a little database to coach you before the awards night
    and to serve the same data on demand to your WAP phone in case you get stumped
    in conversation with Ms. Ryder.
  prefs: []
  type: TYPE_NORMAL
- en: '| Movie ID | Title | Year Released | Producer | Director | Writer | Composer
    | Steadicam Operator |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | Alien: Resurrection | 1997 | Bill Badalato | Jean-Pierre Jeunet | Joss
    Whedon | John Frizzell | David Emmerichs |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | The Age of Innocence | 1993 | Barbara De Fina | Martin Scorsese | Edith
    Wharton, Jay Cocks, and Martin Scorsese | Elmer Bernstein | Larry McConkey |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | Heathers | 1989 | Denise Di Novi | Michael Lehmann | Daniel Waters |
    David Newman | -- |'
  prefs: []
  type: TYPE_TB
- en: If you memorize this material, you can attract Ms. Ryder's attention with such
    questions as "Didn't you think Larry McConkey's Steadicam work in The Age of Innocence
    was much better than David Emmerichs's in Alien 4?" Or if you want to impress
    with your knowledge of American literature, say "It is amazing how rich a script
    Jay Cocks and Martin Scorsese produced considering the thinness of the material
    they had to start with from Edith Wharton's original novella."
  prefs: []
  type: TYPE_NORMAL
- en: Suppose that Winona Ryder is sufficiently impressed by your knowledge to come
    back to your suite at the Regent Beverly Wilshire. Taking advantage of the in-room
    Ethernet connection, you've left a remote Emacs window up and running on your
    laptop. Ms. Ryder sees your SQL queries in the source code for your coaching app
    and shouts out "Hey, these data aren't even in First Normal Form (1NF)."
  prefs: []
  type: TYPE_NORMAL
- en: 'My this is a faux pas. If your data aren''t in First Normal Form, there isn''t
    even an egghead DBMS nerd term for what you''ve got. Loosely speaking, your data
    are *abnormal*. What is wrong with your data model? For Alien and Heathers you''ve
    got a single name in the `Writer` column. For The Age of Innocence, you''ve got
    a trio of names. This is known as a *repeating group* or a *multivalued column*
    and it has the following problems:'
  prefs: []
  type: TYPE_NORMAL
- en: you might not have enough space if the number of values in the column grows
    larger than anticipated
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the combination of table name, column name, and key value no longer specifies
    a datum
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the basic INSERT, UPDATE, and SELECT operations are not sufficient to manipulate
    multivalued columns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: programmers' brains will have to adapt simultaneously to unordered data in table
    rows and ordered data inside a multivalued column
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: design opacity. If you use multivalued columns even once, people will never
    know what to expect when they look under the hood of your design; did you use
    multiple tables to express a many-to-one relation or multivalued columns?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Do these problems mean that multivalued columns are useless? Probably not.
    Oracle introduced *two* kinds of support for multivalued columns with the 8.0
    release of their server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: 'With the nested tables option, Oracle is simply doing what an RDBMS purist
    would have told you to do in the first place: use multiple tables to represent
    many-to-one relations.'
  prefs: []
  type: TYPE_NORMAL
- en: First Normal Form
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you''d seen The Crucible, where Winona Ryder plays Abigail Wiliams, you''d
    have remembered the following scene:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Abigail:** I am but God''s finger, John. If he would condemn Elizabeth, she
    will be condemned. Arguments against normalization continue to sway practitioners.
    Fabian Pascal says that this costs dearly and reveals the poor understanding of
    sound database principles by even those who profess to be experts in the field.
    It is both a major reason for and a consequence of deficiencies in SQL implementations
    and for technology regressions, such as ODBMS and OLAP, that have come to haunt
    SQL DBMSs in the town of Salem.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Before leaving your hotel room, Ms. Ryder recasts your movie database in First
    Normal Form:'
  prefs: []
  type: TYPE_NORMAL
- en: Movie Facts
  prefs: []
  type: TYPE_NORMAL
- en: '| Movie ID | Title | Year Released | Producer | Director | Composer | Steadicam
    Operator |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | Alien: Resurrection | 1997 | Bill Badalato | Jean-Pierre Jeunet | John
    Frizzell | David Emmerichs |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | The Age of Innocence | 1993 | Barbara De Fina | Martin Scorsese | Elmer
    Bernstein | Larry McConkey |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | Heathers | 1989 | Denise Di Novi | Michael Lehmann | David Newman | --
    |'
  prefs: []
  type: TYPE_TB
- en: Movie Writers
  prefs: []
  type: TYPE_NORMAL
- en: '| Movie ID | Writer |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | Joss Whedon |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | Edith Wharton |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | Jay Cocks |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | Martin Scorsese |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | Daniel Waters |'
  prefs: []
  type: TYPE_TB
- en: Event Registration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Having struck out with Winona Ryder due to the abnormal nature of your data
    model, you decide to go on a nationwide speaking tour. You''re going to give three
    different talks:'
  prefs: []
  type: TYPE_NORMAL
- en: How to pick up Jewish babes in Hollywood
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using your SQL programming expertise to get a seat at the Academy Awards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What I learned about normalization from Winona Ryder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Each of these three talks will be given about 20 times in different cities.
    We''ll call a particular occurrence of a talk an *event*. Rather than hire a staff
    to process registration for each lecture, you build a database-backed Web application:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: 'This data model is in First Normal Form. There are no multivalued columns.
    However, it has some deficiencies. Suppose that you fly into New York City and
    give each of your three talks over three days. Each time you''re speaking at the
    same venue: Radio City Music Hall. Because of the way that the `events` table
    is designed, you''ll be recording the street address of Radio City Music Hall
    three times. If the street address were to change, you''d have to change it in
    three places. If you''re contemplating using a new venue and want to enter the
    street address, city, and country code or state abbrevation, you''ve nowhere to
    store the information unless you''ve already got an event scheduled for a specific
    time. If there is only one event in the database scheduled for a particular venue,
    deleting that event also deletes all information for the venue.'
  prefs: []
  type: TYPE_NORMAL
- en: Second Normal Form
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If all columns are functionally dependent on the *whole key*, the data model
    is in second normal form. Less formally, a second normal form table is one that
    is in first normal form with a key that determines all non-key column values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: Note that any data model in second normal form is also in first normal form.
  prefs: []
  type: TYPE_NORMAL
- en: Third Normal Form
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If all columns are *directly* dependent on the whole key, the data model is
    in third normal form. How is this different from second normal form? For example,
    suppose the price of the talk is a function of which talk is being given and the
    talk length. Thus the pair of `start_time` and `end_time` will determine the value
    of the `ticket_price` column. If we add one more table, our data model will be
    in third normal form:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: Note that any data model in third normal form is also in second normal form.
  prefs: []
  type: TYPE_NORMAL
- en: Reference
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Chapter 4 of Access Database Design & Programming](http://www.oreilly.com/catalog/accessdata2/chapter/ch04.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 1 of Transact-SQL Programming](http://www.oreilly.com/catalog/wintrnssql/chapter/ch01.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next: [Afterword](afterword.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[mbooth@arsdigita.com](mailto:mbooth@arsdigita.com)[philg@mit.edu](http://philip.greenspun.com/)[Add
    a comment](/comments/add?page_id=7345) | [Add a link](/links/add?page_id=7345)'
  prefs: []
  type: TYPE_NORMAL
