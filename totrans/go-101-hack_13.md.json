["```\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc modifyValue(s []int)  {\n    s[1] = 3\n    fmt.Printf(\"In modifyValue: s is %v\\n\", s)\n}\nfunc main() {\n    s := []int{1, 2}\n    fmt.Printf(\"In main, before modifyValue: s is %v\\n\", s)\n    modifyValue(s)\n    fmt.Printf(\"In main, after modifyValue: s is %v\\n\", s)\n} \n```", "```\nIn main, before modifyValue: s is [1 2]\nIn modifyValue: s is [1 3]\nIn main, after modifyValue: s is [1 3] \n```", "```\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc addValue(s []int) {\n    s = append(s, 3)\n    fmt.Printf(\"In addValue: s is %v\\n\", s)\n}\n\nfunc main() {\n    s := []int{1, 2}\n    fmt.Printf(\"In main, before addValue: s is %v\\n\", s)\n    addValue(s)\n    fmt.Printf(\"In main, after addValue: s is %v\\n\", s)\n} \n```", "```\nIn main, before addValue: s is [1 2]\nIn addValue: s is [1 2 3]\nIn main, after addValue: s is [1 2] \n```", "```\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc addValue(s *[]int) {\n    *s = append(*s, 3)\n    fmt.Printf(\"In addValue: s is %v\\n\", s)\n}\n\nfunc main() {\n    s := []int{1, 2}\n    fmt.Printf(\"In main, before addValue: s is %v\\n\", s)\n    addValue(&s)\n    fmt.Printf(\"In main, after addValue: s is %v\\n\", s)\n} \n```", "```\nIn main, before addValue: s is [1 2]\nIn addValue: s is &[1 2 3]\nIn main, after addValue: s is [1 2 3] \n```"]