["```\n(unbox (second foo))\n```", "```\n(second (unbox (second foo)))\n```", "```\n#lang pl(: foo : (Rec this (List Number (Boxof (U #f this)))))(define foo (list 1 (box #f)))(set-box! (second foo) foo)\n```", "```\n#lang pl(: foo : (Listof Number) -> Number)(define (foo l)\u00a0 (first l))(: bar : Integer -> Number)(define (bar x)\u00a0 (foo (list x)))\n```", "```\n(: bar : Integer -> Integer)\n```", "```\n#lang pl(: foo : (Boxof Number) -> Number)(define (foo b)\u00a0 (unbox b))(: bar : Integer -> Number)(define (bar x)\u00a0 (: b : (Boxof Integer))\u00a0 (define b (box x))\u00a0 (foo b))\n```", "```\n(define (bar x)\u00a0 (foo (box x)))\n```", "```\n> (define (bar x)\u00a0 (foo (box (ann x : Number))))\n> ```"]