- en: Example - Interleaving Streams
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Appending Streams
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Suppose you have two streams and you want to merge one with the other, akin
    to `append` with lists. With `append`, we join the beginning of one list to the
    end of another. An equivalent stream definition would look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: But wait! Streams can be of *infinite* length! If we call `(stream-append s1
    s2)` and `s1` is an infinite stream, we'll never be able to access any of the
    elements of `s2`.
  prefs: []
  type: TYPE_NORMAL
- en: Interleaving Streams
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'An alternative is to **interleave** the two streams:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'By interleaving the two streams, we can be certain that we will use elements
    from both streams. We can define `interleave` like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
