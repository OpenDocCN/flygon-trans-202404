- en: HoareAsLogicHoare Logic as a Logic
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HoareAsLogicHoare 逻辑作为逻辑
- en: '[PRE0]'
  id: totrans-1
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Require Import Imp.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 需要导入 Imp。
- en: Require Import Hoare.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 导入 Hoare。
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Inductive hoare_proof : Assertion → com → Assertion → Type :='
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Inductive hoare_proof：断言→ com → 断言→ 类型 :=
- en: '| H_Skip : ∀P,'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '| H_Skip : ∀P，'
- en: hoare_proof P (SKIP) P
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P（SKIP）P
- en: '| H_Asgn : ∀Q V a,'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '| H_Asgn : ∀Q V a，'
- en: hoare_proof (assn_sub V a Q) (V ::= a) Q
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 'hoare_proof（assn_sub V a Q）（V :: = a）Q'
- en: '| H_Seq  : ∀P c Q d R,'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '| H_Seq  : ∀P c Q d R，'
- en: hoare_proof P c Q → hoare_proof Q d R → hoare_proof P (c;;d) R
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P c Q → hoare_proof Q d R → hoare_proof P（c;;d）R
- en: '| H_If : ∀P Q b c[1] c[2],'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '| H_If：∀P Q b c[1] c[2]，'
- en: hoare_proof (fun st ⇒ P st ∧ bassn b st) c[1] Q →
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof（fun st ⇒ P st ∧ bassn b st）c[1] Q →
- en: hoare_proof (fun st ⇒ P st ∧ ~(bassn b st)) c[2] Q →
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof（fun st ⇒ P st ∧ ~（bassn b st））c[2] Q →
- en: hoare_proof P (IFB b THEN c[1] ELSE c[2] FI) Q
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P（如果 b THEN c[1] ELSE c[2] FI）Q
- en: '| H_While : ∀P b c,'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '| H_While：∀P b c，'
- en: hoare_proof (fun st ⇒ P st ∧ bassn b st) c P →
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof（fun st ⇒ P st ∧ bassn b st）c P →
- en: hoare_proof P (WHILE b DO c END) (fun st ⇒ P st ∧ ¬ (bassn b st))
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P（WHILE b DO c END）（fun st ⇒ P st ∧ ¬（bassn b st））
- en: '| H_Consequence  : ∀(P Q P'' Q'' : Assertion) c,'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '| H_Consequence  : ∀（P Q P'' Q''：断言）c，'
- en: hoare_proof P' c Q' →
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P' c Q' →
- en: (∀st, P st → P' st) →
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: （∀st，P st → P' st）→
- en: (∀st, Q' st → Q st) →
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: （∀st，Q' st → Q st）→
- en: hoare_proof P c Q.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P c Q。
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Lemma H_Consequence_pre : ∀(P Q P'': Assertion) c,'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '引理 H_Consequence_pre: ∀（P Q P''：断言）c，'
- en: hoare_proof P' c Q →
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P' c Q →
- en: (∀st, P st → P' st) →
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: （∀st，P st → P' st）→
- en: hoare_proof P c Q.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P c Q。
- en: Proof.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 证明。
- en: intros. eapply [H_Consequence](HoareAsLogic.html#H_Consequence).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍。采用[H_Consequence](HoareAsLogic.html#H_Consequence)。
- en: apply X. apply H. intros. apply H[0]. Qed.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 应用 X。应用 H。介绍。应用 H[0]。证明结束。
- en: 'Lemma H_Consequence_post  : ∀(P Q Q'' : Assertion) c,'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '引理 H_Consequence_post  : ∀（P Q Q''：断言）c，'
- en: hoare_proof P c Q' →
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P c Q' →
- en: (∀st, Q' st → Q st) →
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: （∀st，Q' st → Q st）→
- en: hoare_proof P c Q.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: hoare_proof P c Q。
- en: Proof.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 证明。
- en: intros. eapply [H_Consequence](HoareAsLogic.html#H_Consequence).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍。采用[H_Consequence](HoareAsLogic.html#H_Consequence)。
- en: apply X. intros. apply H[0]. apply H. Qed.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 应用 X。介绍。应用 H[0]。应用 H。证明结束。
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '{{assn_sub X (X+1) (assn_sub X (X+2) (X=3))}}'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '{{assn_sub X (X+1) (assn_sub X (X+2) (X=3))}}'
- en: X::=X+1 ;; X::=X+2
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: X::=X+1 ;; X::=X+2
- en: '{{X=3}}.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '{{X=3}}。'
- en: We can use Coq's tactics to help us construct the proof object.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以使用 Coq 的策略来帮助我们构造证明对象。
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Properties
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 属性
- en: 'Exercise: 2 stars (hoare_proof_sound)'
  id: totrans-46
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习：2 星（hoare_proof_sound）
- en: Prove that such proof objects represent true claims.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 证明这样的证明对象代表真实的断言。
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: ☐
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ☐
- en: We can also use Coq's reasoning facilities to prove metatheorems
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们还可以使用 Coq 的推理工具来证明元定理
- en: about Hoare Logic.  For example, here are the analogs of two
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关于 Hoare 逻辑。例如，这是两个的类比
- en: theorems we saw in chapter [Hoare](Hoare.html) — this time expressed in terms
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们在第 [Hoare](Hoare.html) 章节中看到的定理 —— 这次用术语来表达
- en: of the syntax of Hoare Logic derivations (provability) rather than
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语法的 Hoare 逻辑推导（可证性）而不是
- en: directly in terms of the semantics of Hoare triples.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 直接基于 Hoare 三元组的语义。
- en: The first one says that, for every P and c, the assertion
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一个说，对于每个 P 和 c，断言
- en: '{{P}} c {{True}} is *provable* in Hoare Logic.  Note that the'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '{{P}} c {{True}} 在 Hoare 逻辑中是 *可证明的*。注意'
- en: 'proof is more complex than the semantic proof in Hoare: we'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 证明比 Hoare 中的语义证明更复杂：我们
- en: actually need to perform an induction over the structure of the
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 实际上需要对结构进行归纳
- en: command c.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 命令 c。
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Similarly, we can show that {{False}} c {{Q}} is provable for
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同样，我们可以证明对于{{False}} c {{Q}} 是可证明的
- en: any c and Q.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 任何 c 和 Q。
- en: '[PRE7]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As a last step, we can show that the set of hoare_proof axioms
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为最后一步，我们可以展示 hoare_proof 公理集
- en: is sufficient to prove any true fact about (partial) correctness.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 足以证明关于（部分）正确性的任何真实事实。
- en: More precisely, any semantic Hoare triple that we can prove can
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更确切地说，我们可以证明的任何语义 Hoare 三元组都可以
- en: also be proved from these axioms.  Such a set of axioms is said to
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 也可以从这些公理中证明出来。这样一组公理被称为
- en: 'be *relatively complete*.  Our proof is inspired by this one:'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 是*相对完备*。我们的证明受到这个的启发：
- en: '[http://www.ps.uni-saarland.de/courses/sem-ws[11]/script/Hoare.html](http://www.ps.uni-saarland.de/courses/sem-ws<sub>11</sub>/script/Hoare.html)'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://www.ps.uni-saarland.de/courses/sem-ws[11]/script/Hoare.html](http://www.ps.uni-saarland.de/courses/sem-ws<sub>11</sub>/script/Hoare.html)'
- en: To carry out the proof, we need to invent some intermediate
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了进行证明，我们需要想出一些中间值
- en: assertions using a technical device known as *weakest preconditions*.  Given
    a command c and a desired postcondition
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用一个称为 *最弱前置条件* 的技术装置来断言。给定一个命令 c 和一个期望的后置条件
- en: assertion Q, the weakest precondition wp c Q is an assertion
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 断言 Q，最弱前置条件 wp c Q 是一个断言
- en: P such that {{P}} c {{Q}} holds, and moreover, for any other
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: P 这样的{{P}} c {{Q}}保持，而且，对于任何其他
- en: assertion P', if {{P'}} c {{Q}} holds then P' → P.  We can
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 断言 P'，如果 {{P'}} c {{Q}} 成立，则 P' → P。我们可以
- en: 'more directly define this as follows:'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更直接地定义如下：
- en: '[PRE8]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Exercise: 1 star (wp_is_precondition)'
  id: totrans-77
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习：1星（wp_is_precondition）
- en: '[PRE9]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: ☐
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ☐
- en: 'Exercise: 1 star (wp_is_weakest)'
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习：1星（wp_is_weakest）
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The following utility lemma will also be useful.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下的实用引理也会很有用。
- en: '[PRE11]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: ☐
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ☐
- en: 'Exercise: 5 stars (hoare_proof_complete)'
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习：5星（hoare_proof_complete）
- en: Complete the proof of the theorem.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成定理的证明。
- en: '[PRE12]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: ☐
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ☐
- en: Finally, we might hope that our axiomatic Hoare logic is
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，我们可能希望我们的公理化的Hoare逻辑是
- en: '*decidable*; that is, that there is an (terminating) algorithm (a'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*可判定*的角度来看，存在一个（终止的）算法（一个'
- en: '*decision procedure*) that can determine whether or not a given'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*决策过程*)，可以确定给定的'
- en: Hoare triple is valid (derivable).  But such a decision procedure
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Hoare三元组是有效的（可推导的）。但这样的决策过程
- en: cannot exist!
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无法存在！
- en: Consider the triple {{True}} c {{False}}. This triple is valid
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 考虑三元组{{True}} c {{False}}。这个三元组是有效的
- en: if and only if c is non-terminating.  So any algorithm that
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当且仅当 c 是非终止的。所以任何算法
- en: could determine validity of arbitrary triples could solve the
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以确定任意三元组的有效性可以解决
- en: Halting Problem.
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 停机问题。
- en: Similarly, the triple {{True} SKIP {{P}} is valid if and only if
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同样，三元组{{True} SKIP {{P}}是有效的当且仅当
- en: ∀ s, P s is valid, where P is an arbitrary assertion of
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ∀ s，P s 是有效的，其中 P 是任意断言
- en: Coq's logic. But it is known that there can be no decision
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Coq的逻辑。但已知不能有决策
- en: procedure for this logic.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这种逻辑的过程。
- en: Overall, this axiomatic style of presentation gives a clearer
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 总的来说，这种公理化的展示风格更清晰
- en: picture of what it means to "give a proof in Hoare logic."
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 是什么意思“在Hoare逻辑中给出证明”。
- en: However, it is not entirely satisfactory from the point of view of
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，从
- en: 'writing down such proofs in practice: it is quite verbose.  The'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在实践中写下这样的证明：非常冗长。这
- en: section of chapter [Hoare2](Hoare2.html) on formalizing decorated programs
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 章节 [Hoare2](Hoare2.html) 上关于形式化装饰程序
- en: shows how we can do even better.
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 展示了我们如何做得更好。
- en: '[PRE13]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
