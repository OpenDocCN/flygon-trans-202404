- en: 'Chapter 17: The Product Rule and Differentiating Vectors'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The product rule for differentiation applies as well to vector derivatives.
    In fact it allows us to deduce rules for forming the divergence in non-rectangular
    coordinate systems. This can be accomplished by finding a vector pointing in each
    basis direction with 0 divergence.
  prefs: []
  type: TYPE_NORMAL
- en: Topics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 17.1  [Introduction](section01.html)
  prefs: []
  type: TYPE_NORMAL
- en: 17.2  [The Product Rule and the Divergence](section02.html)
  prefs: []
  type: TYPE_NORMAL
- en: 17.3  [The Divergence in Spherical Coordinates](section03.html)
  prefs: []
  type: TYPE_NORMAL
- en: 17.4  [The Product Rule and the Curl](section04.html)
  prefs: []
  type: TYPE_NORMAL
- en: 17.1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When differentiating functions of several variables, which are called **scalar
    fields,** the **gradient** of the function, contains the all the information about
    the tangent (hyper)-plane (or linear approximation or differentials) that there
    is.
  prefs: []
  type: TYPE_NORMAL
- en: When differentiating **vector fields,** which are vector valued functions of
    several variables, there are partial derivatives of every component in every direction;
    thus there are nine of them in three dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: However the **divergence** and **curl** are the combinations of these that are
    particular importance in applications, and we concentrate our attention on them.
    These are written as
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dbf767ab35dc9bf5f4b9276af78713c3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: with
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9bdf718fca6af28c9cc5f9ee6d3e1f36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 17.2 The Product Rule and the Divergence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We now address the question: how can we apply the product rule to evaluate
    such things?'
  prefs: []
  type: TYPE_NORMAL
- en: The ![](../Images/480bf3704b635f0b74769dc67a215e5b.jpg) or "del" operator and
    the **dot** and **cross product** are all linear, and each partial derivative
    obeys the product rule.
  prefs: []
  type: TYPE_NORMAL
- en: 'Our first question is: **what is** ![](../Images/ac6710c1658ac745f00c88c411ba72cc.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Applying the product rule and linearity we get
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9457e0a7a38a0693cdfd0f2bb022b00a.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**And how is this useful?**'
  prefs: []
  type: TYPE_NORMAL
- en: With it, if the function whose divergence you seek can be written as some function
    multiplied by a vector whose divergence you know or can compute easily, finding
    the divergence reduces to finding the gradient of that function, using your information
    and taking a dot product.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise 17.1 What is the divergence of the vector field (x, y, z)? Of (-y,
    x, 0)?**'
  prefs: []
  type: TYPE_NORMAL
- en: 17.3 The Divergence in Spherical Coordinates
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you describe vectors in spherical or cylindric coordinates, that is, write
    vectors as sums of multiples of unit vectors in the directions defined by these
    coordinates, you encounter a problem in computing derivatives.
  prefs: []
  type: TYPE_NORMAL
- en: The unit vectors themselves change as you change coordinates, so that the change
    in your vector consists of terms arising from the changes of the multiples and
    also those from changes in the unit vectors.
  prefs: []
  type: TYPE_NORMAL
- en: We can find neat expressions for the divergence in these coordinate systems
    **by finding vectors pointing in the directions of these unit vectors that have
    0 divergence.**
  prefs: []
  type: TYPE_NORMAL
- en: Then we write our vector field as a linear combination of these instead of as
    linear combinations of unit vectors.
  prefs: []
  type: TYPE_NORMAL
- en: By the product rule, the expression for the divergence we seek will be a sum
    over the three directions of the dot product of one of these vectors with the
    gradient of its coefficient. The second terms in the product rule will all be
    0.
  prefs: []
  type: TYPE_NORMAL
- en: You may very well encounter a need to express divergence in these coordinates
    in your future life, so we will carry this approach out with spherical coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: '**First please notice: whenever you differentiate functions in polar coordinates
    you must treat the origin in them separately and carefully. The coordinates themselves
    are singular there! The safest thing is to add "except perhaps at r = 0" or some
    similar statement, unless you are sure that your conclusion is sensible there.
    Often it will NOT hold at the origin of your coordinates.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Such caviats are omitted below but you should assume that they are present
    whenever differentiation by a polar parameter is involved.**'
  prefs: []
  type: TYPE_NORMAL
- en: The only non-trivial step in doing this is finding vectors in the various required
    directions that have 0 divergence. This can be done by finding the divergence
    of any vectors in these directions and figuring out what multiple you need apply
    in each case to cancel its divergence out, again using the product theorem for
    divergence.
  prefs: []
  type: TYPE_NORMAL
- en: The vector (x, y, z) points in the radial direction in spherical coordinates,
    which we call the ![](../Images/40bec17f7691e45d32d443b059a00639.jpg) direction.
    Its divergence is 3.
  prefs: []
  type: TYPE_NORMAL
- en: It can also be written as ![](../Images/82246e94b3b6e0d15af8e498a87c9302.jpg)
    or as ![](../Images/c257658345d4b7c629368d0ae03cff3b.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: A multiplier which will convert its divergence to 0 must therefore have, by
    the product theorem, a gradient that is ![](../Images/e8ce57acf2b33027fc97578f28a11844.jpg)
    multiplied by itself.
  prefs: []
  type: TYPE_NORMAL
- en: The function ![](../Images/8f19f2c9aadb55873c902fcd56d092e0.jpg) does this very
    thing, so the 0-divergence function in the ![](../Images/40bec17f7691e45d32d443b059a00639.jpg)
    direction is ![](../Images/a398bab10d3b9fb22dd0bf53cc4b2a67.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercise 17.2 Notice that the divergence of (x, y, 0) otherwise known as
    r or as** r**u[r] is 2\. What function of r should you multiply it by to get a
    vector with divergence 0?**'
  prefs: []
  type: TYPE_NORMAL
- en: The vector (-y, x) points in the ![](../Images/7f7029b9176d2436bcd8ac38b3999f4e.jpg)
    direction and has 0 divergence already. It can be written as ![](../Images/820b9eaf192777a10bdc85ef4fce1c8b.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: The ![](../Images/700578cc6e0c968d24da27a3f619607d.jpg) direction is normal
    to both of these and you can get a vector in it by taking the cross product of
    (-y, x, 0) and (x, y, z), with result (xz, yz, -r²).
  prefs: []
  type: TYPE_NORMAL
- en: This vector has divergence 2z, and the form rz**u[r]**- r²**u[z]**.
  prefs: []
  type: TYPE_NORMAL
- en: It is the first of these two terms, rz**u[r]** (which is (xz, yz)) that has
    the non-vanishing divergence and it is the x and y which lead to it, not the z
    factor. We can invoke the result of the last exercise to introduce a multiplier
    that will get rid of that divergence.
  prefs: []
  type: TYPE_NORMAL
- en: The resulting vector has the form ![](../Images/a0ad8ef60e223c18fe24b3c00e47f16d.jpg)
    whose length is ![](../Images/3af322bb65fe8b4d394dca3c0722c1db.jpg) It can therefore
    be written as ![](../Images/6afc1e002f8b2a419bd7ea9662e6660f.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: To summarize, the vectors ![](../Images/40a1600d0c441994a310818b05232f07.jpg)
    have 0 divergence.
  prefs: []
  type: TYPE_NORMAL
- en: If we define these combinations to be ![](../Images/f98e86eaea086789dd3e7b7b323149a9.jpg)
    respectively, a vector of the form ![](../Images/a008e50da154feda6d6d923a9534db70.jpg)
    is also writable as
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a864a28e73ae23e054da636e0ca4f532.jpg)'
  prefs: []
  type: TYPE_IMG
- en: and its divergence is
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a67dd6b7e1a99569e8926dd47a59d6f2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: or
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/48283a93357a00fce4775deb9ce8a69b.jpg)'
  prefs: []
  type: TYPE_IMG
- en: or
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5f07692406ef78e26fcf620d7ac40fa2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: and this is the form of the divergence in spherical coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the last line here we used the form of the [gradient in spherical coordinates](../chapter09/section04.html):
    recall that ![](../Images/7f7029b9176d2436bcd8ac38b3999f4e.jpg) is a polar variable
    with radius r and ![](../Images/700578cc6e0c968d24da27a3f619607d.jpg) is a polar
    variable with radius ![](../Images/40bec17f7691e45d32d443b059a00639.jpg). Also
    recall that r is ![](../Images/40bec17f7691e45d32d443b059a00639.jpg)sin![](../Images/700578cc6e0c968d24da27a3f619607d.jpg).'
  prefs: []
  type: TYPE_NORMAL
- en: This last expression is not very pretty but it is quite important in physical
    applications.
  prefs: []
  type: TYPE_NORMAL
- en: It appears in particular in the combination ![](../Images/189c1be3b7134238ca266d7bfac05af0.jpg)which
    is called **the Laplacian** of f.
  prefs: []
  type: TYPE_NORMAL
- en: In rectangular coordinates and spherical coordinates **the Laplacian** takes
    the following forms, which follow from the expressions for the gradient and divergence
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e136aeefe6067dd694adbdeba87d86cd.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Exercises:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**17.3 Find the divergence of ![](../Images/1a5d66e74dcb42390bc2f70caa1ffcc4.jpg)**'
  prefs: []
  type: TYPE_NORMAL
- en: '**17.4 Deduce the form of the divergence in cylindric coordinates using the
    logic used above for spherical coordinates. Apply it to find the Laplacian in
    cylindric coordinates.**'
  prefs: []
  type: TYPE_NORMAL
- en: 17.4 The Product Rule and the Curl
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The product rule applied to the curl takes the form
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0284c6729c856a74aa805c77365b4ec8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: (This is an immediate consequence of the ordinary one dimensional product rule
    and the linearity of all our products. When the derivatives here act on f they
    form the first term here, and when they act on v the produce the second term.
    The weird star here denotes ordinary multiplication.)
  prefs: []
  type: TYPE_NORMAL
- en: The approach of the last section for reducing computation of divergence in spherical
    coordinates can be used just as well for the computation of the curl.
  prefs: []
  type: TYPE_NORMAL
- en: The approach, you will remember, consists of finding vectors pointing in the
    right directions with (0) curl, expressing a general vector as a combination of
    these, and using the product theorem to express the results. With curl (0) one
    term of the two in the product theorem disappears and we have our formula.
  prefs: []
  type: TYPE_NORMAL
- en: All you need to do it is to find vectors in each appropriate direction with
    vanishing curl. That is quite easy to do because the gradient of any function
    will have vanishing curl.
  prefs: []
  type: TYPE_NORMAL
- en: Thus we can take the gradients of ![](../Images/40bec17f7691e45d32d443b059a00639.jpg)
    and of ![](../Images/7f7029b9176d2436bcd8ac38b3999f4e.jpg) and of ![](../Images/700578cc6e0c968d24da27a3f619607d.jpg),
    and these will be vectors pointing in the right directions, and give us immediately
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ac71cb4d3b167832b3f122047aaff784.jpg)'
  prefs: []
  type: TYPE_IMG
- en: and so we deduce, via the product theorem
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0b39d5c5ab2a5e7550b8503b46a23bf3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Unfortunately I must admit never ever using this result in any context. So you
    may safely ignore it, I suppose.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercises:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**17.5 Find a similar expression for the curl in cylindric coordinates.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**17.6 Find the curl of ![](../Images/4915c542b39b7ab5b87fb4a468058eaa.jpg)**'
  prefs: []
  type: TYPE_NORMAL
