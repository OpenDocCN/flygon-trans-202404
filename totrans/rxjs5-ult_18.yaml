- en: Operators - mathematical
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Operators matchematical
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: max
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This emits `7`. It''s obvious what this operator does, it gives us just one
    value, the max. There is different ways of calling it though. You can give it
    a comparer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'In this case we define a `comparer` which runs a sort algorithm under the hood
    and all we have to do is to help it determine when something is *larger than*,
    *equal* or *smaller than*. Or with an object the idea is the same:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Because we tell it in the `comparer` what property to compare we are left with
    the first entry as result.
  prefs: []
  type: TYPE_NORMAL
- en: min
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Min is pretty much identical to `max()` operator but returns the opposite value,
    the smallest.
  prefs: []
  type: TYPE_NORMAL
- en: sum
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`sum()` as operator has seized to exist but we can use `reduce()` for that
    instead like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This can be applied to objects as well as long as we define what the `reduce()`
    function should do, like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This will concatenate the object parts into an object.
  prefs: []
  type: TYPE_NORMAL
- en: average
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `average()` operator isn't there anymore in Rxjs5 but you can still achieve
    the same thing with a `reduce()`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: I admit it, this one hurted my head a little, once you crack the initial `map()`
    call the `reduce()` is pretty simple, and `Object.assign()` is a nice companion
    as usual.
  prefs: []
  type: TYPE_NORMAL
