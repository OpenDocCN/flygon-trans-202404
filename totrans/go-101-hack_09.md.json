["```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var (\n        s []int\n        m map[int]bool\n    )\n    if s == nil {\n        fmt.Println(\"The value of s is nil\")\n    }\n    if m == nil {\n        fmt.Println(\"The value of m is nil\")\n    }\n} \n```", "```\nThe value of s is nil\nThe value of m is nil \n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var s []int\n    fmt.Println(\"Is s a nil? \", s == nil)\n    s = append(s, 1)\n    fmt.Println(\"Is s a nil? \", s == nil)\n    fmt.Println(s)\n} \n```", "```\nIs s a nil?  true\nIs s a nil?  false\n[1] \n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var s1 []int\n    s2 := []int{}\n    fmt.Println(\"Is s1 a nil? \", s1 == nil)\n    fmt.Println(\"Length of s1 is: \", len(s1))\n    fmt.Println(\"Is s2 a nil? \", s2 == nil)\n    fmt.Println(\"Length of s2 is: \", len(s2))\n} \n```", "```\nIs s1 a nil?  true\nLength of s1 is:  0\nIs s2 a nil?  false\nLength of s2 is:  0 \n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var m map[int]bool\n    fmt.Println(\"Is m a nil? \", m == nil)\n    fmt.Println(\"m[1] is \", m[1])\n    m[1] = true\n} \n```", "```\nIs m a nil?  true\nm[1] is  false\npanic: assignment to entry in nil map\n\ngoroutine 1 [running]:\npanic(0x4cc0e0, 0xc082034210)\n    C:/Go/src/runtime/panic.go:481 +0x3f4\nmain.main()\n    C:/Work/gocode/src/Hello.go:9 +0x2ee\nexit status 2\n\nProcess finished with exit code 1 \n```", "```\nm := make(map[int]bool) \n```", "```\nif v, ok := m[1]; !ok {\n    .....\n} \n```"]