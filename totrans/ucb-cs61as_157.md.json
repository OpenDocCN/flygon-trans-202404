["```\n(load \"~cs61as/lib/concurrency.scm\") \n```", "```\n(set! x (+ x 1)) \n```", "```\nlw $8, x        ; Put the value of x into processor register number 8.\naddi $8, $8, 1  ; Take the value of register 8, add 1 to it, and put  \n                ; the new value back into register 8.\nsw $8, x        ; Set the value in register 8 as the value of x. \n```", "```\nmy process      value of x   other process\n----------      ----------   -------------  \n  $8 = ??        x = 100       $9 = ??\n\nlw $8, x  \n  $8 = 100       x = 100       $9 = ??\n\naddi $8, $8, 1  \n  $8 = 101       x = 100       $9 = ??\n\n                             lw $9, x  \n  $8 = 101       x = 100       $9 = 100\n\n                             addi $9, $9, 1  \n  $8 = 101       x = 100       $9 = 101\n\n                             sw $9, x  \n  $8 = 101       x = 101       $9 = 101\n\nsw $8, x  \n  $8 = 101       x = 101       $9 = 101 \n```", "```\nreserve x\nlw $8, x\naddi $8, 1\nsw $8, x\nrelease x \n```", "```\nSICP name        What's protected              Provided by\n---------        ----------------              -----------\nserializer       high level abstraction        programming language\n                   (procedure, object, ...)\n\nmutex            critical section              operating system\n\ntest-and-set!    one atomic                    hardware\n                   state transition \n```"]