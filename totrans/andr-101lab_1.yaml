- en: 'Lab 01: Android Studio & ''Hello World'''
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Lab 01: ''Hello World'''
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This lab is really just to get you up to speed with using the Android environment
    and the basic structure of an Android Application. We'll put our own spin on the
    classic 'Hello World' application and demonstrate the use of some very basic widgets
    and event handling.
  prefs: []
  type: TYPE_NORMAL
- en: Objectives
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Objectives
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Be able to download and install Android Studio, the Android SDK and understand
    its key features. In particular:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project View
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: SDK Manager
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AVD Manager
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Be able to understand the structure of an Android Studio Project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Have created a simple Android App (HelloWorld), and be able to manage it within
    the Android Studio environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Step 01
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Instructions for working in Walton Building PC Labs:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are working on the workstations in the IT Building, Android Studio should
    already be installed so proceed with the next step of the lab.
  prefs: []
  type: TYPE_NORMAL
- en: Instructions for working on your own laptop
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Download and install Android Studio from
  prefs: []
  type: TYPE_NORMAL
- en: '[https://developer.android.com/sdk/index.html](https://developer.android.com/sdk/index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Select the correct version for your OS. The primary prerequisite for installing
    Android Studio is that you have a recent Java installation on your workstation.
    To see if you have Java, and to install it if you do not, visit:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.java.com](http://www.java.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android Studio looks after downloading the Android SDK for you but you can download
    and install the Android SDK separately from
  prefs: []
  type: TYPE_NORMAL
- en: '[https://developer.android.com/sdk/installing/index.html](https://developer.android.com/sdk/installing/index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This download is actually the SDK Manager (not the full SDK), where you can
    choose which versions of the Android platform you want to install & develop with
    - select **anything above API 21 (Version 5.0)**. (But I'd leave all the TV and
    Wearable stuff :) )
  prefs: []
  type: TYPE_NORMAL
- en: 'NOTE : these downloads are quite large so it''s advisable to have these versions
    installed **BEFORE** class.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](sdk.png)'
  prefs: []
  type: TYPE_IMG
- en: Step 02
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First Android Project - "HelloWorld"
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Android Studio, select File->New->New Project, or if it's a first run, select
    "Start a new Android Studio Project"
  prefs: []
  type: TYPE_NORMAL
- en: '![](firstrun.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Press "Next" (or click the option) and then give the project a name: ''HelloWorld'''
  prefs: []
  type: TYPE_NORMAL
- en: It's recommended you change the default package name also and it's probably
    worth changing the Project Location too but you can take the default for the moment.
  prefs: []
  type: TYPE_NORMAL
- en: '![](new01.png)'
  prefs: []
  type: TYPE_IMG
- en: Select the Platform(s) you want your app to run on - we'll just stick with Phone
    & Tablet and choose an appropriate Minimum SDK.
  prefs: []
  type: TYPE_NORMAL
- en: '![](new02.png)'
  prefs: []
  type: TYPE_IMG
- en: You should choose an Empty Activity as your activity type on the next screen
  prefs: []
  type: TYPE_NORMAL
- en: '![](new03.png)'
  prefs: []
  type: TYPE_IMG
- en: and name it as in the screenshot below
  prefs: []
  type: TYPE_NORMAL
- en: '![](new04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After you press "Finish", you should now have something similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](new05.png)'
  prefs: []
  type: TYPE_IMG
- en: Next, as an exercise, select File->Close Project, to close the project so we
    can import it again.
  prefs: []
  type: TYPE_NORMAL
- en: If no other Projects are open you will be displayed with
  prefs: []
  type: TYPE_NORMAL
- en: '![](new06.png)'
  prefs: []
  type: TYPE_IMG
- en: So, to import the project, select "Open an Existing Android Project" and navigate
    to the Project folder where you android app is stored (like **'HelloWorld'** below)
  prefs: []
  type: TYPE_NORMAL
- en: '![](new07.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the project is open again, familiarise yourself with the project layout
    - the initial xml layout or "screen" is first displayed, this is one of the many
    resources you will be using and creating throughout this module. We will experiment
    later with modifying this layout, but first you should run the application.
  prefs: []
  type: TYPE_NORMAL
- en: Select the Project (HelloWorld) and then select the 'Play' button as below
  prefs: []
  type: TYPE_NORMAL
- en: '![](new08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you haven''t done so already, you will be asked to select/create an AVD
    (Android Virtual Device), as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](avd01.png)'
  prefs: []
  type: TYPE_IMG
- en: and
  prefs: []
  type: TYPE_NORMAL
- en: '![](avd02.png)'
  prefs: []
  type: TYPE_IMG
- en: and
  prefs: []
  type: TYPE_NORMAL
- en: '![](avd03.png)'
  prefs: []
  type: TYPE_IMG
- en: and
  prefs: []
  type: TYPE_NORMAL
- en: '![](avd04.png)'
  prefs: []
  type: TYPE_IMG
- en: '**The Virtual Device is very heavy on resources so you may need to choose settings
    below what is selected in the Screenshots.**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Otherwise, use the settings as above and your first Android App should launch,
    (Once you''ve unlocked the device!):'
  prefs: []
  type: TYPE_NORMAL
- en: Step 03
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our version of "HelloWorld"
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this Step, you will be required to develop and run your own version of the
    "Hello World" Android Project (as seen below).
  prefs: []
  type: TYPE_NORMAL
- en: '![](lab01.png)'
  prefs: []
  type: TYPE_IMG
- en: If you've deleted your HelloWorld Project, launch Android Studio (if it's not
    already open) and create a new Android Project called **HelloWorld** similar to
    what you did in Step 02\.
  prefs: []
  type: TYPE_NORMAL
- en: If you haven't deleted the project, you can just continue on.
  prefs: []
  type: TYPE_NORMAL
- en: Name your package 'ie.wit' (like you did before). Choose an Empty Activity again
    and rename as before. It's recommended you select **Android 5.0** as the launch
    target platform (but any target will suffice for this particular lab). It's also
    probably a good idea to run the App at this stage, so you can set up your Virtual
    Device (if you haven't done so already).
  prefs: []
  type: TYPE_NORMAL
- en: Edit your "strings.xml" file (in your res folder) and add the following "resources"
    - be careful if you have created an app which contains a 'menu' folder, this also
    includes associated resources, so don't overwrite those resources, just add our
    ones at the end.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Your completed strings.xml (without menus) should look like this
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: If you choose "open editor you can see the graphical representation of the String
    resources you have set up (and edit them here if you need to).
  prefs: []
  type: TYPE_NORMAL
- en: '![](lab02.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, edit your **"activity_hello_world.xml"** *in your ***layout*** folder*
    and replace your **TextView** with the following - make sure your in 'Text' view
    and not 'Design' view window.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This will give you the following layout:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](lab03.png)'
  prefs: []
  type: TYPE_IMG
- en: Once again, it's worth running the app at this point to confirm everything is
    displayed the way we want it. If you click the button, your app will probably
    crash - we don't have our **showGreeting()** method implemented yet.
  prefs: []
  type: TYPE_NORMAL
- en: So, the last thing we need to do is add in our event handling code so that a
    short message is displayed when the user presses the 'Show Greeting' button.
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, open up the "HelloWorldActivity.java" source file and add the following
    method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: You'll get a few compiler errors due to missing imports, so try and fix those.
  prefs: []
  type: TYPE_NORMAL
- en: Note that we have no need for some kind of Listener interface (ala swing development)
    - our event handling is taken care of via the 'onClick' attribute in our xml layout,
    here's what your completed Activity class should look like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: So when you run your app again you should see something like this when you click
    the 'Show Greeting' button.
  prefs: []
  type: TYPE_NORMAL
- en: '![](lab04.png)'
  prefs: []
  type: TYPE_IMG
- en: We will investigate this code more closely in the lectures.
  prefs: []
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Working with Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Just to get used to adding and editing resources, create a new button for our
    main layout, and try and 'hook it up' to a new string resource message to display
    to the user.
  prefs: []
  type: TYPE_NORMAL
- en: UI Design
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Have a look at adding in a new colour resource and changing the default background
    colour for the layout.
  prefs: []
  type: TYPE_NORMAL
