- en: Lecture 3 - Timers, I/O, Pitfalls
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pubilc Service Annoucements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Due date for assignment 0
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Caches, optimization, clock speed, FIFOs
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Libraries: memcpy in particular'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Some clean-up needed in course account
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: The Hardware/Software Provided
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Provided and maintained by CSCF
  prefs: []
  type: TYPE_NORMAL
- en: Linux systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'cross compiler: runs on 86_64, produces code for ARM'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GNU toolchain: compiler, assembler, link editor'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: You will notice that my makefile separates
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: compilation to assembly code,
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: assembling the assembly code, and
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: link editing.
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: need to login explicitly to `linux.student.cs`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: TFTP servers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: need to type IP number explicitly
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: TS-7200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Specific documentation from Technologic
  prefs: []
  type: TYPE_NORMAL
- en: System on Chip (SoC)
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: EP9302, designed and manufactured by Cirrus semiconductor
  prefs: []
  type: TYPE_NORMAL
- en: Memory
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Byte addressable, word size 32 bits
  prefs: []
  type: TYPE_NORMAL
- en: 32 Mbytes of RAM, starting at `0x00000000`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4 Mbytes of flash RAM, starting at `0x60000000`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contains RedBoot, which is loaded into RAM at startup
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Special locations at low addresses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Special locations above `0x80000000`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Two types of special location
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Supplied by Technologic: `0x80840000` to `0x80840047`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Suppied by Cirrus:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`0x80010000` to `0x8081ffff`'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`0x808a0000` to `0x80900023`'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Separate instruction and data caches
  prefs: []
  type: TYPE_NORMAL
- en: '`COM'' ports'
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Connected to UARTs
  prefs: []
  type: TYPE_NORMAL
- en: RS-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Actual UART hardware is on the EP9302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only really two
  prefs: []
  type: TYPE_NORMAL
- en: Ethernet port
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Busy wait ethernet code in RedBoot
  prefs: []
  type: TYPE_NORMAL
- en: used by loader to execute TFTP protocol
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: used by RedBoot, which was customized by Technologic and installed in the Flash
    RAM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reset switch
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: red, even though documentation says black
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: actually, some are black
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EP-9302
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Specific documentation from Cirrus
  prefs: []
  type: TYPE_NORMAL
- en: System on chip
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: ARM 920T core, implementing ARM v4T instruction set
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Specific documentation from ARM
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Two co-processors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System controller, MMU
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: ARM documentation
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Maverick Crunch floating point unit
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Cirrus documentation
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Two interrupt controllers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both ARM and Cirrus documentation
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: An ARM-designed part, the PL-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Peripherals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UARTs
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Timers
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: DIO
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A/D
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: etc.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Software
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Compiler
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: GNU tool chain
  prefs: []
  type: TYPE_NORMAL
- en: when you are getting started optimizing is usually a bad idea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: software multiplication, division, floating point from libgcc.a
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gcc uses a couple of functions like memcpy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Makefile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: target.ld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RedBoot
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Partial implementation
  prefs: []
  type: TYPE_NORMAL
- en: 'fconfig :: NOT'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: load (tftp)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: examine, copy, fill memory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns when program terminates
  prefs: []
  type: TYPE_NORMAL
- en: Busy-wait IO
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: COM2 uses monitor; COM1 goes to train
  prefs: []
  type: TYPE_NORMAL
- en: initialization
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: output
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: input
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Timers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: How does one keep time in a computer?
  prefs: []
  type: TYPE_NORMAL
- en: crystal oscillator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: interrupts from a timer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ntp
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timers normally count down
  prefs: []
  type: TYPE_NORMAL
- en: You interact with the timer through three registers
  prefs: []
  type: TYPE_NORMAL
- en: register to load the timer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: register to read the timer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: register to command the timer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timers available in the EP9302.
  prefs: []
  type: TYPE_NORMAL
- en: Two sixteen bit
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One thirty-two bit
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One forty bit
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One watch-dog
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Polling Loops
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Polling loops allow you to manage more than one condition/activity pair at the
    same time.
  prefs: []
  type: TYPE_NORMAL
- en: The basic polling loop
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A Few Comments
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Shallow computation
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Worst case response time
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: sum over n of {execution time of `if( c<n>` ) + execution time of `a<n>}`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What you put into an action matters a lot.
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Suppose you put busy-wait I/O to the train controller into an action
  prefs: []
  type: TYPE_NORMAL
- en: Will you catch it in your testing?
  prefs: []
  type: TYPE_NORMAL
- en: Probably not.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you Miss Deadlines
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Testing more than once
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Suppose you want a better response time for a1\. Then try the loop
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Worst case response time for `a1`
  prefs: []
  type: TYPE_NORMAL
- en: execution time for `if( c1 )` + maximum over n of execution time for `if( cn
    ) an`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Breaking into pieces
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: Suppose the response time is still too long, because the execution of one action,
    say a2, is too long. Then you can break a2 into two parts
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This is strarting to get a little complicated and we haven't said anything about
    inter-action communication
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Bill Cowan''s lecture notes for CS452 in s12](index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bill Cowan''s Spring 2012 CS452 page](../index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bill Cowan''s CS452 page](../../index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bill Cowan''s teaching page](../../../index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bill Cowan''s home page](../../../../index.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
