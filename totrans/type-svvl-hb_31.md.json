["```\nts`const  <data-lsp lsp=\"const obj: {\n    a: number;\n    b: number;\n    c: number;\n}\">obj</data-lsp>  = { <data-lsp lsp=\"(property) a: number\">a</data-lsp>:  1, <data-lsp lsp=\"(property) b: number\">b</data-lsp>:  2, <data-lsp lsp=\"(property) c: number\">c</data-lsp>:  3 };const  <data-lsp lsp=\"const keys1: string[]\">keys1</data-lsp>  = [\"a\",  \"b\",  \"c\"];const  <data-lsp lsp=\"const keys2: string[]\">keys2</data-lsp>  =  <data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)\">keys</data-lsp>(<data-lsp lsp=\"const obj: {\n    a: number;\n    b: number;\n    c: number;\n}\">obj</data-lsp>); // keys1\u3088\u308a\u4fdd\u5b88\u6027\u304c\u9ad8\u3044`\n```", "```\nts`const  <data-lsp lsp=\"const obj: {\n    a: number;\n    b: number;\n    c: number;\n}\">obj</data-lsp>  = { <data-lsp lsp=\"(property) a: number\">a</data-lsp>:  1, <data-lsp lsp=\"(property) b: number\">b</data-lsp>:  2, <data-lsp lsp=\"(property) c: number\">c</data-lsp>:  3 };const  <data-lsp lsp=\"const keys1: string[]\">keys1</data-lsp>  = [\"a\",  \"b\",  \"c\"];const  <data-lsp lsp=\"const keys2: string[]\">keys2</data-lsp>  =  <data-lsp lsp=\"var Object: ObjectConstructor\">Object</data-lsp>.<data-lsp lsp=\"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)\">keys</data-lsp>(<data-lsp lsp=\"const obj: {\n    a: number;\n    b: number;\n    c: number;\n}\">obj</data-lsp>); // keys1\u3088\u308a\u4fdd\u5b88\u6027\u304c\u9ad8\u3044`\n```", "```\nts`type  <data-lsp lsp=\"type Obj = {\n    a: string;\n    b: string;\n    c: string;\n}\">Obj</data-lsp>  = { <data-lsp lsp=\"(property) a: string\">a</data-lsp>:  string; <data-lsp lsp=\"(property) b: string\">b</data-lsp>:  string; <data-lsp lsp=\"(property) c: string\">c</data-lsp>:  string };type  <data-lsp lsp=\"type Keys = keyof Obj\">Keys</data-lsp>  =  keyof  <data-lsp lsp=\"type Obj = {\n    a: string;\n    b: string;\n    c: string;\n}\">Obj</data-lsp>;//=> \"a\" | \"b\" | \"c\"`\n```", "```\nts`type <data-lsp lsp=\"type Obj = {\n    a: string;\n    b: string;\n    c: string;\n}\">Obj</data-lsp> = { <data-lsp lsp=\"(property) a: string\">a</data-lsp>:  string; <data-lsp lsp=\"(property) b: string\">b</data-lsp>:  string; <data-lsp lsp=\"(property) c: string\">c</data-lsp>:  string };type <data-lsp lsp=\"type Keys = keyof Obj\">Keys</data-lsp> =  keyof <data-lsp lsp=\"type Obj = {\n    a: string;\n    b: string;\n    c: string;\n}\">Obj</data-lsp>;//=> \"a\" | \"b\" | \"c\"`\n```"]