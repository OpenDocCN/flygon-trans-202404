["```\n(define (factorial n)\n  (if (= n 0)\n      1\n      (* n (factorial (- n 1))))) \n```", "```\n(define (factorial n)\n  (* n (factorial (- n 1))))\n```", "```\n(define (factorial n)\n  (if (= n 0)\n      1\n      (factorial n)))\n```", "```\n(define (factorial n)\n  (if (= n 0)\n      1\n      (* n (factorial (- n 1))))) \n```", "```\n(factorial 6)\n(* 6 (factorial 5))\n(* 6 (* 5 (factorial 4)))\n(* 6 (* 5 (* 4 (factorial 3))))\n(* 6 (* 5 (* 4 (* 3 (factorial 2)))))\n(* 6 (* 5 (* 4 (* 3 (* 2 (factorial 1))))))\n(* 6 (* 5 (* 4 (* 3 (* 2 (* 1 (factorial 0))))))) \n```", "```\n(* 6 (* 5 (* 4 (* 3 (* 2 (* 1 1)))))) \n```", "```\n(* 6 (* 5 (* 4 (* 3 (* 2 1)))))\n(* 6 (* 5 (* 4 (* 3 2))))\n(* 6 (* 5 (* 4 6)))\n(* 6 (* 5 24))\n(* 6 120)\n720 \n```", "```\n(define (fib n)\n  (cond ((= n 0) 0)\n        ((= n 1) 1)\n        (else (+ (fib (- n 1))\n                 (fib (- n 2)))))) \n```", "```\n(define (pigl wd)\n  (if (pl-done? wd)\n      (word wd 'ay)\n      (pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n  (vowel? (first wd)))\n\n(define (vowel? letter)\n  (member? letter '(a e i o u))) \n```", "```\n(define sent '(1 2 3 4 5)) \n```", "```\n(sum-sent '(1 2 3 4 5)) ==> (+ 1 (sum-sent '(2 3 4 5))) \n```", "```\n(+ (first sent) (sum-sent (bf sent))) \n```", "```\n(define (sum-sent sent)\n  (+ (first sent) (sum-sent (bf sent))))\n```", "```\n(define (sum-sent sent)\n  (if (empty? sent)\n      0\n      (+ (first sent) (sum-sent (bf sent))))) \n```", "```\n-> (count-ums '(today um we are going to um talk about the um combining method))\n3\n```", "```\n-> (countdown 10)\n'(10 9 8 7 6 5 4 3 2 1 blastoff!)\n-> (countdown 3)\n'(3 2 1 blastoff!)\n-> (countdown 1)\n'(1 blastoff!)\n-> (countdown 0)\n'blastoff!\n```"]