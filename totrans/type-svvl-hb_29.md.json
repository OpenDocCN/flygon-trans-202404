["```\n\u30b9\u30af\u30ea\u30d7\u30c8js`const  <data-lsp lsp=\"const foo: &quot;foo&quot;\">foo</data-lsp>  =  \"foo\";`\n```", "```\n\u30b9\u30af\u30ea\u30d7\u30c8js`const  <data-lsp lsp=\"const foo: &quot;foo&quot;\">foo</data-lsp>  =  \"foo\";`\n```", "```\n\u30e2\u30b8\u30e5\u30fc\u30ebjs`export  const  <data-lsp lsp=\"const foo: &quot;foo&quot;\">foo</data-lsp>  =  \"foo\";`\n```", "```\n\u30e2\u30b8\u30e5\u30fc\u30ebjs`export  const  <data-lsp lsp=\"const foo: &quot;foo&quot;\">foo</data-lsp>  =  \"foo\";`\n```", "```\njs`export  const  <data-lsp lsp=\"const publicValue: 1\">publicValue</data-lsp>  =  1;const  <data-lsp lsp=\"const privateValue: 2\">privateValue</data-lsp>  =  2;`\n```", "```\njs`export  const  <data-lsp lsp=\"const publicValue: 1\">publicValue</data-lsp>  =  1;const  <data-lsp lsp=\"const privateValue: 2\">privateValue</data-lsp>  =  2;`\n```", "```\njs`<data-lsp lsp=\"any\">foo</data-lsp> =  1; // \u672a\u5b9a\u7fa9\u306e\u5909\u6570foo\u3078\u306e\u4ee3\u5165ReferenceError: foo is not definedexport  const  <data-lsp lsp=\"const bar: any\">bar</data-lsp>  = <data-lsp lsp=\"any\">foo</data-lsp>;`\n```", "```\njs`<data-lsp lsp=\"any\">foo</data-lsp> =  1; // \u672a\u5b9a\u7fa9\u306e\u5909\u6570foo\u3078\u306e\u4ee3\u5165ReferenceError: foo is not definedexport  const  <data-lsp lsp=\"const bar: any\">bar</data-lsp>  = <data-lsp lsp=\"any\">foo</data-lsp>;`\n```", "```\nmodule.jsjs`<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8a55\u4fa1\u3057\u3066\u3044\u307e\u3059\");// \u3053\u306e\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u306f1\u56de\u3060\u3051export  const  <data-lsp lsp=\"const value: 1\">value</data-lsp>  =  1;`\n```", "```\nmodule.jsjs`<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8a55\u4fa1\u3057\u3066\u3044\u307e\u3059\");// \u3053\u306e\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u306f1\u56de\u3060\u3051export  const  <data-lsp lsp=\"const value: 1\">value</data-lsp>  =  1;`\n```", "```\nmain.jsjs`import  \"./module.js\";\"\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8a55\u4fa1\u3057\u3066\u3044\u307e\u3059\"import  \"./module.js\";import  \"./module.js\";`\n```", "```\nmain.jsjs`import  \"./module.js\";\"\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8a55\u4fa1\u3057\u3066\u3044\u307e\u3059\"import  \"./module.js\";import  \"./module.js\";`\n```", "```\n`<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/x.y.z/jquery.min.js\"></script>`\n```", "```\n`<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/x.y.z/jquery.min.js\"></script>`\n```", "```\n`<script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/x.y.z/jquery-ui.min.js\"></script>`\n```", "```\n`<script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/x.y.z/jquery-ui.min.js\"></script>`\n```", "```\nts`const  <data-lsp lsp=\"const package1: any\">package1</data-lsp>  =  <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"package1\");`\n```", "```\nts`const  <data-lsp lsp=\"const package1: any\">package1</data-lsp>  = <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"package1\");`\n```", "```\nts`const  <data-lsp lsp=\"const myPackage: any\">myPackage</data-lsp>  =  <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./MyPackage\");`\n```", "```\nts`const  <data-lsp lsp=\"const myPackage: any\">myPackage</data-lsp>  = <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./MyPackage\");`\n```", "```\nincrement.jsts`<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nincrement.jsts`<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nindex.jsts`const  <data-lsp lsp=\"const increment: any\">increment</data-lsp>  =  <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./increment\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const increment: any\">increment</data-lsp>(3));`\n```", "```\nindex.jsts`const  <data-lsp lsp=\"const increment: any\">increment</data-lsp>  = <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./increment\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const increment: any\">increment</data-lsp>(3));`\n```", "```\ndayOfWeek.jsts`<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Monday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Tuesday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Wednesday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Thursday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Friday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Saturday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Sunday\";`\n```", "```\ndayOfWeek.jsts`<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Monday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Tuesday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Wednesday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Thursday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Friday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Saturday\";<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  =  \"Sunday\";`\n```", "```\nindex.jsts`const  <data-lsp lsp=\"const day: any\">day</data-lsp>  =  <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./dayOfWeek\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const day: any\">day</data-lsp>);'Sunday'`\n```", "```\nindex.jsts`const  <data-lsp lsp=\"const day: any\">day</data-lsp>  = <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./dayOfWeek\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const day: any\">day</data-lsp>);'Sunday'`\n```", "```\nutil.jsts`<data-lsp lsp=\"var exports: any\">exports</data-lsp>.<data-lsp lsp=\"any\">increment</data-lsp>  = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nutil.jsts`<data-lsp lsp=\"var exports: any\">exports</data-lsp>.<data-lsp lsp=\"any\">increment</data-lsp> = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nindex.jsts`const  <data-lsp lsp=\"const util: any\">util</data-lsp>  =  <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./util\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const util: any\">util</data-lsp>.<data-lsp lsp=\"any\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`const  <data-lsp lsp=\"const util: any\">util</data-lsp>  = <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./util\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const util: any\">util</data-lsp>.<data-lsp lsp=\"any\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`const { <data-lsp lsp=\"const increment: any\">increment</data-lsp> } =  <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./util\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const increment: any\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`const { <data-lsp lsp=\"const increment: any\">increment</data-lsp> } = <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./util\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const increment: any\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`const { <data-lsp lsp=\"const increment: any\">increment</data-lsp> } =  <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./other\");const { <data-lsp lsp=\"any\">increment</data-lsp>: <data-lsp lsp=\"const inc: any\">inc</data-lsp> } =  <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./util\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const inc: any\">inc</data-lsp>(3));4`\n```", "```\nindex.jsts`const { <data-lsp lsp=\"const increment: any\">increment</data-lsp> } = <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./other\");const { <data-lsp lsp=\"any\">increment</data-lsp>: <data-lsp lsp=\"const inc: any\">inc</data-lsp> } = <data-lsp lsp=\"var require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./util\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const inc: any\">inc</data-lsp>(3));4`\n```", "```\nts`import  *  as package1 from  \"package1\";import package2 from  \"package2\";`\n```", "```\nts`import  *  as package1 from  \"package1\";import package2 from  \"package2\";`\n```", "```\nincrement.jsts`export  default (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nincrement.jsts`export  default (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nindex.jsts`import <data-lsp lsp=\"import increment\">increment</data-lsp> from  \"./increment\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) increment(i: number): number\nimport increment\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`import <data-lsp lsp=\"import increment\">increment</data-lsp> from  \"./increment\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) increment(i: number): number\nimport increment\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`import  *  as <data-lsp lsp=\"import increment\">increment</data-lsp> from  \"./increment\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"import increment\">increment</data-lsp>.<data-lsp lsp=\"(property) default: (i: number) => number\">default</data-lsp>(3));4`\n```", "```\nindex.jsts`import  *  as <data-lsp lsp=\"import increment\">increment</data-lsp> from  \"./increment\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"import increment\">increment</data-lsp>.<data-lsp lsp=\"(property) default: (i: number) => number\">default</data-lsp>(3));4`\n```", "```\nutil.jsts`export  const  <data-lsp lsp=\"const increment: (i: any) => any\">increment</data-lsp>  = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nutil.jsts`export  const <data-lsp lsp=\"const increment: (i: any) => any\">increment</data-lsp> = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nutil.jsts`const  <data-lsp lsp=\"const increment: (i: any) => any\">increment</data-lsp>  = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;export { <data-lsp lsp=\"(alias) const increment: (i: any) => any\nexport increment\">increment</data-lsp> };`\n```", "```\nutil.jsts`const <data-lsp lsp=\"const increment: (i: any) => any\">increment</data-lsp> = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;export { <data-lsp lsp=\"(alias) const increment: (i: any) => any\nexport increment\">increment</data-lsp> };`\n```", "```\nindex.jsts`import { <data-lsp lsp=\"(alias) const increment: (i: number) => number\nimport increment\">increment</data-lsp> } from  \"./util\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) increment(i: number): number\nimport increment\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`import { <data-lsp lsp=\"(alias) const increment: (i: number) => number\nimport increment\">increment</data-lsp> } from  \"./util\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) increment(i: number): number\nimport increment\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`import  *  as <data-lsp lsp=\"import util\">util</data-lsp> from  \"./util\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"import util\">util</data-lsp>.<data-lsp lsp=\"const increment: (i: number) => number\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`import  *  as <data-lsp lsp=\"import util\">util</data-lsp> from  \"./util\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"import util\">util</data-lsp>.<data-lsp lsp=\"const increment: (i: number) => number\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`import { <data-lsp lsp=\"const increment: (i: number) => number\">increment</data-lsp> as <data-lsp lsp=\"(alias) const inc: (i: number) => number\nimport inc\">inc</data-lsp> } from  \"./util\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) inc(i: number): number\nimport inc\">inc</data-lsp>(3));4`\n```", "```\nindex.jsts`import { <data-lsp lsp=\"const increment: (i: number) => number\">increment</data-lsp> as <data-lsp lsp=\"(alias) const inc: (i: number) => number\nimport inc\">inc</data-lsp> } from  \"./util\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) inc(i: number): number\nimport inc\">inc</data-lsp>(3));4`\n```", "```\nindex.jsts`import(\"./util\").<data-lsp lsp=\"(method) Promise<typeof import(&quot;/vercel/path0/util&quot;)>.then<void, never>(onfulfilled?: ((value: typeof import(&quot;/vercel/path0/util&quot;)) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>\">then</data-lsp>(({ <data-lsp lsp=\"(parameter) increment: (i: number) => number\">increment</data-lsp> }) => {  <data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(parameter) increment: (i: number) => number\">increment</data-lsp>(3));  // @log: 4});`\n```", "```\nindex.jsts`import(\"./util\").<data-lsp lsp=\"(method) Promise<typeof import(&quot;/vercel/path0/util&quot;)>.then<void, never>(onfulfilled?: ((value: typeof import(&quot;/vercel/path0/util&quot;)) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>\">then</data-lsp>(({ <data-lsp lsp=\"(parameter) increment: (i: number) => number\">increment</data-lsp> }) => {  <data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(parameter) increment: (i: number) => number\">increment</data-lsp>(3));  // @log: 4});`\n```", "```\nincrement.mjsts`export  const  <data-lsp lsp=\"const increment: (i: any) => any\">increment</data-lsp>  = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nincrement.mjsts`export  const <data-lsp lsp=\"const increment: (i: any) => any\">increment</data-lsp> = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nindex.mjsts`import { <data-lsp lsp=\"import increment\">increment</data-lsp> } from  \"./increment.mjs\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"import increment\">increment</data-lsp>(3));4`\n```", "```\nindex.mjsts`import { <data-lsp lsp=\"import increment\">increment</data-lsp> } from  \"./increment.mjs\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"import increment\">increment</data-lsp>(3));4`\n```", "```\njson`{  \"name\":  \"YYTS\",  \"version\":  \"1.0.0\",  \"main\":  \"index.js\",  \"type\":  \"module\",  \"license\":  \"Apache-2.0\"}`\n```", "```\njson`{  \"name\":  \"YYTS\",  \"version\":  \"1.0.0\",  \"main\":  \"index.js\",  \"type\":  \"module\",  \"license\":  \"Apache-2.0\"}`\n```", "```\nincrement.jsts`export  const  <data-lsp lsp=\"const increment: (i: any) => any\">increment</data-lsp>  = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nincrement.jsts`export  const <data-lsp lsp=\"const increment: (i: any) => any\">increment</data-lsp> = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nindex.jsts`import { <data-lsp lsp=\"(alias) const increment: (i: any) => any\nimport increment\">increment</data-lsp> } from  \"./increment.js\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) increment(i: any): any\nimport increment\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`import { <data-lsp lsp=\"(alias) const increment: (i: any) => any\nimport increment\">increment</data-lsp> } from  \"./increment.js\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) increment(i: any): any\nimport increment\">increment</data-lsp>(3));4`\n```", "```\nincrement.cjsts`<data-lsp lsp=\"var exports: any\">exports</data-lsp>.<data-lsp lsp=\"any\">increment</data-lsp>  = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nincrement.cjsts`<data-lsp lsp=\"var exports: any\">exports</data-lsp>.<data-lsp lsp=\"any\">increment</data-lsp> = (<data-lsp lsp=\"(parameter) i: any\">i</data-lsp>) => <data-lsp lsp=\"(parameter) i: any\">i</data-lsp> +  1;`\n```", "```\nindex.jsts`import { <data-lsp lsp=\"(alias) (method) createRequire(path: string | URL): NodeRequire\nimport createRequire\">createRequire</data-lsp> } from  \"module\";const  <data-lsp lsp=\"const require: NodeRequire\">require</data-lsp>  =  <data-lsp lsp=\"(alias) createRequire(path: string | URL): NodeRequire\nimport createRequire\">createRequire</data-lsp>(import.<data-lsp lsp=\"\" style=\"border-bottom:solid 2px lightgrey\">meta</data-lsp>.<data-lsp lsp=\"(property) ImportMeta.url: string\">url</data-lsp>);const { <data-lsp lsp=\"const increment: any\">increment</data-lsp> } =  <data-lsp lsp=\"const require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./increment.cjs\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const increment: any\">increment</data-lsp>(3));4`\n```", "```\nindex.jsts`import { <data-lsp lsp=\"(alias) (method) createRequire(path: string | URL): NodeRequire\nimport createRequire\">createRequire</data-lsp> } from  \"module\";const  <data-lsp lsp=\"const require: NodeRequire\">require</data-lsp>  = <data-lsp lsp=\"(alias) createRequire(path: string | URL): NodeRequire\nimport createRequire\">createRequire</data-lsp>(import.<data-lsp lsp=\"\" style=\"border-bottom:solid 2px lightgrey\">meta</data-lsp>.<data-lsp lsp=\"(property) ImportMeta.url: string\">url</data-lsp>);const { <data-lsp lsp=\"const increment: any\">increment</data-lsp> } = <data-lsp lsp=\"const require: NodeRequire\n(id: string) => any\">require</data-lsp>(\"./increment.cjs\");<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"const increment: any\">increment</data-lsp>(3));4`\n```", "```\ntaxIncluded.tsts`export  default (<data-lsp lsp=\"(parameter) price: any\">price</data-lsp>) => <data-lsp lsp=\"(parameter) price: any\">price</data-lsp> *  1.08;`\n```", "```\ntaxIncluded.tsts`export  default (<data-lsp lsp=\"(parameter) price: any\">price</data-lsp>) => <data-lsp lsp=\"(parameter) price: any\">price</data-lsp> *  1.08;`\n```", "```\nindex.tsts`import <data-lsp lsp=\"import taxIncluded\">taxIncluded</data-lsp> from  \"./taxIncluded\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) taxIncluded(i: number): number\nimport taxIncluded\">taxIncluded</data-lsp>(100));108`\n```", "```\nindex.tsts`import <data-lsp lsp=\"import taxIncluded\">taxIncluded</data-lsp> from  \"./taxIncluded\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) taxIncluded(i: number): number\nimport taxIncluded\">taxIncluded</data-lsp>(100));108`\n```", "```\ntaxIncluded.tsts`export  default (<data-lsp lsp=\"(parameter) price: any\">price</data-lsp>) => <data-lsp lsp=\"(parameter) price: any\">price</data-lsp> *  1.1;`\n```", "```\ntaxIncluded.tsts`export  default (<data-lsp lsp=\"(parameter) price: any\">price</data-lsp>) => <data-lsp lsp=\"(parameter) price: any\">price</data-lsp> *  1.1;`\n```", "```\ntaxIncluded.tsts`export  const  <data-lsp lsp=\"const taxIncludedAsOf2014: (price: any) => number\">taxIncludedAsOf2014</data-lsp>  = (<data-lsp lsp=\"(parameter) price: any\">price</data-lsp>) => <data-lsp lsp=\"(parameter) price: any\">price</data-lsp> *  1.08;`\n```", "```\ntaxIncluded.tsts`export  const <data-lsp lsp=\"const taxIncludedAsOf2014: (price: any) => number\">taxIncludedAsOf2014</data-lsp> = (<data-lsp lsp=\"(parameter) price: any\">price</data-lsp>) => <data-lsp lsp=\"(parameter) price: any\">price</data-lsp> *  1.08;`\n```", "```\nindex.tsts`import { <data-lsp lsp=\"(alias) const taxIncludedAsOf2014: (i: number) => number\nimport taxIncludedAsOf2014\">taxIncludedAsOf2014</data-lsp> } from  \"./taxIncluded\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) taxIncludedAsOf2014(i: number): number\nimport taxIncludedAsOf2014\">taxIncludedAsOf2014</data-lsp>(100));108`\n```", "```\nindex.tsts`import { <data-lsp lsp=\"(alias) const taxIncludedAsOf2014: (i: number) => number\nimport taxIncludedAsOf2014\">taxIncludedAsOf2014</data-lsp> } from  \"./taxIncluded\";<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) taxIncludedAsOf2014(i: number): number\nimport taxIncludedAsOf2014\">taxIncludedAsOf2014</data-lsp>(100));108`\n```", "```\ntaxIncluded.tsts`export  const  <data-lsp lsp=\"const taxIncludedAsOf2019: (price: any) => number\">taxIncludedAsOf2019</data-lsp>  = (<data-lsp lsp=\"(parameter) price: any\">price</data-lsp>) => <data-lsp lsp=\"(parameter) price: any\">price</data-lsp> *  1.1;`\n```", "```\ntaxIncluded.tsts`export  const <data-lsp lsp=\"const taxIncludedAsOf2019: (price: any) => number\">taxIncludedAsOf2019</data-lsp> = (<data-lsp lsp=\"(parameter) price: any\">price</data-lsp>) => <data-lsp lsp=\"(parameter) price: any\">price</data-lsp> *  1.1;`\n```", "```\nindex.tsts`import { <data-lsp lsp=\"(alias) const taxIncludedAsOf2019: (i: number) => number\nimport taxIncludedAsOf2019\">taxIncludedAsOf2019</data-lsp> } from  \"./taxIncluded\";// this is no longer available.// console.log(taxIncludedAsOf2014(100));<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) taxIncludedAsOf2019(i: number): number\nimport taxIncludedAsOf2019\">taxIncludedAsOf2019</data-lsp>(100));110`\n```", "```\nindex.tsts`import { <data-lsp lsp=\"(alias) const taxIncludedAsOf2019: (i: number) => number\nimport taxIncludedAsOf2019\">taxIncludedAsOf2019</data-lsp> } from  \"./taxIncluded\";// this is no longer available.// console.log(taxIncludedAsOf2014(100));<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(<data-lsp lsp=\"(alias) taxIncludedAsOf2019(i: number): number\nimport taxIncludedAsOf2019\">taxIncludedAsOf2019</data-lsp>(100));110`\n```"]