["```\nfunction taskA() {\n    console.log(\"\u30bf\u30b9\u30afA\u3092\u5b9f\u884c at \" + Date.now());\n}\nfunction taskB() {\n    console.log(\"\u30bf\u30b9\u30afB\u3092\u5b9f\u884c at \" + Date.now());\n}\n// \u6307\u5b9a\u3057\u305f`timeout`\u30df\u30ea\u79d2\u7d4c\u904e\u3059\u308b\u307e\u3067\u540c\u671f\u7684\u306b\u30d6\u30ed\u30c3\u30af\u3059\u308b\u95a2\u6570\nfunction blockTime(timeout) {\n    // Date.now()\u306f\u73fe\u5728\u306e\u6642\u9593\u3092Unix\u6642\u9593\uff081970\u5e741\u67081\u65e5\u5348\u524d0\u66420\u52060\u79d2\u304b\u3089\u7d4c\u904e\u3057\u305f\u6642\u9593\uff09\u306e\u30df\u30ea\u79d2\u3092\u8fd4\u3059\n    const startTime = Date.now();\n    // `timeout`\u30df\u30ea\u79d2\u7d4c\u904e\u3059\u308b\u307e\u3067\u7121\u9650\u30eb\u30fc\u30d7\u3092\u3059\u308b\n    while (true) {\n        const diffTime = Date.now() - startTime;\n        if (diffTime >= timeout) {\n            return; // \u6307\u5b9a\u6642\u9593\u7d4c\u904e\u3057\u305f\u3089\u95a2\u6570\u306e\u5b9f\u884c\u3092\u7d42\u4e86\n        }\n    }\n}\ntaskA();\nblockTime(1000); // \u4ed6\u306e\u51e6\u7406\u30921000\u30df\u30ea\u79d2\uff081\u79d2\u9593\uff09\u30d6\u30ed\u30c3\u30af\u3059\u308b\ntaskB(); \n```", "```\nsetTimeout(\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570, delay); \n```", "```\nfunction taskA() {\n    console.log(\"\u30bf\u30b9\u30afA\u3092\u5b9f\u884c at \" + Date.now());\n}\nfunction taskB() {\n    console.log(\"\u30bf\u30b9\u30afB\u3092\u5b9f\u884c at \" + Date.now());\n}\nfunction taskAsync() {\n    console.log(\"\u975e\u540c\u671f\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c at \" + Date.now());\n}\n\ntaskA();\nsetTimeout(() => {\n    taskAsync();\n}, 1000);\ntaskB(); \n```", "```\nfunction taskA() {\n    console.log(\"\u30bf\u30b9\u30afA\u3092\u5b9f\u884c at \" + Date.now());\n}\nfunction taskB() {\n    console.log(\"\u30bf\u30b9\u30afB\u3092\u5b9f\u884c at \" + Date.now());\n}\nfunction taskAsync() {\n    console.log(\"\u975e\u540c\u671f\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c at \" + Date.now());\n}\n// \u6307\u5b9a\u3057\u305f`timeout`\u30df\u30ea\u79d2\u7d4c\u904e\u3059\u308b\u307e\u3067\u540c\u671f\u7684\u306b\u30d6\u30ed\u30c3\u30af\u3059\u308b\u95a2\u6570\nfunction blockTime(timeout) {\n    const startTime = Date.now();\n    while (true) {\n        const diffTime = Date.now() - startTime;\n        if (diffTime >= timeout) {\n            return; // \u6307\u5b9a\u6642\u9593\u7d4c\u904e\u3057\u305f\u3089\u95a2\u6570\u306e\u5b9f\u884c\u3092\u7d42\u4e86\n        }\n    }\n}\n\nconst startTime = Date.now();\ntaskA();\n// 10\u30df\u30ea\u79d2\u5f8c\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u30bf\u30a4\u30de\u30fc\u306b\u767b\u9332\u3059\u308b\nsetTimeout(() => {\n    const endTime = Date.now();\n    taskAsync();\n    console.log(`\u975e\u540c\u671f\u51e6\u7406\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u547c\u3070\u308c\u308b\u307e\u3067${endTime - startTime}\u30df\u30ea\u79d2\u304b\u304b\u308a\u307e\u3057\u305f`);\n}, 10);\nblockTime(1000); // 1\u79d2\u9593\u51e6\u7406\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\ntaskB(); \n```", "```\ntry {\n    throw new Error(\"\u540c\u671f\u7684\u306a\u30a8\u30e9\u30fc\");\n} catch (error) {\n    console.log(\"\u540c\u671f\u7684\u306a\u30a8\u30e9\u30fc\u3092\u30ad\u30e3\u30c3\u30c1\u3067\u304d\u308b\");\n}\nconsole.log(\"\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u3059\"); \n```", "```\ntry {\n    setTimeout(() => {\n        throw new Error(\"\u975e\u540c\u671f\u7684\u306a\u30a8\u30e9\u30fc\");\n    }, 10);\n} catch (error) {\n    // \u975e\u540c\u671f\u30a8\u30e9\u30fc\u306f\u30ad\u30e3\u30c3\u30c1\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n}\nconsole.log(\"\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u3059\"); \n```", "```\n// \u975e\u540c\u671f\u51e6\u7406\u306e\u5916\nsetTimeout(() => {\n    // \u975e\u540c\u671f\u51e6\u7406\u306e\u4e2d\n    try {\n        throw new Error(\"\u30a8\u30e9\u30fc\");\n    } catch (error) {\n        console.log(\"\u30a8\u30e9\u30fc\u3092\u30ad\u30e3\u30c3\u30c1\u3067\u304d\u308b\");\n    }\n}, 10);\nconsole.log(\"\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u3059\"); \n```", "```\n// asyncPromiseTask\u95a2\u6570\u306f\u3001Promise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\nfunction asyncPromiseTask() {\n    return new Promise((resolve, reject) => {\n        // \u3055\u307e\u3056\u307e\u306a\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046\n        // \u975e\u540c\u671f\u51e6\u7406\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306f\u3001resolve\u3092\u547c\u3076\n        // \u975e\u540c\u671f\u51e6\u7406\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u3001reject\u3092\u547c\u3076\n    });\n}\n// asyncPromiseTask\u95a2\u6570\u306e\u975e\u540c\u671f\u51e6\u7406\u304c\u6210\u529f\u3057\u305f\u6642\u3001\u5931\u6557\u3057\u305f\u6642\u306b\u547c\u3070\u308c\u308b\u51e6\u7406\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\u3057\u3066\u767b\u9332\u3059\u308b\nasyncPromiseTask().then(()=> {\n    // \u975e\u540c\u671f\u51e6\u7406\u304c\u6210\u529f\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n}).catch(() => {\n    // \u975e\u540c\u671f\u51e6\u7406\u304c\u5931\u6557\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n}); \n```", "```\nconst executor = (resolve, reject) => {\n    // \u975e\u540c\u671f\u306e\u51e6\u7406\u304c\u6210\u529f\u3057\u305f\u3068\u304d\u306fresolve\u3092\u547c\u3076\n    // \u975e\u540c\u671f\u306e\u51e6\u7406\u304c\u5931\u6557\u3057\u305f\u3068\u304d\u306freject\u3092\u547c\u3076\n};\nconst promise = new Promise(executor); \n```", "```\n// `Promise`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\nconst promise = new Promise((resolve, reject) => {\n    // \u975e\u540c\u671f\u306e\u51e6\u7406\u304c\u6210\u529f\u3057\u305f\u3068\u304d\u306fresolve()\u3092\u547c\u3076\n    // \u975e\u540c\u671f\u306e\u51e6\u7406\u304c\u5931\u6557\u3057\u305f\u3068\u304d\u306b\u306freject()\u3092\u547c\u3076\n});\nconst onFulfilled = () => {\n    console.log(\"resolve\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\");\n};\nconst onRejected = () => {\n    console.log(\"reject\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\");\n};\n// `then`\u30e1\u30bd\u30c3\u30c9\u3067\u6210\u529f\u6642\u3068\u5931\u6557\u6642\u306b\u547c\u3070\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\npromise.then(onFulfilled, onRejected); \n```", "```\n/**\n * 1000\u30df\u30ea\u79d2\u672a\u6e80\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u7591\u4f3c\u7684\u306b\u30c7\u30fc\u30bf\u53d6\u5f97\u3059\u308b\u95a2\u6570\n * \u6307\u5b9a\u3057\u305f`path`\u306b\u30c7\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u3001\u6210\u529f\u3068\u3057\u3066**Resolved**\u72b6\u614b\u306ePromise\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\n * \u6307\u5b9a\u3057\u305f`path`\u306b\u30c7\u30fc\u30bf\u304c\u306a\u3044\u5834\u5408\u3001\u5931\u6557\u3068\u3057\u3066**Rejected**\u72b6\u614b\u306ePromise\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\n */\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/success\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n// `then`\u30e1\u30bd\u30c3\u30c9\u3067\u6210\u529f\u6642\u3068\u5931\u6557\u6642\u306b\u547c\u3070\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\n// /success/data \u306e\u30ea\u30bd\u30fc\u30b9\u306f\u5b58\u5728\u3059\u308b\u306e\u3067\u6210\u529f\u3057onFulfilled\u304c\u547c\u3070\u308c\u308b\ndummyFetch(\"/success/data\").then(function onFulfilled(response) {\n    console.log(response); // => { body: \"Response body of /success/data\" }\n}, function onRejected(error) {\n    // \u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n});\n// /failure/data \u306e\u30ea\u30bd\u30fc\u30b9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067onRejected\u304c\u547c\u3070\u308c\u308b\ndummyFetch(\"/failure/data\").then(function onFulfilled(response) {\n    // \u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n}, function onRejected(error) {\n    console.error(error); // Error: \"NOT FOUND\"\n}); \n```", "```\nfunction delay(timeoutMs) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, timeoutMs);\n    });\n}\n// `then`\u30e1\u30bd\u30c3\u30c9\u3067\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3060\u3051\u3092\u767b\u9332\ndelay(10).then(() => {\n    console.log(\"10\u30df\u30ea\u79d2\u5f8c\u306b\u547c\u3070\u308c\u308b\");\n}); \n```", "```\nfunction errorPromise(message) {\n    return new Promise((resolve, reject) => {\n        reject(new Error(message));\n    });\n}\n// \u975e\u63a8\u5968: `then`\u30e1\u30bd\u30c3\u30c9\u3067\u5931\u6557\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3060\u3051\u3092\u767b\u9332\nerrorPromise(\"then\u3067\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\").then(undefined, (error) => {\n    console.log(error.message); // => \"then\u3067\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\"\n});\n// \u63a8\u5968: `catch`\u30e1\u30bd\u30c3\u30c9\u3067\u5931\u6557\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\nerrorPromise(\"catch\u3067\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\").catch(error => {\n    console.log(error.message); // => \"catch\u3067\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\"\n}); \n```", "```\nfunction throwPromise() {\n    return new Promise((resolve, reject) => {\n        // Promise\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u4e2d\u3067\u4f8b\u5916\u306f\u81ea\u52d5\u7684\u306b\u30ad\u30e3\u30c3\u30c1\u3055\u308creject\u3092\u547c\u3076\n        throw new Error(\"\u4f8b\u5916\u304c\u767a\u751f\");\n        // \u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3001\u3053\u308c\u4ee5\u964d\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u51e6\u7406\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n    });\n}\n\nthrowPromise().catch(error => {\n    console.log(error.message); // => \"\u4f8b\u5916\u304c\u767a\u751f\"\n}); \n```", "```\nconst promise = new Promise((resolve, reject) => {\n    // \u975e\u540c\u671f\u3067resolve\u3059\u308b\n    setTimeout(() => {\n        resolve();\n        // \u3059\u3067\u306bresolve\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u7121\u8996\u3055\u308c\u308b\n        reject(new Error(\"\u30a8\u30e9\u30fc\"));\n    }, 16);\n});\npromise.then(() => {\n    console.log(\"Fulfilled\u3068\u306a\u3063\u305f\");\n}, (error) => {\n    // \u3053\u306e\u884c\u306f\u547c\u3073\u51fa\u3055\u308c\u306a\u3044\n}); \n```", "```\nconst promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        resolve();\n        resolve(); // \u4e8c\u5ea6\u76ee\u4ee5\u964d\u306eresolve\u3084reject\u306f\u7121\u8996\u3055\u308c\u308b\n    }, 16);\n});\npromise.then(() => {\n    console.log(\"\u6700\u521d\u306eresolve\u6642\u306b\u4e00\u5ea6\u3060\u3051\u547c\u3070\u308c\u308b\");\n}, (error) => {\n    // \u3053\u306e\u884c\u306f\u547c\u3073\u51fa\u3055\u308c\u306a\u3044\n}); \n```", "```\nconst fulfilledPromise = Promise.resolve(); \n```", "```\n// const fulfilledPromise = Promise.resolve(); \u3068\u540c\u3058\u610f\u5473\nconst fulfilledPromise = new Promise((resolve) => {\n    resolve();\n}); \n```", "```\n// `resolve(42)`\u3055\u308c\u305f`Promise`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\nconst fulfilledPromise = Promise.resolve(42);\nfulfilledPromise.then(value => {\n    console.log(value); // => 42\n}); \n```", "```\nconst promise = Promise.resolve();\npromise.then(() => {\n    console.log(\"2\\. \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\");\n});\nconsole.log(\"1\\. \u540c\u671f\u7684\u306a\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\"); \n```", "```\nconst promise = new Promise((resolve) => {\n    console.log(\"1\\. resolve\u3057\u307e\u3059\");\n    resolve();\n});\npromise.then(() => {\n    console.log(\"3\\. \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\");\n});\nconsole.log(\"2\\. \u540c\u671f\u7684\u306a\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\"); \n```", "```\nconst rejectedPromise = Promise.reject(new Error(\"\u30a8\u30e9\u30fc\")); \n```", "```\nconst rejectedPromise = new Promise((resolve, reject) => {\n    reject(new Error(\"\u30a8\u30e9\u30fc\"));\n}); \n```", "```\nPromise.reject(new Error(\"\u30a8\u30e9\u30fc\")).catch(() => {\n    console.log(\"2\\. \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\");\n});\nconsole.log(\"1\\. \u540c\u671f\u7684\u306a\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\"); \n```", "```\n// Promise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\nPromise.resolve()\n    // then\u30e1\u30bd\u30c3\u30c9\u306f\u65b0\u3057\u3044`Promise`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\n    .then(() => {\n        console.log(1);\n    })\n    .then(() => {\n        console.log(2);\n    }); \n```", "```\n// Promise\u30c1\u30a7\u30fc\u30f3\u3092\u5909\u6570\u306b\u5165\u308c\u305f\u5834\u5408\nconst firstPromise = Promise.resolve();\nconst secondPromise = firstPromise.then(() => {\n    console.log(1);\n});\nconst thirdPromise = secondPromise.then(() => {\n    console.log(2);\n});\n// \u305d\u308c\u305e\u308c\u65b0\u3057\u3044Promise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4f5c\u6210\u3055\u308c\u308b\nconsole.log(firstPromise === secondPromise); // => false\nconsole.log(secondPromise === thirdPromise); // => false \n```", "```\n// \u30e9\u30f3\u30c0\u30e0\u3067Fulfilled\u307e\u305f\u306fRejected\u306e`Promise`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u95a2\u6570\nfunction asyncTask() {\n    return Math.random() > 0.5\n        ? Promise.resolve(\"\u6210\u529f\")\n        : Promise.reject(new Error(\"\u5931\u6557\"));\n}\n\n// asyncTask\u95a2\u6570\u306f\u65b0\u3057\u3044`Promise`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\nasyncTask()\n    // then\u30e1\u30bd\u30c3\u30c9\u306f\u65b0\u3057\u3044`Promise`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\n    .then(function onFulfilled(value) {\u3000\n        console.log(value); // => \"\u6210\u529f\"\n    })\n    // catch\u30e1\u30bd\u30c3\u30c9\u306f\u65b0\u3057\u3044`Promise`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\n    .catch(function onRejected(error) {\n        console.log(error.message); // => \"\u5931\u6557\"\n    }); \n```", "```\n// Rejected\u306aPromise\u306f\u6b21\u306e\u5931\u6557\u6642\u306e\u51e6\u7406\u307e\u3067\u30b9\u30ad\u30c3\u30d7\u3059\u308b\nconst rejectedPromise = Promise.reject(new Error(\"\u5931\u6557\"));\nrejectedPromise.then(() => {\n    // \u3053\u306ethen\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306f\u547c\u3073\u51fa\u3055\u308c\u307e\u305b\u3093\n}).then(() => {\n    // \u3053\u306ethen\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306f\u547c\u3073\u51fa\u3055\u308c\u307e\u305b\u3093\n}).catch(error => {\n    console.log(error.message); // => \"\u5931\u6557\"\n}); \n```", "```\nPromise.resolve().then(() => {\n    // \u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3001then\u30e1\u30bd\u30c3\u30c9\u306fRejected\u306aPromise\u3092\u8fd4\u3059\n    throw new Error(\"\u4f8b\u5916\");\n}).then(() => {\n    // \u3053\u306ethen\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306f\u547c\u3073\u51fa\u3055\u308c\u307e\u305b\u3093\n}).catch(error => {\n    console.log(error.message); // => \"\u4f8b\u5916\"\n}); \n```", "```\nPromise.reject(new Error(\"\u30a8\u30e9\u30fc\")).catch(error => {\n    console.error(error); // Error: \u30a8\u30e9\u30fc\n}).then(() => {\n    console.log(\"then\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\");\n}); \n```", "```\nPromise.resolve(1).then((value) => {\n    console.log(value); // => 1\n    return value * 2;\n}).then(value => {\n    console.log(value); // => 2\n    return value * 2;\n}).then(value => {\n    console.log(value); // => 4\n    // \u5024\u3092\u8fd4\u3055\u306a\u3044\u5834\u5408\u306f undefined \u3092\u8fd4\u3059\u306e\u3068\u540c\u3058\n}).then(value => {\n    console.log(value); // => undefined\n}); \n```", "```\nPromise.reject(new Error(\"\u5931\u6557\")).catch(error => {\n    // \u4e00\u5ea6catch\u3059\u308c\u3070\u3001\u6b21\u306b\u547c\u3070\u308c\u308b\u306e\u306f\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n    return 1;\n}).then(value => {\n    console.log(value); // => 1\n    return value * 2;\n}).then(value => {\n    console.log(value); // => 2\n}); \n```", "```\nPromise.resolve().then(function onFulfilledA() {\n    return Promise.reject(new Error(\"\u5931\u6557\"));\n}).then(function onFulfilledB() {\n    // onFulfilledB\u306f\u547c\u3073\u51fa\u3055\u308c\u307e\u305b\u3093\n}).catch(function onRejected(error) {\n    console.log(error.message); // => \"\u5931\u6557\"\n}).then(function onFulfilledC() {\n    console.log(\"onFulfilledC\u306f\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\");\n}); \n```", "```\nfunction main() {\n    return Promise.reject(new Error(\"\u30a8\u30e9\u30fc\"));\n}\n// main\u306fRejected\u306aPromise\u3092\u8fd4\u3059\nmain().catch(error => {\n    // main\u3067\u767a\u751f\u3057\u305f\u30a8\u30e9\u30fc\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\n    console.error(error);\n    // Promise\u30c1\u30a7\u30fc\u30f3\u306f\u305d\u306e\u307e\u307e\u30a8\u30e9\u30fc\u3092\u7d99\u7d9a\u3055\u305b\u308b\n    return Promise.reject(error);\n}).then(() => {\n    // \u524d\u306ecatch\u3067Rejected\u306aPromise\u304c\u8fd4\u3055\u308c\u305f\u305f\u3081\u3001\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n}).catch(error => {\n    console.log(\"\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u304c\u5931\u6557\u3057\u305f\");\n}); \n```", "```\n// `promise`\u306b\u306fResolved\u307e\u305f\u306fRejected\u306aPromise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u30e9\u30f3\u30c0\u30e0\u3067\u5165\u308b\nconst promise = Math.random() < 0.5 ? Promise.resolve() : Promise.reject();\npromise.then(() => {\n    console.log(\"Promise\u306ethen\u30e1\u30bd\u30c3\u30c9\");\n}).catch((error) => {\n    console.log(\"Promise\u306ecatch\u30e1\u30bd\u30c3\u30c9\");\n}).finally(() => {\n    // \u6210\u529f\u3001\u5931\u6557\u3069\u3061\u3089\u306e\u5834\u5408\u3067\u3082\u547c\u3073\u51fa\u3055\u308c\u308b\n    console.log(\"Promise\u306efinally\u30e1\u30bd\u30c3\u30c9\");\n}); \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n// \u30ea\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u4e2d\u304b\u3069\u3046\u304b\u306e\u30d5\u30e9\u30b0\nlet isLoading = true;\ndummyFetch(\"/resource/A\").then(response => {\n    console.log(response);\n}).catch(error => {\n    console.error(error);\n}).finally(() => {\n    isLoading = false;\n    console.log(\"Promise\u306efinally\u30e1\u30bd\u30c3\u30c9\");\n}); \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n\nconst results = [];\n// Resource A\u3092\u53d6\u5f97\u3059\u308b\ndummyFetch(\"/resource/A\").then(response => {\n    results.push(response.body);\n    // Resource B\u3092\u53d6\u5f97\u3059\u308b\n    return dummyFetch(\"/resource/B\");\n}).then(response => {\n    results.push(response.body);\n}).then(() => {\n    console.log(results); // => [\"Response body of /resource/A\", \"Response body of /resource/B\"]\n}); \n```", "```\n// `timeoutMs`\u30df\u30ea\u79d2\u5f8c\u306bresolve\u3059\u308b\nfunction delay(timeoutMs) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(timeoutMs);\n        }, timeoutMs);\n    });\n}\nconst promise1 = delay(1);\nconst promise2 = delay(2);\nconst promise3 = delay(3);\n\nPromise.all([promise1, promise2, promise3]).then(function(values) {\n    console.log(values); // => [1, 2, 3]\n}); \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n\nconst fetchedPromise = Promise.all([\n    dummyFetch(\"/resource/A\"),\n    dummyFetch(\"/resource/B\")\n]);\n// fetchedPromise\u306e\u7d50\u679c\u3092Destructuring\u3067responseA, responseB\u306b\u4ee3\u5165\u3057\u3066\u3044\u308b\nfetchedPromise.then(([responseA, responseB]) => {\n    console.log(responseA.body); // => \"Response body of /resource/A\"\n    console.log(responseB.body); // => \"Response body of /resource/B\"\n}); \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n\nconst fetchedPromise = Promise.all([\n    dummyFetch(\"/resource/A\"),\n    dummyFetch(\"/not_found/B\") // B\u306f\u5b58\u5728\u3057\u306a\u3044\u305f\u3081\u5931\u6557\u3059\u308b\n]);\nfetchedPromise.then(([responseA, responseB]) => {\n    // \u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n}).catch(error => {\n    console.error(error); // Error: NOT FOUND\n}); \n```", "```\n// `timeoutMs`\u30df\u30ea\u79d2\u5f8c\u306bresolve\u3059\u308b\nfunction delay(timeoutMs) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(timeoutMs);\n        }, timeoutMs);\n    });\n}\n// 1\u3064\u3067\u3082resolve\u307e\u305f\u306freject\u3057\u305f\u6642\u70b9\u3067\u6b21\u306e\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\nconst racePromise = Promise.race([\n    delay(1),\n    delay(32),\n    delay(64),\n    delay(128)\n]);\nracePromise.then(value => {\n    // \u3082\u3063\u3068\u3082\u65e9\u304f\u5b8c\u4e86\u3059\u308b\u306e\u306f1\u30df\u30ea\u79d2\u5f8c\n    console.log(value); // => 1\n}); \n```", "```\n// `timeoutMs`\u30df\u30ea\u79d2\u5f8c\u306breject\u3059\u308b\nfunction timeout(timeoutMs) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            reject(new Error(`Timeout: ${timeoutMs}\u30df\u30ea\u79d2\u7d4c\u904e`));\n        }, timeoutMs);\n    });\n}\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n// 500\u30df\u30ea\u79d2\u4ee5\u5185\u306b\u53d6\u5f97\u3067\u304d\u306a\u3051\u308c\u3070\u5931\u6557\u6642\u306e\u51e6\u7406\u304c\u547c\u3070\u308c\u308b\nPromise.race([\n    dummyFetch(\"/resource/data\"),\n    timeout(500),\n]).then(response => {\n    console.log(response.body); // => \"Response body of /resource/data\"\n}).catch(error => {\n    console.log(error.message); // => \"Timeout: 500\u30df\u30ea\u79d2\u7d4c\u904e\"\n}); \n```", "```\nasync function doAsync() {\n    return \"\u5024\";\n}\n// doAsync\u95a2\u6570\u306fPromise\u3092\u8fd4\u3059\ndoAsync().then(value => {\n    console.log(value); // => \"\u5024\"\n}); \n```", "```\n// \u901a\u5e38\u306e\u95a2\u6570\u3067Promise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u308b\nfunction doAsync() {\n    return Promise.resolve(\"\u5024\");\n}\ndoAsync().then(value => {\n    console.log(value); // => \"\u5024\"\n}); \n```", "```\n// \u95a2\u6570\u5ba3\u8a00\u306eAsync Function\u7248\nasync function fn1() {}\n// \u95a2\u6570\u5f0f\u306eAsync Function\u7248\nconst fn2 = async function() {};\n// Arrow Function\u306eAsync Function\u7248\nconst fn3 = async() => {};\n// \u30e1\u30bd\u30c3\u30c9\u306e\u77ed\u7e2e\u8a18\u6cd5\u306eAsync Function\u7248\nconst obj = { async method() {} }; \n```", "```\n// 1\\. resolveFn\u306f\u5024\u3092\u8fd4\u3057\u3066\u3044\u308b\n// \u4f55\u3082return\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306fundefined\u3092\u8fd4\u3057\u305f\u306e\u3068\u540c\u3058\u6271\u3044\u3068\u306a\u308b\nasync function resolveFn() {\n    return \"\u8fd4\u308a\u5024\";\n}\nresolveFn().then(value => {\n    console.log(value); // => \"\u8fd4\u308a\u5024\"\n});\n\n// 2\\. rejectFn\u306fPromise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u308b\nasync function rejectFn() {\n    return Promise.reject(new Error(\"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\"));\n}\n\n// rejectFn\u306fRejected\u306aPromise\u3092\u8fd4\u3059\u306e\u3067catch\u3067\u304d\u308b\nrejectFn().catch(error => {\n    console.log(error.message); // => \"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\"\n});\n\n// 3\\. exceptionFn\u306f\u4f8b\u5916\u3092\u6295\u3052\u3066\u3044\u308b\nasync function exceptionFn() {\n    throw new Error(\"\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\");\n    // \u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u305f\u3081\u3001\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n}\n\n// Async Function\u3067\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068Rejected\u306aPromise\u304c\u8fd4\u3055\u308c\u308b\nexceptionFn().catch(error => {\n    console.log(error.message); // => \"\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\"\n}); \n```", "```\nasync function asyncMain() {\n    // Promise\u304cFulfilled\u307e\u305f\u306fRejected\u3068\u306a\u308b\u307e\u3067\u5f85\u3064\n    await Promise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9;\n    // Promise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u72b6\u614b\u304c\u5909\u308f\u3063\u305f\u3089\u51e6\u7406\u3092\u518d\u958b\u3059\u308b\n} \n```", "```\n// async function\u306f\u5fc5\u305aPromise\u3092\u8fd4\u3059\nasync function doAsync() {\n    // \u975e\u540c\u671f\u51e6\u7406\n}\nasync function asyncMain() {\n    // doAsync\u306e\u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u307e\u3064\n    await doAsync();\n    // \u6b21\u306e\u884c\u306fdoAsync\u306e\u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3055\u308c\u308b\u307e\u3067\u5b9f\u884c\u3055\u308c\u306a\u3044\n    console.log(\"\u3053\u306e\u884c\u306f\u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\");\n} \n```", "```\nasync function asyncMain() {\n    const value = await Promise.resolve(42);\n    console.log(value); // => 42\n}\nasyncMain(); // Promise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059 \n```", "```\nfunction asyncMain() {\n    return Promise.resolve(42).then(value => {\n        console.log(value); // => 42\n    });\n}\nasyncMain(); // Promise\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059 \n```", "```\nasync function asyncMain() {\n    // `await`\u5f0f\u3067\u8a55\u4fa1\u3057\u305f\u53f3\u8fba\u306ePromise\u304cRejected\u3068\u306a\u3063\u305f\u305f\u3081\u3001\u4f8b\u5916\u304cthrow\u3055\u308c\u308b\n    const value = await Promise.reject(new Error(\"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\"));\n    // await\u5f0f\u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u305f\u3081\u3001\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n}\n// Async Function\u306f\u81ea\u52d5\u7684\u306b\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3067\u304d\u308b\nasyncMain().catch(error => {\n    console.log(error.message); // => \"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\"\n}); \n```", "```\nasync function asyncMain() {\n    // await\u5f0f\u306e\u30a8\u30e9\u30fc\u306ftry...catch\u3067\u304d\u308b\n    try {\n        // `await`\u5f0f\u3067\u8a55\u4fa1\u3057\u305f\u53f3\u8fba\u306ePromise\u304cRejected\u3068\u306a\u3063\u305f\u305f\u3081\u3001\u4f8b\u5916\u304cthrow\u3055\u308c\u308b\n        const value = await Promise.reject(new Error(\"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\"));\n        // await\u5f0f\u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u305f\u3081\u3001\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n    } catch (error) {\n        console.log(error.message); // => \"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\"\n    }\n}\n// asyncMain\u306fResolved\u306aPromise\u3092\u8fd4\u3059\nasyncMain().catch(error => {\n    // \u3059\u3067\u306btry...catch\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n}); \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n// \u30ea\u30bd\u30fc\u30b9A\u3068\u30ea\u30bd\u30fc\u30b9B\u3092\u9806\u756a\u306b\u53d6\u5f97\u3059\u308b\nfunction fetchAB() {\n    const results = [];\n    return dummyFetch(\"/resource/A\").then(response => {\n        results.push(response.body);\n        return dummyFetch(\"/resource/B\");\n    }).then(response => {\n        results.push(response.body);\n        return results;\n    });\n}\n// \u30ea\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3057\u3066\u51fa\u529b\u3059\u308b\nfetchAB().then((results) => {\n    console.log(results); // => [\"Response body of /resource/A\", \"Response body of /resource/B\"]\n}); \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n// \u30ea\u30bd\u30fc\u30b9A\u3068\u30ea\u30bd\u30fc\u30b9B\u3092\u9806\u756a\u306b\u53d6\u5f97\u3059\u308b\nasync function fetchAB() {\n    const results = [];\n    const responseA = await dummyFetch(\"/resource/A\");\n    results.push(responseA.body);\n    const responseB = await dummyFetch(\"/resource/B\");\n    results.push(responseB.body);\n    return results;\n}\n// \u30ea\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3057\u3066\u51fa\u529b\u3059\u308b\nfetchAB().then((results) => {\n    console.log(results); // => [\"Response body of /resource/A\", \"Response body of /resource/B\"]\n}); \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n// \u8907\u6570\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u9806\u756a\u306b\u53d6\u5f97\u3059\u308b\nasync function fetchResources(resources) {\n    const results = [];\n    // for...of\u6587\u3067resources\u306e\u914d\u5217\u304b\u30891\u3064\u305a\u3064\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3066\u51e6\u7406\n    for (const resource of resources) {\n        // \u30eb\u30fc\u30d7\u5185\u3067\u975e\u540c\u671f\u51e6\u7406\u306e\u5b8c\u4e86\u3092\u5f85\u3063\u3066\u3044\u308b\n        const response = await dummyFetch(resource);\n        results.push(response.body);\n    }\n    // \u53cd\u5fa9\u51e6\u7406\u304c\u3059\u3079\u3066\u7d42\u308f\u3063\u305f\u3089\u7d50\u679c\u3092\u8fd4\u3059(\u8fd4\u308a\u5024\u3068\u306a\u308bPromise\u3092`results`\u3067resolve\u3059\u308b)\n    return results;\n}\n// \u53d6\u5f97\u3057\u305f\u3044\u30ea\u30bd\u30fc\u30b9\u306e\u30d1\u30b9\u914d\u5217\nconst resources = [\n    \"/resource/A\",\n    \"/resource/B\"\n];\n// \u30ea\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3057\u3066\u51fa\u529b\u3059\u308b\nfetchResources(resources).then((results) => {\n    console.log(results); // => [\"Response body of /resource/A\", \"Response body of /resource/B\"]\n}); \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n// \u8907\u6570\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u307e\u3068\u3081\u3066\u53d6\u5f97\u3059\u308b\nasync function fetchAllResources(resources) {\n    // \u305d\u308c\u305e\u308c\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3059\u308b\u975e\u540c\u671f\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\n    const promises = resources.map((resource) => {\n        return dummyFetch(resource);\n    });\n    // \u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u53d6\u5f97\u3067\u304d\u308b\u307e\u3067\u5f85\u3064\n    // Promise.all\u306f [ResponseA, ResponseB] \u306e\u3088\u3046\u306b\u7d50\u679c\u304c\u914d\u5217\u3068\u306a\u308b\n    const responses = await Promise.all(promises);\n    // \u53d6\u5f97\u3057\u305f\u7d50\u679c\u304b\u3089\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30dc\u30c7\u30a3\u3060\u3051\u3092\u53d6\u308a\u51fa\u3059\n    return responses.map((response) => {\n        return response.body;\n    });\n}\nconst resources = [\n    \"/resource/A\",\n    \"/resource/B\"\n];\n// \u30ea\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3057\u3066\u51fa\u529b\u3059\u308b\nfetchAllResources(resources).then((results) => {\n    console.log(results); // => [\"Response body of /resource/A\", \"Response body of /resource/B\"]\n}); \n```", "```\n// async\u3067\u306f\u306a\u3044\u95a2\u6570\u3067\u306f`await`\u5f0f\u306f\u5229\u7528\u3067\u304d\u306a\u3044\nfunction main(){\n    // SyntaxError: await is only valid in async functions\n    await Promise.resolve();\n} \n```", "```\nasync function asyncMain() {\n    // \u4e2d\u3067await\u3057\u3066\u3082\u3001Async Function\u306e\u5916\u5074\u306e\u51e6\u7406\u307e\u3067\u6b62\u307e\u308b\u308f\u3051\u3067\u306f\u306a\u3044\n    await new Promise((resolve) => {\n        setTimeout(resolve, 16);\n    });\n}\nconsole.log(\"1\\. asyncMain\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\");\n// Async Function\u306f\u5916\u304b\u3089\u898b\u308c\u3070\u5358\u306a\u308bPromise\u3092\u8fd4\u3059\u95a2\u6570\nasyncMain().then(() => {\n    console.log(\"3\\. asyncMain\u95a2\u6570\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\");\n});\n// Async Function\u306e\u5916\u5074\u306e\u51e6\u7406\u306f\u305d\u306e\u307e\u307e\u9032\u3080\nconsole.log(\"2\\. asyncMain\u95a2\u6570\u5916\u3067\u306f\u3001\u6b21\u306e\u884c\u304c\u540c\u671f\u7684\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\"); \n```", "```\nasync function fetchResources(resources) {\n    const results = [];\n    // Syntax Error\u3068\u306a\u308b\u4f8b\n    resources.forEach(function(resource) {\n        // Async Function\u3067\u306f\u306a\u3044\u30b9\u30b3\u30fc\u30d7\u3067`await`\u5f0f\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081Syntax Error\u3068\u306a\u308b\n        const response = await dummyFetch(resource);\n        results.push(response.body);\n    });\n    return results;\n} \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n// \u30ea\u30bd\u30fc\u30b9\u3092\u9806\u756a\u306b\u53d6\u5f97\u3059\u308b\nasync function fetchResources(resources) {\n    const results = [];\n    // \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092Async Function\u306b\u5909\u66f4\n    resources.forEach(async function(resource) {\n        // await\u5f0f\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n        const response = await dummyFetch(resource);\n        results.push(response.body);\n    });\n    return results;\n}\nconst resources = [\"/resource/A\", \"/resource/B\"];\n// \u30ea\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3057\u3066\u51fa\u529b\u3059\u308b\nfetchResources(resources).then((results) => {\n    // \u3057\u304b\u3057\u3001results\u306f\u7a7a\u306b\u306a\u3063\u3066\u3057\u307e\u3046\n    console.log(results); // => []\n}); \n```", "```\nfunction dummyFetch(path) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (path.startsWith(\"/resource\")) {\n                resolve({ body: `Response body of ${path}` });\n            } else {\n                reject(new Error(\"NOT FOUND\"));\n            }\n        }, 1000 * Math.random());\n    });\n}\n// \u30ea\u30bd\u30fc\u30b9\u3092\u9806\u756a\u306b\u53d6\u5f97\u3059\u308b\nasync function fetchResources(resources) {\n    const results = [];\n    console.log(\"1\\. fetchResources\u3092\u958b\u59cb\");\n    resources.forEach(async function(resource) {\n        console.log(`2\\. ${resource}\u306e\u53d6\u5f97\u958b\u59cb`);\n        const response = await dummyFetch(resource);\n        // `dummyFetch`\u304c\u5b8c\u4e86\u3059\u308b\u306e\u306f\u3001`fetchResources`\u95a2\u6570\u304c\u8fd4\u3057\u305fPromise\u304c\u89e3\u6c7a\u3055\u308c\u305f\u5f8c\n        console.log(`5\\. ${resource}\u306e\u53d6\u5f97\u5b8c\u4e86`);\n        results.push(response.body);\n    });\n    console.log(\"3\\. fetchResources\u3092\u7d42\u4e86\");\n    return results;\n}\nconst resources = [\"/resource/A\", \"/resource/B\"];\n// \u30ea\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3057\u3066\u51fa\u529b\u3059\u308b\nfetchResources(resources).then((results) => {\n    console.log(\"4\\. fetchResources\u306e\u7d50\u679c\u3092\u53d6\u5f97\");\n    console.log(results); // => []\n}); \n```", "```\n// \u3053\u306e\u30b3\u30fc\u30c9\u306fModule\u306e\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3067\u306e\u307f\u52d5\u4f5c\u3059\u308b\nconsole.log(\"\u5b9f\u884c\u958b\u59cb\");\nconst startTime = Date.now();\n// await\u3092\u4f7f\u3063\u30661\u79d2\u5f85\u3064\nawait new Promise(resolve => setTimeout(resolve, 1000));\nconsole.log(`\u5b9f\u884c\u7d42\u4e86: ${Date.now() - startTime}ms \u7d4c\u904e\u3057\u307e\u3057\u305f`); \n```", "```\n// await\u3092\u4f7f\u3046\u305f\u3081\u3060\u3051\u306b\u3001Async Function\u306e\u5373\u6642\u5b9f\u884c\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\n(async function() {\n    // await\u3092\u4f7f\u3046\u51e6\u7406\n    const result = await doAsyncTask();\n    // ...\n})(); \n```", "```\nfs.readFile(\"./example.txt\", (error, data) => {\n    if (error) {\n        // \u8aad\u307f\u8fbc\u307f\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\n    } else {\n        // \u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\n    }\n}); \n```", "```\n/**\n * 1000\u30df\u30ea\u79d2\u672a\u6e80\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u7591\u4f3c\u7684\u306b\u30c7\u30fc\u30bf\u53d6\u5f97\u3059\u308b\u95a2\u6570\n * \u6307\u5b9a\u3057\u305f`path`\u306b\u30c7\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u306f`callback(null, \u30ec\u30b9\u30dd\u30f3\u30b9)`\u3092\u547c\u3076\n * \u6307\u5b9a\u3057\u305f`path`\u306b\u30c7\u30fc\u30bf\u304c\u306a\u3044\u5834\u5408\u306f`callback(\u30a8\u30e9\u30fc)`\u3092\u547c\u3076\n */\nfunction dummyFetch(path, callback) {\n    setTimeout(() => {\n        // /success \u304b\u3089\u306f\u3058\u307e\u308b\u30d1\u30b9\u306b\u306f\u30ea\u30bd\u30fc\u30b9\u304c\u3042\u308b\u3068\u3044\u3046\u8a2d\u5b9a\n        if (path.startsWith(\"/success\")) {\n            callback(null, { body: `Response body of ${path}` });\n        } else {\n            callback(new Error(\"NOT FOUND\"));\n        }\n    }, 1000 * Math.random());\n}\n// /success/data \u306b\u30ea\u30bd\u30fc\u30b9\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u3001`response`\u306b\u306f\u30c7\u30fc\u30bf\u304c\u5165\u308b\ndummyFetch(\"/success/data\", (error, response) => {\n    if (error) {\n        // \u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n    } else {\n        console.log(response); // => { body: \"Response body of /success/data\" }\n    }\n});\n// /failure/data \u306b\u30ea\u30bd\u30fc\u30b9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001`error`\u306b\u306f\u30a8\u30e9\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5165\u308b\ndummyFetch(\"/failure/data\", (error, response) => {\n    if (error) {\n        console.log(error.message); // => \"NOT FOUND\"\n    } else {\n        // \u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\n    }\n}); \n```"]