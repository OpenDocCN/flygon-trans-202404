["```\n    keyboard ? ch\n    ch = <- keyboard\n    ```", "```\n    keyboard ! duh\n    keyboard <- duh\n    ```", "```\nCHAN OF CHAR keyboard\nkeyboard chan char\n```", "```\nFOREVER\n  ALT\n    from.client ? request && workerfree\n      SEQ\n        workerfree = false\n        to.worker ! request\n    from.worker ? result\n      SEQ\n        workerfree = true\n        to.client ! result\n```", "```\nFOREVER {\n    select {\n    case request <- from.client && workerfree\n        workerfree = false\n        request.data -> to.worker\n    case result <- from.worker\n        result -> request.chan\n    {\n}\ncase result <- from.worker\n```", "```\nPAR\n  SEQ\n    sleep( delay )\n    timeout ! true\n  ALT\n    in.data ? data\n      // respond to data\n    timeout ? now\n      // data timed out\n```", "```\ntimeout := make( chan bool )\ngo func( ) {\n  time.Sleep( delay )\n  timeout <- true\n}( )\nselect {\ncase <- ch:\n  // data available\ncase <- timeout:\n  // read timed out\n}\n```", "```\n    clock ? now\n    ```", "```\n    IF now AFTER yesterday THEN\n    ```", "```\n    clock ? AFTER tomorrow\n    ```", "```\nOuter\nScope\n|\n| CHAN OF REQUEST request\n|\n| Server \n| Scope\n| |\n| | REQUEST sreq\n| | CHAN OF REPLY srep\n| |\n| | request ? sreq\n| | srep := sreq.reply\n| |\n| | srep ! sresult\n| |\n| |\n| |\n| Client\n| Scope\n| |\n| | REQUEST creq\n| | CHAN OF REPLY crep\n| |\n| | creq.reply := crep\n| | request ! creq\n| |\n| | crep ? cresult\n| |\n\n```"]