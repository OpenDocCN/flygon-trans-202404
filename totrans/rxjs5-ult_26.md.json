["```\nsubject.next( 1 )\nsubject.next( 2 ) \n```", "```\nconst subscription = subject.subscribe( (value) => console.log(value) ) \n```", "```\nnext([value])\nerror([error message])\ncomplete()\nsubscribe()\nunsubscribe() \n```", "```\nlet source$ = Rx.Observable.interval(500).take(3);\nconst proxySubject = new Rx.Subject();\nlet subscriber = source$.subscribe( proxySubject );\n\nproxySubject.subscribe( (value) => console.log('proxy subscriber', value ) );\n\nproxySubject.next( 3 ); \n```", "```\nproxySubject.next( 3 )  // emits 3 and then 0 1 2 ( async ) \n```", "```\nsharedService.getDispatcher = function(){\n   return subject;\n}\n\nsharedService.dispatch = function(value){\n  subject.next(value)\n} \n```", "```\nnew Rx.ReplaySubject([bufferSize], [windowSize], [scheduler]) \n```", "```\nlet replaySubject = new Rx.ReplaySubject( 2 );\n\nreplaySubject.next( 0 );\nreplaySubject.next( 1 );\nreplaySubject.next( 2 );\n\n//  1, 2\nlet replaySubscription = replaySubject.subscribe((value) => {\n    console.log('replay subscription', value);\n}); \n```", "```\nreplaySubject.next( 3 )\nlet secondSubscriber( (value) => console.log(value) ) // 2,3 \n```", "```\nlet asyncSubject = new Rx.AsyncSubject();\nasyncSubject.subscribe(\n    (value) => console.log('async subject', value),\n    (error) => console.error('async error', error),\n    () => console.log('async completed')\n);\n\nasyncSubject.next( 1 );\nasyncSubject.next( 2 ); \n```", "```\nasyncSubject.next( 3 )\nasyncSubject.complete()\n\n// emit 3 \n```", "```\nasyncSubject( 3 )\nasyncSubject.error('err')\nasyncSubject.complete()\n\n// will emit 'err' as the last action \n```", "```\nnext()\ncomplete()\nconstructor([start value])\ngetValue() \n```", "```\nlet behaviorSubject = new Rx.BehaviorSubject(42);\n\nbehaviorSubject.subscribe((value) => console.log('behaviour subject',value) );\nconsole.log('Behaviour current value',behaviorSubject.getValue());\nbehaviorSubject.next(1);\nconsole.log('Behaviour current value',behaviorSubject.getValue());\nbehaviorSubject.next(2);\nconsole.log('Behaviour current value',behaviorSubject.getValue());\nbehaviorSubject.next(3);\nconsole.log('Behaviour current value',behaviorSubject.getValue());\n\n// emits 42\n// current value 42\n// emits 1\n// current value 1\n// emits 2\n// current value 2\n// emits 3\n// current value 3 \n```"]