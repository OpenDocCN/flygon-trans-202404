["```\n(define fact\u00a0 (lambda (n) (if (zero? n) 1 (* n (fact (- n 1))))))\n```", "```\n(define fact\u00a0 (lambda (n) (if (zero? n) 1 (* n (777 (- n 1)))))) ;***\n```", "```\n(define fact0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ;***\u00a0 (lambda (n) (if (zero? n) 1 (* n (777 (- n 1))))))\n```", "```\n(define fact0\u00a0 (lambda (n) (if (zero? n) 1 (* n (777 (- n 1))))))(define fact1\u00a0 (lambda (n) (if (zero? n) 1 (* n (fact0 (- n 1))))))\n```", "```\n(define fact1\u00a0 (lambda (n)\u00a0 \u00a0 (if (zero? n)\u00a0 \u00a0 \u00a0 1\u00a0 \u00a0 \u00a0 (* n ((lambda (n)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (if (zero? n)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (* n (777 (- n 1)))))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (- n 1))))))\n```", "```\n(define fact2\u00a0 (lambda (n) (if (zero? n) 1 (* n (fact1 (- n 1))))))\n```", "```\n(define fact2\u00a0 (lambda (n)\u00a0 \u00a0 (if (zero? n)\u00a0 \u00a0 \u00a0 1\u00a0 \u00a0 \u00a0 (* n ((lambda (n)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (if (zero? n)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (* n ((lambda (n)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (if (zero? n)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (* n (777 (- n 1)))))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (- n 1)))))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (- n 1))))))\n```", "```\n(define fact0 (lambda (n) (if (zero? n) 1 (* n (777 (- n 1))))))(define fact1 (lambda (n) (if (zero? n) 1 (* n (fact0 (- n 1))))))(define fact2 (lambda (n) (if (zero? n) 1 (* n (fact1 (- n 1))))))(define fact3 (lambda (n) (if (zero? n) 1 (* n (fact2 (- n 1))))))...\n```", "```\n(define fact-core\u00a0 (lambda (fact)\u00a0 \u00a0 (lambda (n) (if (zero? n) 1 (* n (fact (- n 1)))))))(define fact0 (fact-core 777))(define fact1 (fact-core fact0))(define fact2 (fact-core fact1))(define fact3 (fact-core fact2))...\n```", "```\n(define fact-core\u00a0 (lambda (fact)\u00a0 \u00a0 (lambda (n) (if (zero? n) 1 (* n (fact (- n 1)))))))(define fact0 (fact-core 777))(define fact1 (fact-core (fact-core 777)))(define fact2 (fact-core (fact-core (fact-core 777))))...(define fact\u00a0 (fact-core (fact-core (fact-core (... (fact-core 777) ...)))))\n```", "```\n(define fact0\u00a0 ((lambda (mk) (mk 777))\u00a0  fact-core))\n```", "```\n(define fact1\u00a0 ((lambda (mk) (mk (mk 777)))\u00a0  fact-core))\n```", "```\n(define fact\u00a0 ((lambda (mk) (mk (mk (... (mk 777) ...))))\u00a0  fact-core))\n```", "```\n((lambda (mk) (mk 777)) fact-core)\n```", "```\n((lambda (mk) (mk mk)) fact-core)\n```", "```\n(* n (777 (- n 1)))\n```", "```\n(* n (fact-core (- n 1)))\n```", "```\n((lambda (mk) (mk mk)) (lambda (fact)\u00a0  (lambda (n) (if (zero? n) 1 (* n (fact (- n 1)))))))\n```", "```\n((lambda (mk) (mk mk)) (lambda (mk)\u00a0  (lambda (n) (if (zero? n) 1 (* n (mk (- n 1)))))))\n```", "```\n((lambda (mk) (mk mk)) (lambda (mk)\u00a0  (lambda (n) (if (zero? n) 1 (* n ((mk 777) (- n 1)))))))\n```", "```\n((lambda (mk) (mk mk)) (lambda (mk)\u00a0  (lambda (n) (if (zero? n) 1 (* n ((mk mk) (- n 1)))))))\n```", "```\n(define fact\u00a0 ((lambda (mk) (mk mk))\u00a0  (lambda (mk)\u00a0 \u00a0  (lambda (n) (if (zero? n) 1 (* n ((mk mk) (- n 1))))))))\n```", "```\n(lambda (n) (if (zero? n) 1 (* n ((mk mk) (- n 1)))))\n```", "```\n(define fact-core\u00a0 (lambda (fact)\u00a0 \u00a0 (lambda (n) (if (zero? n) 1 (* n (fact (- n 1)))))))(define fact\u00a0 ((lambda (mk) (mk mk))\u00a0  (lambda (mk) (fact-core (mk mk)))))\n```", "```\n(define fact-core\u00a0 (lambda (fact)\u00a0 \u00a0 (lambda (n) (if (zero? n) 1 (* n (fact (- n 1)))))))(define fact\u00a0 ((lambda (x) (x x))\u00a0  (lambda (x) (fact-core (x x)))))\n```", "```\n(define fact-core\u00a0 (lambda (fact)\u00a0 \u00a0 (lambda (n) (if (zero? n) 1 (* n (fact (- n 1)))))))(define fact\u00a0 ((lambda (x) (x x))\u00a0  (lambda (x) (fact-core (lambda (n) ((x x) n))))))\n```", "```\n(define fact-core\u00a0 (lambda (fact)\u00a0 \u00a0 (lambda (n) (if (zero? n) 1 (* n (fact (- n 1)))))))(define (make-recursive f)\u00a0 ((lambda (x) (x x))\u00a0  (lambda (x) (f (lambda (n) ((x x) n))))))(define fact (make-recursive fact-core))\n```", "```\n#lang pl broken(define (make-recursive f)\u00a0 ((lambda (x) (f (lambda (n) ((x x) n))))\u00a0  (lambda (x) (f (lambda (n) ((x x) n))))))(define fact\u00a0 (make-recursive\u00a0  (lambda (fact)\u00a0 \u00a0  (lambda (n) (if (zero? n) 1 (* n (fact (- n 1))))))))\n```"]