- en: CSE 331 Software Design and Implementation
  prefs: []
  type: TYPE_NORMAL
- en: Assignment Submission
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Contents:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Introduction](#intro)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[validate](#validate)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What does this do?](#validate-operations)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What is the result?](#validate-result)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Why does this have to run on attu from the command line?](#validate-attu)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You turn in your assignment by committing to your SVN repository. While this
    is sufficient if all is well, we strongly recommend you then *validate* your submission
    to avoid drastic problems where you do not submit your homework correctly.
  prefs: []
  type: TYPE_NORMAL
- en: validate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Validating your code checks it for common errors, such as the code you checked
    in not compiling correctly with the compiler used for grading. Such errors could
    prevent you from receiving credit for your code, so you should always validate
    your assignment before you complete it. However, validation is not guaranteed
    to catch all errors in your code.
  prefs: []
  type: TYPE_NORMAL
- en: You should validate your assignment by running `ant validate` on attu (and making
    sure that it completes successfully!) by running the commands below.
  prefs: []
  type: TYPE_NORMAL
- en: You can log in to attu [via SSH](WorkingAtHome.html#remote-attu) from any machine.
    (Even if you are working on an Allen Center Linux machine you still need to SSH
    into attu.)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: or
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: You need to select the correct version depending on where you have checked out
    your copy of your Subversion repository. If you have not yet checked out your
    repository on a CSE Linux machine (say, because you work on Windows or at home),
    then you must first check out your repository [using the command line](versioncontrol.html#SetUpCommandLine).
    Note that if you check out your working copy in the location suggested there,
    the path to your project (as listed in the directions above and in the ouput below)
    will not include the `workspace331/` directory.
  prefs: []
  type: TYPE_NORMAL
- en: What does this do?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This checks out a fresh copy of your code (to a temporary directory) and ensures
    that your implementation:'
  prefs: []
  type: TYPE_NORMAL
- en: contains the required files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: compiles without errors. This is important because if you are not working in
    the Allen Center software labs, you may be using a different compiler. You may
    work wherever you like, but your code must work on `attu` (and must compile without
    errors or warnings).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: passes **the student's** `hw*N*.test.ImplementationTests` and `hw*N*.test.SpecificationTests`.
    (You can optionally read more about the [CSE 331 JUnit Framework](editing-compiling.html#junit-331-framework).)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the result?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If validation was successful, you should see output that looks something like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If there is an error, the validate script should provide some information about
    what is wrong:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This error would indicate that a required file, `answers/hw1_answers.pdf` is
    missing. Make sure you've committed this file to SVN.
  prefs: []
  type: TYPE_NORMAL
- en: If the validate output indicates errors, you should fix them before the deadline,
    or you will lose points on your assignment. If validate failed because the public
    test suite failed, you can view a summary of the JUnit failures in your `*YourWorkspaceDirectory*/scratch/cse331/src/hw*N*/test/reports`
    directory.
  prefs: []
  type: TYPE_NORMAL
- en: '**Important:** be aware that the validation script tests your code against
    **your own test suite**. Although by default we populate `hw*N*.test.SpecificationTests`
    with the public test suite, it is your responsibility to retain those tests in
    `hw*N*.test.SpecificationTests` if you want the validatation script to check your
    code against the public tests.'
  prefs: []
  type: TYPE_NORMAL
- en: Why does this have to run on attu from the command line?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Most ant targets that the staff supplies should work both in the Allen Center
    software labs and on your home computer, but `ant validate` only works on `attu`.
    This is because we grade your solutions on attu, so it is important to verify
    that your code compiles and runs correctly in exactly that environment.
  prefs: []
  type: TYPE_NORMAL
- en: Eclipse's integrated Ant support does not handle the ant `validate` target well.
    Even if you use Eclipse as your development environment, you should validate *on
    the command line* as shown above.
  prefs: []
  type: TYPE_NORMAL
