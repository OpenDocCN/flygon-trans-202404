["```\ncheck:\n  distance-to-origin(point(1, 1)) is ???\nend\n```", "```\nfun around(actual :: Number, expected :: Number) -> Boolean:\n  doc: \"Return whether actual is within 0.01 of expected\"\n  num-abs(actual - expected) < 0.01\nwhere:\n  around(5, 5.01) is true\n  around(5.01, 5) is true\n  around(5.02, 5) is false\n  around(num-sqrt(2), 1.41) is true\nend\n```", "```\ncheck:\n  5 is%(around) 5.01\n  num-sqrt(2) is%(around) 1.41\n  distance-to-origin(point(1, 1)) is%(around) 1.41\nend\n```", "```\nsqrt(4) is 1.75\n```", "```\nsqrt(4) is 2\n```", "```\nsqrt(4) is 2\n```", "```\nfun is-sqrt(n):\n  n-root = sqrt(n)\n  n == (n-root * n-root)\nend\n```", "```\ncheck:\n  is-sqrt(4) is true\nend\n```", "```\nfun check-sqrt(n):\n  lam(n-root):\n    n == (n-root * n-root)\n  end\nend\n```", "```\ncheck:\n  sqrt(4) satisfies check-sqrt(4)\nend\n```", "```\ncheck:\n  elemental(\"Shriram\") is [list: \"S\", \"H\", \"Ri\", \"Ra\", \"M\"]\nend\n```", "```\ncheck:\n  elemental(\"...\") is [list: ...]\nend\n```"]