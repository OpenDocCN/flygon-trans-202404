- en: Operators first look
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作符首先看到
- en: Operators
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作符
- en: Operators are what gives Observables their power. Without them they are nothing.
    There are close to 60+ operators
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 操作符是给 Observable 赋予力量的关键。没有它们，Observable 就一无是处。有近60个以上的操作符。
- en: 'Let''s look at some:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一些：
- en: of
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: of
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Right here we are using a creation type operator to create an observable for
    us. This is synchronous in nature and outputs the values as soon as possible.
    Essentially it lets you specify what values to emit in a comma separated list.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此处我们正在使用一个创建类型的操作符为我们创建一个 Observable。这是同步的，会尽快输出值。基本上，它允许你指定以逗号分隔的列表中发出的值。
- en: do
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: do
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This is a very handy operator as it is used for debugging of your Observable.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常方便的操作符，因为它用于调试你的 Observable。
- en: filter
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: filter
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: So this stops certain values from being emitted
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这样可以阻止某些值被发出。
- en: Notice however that I can add the `do` operator in a handy place and can still
    investigate all the values
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 但请注意，我可以在一个方便的地方添加 `do` 操作符，并且仍然可以调查所有的值。
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
