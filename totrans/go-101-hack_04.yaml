- en: “go build” and “go install”
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: “go build” and “go install”
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s tidy up the `$GOPATH` directory and only keep `Go` source code files
    left over:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The `greet.go` is `greet` package which just provides one function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'While `hello.go` is a `main` package which takes advantage of `greet` and can
    be built into an executable binary:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '(1) Enter the `src/hello` directory, and execute `go build` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We can see a fresh `hello` command is created in the current directory.
  prefs: []
  type: TYPE_NORMAL
- en: 'Check the `$GOPATH` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Compared before executing `go build`, there is only a final executable command
    more.
  prefs: []
  type: TYPE_NORMAL
- en: '(2) Clear the `$GOPATH` directory again:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Running `go install` in `hello` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Check the `$GOPATH` directory now:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Not only the `hello` command is generated and put into `bin` directory, but
    also the `greet.a` is in the `pkg/linux_amd64`. While the `src` folder keeps clean
    with only source code files in it and unchanged.
  prefs: []
  type: TYPE_NORMAL
- en: '(3) There is `-i` flag in `go build` command which will install the packages
    that are dependencies of the target, but won''t install the target. Let''s check
    it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Run `go build -i` under `hello` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Check `$GOPATH` now:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Except a `hello` command in `src/hello` directory, a `greet.a` library is also
    generated in `pkg/linux_amd64` too.
  prefs: []
  type: TYPE_NORMAL
- en: '(4) By default, the `go build` uses the directory''s name as the compiled binary''s
    name, to modify it, you can use `-o` flag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Now, the command is `he`, not `hello`.
  prefs: []
  type: TYPE_NORMAL
