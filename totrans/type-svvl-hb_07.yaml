- en: TypeScript誕生の背景
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TypeScript誕生の背景
- en: 原文：[https://typescriptbook.jp/overview/before-typescript](https://typescriptbook.jp/overview/before-typescript)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://typescriptbook.jp/overview/before-typescript](https://typescriptbook.jp/overview/before-typescript)
- en: TypeScriptは、JavaScriptでも大規模なアプリケーションを開発しやすくすることを目的に開発されたプログラミング言語です。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScriptは、JavaScriptでも大規模なアプリケーションを開発しやすくすることを目的に開発されたプログラミング言語です。
- en: 確かにJavaScriptは元々、大規模な開発を想定した設計ではありませんでした。それでも、JavaScript自体が進化して、大規模開発に対応してゆけば良かったはずです。しかし、実際はそううまくは行きませんでした。代わりに、大規模開発の一部はTypeScriptが引き受けることになったのです。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 確かにJavaScriptは元々、大規模な開発を想定した設計ではありませんでした。それでも、JavaScript自体が進化して、大規模開発に対応してゆけば良かったはずです。しかし、実際はそううまくは行きませんでした。代わりに、大規模開発の一部はTypeScriptが引き受けることになったのです。
- en: なぜ、そうなったのでしょうか？その答えはJavaScriptの歴史にあります。TypeScriptが必要な発明で、そして、今もなお必要とされている理由が見えてきます。それでは、TypeScript誕生以前の歴史をひも解いていきましょう。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: なぜ、そうなったのでしょうか？その答えはJavaScriptの歴史にあります。TypeScriptが必要な発明で、そして、今もなお必要とされている理由が見えてきます。それでは、TypeScript誕生以前の歴史をひも解いていきましょう。
- en: 1990年代[​](#1990年代 "1990年代 への直接リンク")
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1990年代[​](#1990年代 "1990年代 への直接リンク")
- en: JavaScriptの誕生[​](#javascriptの誕生 "JavaScriptの誕生 への直接リンク")
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JavaScriptの誕生[​](#javascriptの誕生 "JavaScriptの誕生 への直接リンク")
- en: JavaScript誕生以前は、簡単なフォームのバリデーションをするのも、サーバーサイドのプログラムで行う必要がありました。Netscape Navigatorというブラウザを開発していたNetscape社は、クライアントサイドで動くプログラムの必要性に気づきました。そこで、1995年、Netscape社はNetscape
    Navigatorで動くスクリプト言語として、JavaScriptを実装しました。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript誕生以前は、簡単なフォームのバリデーションをするのも、サーバーサイドのプログラムで行う必要がありました。Netscape Navigatorというブラウザを開発していたNetscape社は、クライアントサイドで動くプログラムの必要性に気���きました。そこで、1995年、Netscape社はNetscape
    Navigatorで動くスクリプト言語として、JavaScriptを実装しました。
- en: 補助的な道具[​](#補助的な道具 "補助的な道具 への直接リンク")
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 補助的な道具[​](#補助的な道具 "補助的な道具 への直接リンク")
- en: 当時のJavaScriptは、HTMLの補助的な言語と考えられていて、その用途は簡単なアニメーションを実装したり、フォームのバリデーションに使う程度でした。ましてや、JavaScriptが大規模なアプリケーションを作るための言語とは見なされていませんでした。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当時のJavaScriptは、HTMLの補助的な言語と考えられていて、その用途は簡単なアニメーションを実装したり、フォームのバリデーションに使う程度でした。ましてや、JavaScriptが大規模なアプリケーションを作るための言語とは見なされていませんでした。
- en: 今となっては事実か不明ですが、当時JavaScriptにはセキュリティ上の問題があるという主張があり、ブラウザの設定でJavaScriptをオフにした上でネットサーフィンをするのが、“ITリテラシーが高い人”という印象すらありました。そのため、サイトによっては「当サイトを閲覧するにはJavaScriptをオンにしてください」といった注意書きもしばしば見かけました。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 今となっては事実か不明ですが、当時JavaScriptにはセキュリティ上の問題があるという主張があり、ブラウザの設定でJavaScriptをオフにした上でネットサーフィンをするのが、“ITリテラシーが高い人”という印象すらありました。そのため、サイトによっては「当サイトを閲覧するにはJavaScriptをオンにしてください」といった注意書きもしばしば見かけました。
- en: 1990年代のJavaScriptは、現代のように必須のものでは決してなく、あくまで補助的・随意的な立ち位置の言語だったのです。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 1990年代のJavaScriptは、現代のように必須のものでは決してなく、あくまで補助的・随意的な立ち位置の言語だったのです。
- en: 2000年代初頭[​](#2000年代初頭 "2000年代初頭 への直接リンク")
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2000年代初頭[​](#2000年代初頭 "2000年代初頭 への直接リンク")
- en: くすぶりはじめる大規模開発のニーズ[​](#くすぶりはじめる大規模開発のニーズ "くすぶりはじめる大規模開発のニーズ への直接リンク")
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: くすぶりはじめる大規模開発のニーズ[​](#くすぶりはじめる大規模開発のニーズ "くすぶりはじめる大規模開発のニーズ への直接リンク")
- en: 他のプラットフォームに目を移すと、この時期にはすでにブラウザアプリケーションを実現する技術として、[Javaアプレット](https://ja.wikipedia.org/wiki/Java%E3%82%A2%E3%83%97%E3%83%AC%E3%83%83%E3%83%88)や[Adobe
    Flash](https://ja.wikipedia.org/wiki/Adobe_Flash)がありました。特にFlashはJavaアプレットよりも動作が軽く、ウェブサイト全体をFlashで実装するサイトが登場したり、この時代を省みて「[Flash黄金時代](https://dic.nicovideo.jp/a/flash%E9%BB%84%E9%87%91%E6%99%82%E4%BB%A3)」という言葉が後に生まれたりしました。一方のJavaScriptは依然として「補助的な道具」のイメージが支配的でした。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 他のプラットフォームに目を移すと、この時期にはすでにブラウザアプリケーションを実現する技術として、[Javaアプレット](https://ja.wikipedia.org/wiki/Java%E3%82%A2%E3%83%97%E3%83%AC%E3%83%83%E3%83%88)や[Adobe
    Flash](https://ja.wikipedia.org/wiki/Adobe_Flash)がありました。特にFlashはJavaアプレットよりも動作が軽く、ウェブサイト全体をFlashで実装するサイトが登場したり、この時代を省みて「[Flash黄金時代](https://dic.nicovideo.jp/a/flash%E9%BB%84%E9%87%91%E6%99%82%E4%BB%A3)」という言葉が後に生まれたりしました。一方のJavaScriptは依然として「補助的な道具」のイメージが支配的でした。
- en: 一般的に対話型のユーザーインターフェースを備えたウェブサイト、今で言うウェブアプリケーションは、当時は「リッチインターネットアプリケーション」と呼ばれ、その多くはJavaアプレットやFlashが担っていましたが、プログラマの中にはJavaScriptを使ったウェブアプリケーションの開発を試みる人たちもいました。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一般的に対話型のユーザーインターフェースを備えたウェブサイト、今で言うウェブアプリケーションは、当時は「リッチインターネットアプリケーション」と呼ばれ、その多くはJavaアプレットやFlashが担っていましたが、プログラマの中にはJavaScriptを使ったウェブアプリケーションの開発を試みる人たちもいました。
- en: 1997年に、Microsoftが企業向けウェブメーラーとして、Outlook Web Access 2000を市場投入しましたが、これはJavaScript製のウェブアプリケーションでした。現代の我々からすると意外かもしれませんが、この時代のJavaScriptはまだサーバーと通信することができませんでした。そこで、Microsoftはこのアプリのために、後のXMLHttpRequest(XHR)となるXMLHTTPという機能をInternet
    Explorerに追加したりもしました。XHRは革新的なアップデートでしたが、多くのプログラマから注目を得るのはもっと歴史が流れてからになります。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 1997年に、Microsoftが企業向けウェブメーラーとして、Outlook Web Access 2000を市場投入しましたが、これはJavaScript製のウェブアプリケーションでした。現代の我々からすると意外かもしれませんが、この時代のJavaScriptはまだサーバーと通信することができませんでした。そこで、Microsoftはこのアプリのために、後のXMLHttpRequest(XHR)となるXMLHTTPという機能をInternet
    Explorerに追加したりもしました。XHRは革新的なアップデートでしたが、多くのプログラマから注目を得るのはもっと歴史が流れてからになります。
- en: 2000年代初頭には、対話型のUIを備えた大規模なウェブアプリケーションがJavaScriptで開発できるようになることが望まれだしてきました。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 2000年代初頭には、対話型のUIを備えた大規模なウェブアプリケーションがJavaScriptで開発できるようになることが望まれだしてきました。
- en: 失われた10年[​](#失われた10年 "失われた10年 への直接リンク")
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 失われた10年[​](#失われた10年 "失われた10年 への直接リンク")
- en: この頃には、JavaScriptはNetscape社が所有する言語から、ウェブ業界を上げて取り組む言語になっていました。そのため、JavaScriptの言語仕様はECMAScriptという名で策定され、各ベンダーがその仕様に基づいてそれぞれJavaScriptを実装するという流れになっていました。このECMAScriptを策定する会合がTC39であり、JavaScriptに関わるNetscape社やMicrosoft社を始めとしたベンダーが参加していました。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: この頃には、JavaScriptはNetscape社が所有する言語から、ウェブ業界を上げて取り組む言語になっていました。そのため、JavaScriptの言語仕様はECMAScriptという名で策定され、各ベンダーがその仕様に基づいてそれぞれJavaScriptを実装するという流れになっていました。このECMAScriptを策定する会合がTC39であり、JavaScriptに関わるNetscape社やMicrosoft社を始めとしたベンダーが参加していました。
- en: 'TC39では、大規模開発にも耐えうるJavaScriptの必要性を鑑みて、新たな言語仕様である「ECMAScript 4」の策定についての議論を1999年頃から始めていました。このECMAScript
    4(ES4)では、主に次のような野心的な言語仕様が議論されていました:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 'TC39では、大規模開発にも耐えうるJavaScriptの必要性を鑑みて、新たな言語仕様である「ECMAScript 4」の策定につ���ての議論を1999年頃から始めていました。このECMAScript
    4(ES4)では、主に次のような野心的な言語仕様が議論されていました:'
- en: モジュール
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: モジュール
- en: Javaのようなクラス
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Javaのようなクラス
- en: 静的型付け
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静的型付け
- en: Nullable型
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nullable型
- en: ユニオン型
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ユニオン型
- en: ジェネリクス
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ジェネリクス
- en: おや、どれもTypeScriptが持っているものではありませんか？そうなのです。「大規模なアプリケーション開発をしやすく」という点は、2つの言語が共有する問題意識であり、そのため、今から20年前のJavaScriptにおいても、TypeScriptと同じような解決策が検討されていたのです。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: おや、どれもTypeScriptが持っているものではありませんか？そうなのです。「大規模なアプリケーション開発をしやすく」という点は、2つの言語が共有する問題意識であり、そのため、今から20年前のJavaScriptにおいても、TypeScriptと同じような解決策が検討されていたのです。
- en: ここでひとつ疑問が出てきます。「ES4のアイディアがJavaScriptにもたらされていたら、そもそもTypeScriptなんて必要なかったのでは？」という疑問です。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: ここでひとつ疑問が出てきます。「ES4のアイディアがJavaScriptにもたらされていたら、そもそもTypeScriptなんて必要なかったのでは？」という疑問です。
- en: 実は、残念ながら、ES4は正式な仕様として採用されることにはならなかったのです。ES4の仕様策定は、2003年に2年間の中断を経て、2005年に再開され、2007年に仕様書のドラフトが公開されました。ES4はこれまでのJavaScriptと互換性がありませんでした。保守的な立場を取るMicrosoft社と、革新的な変更を加えたいNetscape社で対立が起こり、政治的な背景からも折り合いをつけられなかったES4の草案は、2008年についに破棄されることとなります。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，ES4最终没有被采纳为正式规范。ES4的规范制定经历了2003年的两年中断，2005年重新启动，2007年发布了规范草案。ES4与之前的JavaScript不兼容。保守的微软和希望进行革新性改变的网景之间发生了分歧，由于政治背景的原因，ES4的草案最终在2008年被废弃。
- en: このような出来事があり、一度は大規模化を目指したJavaScriptでしたが、その目標を達成できないまま、約10年の年月が流れることとなります。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管JavaScript曾经致力于实现大规模化，但在未能实现这一目标的情况下，大约经过了10年的时间。
- en: 2000年代中盤[​](#2000年代中盤 "2000年代中盤 への直接リンク")
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2000年代中期[​](#2000年代中期 "2000年代中期 への直接リンク")
- en: Google Mapの衝撃[​](#google-mapの衝撃 "Google Mapの衝撃 への直接リンク")
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Google Map的冲击[​](#google-map的冲击 "Google Map的冲击 への直接リンク")
- en: JavaScriptの進化は足踏み状態、「本格的なアプリケーションを開発する言語ではない」というJavaScriptのイメージが依然として支配的な中、ウェブ業界に衝撃的な出来事が起こります。2005年のGoogle
    Mapの登場です。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在JavaScript的发展停滞不前、JavaScript仍被视为不适合开发“真正的应用程序”的时候，网络行业发生了一件令人震惊的事件，那就是2005年Google
    Map的推出。
- en: 当時の地図サイトの多くは、地図を移動したり拡大縮小するとウェブページがリロードされるものばかりだったので、画面遷移なしにスムーズに地図を操作できるGoogle
    Mapは、当時の感覚で言えば、ネイティブアプリの操作感をウェブページで実現した画期的な発明でした。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当时的许多地图网站在移动或缩放地图时都会重新加载页面，而Google Map可以在不刷新页面的情况下平滑操作地图，从当时的感觉来看，这是在网页上实现了类似原生应用程序的操作体验的划时代发明。
- en: Google Mapの操作性を裏で支えたのが、AJAXです。AJAXは“**A**synchronous **Ja**vaScript and **X**ML”の略で、XMLHttpRequestオブジェクトによる非同期のHTTP通信を利用し、ページをリロードなしにサーバーからXMLでデータを取得し、HTMLの一部を書き換える技術です。今となってはAJAXは常識を通りすぎて、古めの技術のイメージがありますが、当時としては最先端の技術でした。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Google Map背后支撑的是AJAX。AJAX是“**A**synchronous **Ja**vaScript and **X**ML”的缩写，利用XMLHttpRequest对象进行异步的HTTP通信，从服务器获取XML数据并在不刷新页面的情况下更新HTML的一部分。如今，AJAX已经成为常识，甚至被视为过时技术，但在当时，它是最前沿的技术。
- en: Google Mapは多くのプログラマに衝撃を与えました。AJAXに脚光を浴びせただけでなく、JavaScriptでも立派なアプリケーションが作れることを証明して見せたのです。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Google Map给许多程序员带来了震撼。它不仅引领了AJAX的潮流，还证明了JavaScript也可以开发出优秀的应用程序。
- en: 2000年代後半[​](#2000年代後半 "2000年代後半 への直接リンク")
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2000年代末[​](#2000年代末 "2000年代末 への直接リンク")
- en: 大規模化のニーズの強まり[​](#大規模化のニーズの強まり "大規模化のニーズの強まり への直接リンク")
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 大规模化的需求增强[​](#大规模化的需求增强 "大规模化的需求增强 への直接リンク")
- en: Google Mapの成功を目にした開発者は、ブラウザさえあれば他に何もインストールする必要がないアプリケーションをユーザーに提供できるウェブアプリケーションにより一層の魅力を感じるようになり、JavaScriptによる大規模開発のニーズも日に日に増してきました。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 受Google Map的成功启发，开发者们开始更加热衷于提供无需安装其他任何内容的Web应用程序，只需浏览器即可使用，这进一步增加了对JavaScript大规模开发的需求。
- en: 2005年には、JavaScriptアプリケーションフレームワークの先駆けであるPrototype.jsがリリースされました。翌年にはjQueryがリリースされ、その後しばらくして、2009年にAngularJS、2010年にBackbone.jsが発表され、フロントエンドWebアプリケーション開発のツールが続々と発明される流れになっていきます。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 2005年，JavaScript应用程序框架的先驱Prototype.js发布。次年，jQuery发布，随后在2009年AngularJS、2010年Backbone.js相继问世，前端Web应用程序开发工具不断涌现。
- en: 進化なきJS、一世風靡のAltJS[​](#進化なきjs一世風靡のaltjs "進化なきJS、一世風靡のAltJS への直接リンク")
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 无进化的JS，一时风靡的AltJS[​](#无进化的js一时风靡的altjs "无进化的JS，一时风靡的AltJS への直接リンク")
- en: JavaScriptの開発スタイルは一変し、大規模化が進む中、JavaScript自体には動きが見られません。期待が寄せられたES4も、2008年にご破算となってしまいました。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript的开发风格发生了翻天覆地的变化，大规模化不断推进，但JavaScript本身并没有太多变化。曾经寄予厚望的ES4在2008年宣告失败。
- en: 開発者たちは進化なきJavaScriptに甘んじていたわけではありませんでした。「JavaScript本体が良くならないなら、JavaScriptにコンパイルできる言語を作ればいいのではないだろうか？」開発者の中にはこう考える人々が現れました。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者们并不甘心于停滞不前的JavaScript。有人提出：“如果JavaScript本身无法改进，那么我们是否可以创造一种可以编译成JavaScript的语言？”这种想法开始在开发者中流行起来。
- en: こうした発想のもと、JavaScriptアプリケーションの開発言語として一世を風靡するのが、2009年に発表されたCoffeeScriptです。CoffeeScriptはRubyのような簡潔な文法でコーディングできることが魅力の言語で、サーバーサイドフレームワークのRuby
    on Railsにもフロントエンド開発用言語として正式採用されました。CoffeeScriptにはclass構文があり、クラス指向のオブジェクト指向プログラミングに慣れ親しんだプログラマには好評でした。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这种思路，2009年推出的CoffeeScript风靡一时，成为JavaScript应用程序开发的语言。CoffeeScript具有类似Ruby的简洁语法，被广泛接受，尤其受到熟悉面向对象编程的程序员的喜爱。
- en: コーディングは別の言語で行い、それをJavaScriptにコンパイルするという奇抜に思えた手法は成功を収め、このアプローチを採用する言語が数多く開発され、それらの言語は総称してAltJSと呼ばれるようになりました。言語から言語にコンパイルすることを「トランスパイル」と言いますが、この言葉が定着したのもこの頃です。AltJSが一般化すると、JavaScriptは「現代のアセンブラ」と揶揄されることもありました。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在其他语言中编写代码，然后将其编译成JavaScript的奇特方法取得了成功，采用这种方法的语言被称为AltJS。将一种语言编译成另一种语言被称为“转译”，这个词也是在这个时期开始流行起来的。随着AltJS的普及，JavaScript被戏称为“现代汇编语言”。
- en: ECMAScript 2015始動[​](#ecmascript-2015始動 "ECMAScript 2015始動 への直接リンク")
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ECMAScript 2015的启动[​](#ecmascript-2015始动 "ECMAScript 2015始动 への直接リンク")
- en: 2008年になると、ECMAScriptに新たな動きが生まれます。JavaScriptを改善しようという議論が再開したのです。ES4は革新的すぎたため、保守派から大きな反対にあいました。そこで、ES4ほど革新的ではなく、既存のJSとの互換性を保ちながらES4の成果を取り込むための折衷案として、Harmonyという新しい言語仕様が検討されることになりました。Harmonyにはclass構文や、module構文、import/exportなど大規模開発を想定した言語仕様が提案されました。そのうちのいくつかは、のちのECMAScript
    2015に採用されることになります。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 到了2008年，ECMAScript出现了新的动向。人们重新开始讨论如何改进JavaScript。由于ES4过于革新，遭到了保守派的强烈反对。因此，为了不像ES4那样过于革新，同时又能保持与现有JS的兼容性，提出了一个折衷方案，即新的语言规范Harmony。Harmony提出了类概念、模块概念、import/export等面向大规模开发的语言规范。其中一些规范后来被采纳为ECMAScript
    2015的一部分。
- en: このようにして、JavaScriptの言語仕様を話し合うTC39が生産的な会合になってきたこともあり、JavaScriptの将来に期待も集まるようになってきました。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，讨论JavaScript语言规范的TC39会议变得更加富有成效，人们也开始对JavaScript的未来充满期待。
- en: 2010年代[​](#2010年代 "2010年代 への直接リンク")
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2010年代[​](#2010年代 "2010年代 への直接リンク")
- en: TypeScriptの誕生[​](#typescriptの誕生 "TypeScriptの誕生 への直接リンク")
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TypeScript的诞生[​](#typescript的诞生 "TypeScript的诞生 への直接リンク")
- en: ECMAScript 2015の策定に向け、TC39で大規模開発の議論が活発になる中、2012年に発表されたのがTypeScriptです。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在TC39讨论大规模开发的热烈讨论中，2012年推出了TypeScript。
- en: TypeScriptは誕生当初より、ますます困難になるJavaScriptの大規模開発に焦点を当てていました。特に強調された特徴が、JavaScriptのスーパーセット、モジュール性、そして型です。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript从诞生之初就专注于解决日益困难的JavaScript大规模开发问题。特别强调的特点包括JavaScript的超集、模块化以及类型。
- en: 当時、人気を博していたCoffeeScriptがJavaScriptの文法とはドラスティックに異なる独自路線を打ち出したのに対し、TypeScriptはJavaScriptの文法を拡張するに留める「JavaScriptのスーパーセット言語」としての戦略を採用しました。そのため、TypeScriptを導入したとしても、既存のJavaScript資産はそのまま活用でき、チームの学習にも突発的なコストがかからず、徐々にTypeScriptの恩恵を増やしていけるようになっていたので、大規模開発でもすぐに導入できるようになっていました。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: モジュール性は大規模開発ではとても重要になります。コードを適切な粒度に分割し整理できたり、実装の詳細をカプセル化できたり、変数名や関数名が衝突しないような言語仕様がなければ、大規模開発はかなり難しいものになります。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: 当時のJavaScriptには、モジュールシステムや名前空間といったものが無かったため、大規模開発を難しいものにしていました。TypeScriptは、この問題を解決するためにES2015の提案に上がっていたクラスやモジュールの構文を先取りし、モジュール性を実現しました。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: 型はTypeScriptの最大の特徴でした。型の恩恵として、コーディング中にコードジャンプやコード補完ができ、型情報がドキュメントにもなり、プログラムを動かす前にソースコードのチェックを行えるようになりました。このように型は大規模開発の生産性を大きく向上させました。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: 薄れないTypeScriptの強み[​](#薄れないtypescriptの強み "薄れないTypeScriptの強み への直接リンク")
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: TypeScriptが発表された後、TypeScriptが手本としたECMAScript 2015は正式に発表され、その後、ECMAScriptは毎年アップデートされるようになりました。一時期停滞したJavaScriptも、大規模開発のハードルを下げるべく年々進化を遂げてきています。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: そうした中で、TypeScriptが誕生当初に掲げていた3大特徴のうち、モジュール性はJavaScriptの仕様にも盛り込まれ、その部分ではTypeScriptは優位性を失いました。しかし、TypeScriptの目玉である「型」は、今日でもJavaScriptの仕様には盛り込まれていません。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: 大規模開発をするにあたって、型は非常に重要な言語仕様であり、JavaScriptが進化を続ける中においても、TypeScriptの「型」というのは今でも確固たる強みであることは間違いないでしょう。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: まとめ[​](#まとめ "まとめ への直接リンク")
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 1995年に生まれたJavaScriptは当初、大規模な開発に用いられることが想定されていませんでした。10年もすると、大規模開発のニーズが顕在化しはじめ、JavaScriptは対応に迫られました。しかし、ベンダー同士の合意をとりつけられず、JavaScriptの進化は停滞します。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: JavaScriptが硬直状態だった間も、ウェブアプリケーションは大規模化が進み、開発の難易度が日に日に増してきました。それに対して、さまざまな解決策がコミュニティからなされるようになります。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: その流れの中で発明されたのがTypeScriptです。TypeScriptは大規模開発の困難さに立ち向かう言語として、JavaScriptのスーパーセット・モジュール性・型の3つの特徴を携えて2012年に発表されました。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: TypeScriptの発表後、JavaScriptも再び進歩を始め、6年ぶりのメジャーアップデートとしてECMAScript 2015を発表し、そこから毎年新仕様を発表しつづけています。それでも、TypeScriptの最大の特徴である「型」は、依然としてJavaScriptにはありません。今日においてもTypeScriptが大規模開発で好まれるのは、JavaScriptでは得られない開発体験があるためです。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: 参考資料[​](#参考資料 "参考資料 への直接リンク")
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 4\. How JavaScript Was Created](http://speakingjs.com/es5/ch04.html)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Microsoft augments JavaScript for large-scale development | InfoWorld](https://www.infoworld.com/article/2614863/microsoft-augments-javascript-for-large-scale-development.html)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Real Story Behind ECMAScript](https://auth0.com/blog/the-real-story-behind-es4/)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[JavaScript 2.0](https://web.archive.org/web/20000816194528/http://mozilla.org/js/language/js20-1999-02-18/index.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[JavaScript 2.0 Motivation](https://web.archive.org/web/20000823225602/http://mozilla.org/js/language/js20-1999-02-18/motivation.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ActionScript - Wikipedia](https://en.wikipedia.org/wiki/ActionScript)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[JavaScript - Wikipedia](https://ja.wikipedia.org/wiki/JavaScript)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ECMAScript - Wikipedia](https://en.wikipedia.org/wiki/ECMAScript)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Brief History of JavaScript](https://auth0.com/blog/a-brief-history-of-javascript/)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The ECMAScript 6 schedule change](https://2ality.com/2014/06/es6-schedule.html#fn2)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[見えてきた「ECMAScript 6」。JavaScriptの生みの親が書く「Harmony of Dreams Come True」 － Publickey](https://www.publickey1.jp/blog/12/javascriptecmascript_6harmony_of_dreams_come_true.html)'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[JavaScript: The First 20 Years | Zenod](https://zenodo.org/record/3707008#.XrVIhBMzZTY)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Anders Hejlsberg: Introducing TypeScript | Channel 9](https://channel9.msdn.com/posts/Anders-Hejlsberg-Introducing-TypeScript)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Anders Hejlsberg: TypeScript 介绍 | Channel 9](https://channel9.msdn.com/posts/Anders-Hejlsberg-Introducing-TypeScript)'
