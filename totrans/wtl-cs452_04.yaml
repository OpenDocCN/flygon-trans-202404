- en: Lecture 4 - Tasks & Kernels
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 4 讲 - 任务与内核
- en: Pubilc Service Annoucements
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公共服务公告
- en: Due date for assignment 0
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作业 0 的截止日期
- en: Some clean-up needed in course account, cleaned up course introduction.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 课程账户需要一些清理，课程介绍已清理完成。
- en: RTS/CTS
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: RTS/CTS
- en: The train controller asserts RTS when its UART is ready to receive a byte.
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当列车控制器的 UART 准备好接收字节时，它会断言 RTS。
- en: RTS is connected to the ARM UART's CTS bit.
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RTS 连接到 ARM UART 的 CTS 位。
- en: You check the modem status register
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查调制解调器状态寄存器
- en: You transmit a byte to the train controller only when CTS is asserted
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅在 CTS 被断言时才向列车控制器发送字节
- en: You do **not** transmit when CTS is negated.
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 CTS 被否定时，你**不**发送。
- en: 'News group: `uw.cs.cs452`.'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新闻组：`uw.cs.cs452`。
- en: 'Course email account: `cs452@cgl.uwaterloo.ca`'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 课程邮箱账号：`cs452@cgl.uwaterloo.ca`
- en: Documentation expected for assignment 0
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预期作业 0 的文档
- en: Partners
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 合作伙伴
- en: '* * *'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Kernel of a Real-time Operating System
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实时操作系统的内核
- en: Introduction
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 介绍
- en: The base unit of a polling loop is
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 轮询循环的基本单位是
- en: '[PRE0]'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Think of `action` as the performance of a task, such as washing dishes. Think
    of `condition` as a signal from outside that tells you it's time to perform the
    task.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 将`action`视为任务的执行，例如洗碗。将`condition`视为来自外部的信号，告诉你是时候执行任务了。
- en: 'Actions are not independent of one another: washing dishes requires hot water,
    dish soap, etc., which are provided by other actions. Communication is needed.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 动作并不是彼此独立的：洗碗需要热水、洗洁精等，这些由其他动作提供。需要进行通信。
- en: Thus tasks need some support.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，任务需要一些支持。
- en: the ability to execute instructions
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行指令的能力
- en: code with the pc pointing into it
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有指向其中的 PC 的代码
- en: state, in the form of memory
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 状态，以内存形式
- en: the ability to communicate with one another
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互相通信的能力
- en: pass data
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递数据
- en: synchronization
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同步
- en: the ability to receive information from the real world
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从现实世界接收信息的能力
- en: provide data
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供数据
- en: possibly nothing but symchronization
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能仅仅是同步
- en: These basic needs are provided by the kernel of an operating system. The kernel
    we create in cs452 is a microkernel, because it provides these capabilities and
    nothing more.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些基本需求由操作系统的内核提供。我们在 cs452 中创建的内核是微内核，因为它提供了这些功能，而没有其他功能。
- en: We build the microkernel in four assignments
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将微内核分为四个作业来构建
- en: task creation and scheduling
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务创建和调度
- en: inter-task communication
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务间通信
- en: an interrupt primitive
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个中断原语
- en: complex servers
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复杂的服务器
- en: '* * *'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[Microkernels](http://en.wikipedia.org/wiki/Microkernel)'
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[微内核](http://en.wikipedia.org/wiki/Microkernel)'
- en: The real-time operating system we build consists of
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们构建的实时操作系统由
- en: an uninterruptible microkernel, plus
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个不可中断的微内核，加上
- en: interruptible device-handling server tasks that run in user-space with permissions
    allowing them to access hardware.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可中断的设备处理服务器任务在用户空间中运行，并具有允许它们访问硬件的权限。
- en: What Does a Microkernel Provide?
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 微内核提供了什么？
- en: Tasks
  id: totrans-43
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 任务
- en: Program is conceived as a collection of co-operating tasks
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序被构想为一组协作的任务
- en: Provide applications with modularity. Task structure as a method of program
    organization is discussed about the time you are finishing the OS.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供应用程序与模块化。在你完成操作系统的时候，讨论了任务结构作为程序组织的一种方法。
- en: Consist of
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由...组成
- en: instructions, common to all tasks of the same kind,
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于同一种任务的所有任务，都有一些指令是通用的，
- en: global **constants**, such as strings used for formatting messages, and
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全局**常量**，比如用于格式化消息的字符串，以及
- en: local state, different state in different tasks of the same kind, which requires
    a separate block of memory for each instantiation of a task..
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地状态，相同类型的不同任务在不同任务中具有不同状态，每个任务实例都需要一个单独的内存块。
- en: How tasks work together
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任务如何协同工作
- en: synchronization
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同步
- en: communication
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通信
- en: 'combined into one mechanism: message passing'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结合成一个机制：消息传递
- en: Why are tasks important?
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么任务很重要？
- en: Thinking about one thing at a time is easy.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一次只考虑一件事情很容易。
- en: Think about the options you expect to have after you graduate.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 想想毕业后你期望有的选择。
- en: Thinking about more than one thing at a time is hard.
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同时考虑多件事情是困难的。
- en: Keep on thinking, and at the same time listen to me talking about tasks
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 继续思考，同时听我谈论任务
- en: Parenthetical remark. While walking you may have been talking to somebody, or
    thinking about something. You did both effortlessly. How?
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 括号里的备注。当你走路时可能在和某人交谈，或者思考着某件事情。你做这两件事都很轻松。为什么？
- en: Thinking about more than one thing at a time, in real-time, is very hard
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时地同时考虑多件事情非常困难
- en: Think about turning the wheel, peddling and balancing while learning to ride
    a bicycle
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   想想在学习骑自行车时如何转动方向盘、蹬踏和保持平衡'
- en: How did you learn to coordinate all these activities in real-time?
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   你是如何学会在实时中协调所有这些活动的？'
- en: Tasks allow a programmer to produce each component of a activity into a sequential
    set of instructions that includes communication with other tasks..
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   任务允许程序员将活动的每个组件转换为一组顺序的指令，其中包括与其他任务通信。'
- en: Communication
  id: totrans-64
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '-   通信'
- en: Communication has two aspects
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '-   通信有两个方面'
- en: sharing information, requesting service
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   共享信息，请求服务'
- en: synchronization
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   同步'
- en: We use Send/Receive/Reply (SRR) to do both.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '-   我们使用发送/接收/回复（SRR）来执行这两个任务。'
- en: Send blocks
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   发送块'
- en: 'Receive blocks: is synchronous with the call to send'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   接收块：与调用发送同步'
- en: 'Reply doesn''t block: is synchronous with the return from send'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   回复不阻塞：与从发送返回同步'
- en: Synchronization
  id: totrans-72
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '-   同步'
- en: Between tasks
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   在任务之间'
- en: Coordination of execution in co-operating tasks
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   协作任务的执行协调'
- en: Uses SRR
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   使用 SRR'
- en: With internal events
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   使用内部事件'
- en: 'Real-time by synchronizing with a real-time clock: e.g. clock server'
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   通过与实时时钟同步来实现实时性：例如时钟服务器'
- en: 'Ordering execution: e.g. name server, bounded buffer'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   执行顺序：例如名字服务器，有界缓冲区'
- en: Uses SRR
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   使用 SRR'
- en: With external events
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   与外部事件'
- en: interrupts
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   中断'
- en: Interrupts
  id: totrans-82
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '-   中断'
- en: Input from the outside world
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '-   外部世界的输入'
- en: Provide the information you polled for
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   提供你所轮询的信息'
- en: ISR OS design, which is essentially a jump table, which separates testing from
    acting
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   ISR 操作系统设计，本质上是一个跳转表，它将测试与操作分开'
- en: '[PRE1]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: These are the same actions you implemented in your polling loop,
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '-   这些是你在轮询循环中实现的相同操作，'
- en: and the have all the same problems.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   他们都有相同的问题。'
- en: Somthing to think about
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   值得思考的事情'
- en: Polling loop was single-threaded
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   轮询循环是单线程的'
- en: You were guaranteed not to be in the middle of a computation when you got the
    signal to start another one.
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   当你收到信号开始另一个计算时，你保证不会处于计算的中间状态。'
- en: ISRs are not necessarily single-threaded
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   ISR 不一定是单线程的'
- en: You could get back the polling loop by turning off interrupts during the action.
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   在执行过程中关闭中断，可以通过关闭中断来重新获取轮询循环。'
- en: No hierarchy of importance among ISRs
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   ISR 之间没有重要性层次结构'
- en: Polling loop hierarchy was in the polling structure
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   轮询循环的层次结构在轮询结构中'
- en: Selective interrupt masking can reproduce the hierarchy,
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   选择性中断屏蔽可以重现层次结构，'
- en: But then you have to save state
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   但是你必须保存状态'
- en: '* * *'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '-   * * *'
- en: Tasks
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '-   任务'
- en: What is a task?
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '-   什么是任务？'
- en: A set of instructions
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   一组指令'
- en: Current state, which is changed by executing instructions, which includes
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   当前状态，通过执行指令来改变，其中包括'
- en: values of its variables, which are automatic variables maintained on the stack
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   其变量的值，这些变量是在堆栈上维护的自动变量'
- en: contents of its registers
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   寄存器的内容'
- en: other processor state such as the PSR
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   其他处理器状态，如 PSR'
- en: processor mode
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   处理器模式'
- en: condition codes
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   条件码'
- en: etc.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   等等。'
- en: its run state and other things maintained by the kernel
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   其运行状态和内核维护的其他信息'
- en: Two tasks can use the same set of instructions, but
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '-   两个任务可以使用相同的一组指令，但是'
- en: every task has its own state
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   每个任务都有自己的状态'
- en: Therefore, no static variables
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   因此，没有静态变量'
- en: The kernel keeps track of every task's state
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '-   内核跟踪每个任务的状态'
- en: In essence, servicing a request amounts to changing the state of one or more
    tasks.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   本质上，服务请求就是改变一个或多个任务的状态。'
- en: Kernel maintains a task descriptor (TD) for each created task.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   内核为每个创建的任务维护一个任务描述符（TD）。'
- en: That is, to create a task the kernel must allocate a TD and initialize it.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   也就是说，要创建一个任务，内核必须分配一个 TD 并对其进行初始化。'
- en: The TD normally contains
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '-   TD 通常包含'
- en: The task's stack pointer, which points to a private stack, in the memory of
    the task, containing
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   任务的堆栈指针，指向任务内存中包含的私有堆栈，其中包含'
- en: PC
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   PC'
- en: other registers
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   其他寄存器'
- en: local variables
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   局部变量'
- en: all ready to be reloaded whenever the task next runs.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '-   所有准备好在下次运行任务时重新加载。'
- en: Possibly the return value for when the task is next activated
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   下一次激活任务时可能的返回值'
- en: The task's parent
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   任务的父任务'
- en: The task's state
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   任务的状态'
- en: Links to queues on which the task is located
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   任务所在队列的链接'
- en: The kernel uses these to find the task when it is ervicing a request
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   内核使用这些来在服务请求时找到任务'
- en: Possible states of the task
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '-   任务的可能状态'
- en: 'Active: running or about to run'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   活动：正在运行或即将运行'
- en: On a single processor system only one task can ever be active.
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   在单处理器系统上，只能有一个任务处于活动状态。'
- en: But we would like to generalize smoothly to more than one processor.
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   但是我们希望能够平滑地推广到多个处理器。'
- en: 'Ready: can run if scheduled'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '-   准备就绪：如果被调度可以运行'
- en: Need a queue used by the scheduler when deciding which task should be the next
    active task
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要一个队列，由调度程序使用，以决定下一个活动任务是哪一个
- en: 'Blocked: waiting for something to happen'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阻塞：等待某些事情发生
- en: Need several queues, one for each thing that could happen
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要几个队列，每个可能发生的事情一个
- en: '* * *'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Kernel Structure
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内核结构
- en: The kernel is just a function like any other, but which runs forever.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 内核只是像任何其他函数一样，但是永远运行。
- en: '[PRE2]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Where is the OS?
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统在哪里？
- en: requests come from running user tasks
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求来自正在运行的用户任务
- en: in essence system calls
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本质上是系统调用
- en: one type of request creates a task
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种请求类型创建一个任务
- en: There needs to be a first task that gets everything going
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要一个启动所有任务的第一个任务
- en: '* * *'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: All the interesting stuff inside done by the kernel is hidden inside `getNextRequest`.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 内核内部完成的所有有趣的事情都隐藏在`getNextRequest`内。
- en: '[PRE3]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: What's inside `activate( active )`?
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`activate( active )`内部有什么？'
- en: transfer of control to the active task
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 控制转移到活动任务
- en: execution to completion of the active task
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行活动任务直到完成
- en: '`to completion'' means until the active task sends a request to the kernel'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to completion'' 意味着直到活动任务向内核发送请求'
- en: transfer of control back to the kernel
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 控制转移到内核的返回
- en: getting the request
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取请求
- en: The hard part to get right is `transfer of control'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 正确执行的难点是`transfer of control'
- en: which we call a context switch
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们称之为上下文切换
- en: '* * *'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Return to:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[Bill Cowan''s lecture notes for CS452 in s12](index.html)'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考温s12的CS452讲座笔记](index.html)'
- en: '[Bill Cowan''s Spring 2012 CS452 page](../index.html)'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考温2012年春季CS452页面](../index.html)'
- en: '[Bill Cowan''s CS452 page](../../index.html)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考温的CS452页面](../../index.html)'
- en: '[Bill Cowan''s teaching page](../../../index.html)'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考温的教学页面](../../../index.html)'
- en: '[Bill Cowan''s home page](../../../../index.html)'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考温的主页](../../../../index.html)'
