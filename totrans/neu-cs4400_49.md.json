["```\n(define foo((lambda(f)((lambda(x)(x x))(lambda(x)(f(x x)))))(lambda(f)(lambda(x)(((x(lambda(x)(lambda(x y)y))(lambda(x y)x))(x(lambda(x)(lambda(x y)y))(lambda(x y)x))(((x(lambda (p)(lambda(s)(s(p(lambda(xy)y))(lambda(f x)(f((p(lambda(x y)y))f x))))))(lambda(s) (s(lambda(fx)x)(lambda(f x)x))))(lambda(x y)x))(lambda(x)(lambda(x y)y))(lambda(x y)x)))(lambda(f x)(f x))((f((x(lambda(p)(lambda(s)(s(p(lambda(x y)y))(lambda(f x)(f((p(lambda(x y)y))f x))))))(lambda(y s)(s(lambda(fx)x)(lambda(f x)x))))(lambda(x y)x)))(lambda(n)(lambda(f x)(f(n f x))))(f((((x(lambda(p)(lambda(s)(s(p (lambda(x y)y))(lambda(f x)(f((p(lambda(x y)y))f x))))))(lambda(s)(s(lambda(f x) x)(lambda(f x)x))))(lambda(x y)x))(lambda(p)(lambda(s)(s(p(lambda(x y)y))(lambda(f x)(f((p(lambda(x y)y))f x))))))(lambda(s)(s(lambda(f x)x)(lambda(f x)x))))(lambda(x y)x)))))))))\n```", "```\n<SCHLAC>\u00a0 \u00a0 \u00a0 ::= <SCHLAC-TOP> ...<SCHLAC-TOP>\u00a0 ::= <SCHLAC-EXPR>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | (define <id> <SCHLAC-EXPR>)<SCHLAC-EXPR> ::= <id>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | (lambda (<id> <id> ...) <SCHLAC-EXPR>)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | (<SCHLAC-EXPR> <SCHLAC-EXPR> <SCHLAC-EXPR> ...)\n```", "```\n(lambda (x y z) (z y x))\n```", "```\n(lambda (x) (lambda (y) (lambda (z) ((z y) x))))\n```", "```\n((lambda (x) E1) E2) --> E1[E2/x]\n```", "```\n(define identity (lambda (x) x))\n```", "```\n> identity#<procedure:identity>> (identity identity)#<procedure:identity>> (identity identity identity)#<procedure:identity>\n```"]