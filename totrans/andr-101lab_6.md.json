["```\ncompile 'com.google.code.gson:gson:2.2.3' \n```", "```\n    public List <Donation> donations    = new ArrayList<Donation>(); \n    ```", "```\n <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" /> \n```", "```\nprivate class GetAllTask extends AsyncTask<String, Void, List<Donation>> {\n\n        protected ProgressDialog         dialog;\n        protected Context                 context;\n\n        public GetAllTask(Context context) {\n            this.context = context;\n        }\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            this.dialog = new ProgressDialog(context, 1);\n            this.dialog.setMessage(\"Retrieving Donations List\");\n            this.dialog.show();\n        }\n\n        @Override\n        protected List<Donation> doInBackground(String... params) {\n            try {\n                Log.v(\"donate\", \"Donation App Getting All Donations\");\n                return (List<Donation>) DonationApi.getAll((String) params[0]);\n            }\n            catch (Exception e) {\n                Log.v(\"donate\", \"ERROR : \" + e);\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n        @Override\n        protected void onPostExecute(List<Donation> result) {\n            super.onPostExecute(result);\n\n            //use result to calculate the totalDonated amount here\n\n            progressBar.setProgress(app.totalDonated);\n            amountTotal.setText(\"$\" + app.totalDonated);\n\n            if (dialog.isShowing())\n                dialog.dismiss();\n        }\n    } \n```", "```\n@Override\n    public void onResume() {\n        super.onResume();\n        new GetAllTask(this).execute(\"/donations\");\n    } \n```", "```\npublic class Donation {\n    public String _id;\n    public int    amount;\n    public String paymenttype;\n    public int    upvotes;\n\n    public Donation (int amount, String method, int upvotes) {\n        this.amount = amount;\n        this.paymenttype = method;\n        this.upvotes = upvotes;\n    }\n\n    public Donation () {\n        this.amount = 0;\n        this.paymenttype = \"\";\n        this.upvotes = 0;\n    }\n\n    public String toString() {\n        return _id + \", \" + amount + \", \" + paymenttype + \", \" + upvotes;\n    }\n} \n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\" android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n        android:text=\"@string/reportTitle\"\n        android:id=\"@+id/reportTitle\"\n        android:layout_marginLeft=\"0dp\"\n        android:layout_marginTop=\"31dp\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentEnd=\"true\"\n        android:paddingLeft=\"10dp\" />\n\n    <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:orientation=\"horizontal\" android:layout_width=\"fill_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@+id/reportTitle\"\n        android:layout_alignParentStart=\"true\"\n        android:id=\"@+id/linearLayout\">\n\n        <TextView\n            android:id=\"@+id/row_upvotes\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginStart=\"15dp\"\n            android:layout_marginTop=\"20dp\"\n            android:text=\"Upvotes\"\n            android:layout_weight=\"0.5\"\n            android:textSize=\"20sp\"\n            android:textColor=\"@color/colorPrimaryDark\" />\n\n        <TextView\n            android:id=\"@+id/row_amount\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"20dp\"\n            android:text=\"Amount\"\n            android:layout_weight=\"0.5\"\n            android:textSize=\"20sp\"\n            android:textColor=\"@color/colorPrimaryDark\" />\n\n        <TextView\n            android:id=\"@+id/row_method\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"20dp\"\n            android:text=\"Method\"\n            android:layout_weight=\"1.5\"\n            android:textSize=\"20sp\"\n            android:textColor=\"@color/colorPrimaryDark\" />\n\n    </LinearLayout>\n\n    <android.support.v4.widget.SwipeRefreshLayout\n        android:id=\"@+id/report_swipe_refresh_layout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_below=\"@+id/linearLayout\">\n\n        <ListView\n            android:id=\"@+id/reportList\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n        </ListView>\n\n    </android.support.v4.widget.SwipeRefreshLayout>\n\n</RelativeLayout> \n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"horizontal\" android:layout_width=\"fill_parent\"\n    android:layout_height=\"match_parent\">\n\n    <TextView\n        android:id=\"@+id/row_upvotes\"\n        android:layout_width=\"80dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"40dp\"\n        android:layout_marginTop=\"20dp\"\n        android:text=\"@string/defaultAmount\"\n        android:textSize=\"18sp\" />\n\n    <TextView\n        android:id=\"@+id/row_amount\"\n        android:layout_width=\"80dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"20dp\"\n        android:layout_marginLeft=\"10dp\"\n        android:text=\"@string/defaultAmount\"\n        android:layout_weight=\"1\"\n        android:textSize=\"18sp\" />\n\n    <TextView\n        android:id=\"@+id/row_method\"\n        android:layout_width=\"80dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"20dp\"\n\n        android:text=\"@string/defaultMethod\"\n        android:layout_weight=\"1\"\n        android:textSize=\"18sp\" />\n\n    <ImageView\n        android:id=\"@+id/imgDelete\"\n        android:layout_width=\"25dp\"\n        android:layout_height=\"25dp\"\n        android:layout_marginTop=\"20dp\"\n        android:layout_weight=\"1\"\n        android:src=\"@android:drawable/ic_delete\" />\n\n</LinearLayout> \n```", "```\nprivate class GetAllTask extends AsyncTask<String, Void, List<Donation>> {\n\n        protected ProgressDialog dialog;\n        protected Context context;\n\n        public GetAllTask(Context context) {\n            this.context = context;\n        }\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            this.dialog = new ProgressDialog(context, 1);\n            this.dialog.setMessage(\"Retrieving Donations List\");\n            this.dialog.show();\n        }\n\n        @Override\n        protected List<Donation> doInBackground(String... params) {\n\n            try {\n                return (List<Donation>) DonationApi.getAll((String) params[0]);\n            } catch (Exception e) {\n                Log.v(\"ASYNC\", \"ERROR : \" + e);\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n        @Override\n        protected void onPostExecute(List<Donation> result) {\n            super.onPostExecute(result);\n\n            app.donations = result;\n            adapter = new DonationAdapter(context, app.donations);\n            listView.setAdapter(adapter);\n            listView.setOnItemClickListener(Report.this);\n            mSwipeRefreshLayout.setRefreshing(false);\n\n            if (dialog.isShowing())\n                dialog.dismiss();\n        }\n    } \n```", "```\nSwipeRefreshLayout mSwipeRefreshLayout; \n```", "```\n@Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_report);\n\n        listView = (ListView) findViewById(R.id.reportList);\n        mSwipeRefreshLayout = (SwipeRefreshLayout) findViewById(R.id.report_swipe_refresh_layout);\n\n        new GetAllTask(this).execute(\"/donations\");\n\n        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n            @Override\n            public void onRefresh() {\n                new GetAllTask(Report.this).execute(\"/donations\");\n            }\n        });\n    } \n```", "```\nclass DonationAdapter extends ArrayAdapter<Donation> {\n    private Context context;\n    public List<Donation> donations;\n\n    public DonationAdapter(Context context, List<Donation> donations) {\n        super(context, R.layout.row_donate, donations);\n        this.context = context;\n        this.donations = donations;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        LayoutInflater inflater = (LayoutInflater) context\n                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n        View view = inflater.inflate(R.layout.row_donate, parent, false);\n        Donation donation = donations.get(position);\n\n        TextView amountView = (TextView) view.findViewById(R.id.row_amount);\n        TextView methodView = (TextView) view.findViewById(R.id.row_method);\n        TextView upvotesView = (TextView) view.findViewById(R.id.row_upvotes);\n\n        amountView.setText(\"\" + donation.amount);\n        methodView.setText(donation.paymenttype);\n        upvotesView.setText(\"\" + donation.upvotes);\n\n        view.setTag(donation._id); // setting the 'row' id to the id of the donation\n\n        return view;\n    }\n\n    @Override\n    public int getCount() {\n        return donations.size();\n    }\n} \n```", "```\nprivate class GetTask extends AsyncTask<String, Void, Donation> {\n\n        protected ProgressDialog dialog;\n        protected Context context;\n\n        public GetTask(Context context) {\n            this.context = context;\n        }\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            this.dialog = new ProgressDialog(context, 1);\n            this.dialog.setMessage(\"Retrieving Donation Details\");\n            this.dialog.show();\n        }\n\n        @Override\n        protected Donation doInBackground(String... params) {\n\n            try {\n                return (Donation) DonationApi.get((String) params[0], (String) params[1]);\n            } catch (Exception e) {\n                Log.v(\"donate\", \"ERROR : \" + e);\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n        @Override\n        protected void onPostExecute(Donation result) {\n            super.onPostExecute(result);\n\n            Donation donation = result;\n\n            Toast.makeText(Report.this, \"Donation Data [ \" + donation.upvotes + \"]\\n \" +\n                    \"With ID of [\" + donation._id + \"]\", Toast.LENGTH_LONG).show();\n\n            if (dialog.isShowing())\n                dialog.dismiss();\n        }\n    } \n```", "```\nprivate class DeleteTask extends AsyncTask<String, Void, String> {\n\n        protected ProgressDialog dialog;\n        protected Context context;\n\n        public DeleteTask(Context context) {\n            this.context = context;\n        }\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            this.dialog = new ProgressDialog(context, 1);\n            this.dialog.setMessage(\"Deleting Donation\");\n            this.dialog.show();\n        }\n\n        @Override\n        protected String doInBackground(String... params) {\n\n            try {\n                return (String) DonationApi.delete((String) params[0], (String) params[1]);\n            } catch (Exception e) {\n                Log.v(\"donate\", \"ERROR : \" + e);\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n        @Override\n        protected void onPostExecute(String result) {\n            super.onPostExecute(result);\n\n            String s = result;\n            Log.v(\"donate\", \"DELETE REQUEST : \" + s);\n\n            new GetAllTask(Report.this).execute(\"/donations\");\n\n            if (dialog.isShowing())\n                dialog.dismiss();\n        }\n    } \n```", "```\npublic void onDonationDelete(final Donation donation) {\n        String stringId = donation._id;\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n        builder.setTitle(\"Delete Donation?\");\n        builder.setIcon(android.R.drawable.ic_delete);\n        builder.setMessage(\"Are you sure you want to Delete the \\'Donation with ID \\' \\n [ \"\n                + stringId + \" ] ?\");\n        builder.setCancelable(false);\n\n        builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialog, int id) {\n\n                new DeleteTask(Report.this).execute(\"/donations\", donation._id);\n            }\n        }).setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialog, int id) {\n                dialog.cancel();\n            }\n        });\n        AlertDialog alert = builder.create();\n        alert.show();\n    } \n```", "```\npackage ie.app.activities;\n\nimport android.app.AlertDialog;\nimport android.app.ProgressDialog;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.os.AsyncTask;\nimport android.support.v4.widget.SwipeRefreshLayout;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.view.ViewGroup;\nimport android.widget.AdapterView;\nimport android.widget.AdapterView.OnItemClickListener;\nimport android.widget.ArrayAdapter;\nimport android.widget.ImageView;\nimport android.widget.ListView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport java.util.List;\n\nimport ie.app.R;\nimport ie.app.api.DonationApi;\nimport ie.app.models.Donation;\n\npublic class Report extends Base implements OnItemClickListener, OnClickListener {\n    ListView listView;\n    DonationAdapter adapter;\n    SwipeRefreshLayout mSwipeRefreshLayout;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_report);\n\n        listView = (ListView) findViewById(R.id.reportList);\n        mSwipeRefreshLayout = (SwipeRefreshLayout) findViewById(R.id.report_swipe_refresh_layout);\n\n        new GetAllTask(this).execute(\"/donations\");\n\n        mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n            @Override\n            public void onRefresh() {\n                new GetAllTask(Report.this).execute(\"/donations\");\n            }\n        });\n\n    }\n\n    @Override\n    public void onItemClick(AdapterView<?> arg0, View row, int pos, long id) {\n\n        new GetTask(this).execute(\"/donations\", row.getTag().toString());\n    }\n\n    @Override\n    public void onClick(View view) {\n        if (view.getTag() instanceof Donation) {\n            onDonationDelete((Donation) view.getTag());\n        }\n    }\n\n    public void onDonationDelete(final Donation donation) {\n        String stringId = donation._id;\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n        builder.setTitle(\"Delete Donation?\");\n        builder.setIcon(android.R.drawable.ic_delete);\n        builder.setMessage(\"Are you sure you want to Delete the \\'Donation with ID \\' \\n [ \"\n                + stringId + \" ] ?\");\n        builder.setCancelable(false);\n\n        builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialog, int id) {\n\n                new DeleteTask(Report.this).execute(\"/donations\", donation._id);\n            }\n        }).setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialog, int id) {\n                dialog.cancel();\n            }\n        });\n        AlertDialog alert = builder.create();\n        alert.show();\n    }\n\n    private class GetAllTask extends AsyncTask<String, Void, List<Donation>> {\n\n        protected ProgressDialog dialog;\n        protected Context context;\n\n        public GetAllTask(Context context) {\n            this.context = context;\n        }\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            this.dialog = new ProgressDialog(context, 1);\n            this.dialog.setMessage(\"Retrieving Donations List\");\n            this.dialog.show();\n        }\n\n        @Override\n        protected List<Donation> doInBackground(String... params) {\n\n            try {\n                return (List<Donation>) DonationApi.getAll((String) params[0]);\n            } catch (Exception e) {\n                Log.v(\"ASYNC\", \"ERROR : \" + e);\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n        @Override\n        protected void onPostExecute(List<Donation> result) {\n            super.onPostExecute(result);\n\n            app.donations = result;\n            adapter = new DonationAdapter(context, app.donations);\n            listView.setAdapter(adapter);\n            listView.setOnItemClickListener(Report.this);\n            mSwipeRefreshLayout.setRefreshing(false);\n\n            if (dialog.isShowing())\n                dialog.dismiss();\n        }\n    }\n\n    private class GetTask extends AsyncTask<String, Void, Donation> {\n\n        protected ProgressDialog dialog;\n        protected Context context;\n\n        public GetTask(Context context) {\n            this.context = context;\n        }\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            this.dialog = new ProgressDialog(context, 1);\n            this.dialog.setMessage(\"Retrieving Donation Details\");\n            this.dialog.show();\n        }\n\n        @Override\n        protected Donation doInBackground(String... params) {\n\n            try {\n                return (Donation) DonationApi.get((String) params[0], (String) params[1]);\n            } catch (Exception e) {\n                Log.v(\"donate\", \"ERROR : \" + e);\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n        @Override\n        protected void onPostExecute(Donation result) {\n            super.onPostExecute(result);\n\n            Donation donation = result;\n\n            Toast.makeText(Report.this, \"Donation Data [ \" + donation.upvotes + \"]\\n \" +\n                    \"With ID of [\" + donation._id + \"]\", Toast.LENGTH_LONG).show();\n\n            if (dialog.isShowing())\n                dialog.dismiss();\n        }\n    }\n\n    private class DeleteTask extends AsyncTask<String, Void, String> {\n\n        protected ProgressDialog dialog;\n        protected Context context;\n\n        public DeleteTask(Context context) {\n            this.context = context;\n        }\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            this.dialog = new ProgressDialog(context, 1);\n            this.dialog.setMessage(\"Deleting Donation\");\n            this.dialog.show();\n        }\n\n        @Override\n        protected String doInBackground(String... params) {\n\n            try {\n                return (String) DonationApi.delete((String) params[0], (String) params[1]);\n            } catch (Exception e) {\n                Log.v(\"donate\", \"ERROR : \" + e);\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n        @Override\n        protected void onPostExecute(String result) {\n            super.onPostExecute(result);\n\n            String s = result;\n            Log.v(\"donate\", \"DELETE REQUEST : \" + s);\n\n            new GetAllTask(Report.this).execute(\"/donations\");\n\n            if (dialog.isShowing())\n                dialog.dismiss();\n        }\n    }\n\n    class DonationAdapter extends ArrayAdapter<Donation> {\n        private Context context;\n        public List<Donation> donations;\n\n        public DonationAdapter(Context context, List<Donation> donations) {\n            super(context, R.layout.row_donate, donations);\n            this.context = context;\n            this.donations = donations;\n        }\n\n        @Override\n        public View getView(int position, View convertView, ViewGroup parent) {\n            LayoutInflater inflater = (LayoutInflater) context\n                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n            View view = inflater.inflate(R.layout.row_donate, parent, false);\n            Donation donation = donations.get(position);\n\n            ImageView imgDelete = (ImageView) view.findViewById(R.id.imgDelete);\n            imgDelete.setTag(donation);\n            imgDelete.setOnClickListener(Report.this);\n\n            TextView amountView = (TextView) view.findViewById(R.id.row_amount);\n            TextView methodView = (TextView) view.findViewById(R.id.row_method);\n            TextView upvotesView = (TextView) view.findViewById(R.id.row_upvotes);\n\n            amountView.setText(\"\" + donation.amount);\n            methodView.setText(donation.paymenttype);\n            upvotesView.setText(\"\" + donation.upvotes);\n\n            view.setTag(donation._id); // setting the 'row' id to the id of the donation\n\n            return view;\n        }\n\n        @Override\n        public int getCount() {\n            return donations.size();\n        }\n    }\n} \n```", "```\npublic void donateButtonPressed (View view) {\n        String method = paymentMethod.getCheckedRadioButtonId() == R.id.PayPal ? \"PayPal\" : \"Direct\";\n        int donatedAmount =  amountPicker.getValue();\n        if (donatedAmount == 0)\n        {\n            String text = amountText.getText().toString();\n            if (!text.equals(\"\"))\n                donatedAmount = Integer.parseInt(text);\n        }\n        if (donatedAmount > 0)\n        {\n            app.newDonation(new Donation(donatedAmount, method, 0));\n            progressBar.setProgress(app.totalDonated);\n            String totalDonatedStr = \"$\" + app.totalDonated;\n            amountTotal.setText(totalDonatedStr);\n        }\n    }\n\n    @Override\n    public void reset(MenuItem item) {\n        app.totalDonated = 0;\n        amountTotal.setText(\"$\" + app.totalDonated);\n    } \n```", "```\nprivate class InsertTask extends AsyncTask<Object, Void, String> {\n\n        protected ProgressDialog dialog;\n        protected Context context;\n\n        public InsertTask(Context context) {\n            this.context = context;\n        }\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            this.dialog = new ProgressDialog(context, 1);\n            this.dialog.setMessage(\"Saving Donation....\");\n            this.dialog.show();\n        }\n\n        @Override\n        protected String doInBackground(Object... params) {\n\n            String res = null;\n            try {\n                Log.v(\"donate\", \"Donation App Inserting\");\n\n            }\n\n            catch(Exception e)\n            {\n                Log.v(\"donate\",\"ERROR : \" + e);\n                e.printStackTrace();\n            }\n            return res;\n        }\n\n        @Override\n        protected void onPostExecute(String result) {\n            super.onPostExecute(result);\n\n        }\n    } \n```", "```\nprivate class ResetTask extends AsyncTask<Object, Void, String> {\n\n        protected ProgressDialog         dialog;\n        protected Context                 context;\n\n        public ResetTask(Context context) {\n            this.context = context;\n        }\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            this.dialog = new ProgressDialog(context, 1);\n            this.dialog.setMessage(\"Deleting Donations....\");\n            this.dialog.show();\n        }\n\n        @Override\n        protected String doInBackground(Object... params) {\n\n            String res = null;\n            try {\n                    res = DonationApi.deleteAll((String)params[0]);\n            }\n\n            catch(Exception e)\n            {\n                Log.v(\"donate\",\" RESET ERROR : \" + e);\n                e.printStackTrace();\n            }\n            return res;\n        }\n\n        @Override\n        protected void onPostExecute(String result) {\n            super.onPostExecute(result);\n\n            app.totalDonated = 0;\n            progressBar.setProgress(app.totalDonated);\n            amountTotal.setText(\"$\" + app.totalDonated);\n\n            if (dialog.isShowing())\n                dialog.dismiss();\n        }\n    } \n```"]