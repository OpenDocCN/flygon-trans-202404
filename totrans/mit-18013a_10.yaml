- en: 'Chapter 9: Derivatives of Vector Fields and the Gradient in Polar Coordinates'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The divergence and curl of vector fields are defined, the problem of providing
    visual representation of fields is discussed, and the gradient of a scalar field
    is discussed in some detail. In particular we consider how to express it in an
    arbitrary orthogonal coordinate system, in three different ways.
  prefs: []
  type: TYPE_NORMAL
- en: Topics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 9.1  [Derivatives of Vector Functions; the Divergence](section01.html)
  prefs: []
  type: TYPE_NORMAL
- en: 9.2  [The Curl](section02.html)
  prefs: []
  type: TYPE_NORMAL
- en: 9.3  [Visualizing Functions of Two Variables](section03.html)
  prefs: []
  type: TYPE_NORMAL
- en: 9.4  [The Gradient in Polar Coodinates and other Orthogonal Coordinate Systems](section04.html)
  prefs: []
  type: TYPE_NORMAL
- en: 9.1 Derivatives of Vector Functions; the Divergence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The gradient is a vector function of several variables. Such an entity is called
    a **vector field,** and we can ask, **how do we compute derivatives of such things?**
  prefs: []
  type: TYPE_NORMAL
- en: We will consider this question in three dimensions, where we can answer it as
    follows.
  prefs: []
  type: TYPE_NORMAL
- en: Since a vector in three dimensions has three components, and each of these will
    have partial derivatives in each of three directions, there are actually nine
    partial derivatives of a vector field in any coordinate system.
  prefs: []
  type: TYPE_NORMAL
- en: Thus in our usual rectangular coordinates we have, with a vector field **v**(x,
    y, z), partial derivatives
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2b4aa902b01d232f1026da302c4e9643.jpg)'
  prefs: []
  type: TYPE_IMG
- en: All of these can be computed by the same rules used for computing partial derivatives
    of scalar functions (often called scalar fields). Fortunately for us, there are
    only two combinations of these that we usually encounter and that are worth knowing
    about.
  prefs: []
  type: TYPE_NORMAL
- en: The first of these is the **divergence**, written as div **v**, or in terms
    of the differential operator del, ![](../Images/19c0b6425d1c85d9c594c5b570d7390a.jpg)
    which is the vector operator with components ![](../Images/78b6428a7be4ed443125e93cd3497185.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: Explicitly, it is the dot product of this differential operator with the vector
    **v**
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c7d4f4f2031ec7564b68aebffe28bd94.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Being a dot product, it is a number and not a vector.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is how the divergence is defined, and again it can be calculated by straightforward
    differentiation, but we must also address the question: what does it mean? Why
    is it of interest to us? How can we use it? How can we compute it in other coordinate
    systems?'
  prefs: []
  type: TYPE_NORMAL
- en: We will defer the answer to these questions until we have discussed integration,
    since the answers are intimately related to that subject.
  prefs: []
  type: TYPE_NORMAL
- en: 'However we can use the rules of differentiation to deduce the following useful
    statements:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The divergence of the sum of two vectors is the sum of their individual divergences.**'
  prefs: []
  type: TYPE_NORMAL
- en: And the **divergence of a function f multiplied by a vector v is given as follows**
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e871e3fc0d58baaf0b9fd7ae0c456764.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Exercises:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**9.1 Derive this equation.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**9.2 Apply it to find the divergence of ![](../Images/c0df92a4e01c7e58b2179d9248f62092.jpg)in
    spherical coordinates. Recall that the vector ![](../Images/5f2a507b6c3887e2edf94b99c89e9c04.jpg)
    has components (x, y, z) in spherical coordinates.**'
  prefs: []
  type: TYPE_NORMAL
- en: 9.2 The Curl
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The second important combination of partial derivatives of a vector field **v**
    is its **curl.**
  prefs: []
  type: TYPE_NORMAL
- en: This is **the cross product of the differential operator ![](../Images/19c0b6425d1c85d9c594c5b570d7390a.jpg)
    with the vector v**
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8a38dd9e01ebb1c1115e7e2acb82a4c2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Though again we will defer full explanation of the meaning of this entity we
    can observe some important properties which give it great importance in themselves.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since we can create a vector from a scalar by taking its gradient, we can ask:'
  prefs: []
  type: TYPE_NORMAL
- en: What happens if we now take the curl of the resulting gradient? That is, what
    is **curl grad** f? We can also ask. What is div **curl** **v**? And what is div
    **grad** f?
  prefs: []
  type: TYPE_NORMAL
- en: The first two of these questions have wonderfully simple answers which are extremely
    important. The third has an important answer though one whose meaning will not
    yet be apparent.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercises:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**9.3 Evaluate div curl v and curl grad f in general; these answers in themselves
    make curl and div important operators.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**9.4 Write down the operator div grad in terms of partial derivatives. (It
    is often called "the Laplacian". )**'
  prefs: []
  type: TYPE_NORMAL
- en: 9.3 Visualizing Functions of Two Variables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A function of two real variables defines a surface in three dimensions, the
    dimensions being the original two and the function itself.
  prefs: []
  type: TYPE_NORMAL
- en: We can produce a three dimensional image today, but for many years that was
    quite impractical, and mathematicians had to satisfy themselves with two dimensional
    images of these surfaces in three dimensions. There are two fundamental and complementary
    ways to do this.
  prefs: []
  type: TYPE_NORMAL
- en: The first is to plot **equi-value contour lines** in the xy plane. This method
    is used to show equal pressure lines (called isobars) in weather maps, or to show
    height of land surfaces in topographical maps.
  prefs: []
  type: TYPE_NORMAL
- en: When such contours are reasonably smooth, the tangent to a contour line represents
    a direction that is in the **intersection** of **a horizontal plane** and the
    **tangent plane to the surface** at that point.
  prefs: []
  type: TYPE_NORMAL
- en: '**The normal to a contour line** in the xy plane points in the direction of
    **the gradient vector (plus or minus it)** and can **also be used to describe
    the surface.**'
  prefs: []
  type: TYPE_NORMAL
- en: With a little practice you can get a pretty good idea what the function surface
    looks like from such contour lines. Thus **the function rises relatively steeply**
    where such contour lines for different values of the function **are close to one
    another,** and rises relatively gently when they are far apart.
  prefs: []
  type: TYPE_NORMAL
- en: '**A second way to describe a function of two variables is by drawing little
    arrows in the direction of the gradient vector at lots of points, and connecting
    these into "lines of increase"** (not a common term).'
  prefs: []
  type: TYPE_NORMAL
- en: These lines will be perpendicular to the equal-value contour lines, and will
    go from "local minimum points of the function to local maximum points", (or to
    or from the boundary of the region in which you are examining the function).
  prefs: []
  type: TYPE_NORMAL
- en: You can get a pretty good idea of the nature of the function from a picture
    of this kind.
  prefs: []
  type: TYPE_NORMAL
- en: When the function under investigation represents **potential energy** in some
    physical setting, or **potential in electrostatics,** then the lines here described
    are **"lines of force"** which show the direction that the force on an object
    or tiny charged particle point.
  prefs: []
  type: TYPE_NORMAL
- en: For physical applications we really want to be able to visualize functions of
    three variables, which are unusually difficult to describe on one flat surface.
    We will try to find ways to do this some day.
  prefs: []
  type: TYPE_NORMAL
- en: In the applet that follows, you can enter your favorite standard function of
    two variables, and a domain, and see what contour lines for it look like. With
    the first slider you can look at the gradient at a grid of points in the plane
    (the number of grid points is adjustable).
  prefs: []
  type: TYPE_NORMAL
- en: At the last grid point accessed, you can look at directional derivatives using
    the second slider. For the angle shown by the arrow, the magnitude of the directional
    derivative is represented by the length of the arrow. The sign of the directional
    derivative is positive when the dot product of the direction with the gradient
    is positive.
  prefs: []
  type: TYPE_NORMAL
- en: You can look at the actual surface defined by the function in the [Directional
    Derivative applet](../chapter06/section06.html#DirectionalDerivatives) to hone
    your intuition.
  prefs: []
  type: TYPE_NORMAL
- en: <applet code="ContourLinesGradients" codebase="../applets/" archive="contourLinesGradients.jar,mk_lib.jar,parser_math.jar,jcbwt363.jar"
    width="760" height="450"></applet>
  prefs: []
  type: TYPE_NORMAL
- en: 9.4 The Gradient in Polar Coordinates and other Orthogonal Coordinate Systems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Suppose we have a function given to us as f(x, y) in two dimensions or as g(x,
    y, z) in three dimensions. We can take the partial derivatives with respect to
    the given variables and arrange them into a vector function of the variables called
    **the gradient of f,** namely
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ee577be68222c2789317346aeada8142.jpg)'
  prefs: []
  type: TYPE_IMG
- en: which mean
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/06a2b278d9cc7ff1ac61dd9aeb65bcce.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Suppose however, we are given f as a function of r and ![](../Images/b5539669fc2ce11e934acf52b91eaf5d.jpg),
    that is, in polar coordinates, (or g in spherical coordinates, as a function of
    ![](../Images/0026de29db2e0af68656169d70313506.jpg), ![](../Images/b5539669fc2ce11e934acf52b91eaf5d.jpg),
    and ![](../Images/fc064b6ac937e57894ae17cca9e0cc94.jpg)).
  prefs: []
  type: TYPE_NORMAL
- en: For example, suppose ![](../Images/49c607afa7d3bf26bbd5b02ce76d1dd9.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: '**How do we find the gradient of f or g?**'
  prefs: []
  type: TYPE_NORMAL
- en: '**One way** to find the gradient of such a function is to **convert r or ![](../Images/5f2a507b6c3887e2edf94b99c89e9c04.jpg)
    or ![](../Images/0af78f3764417ec5f7866d140c697c49.jpg) into rectangular coordinates
    using the appropriate formulae for them,** and perform the partial differentiation
    on the resulting expressions.'
  prefs: []
  type: TYPE_NORMAL
- en: Thus we can write
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/03422789d11db0ce542afeda2c197ef8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: and find, by ordinary partial differentiating
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6f39572ba0cfc13c2454419f0be4af6a.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It is a bit more convenient sometimes, to be able to express the gradient directly
    in polar coordinates or spherical coordinates, like it is expressed in rectangular
    coordinates as above.
  prefs: []
  type: TYPE_NORMAL
- en: We want here an expression involving partial derivatives with respect to r and
    ![](../Images/b5539669fc2ce11e934acf52b91eaf5d.jpg) **multiplied by vectors pointing
    respectively in the r direction, and ![](../Images/0af78f3764417ec5f7866d140c697c49.jpg)
    direction.**
  prefs: []
  type: TYPE_NORMAL
- en: 'So we want to know: **what vectors should these partial derivatives be multiplied
    by in order to form the gradient?**'
  prefs: []
  type: TYPE_NORMAL
- en: '**When we find the answer, the actual partial derivative with respect to each
    polar variable will be the dot product of a unit vector in a polar direction with
    the gradient.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**We therefore digress to discuss what thes unit vectors are so that you can
    recognize them.**'
  prefs: []
  type: TYPE_NORMAL
- en: The r direction is the direction tilted by an angle ![](../Images/b5539669fc2ce11e934acf52b91eaf5d.jpg)
    counterclockwise from the x axis. A unit vector in that direction, call it **u[r],**
    can be written in any of the three following forms
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/16d55ed623533297c9317579a4f45529.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The unit vector in the ![](../Images/b5539669fc2ce11e934acf52b91eaf5d.jpg) direction
    lies in the direction 90^o beyond the r direction, counterclockwisely, and is
    therefore given by
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4dba21b923ec1ee70b12cbca96d8841a.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '![](../Images/28b25bc23da74b757fa69f7a6ccc8918.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**We now ask: what is ![](../Images/19c0b6425d1c85d9c594c5b570d7390a.jpg)f
    in polar coordinates?**'
  prefs: []
  type: TYPE_NORMAL
- en: We know that if we make differential changes in r and ![](../Images/b5539669fc2ce11e934acf52b91eaf5d.jpg)
    the resulting change in f will be given by
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f6534918054be95825dffeb8957db9dd.jpg)     (A)'
  prefs: []
  type: TYPE_IMG
- en: since this relation holds for any variables at all.
  prefs: []
  type: TYPE_NORMAL
- en: But they must also obey
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2d502efef5e564c2559729aeef5494f6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As we noted briefly in [section 3.8](../chapter03/section08.html), distance
    in polar coordinates upon making small changes in the variables r and ![](../Images/b5539669fc2ce11e934acf52b91eaf5d.jpg)
    is described by
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bbe786026b53c1e689a9a45e89189074.jpg)'
  prefs: []
  type: TYPE_IMG
- en: From this we deduce that ![](../Images/6ee8637a9e7a1dfc3821a001e87ef122.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: 'Putting the two equations for ds together, we deduce:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b0849859a192cae19abc68511327aca0.jpg) is the partial derivative
    of f with respect to r, just as ![](../Images/0d7b538d2276b230d8218d516c650429.jpg)
    is its partial derivative with respect to x.'
  prefs: []
  type: TYPE_NORMAL
- en: But **because ![](../Images/3deb3fa952787e71be4212aca74c082b.jpg) has a factor
    of r in it, there must be a compensating factor of r in the denominator of the
    component of ![](../Images/19c0b6425d1c85d9c594c5b570d7390a.jpg)f in the ![](../Images/0af78f3764417ec5f7866d140c697c49.jpg)
    direction**
  prefs: []
  type: TYPE_NORMAL
- en: '**![](../Images/52216e7e439e570aaa5a232e3d805d4a.jpg)**'
  prefs: []
  type: TYPE_NORMAL
- en: '**and**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ba2ba0b084950cb4dc19199394d49723.jpg)'
  prefs: []
  type: TYPE_IMG
- en: A similar computation can be made for any orthogonal directions in any dimension,
    and we can anticipate the result.
  prefs: []
  type: TYPE_NORMAL
- en: '**The component of ![](../Images/19c0b6425d1c85d9c594c5b570d7390a.jpg)f in
    the direction of any such variable will be the partial derivative of f with respect
    to that variable, divided by the ratio of distance change in that direction to
    change in the variable itself.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Using** the last equation we can immediately deduce that **the gradient of
    ![](../Images/0af78f3764417ec5f7866d140c697c49.jpg) is ![](../Images/1642ee97bcdd933f5a59b6bc5cc6a873.jpg),
    except of course at r = 0, where ![](../Images/0af78f3764417ec5f7866d140c697c49.jpg)
    is not differentiable.** Similarly we find that the gradient of ![](../Images/eafc78c3ab37d8fdb776928a4db2e3db.jpg).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercises:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**9.5 Use the fact that both angular variables in spherical coordinates are
    polar variables to express ds² in 3 dimensions in terms of differentials of the
    three variables of spherical coordinates. From this deduce the formula for gradient
    in spherical coordinates.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**9.6 Find the gradient of ![](../Images/ee1fe0a4d3b7d18e92bf0240ae7e1e69.jpg)
    in spherical coordinates by this method and the gradient of ![](../Images/0af78f3764417ec5f7866d140c697c49.jpg)
    in spherical coordinates also.**'
  prefs: []
  type: TYPE_NORMAL
- en: There is a **third way** to find the gradient in terms of given coordinates,
    and that is by using the **chain rule.**
  prefs: []
  type: TYPE_NORMAL
- en: We can first consider differential change of f in rectangular coordinates, and
    then relate the differential changes in x and y to differential changes in the
    other coordinates, say r and ![](../Images/b5539669fc2ce11e934acf52b91eaf5d.jpg).
    Combining these we can relate the change in f to changes in the latter two variables.
  prefs: []
  type: TYPE_NORMAL
- en: Since we know how to write the gradient in rectangular coordinates and can recognize
    unit vectors, we can express the resulting expression in terms of components of
    the gradient in the other coordinate system.
  prefs: []
  type: TYPE_NORMAL
- en: Explicitly we can write
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b1ba6bbbfc55021bdd7f725003e64656.jpg)'
  prefs: []
  type: TYPE_IMG
- en: and use the latter two equations to get rid of dx and dy in the first equation.
    The result is an expression for df in terms of dr and d![](../Images/b5539669fc2ce11e934acf52b91eaf5d.jpg),
    **the coefficients of which can be described in terms of unit vectors in the various
    directions, and the gradient in rectangular coordinates.**
  prefs: []
  type: TYPE_NORMAL
- en: Comparing that equation with **the basic formula defining partial derivatives,**
    [Equation (A)](#Equation_A) above you can read off the components of the gradient.
  prefs: []
  type: TYPE_NORMAL
- en: This approach is useful when f is given in rectangular coordinates but you want
    to write the gradient in your coordinate system, or if you are unsure of the relation
    between ds² and distance in that coordinate system.
  prefs: []
  type: TYPE_NORMAL
- en: '**Exercises:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**9.7 Do this computation out explicitly in polar coordinates.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**9.8 Do it as well in spherical coordinates.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**What variables should we keep constant in taking partial derivatives?**'
  prefs: []
  type: TYPE_NORMAL
- en: It is worth noting that **when we take the partial derivative with respect to
    x or y we always mean that we are keeping the other variable, y or x, constant;
    on the other hand the partials with respect to r and ![](../Images/0af78f3764417ec5f7866d140c697c49.jpg)
    always mean keeping the other one of these, ![](../Images/0af78f3764417ec5f7866d140c697c49.jpg)or
    r, constant.** Any other meaning has to be described explicitly.
  prefs: []
  type: TYPE_NORMAL
- en: There are times and places where in a partial derivative one can become confused
    as to which variable or variables are being kept constant, and under such circumstances
    it is wise to modify the notation to supply this information explicitly. Thus
    we can write ![](../Images/006d5ee74e222968ab064bf7db1fad69.jpg) to mean the partial
    derivative with respect to x keeping y fixed, and then there can be no confusion
    as to what is kept constant.
  prefs: []
  type: TYPE_NORMAL
- en: '**The most important facts to remember about the gradient are:**'
  prefs: []
  type: TYPE_NORMAL
- en: It is straightforward to compute, in **any** orthogonal coordinate system
  prefs: []
  type: TYPE_NORMAL
- en: You can use it to determine the directional derivative of the function involved,
    in any direction.
  prefs: []
  type: TYPE_NORMAL
- en: In rectangular coordinates its components are the respective partial derivatives.
  prefs: []
  type: TYPE_NORMAL
- en: The gradient of the sum of two fields is the sum of their gradients (the gradient
    is a linear operator).
  prefs: []
  type: TYPE_NORMAL
- en: The gradient of a product can be computed by applying the usual product rule
    for differentiation.
  prefs: []
  type: TYPE_NORMAL
