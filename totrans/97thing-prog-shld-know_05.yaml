- en: Beauty Is in Simplicity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Beauty Is in Simplicity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There is one quote that I think is particularly good for all software developers
    to know and keep close to their hearts:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Beauty of style and harmony and grace and good rhythm depends on simplicity.*
    — Plato'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In one sentence I think this sums up the values that we as software developers
    should aspire to.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a number of things we strive for in our code:'
  prefs: []
  type: TYPE_NORMAL
- en: Readability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintainability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Speed of development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The elusive quality of beauty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plato is telling us that the enabling factor for all of these qualities is simplicity.
  prefs: []
  type: TYPE_NORMAL
- en: What is beautiful code? This is potentially a very subjective question. Perception
    of beauty depends heavily on individual background, just as much of our perception
    of anything depends on our background. People educated in the arts have a different
    perception of (or at least approach to) beauty than people educated in the sciences.
    Arts majors tend to approach beauty in software by comparing software to works
    of art, while science majors tend to talk about symmetry and the golden ratio,
    trying to reduce things to formulae. In my experience, simplicity is the foundation
    of most of the arguments from both sides.
  prefs: []
  type: TYPE_NORMAL
- en: Think about source code that you have studied. If you haven't spent time studying
    other people's code, stop reading this right now and find some open source code
    to study. Seriously! I mean it! Go search the web for some code in your language
    of choice, written by some well-known, acknowledged expert.
  prefs: []
  type: TYPE_NORMAL
- en: You're back? Good. Where were we? Ah yes... I have found that code that resonates
    with me and that I consider beautiful has a number of properties in common. Chief
    among these is simplicity. I find that no matter how complex the total application
    or system is, the individual parts have to be kept simple. Simple objects with
    a single responsibility containing similarly simple, focused methods with descriptive
    names. Some people think the idea of having short methods of five to ten lines
    of code is extreme, and some languages make it very hard to do this, but I think
    that such brevity is a desirable goal nonetheless.
  prefs: []
  type: TYPE_NORMAL
- en: The bottom line is that beautiful code is simple code. Each individual part
    is kept simple with simple responsibilities and simple relationships with the
    other parts of the system. This is the way we can keep our systems maintainable
    over time, with clean, simple, testable code, keeping the speed of development
    high throughout the lifetime of the system. Beauty is born of and found in simplicity.
  prefs: []
  type: TYPE_NORMAL
- en: By Jørn Ølmheim
  prefs: []
  type: TYPE_NORMAL
