- en: 'Chapter 1: Road Map'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章：路线图
- en: The Road Map
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 路线图
- en: This book follows familiar conventions. It addresses a few house keeping topics
    (like this very chapter) before properly introducing the language. That proper
    introduction starts off with simple topics (variables and data types) and works
    its way up to more complicated areas towards the end, such as generics.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书遵循熟悉的惯例。在正式介绍语言之前，它涉及了一些常规性的话题（比如这一章），这包括从简单的主题（变量和数据类型）开始，逐渐向更复杂的领域发展，例如泛型。
- en: The Gloss-Overs
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 忽略的细节
- en: This book won't go into any great detail about some topics. It's mostly concerned
    with the TypeScript language. As a result, the book does not provide step-by-step
    instructions for things like downloading TypeScript, installing it or configuring
    it. This and similar topics are covered in much better detail elsewhere. The final
    chapter, "Where Do I Go From Here?" points to some useful online resources focusing
    on these things.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书不会详细讨论一些主题。它主要关注 TypeScript 语言。因此，本书不提供关于下载 TypeScript、安装它或配置它的逐步说明。这些以及类似的主题在其他地方有更详细的介绍。最后一章，“我接下来该去哪里？”指向了一些关注这些事情的有用在线资源。
- en: Practical Considerations
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实践考虑
- en: 'This chapter covers the TypeScript development experience at a higher level.
    It answers questions such as:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章覆盖了更高层次的 TypeScript 开发经验。它回答了一些问题，例如：
- en: How do I write TypeScript applications in the first place?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我如何首先编写 TypeScript 应用程序？
- en: How does TypeScript run in the browser? (It doesn't, actually - it "transpiles"
    to JavaScript).
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TypeScript 在浏览器中是如何运行的？（实际上并不是 - 它会“转译”为 JavaScript）。
- en: How do I debug TypeScript apps?
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何调试 TypeScript 应用程序？
- en: The goal here to help ground you in the TypeScript "world" and describe the
    big picture of what's happens as you build TypeScript solutions. As you'll see,
    it's not very complicated^([1](#fn_1)).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的目标是帮助你立足于 TypeScript 的“世界”，描述在构建 TypeScript 解决方案时发生的大局。正如你将看到的那样，它并不是非常复杂^([1](#fn_1))。
- en: Introducing Types
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍类型
- en: TypeScript offers static types. You don't need to use them, but they are pretty
    helpful. This chapter starts off describing primitives (integers, strings and
    the like). It shows how declaring a variable's type helps good integrated development
    environments (IDEs) provide useful edit-time and compile-time feedback. We'll
    also take an opportunity to try and knock the TypeScript doubters off their perch
    with the strong typing goodness :)^([2](#fn_2)).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 提供了静态类型。你不需要使用它们，但它们非常有用。本章首先描述了原始类型（整数、字符串等）。它展示了声明变量类型如何帮助良好的集成开发环境（IDE）提供有用的编辑时和编译时反馈。我们还将有机会试图用强类型的优点打动
    TypeScript 的怀疑者们 :)^([2](#fn_2))。
- en: Types in Depth
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 深入类型
- en: The real world is complicated with complex data structures. TypeScript offers
    up the notion of `interfaces` to help us describe and manage them. This chapter
    introduces interfaces as a way to describe them starting with a flat object and
    moving on to a more complex JSON formatted response from a REST service.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现实世界是复杂的，有着复杂的数据结构。TypeScript 提供了`接口`的概念来帮助我们描述和管理它们。本章介绍了接口作为一种描述它们的方式，从一个平面对象开始，然后转向来自
    REST 服务的更复杂的 JSON 格式响应。
- en: TypeScript interfaces look and feel quite similar to interfaces in C# and Java.
    Generally speaking, interfaces are one of the backbones for many common and important
    design patterns and principles (think [SOLID](http://williamdurand.fr/2013/07/30/from-stupid-to-solid-code/)).
    TypeScript interfaces enable us to more directly implement these design patterns^([3](#fn_3)).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 接口看起来感觉非常类似于 C# 和 Java 中的接口。一般来说，接口是许多常见且重要的设计模式和原则（想想[SOLID](http://williamdurand.fr/2013/07/30/from-stupid-to-solid-code/)）的支柱之一。TypeScript
    接口使我们能够更直接地实现这些设计模式^([3](#fn_3))。
- en: 'TypeScript offers several other ways to describe data. The chapter covers a
    few the most useful ones. These include:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 提供了几种描述数据的方式。本章介绍了其中几种最有用的方式。这些包括：
- en: 'Enumerations: Assigning a label to a fixed value.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举：给固定值分配一个标签。
- en: 'Union Types: Define a new custom type that can hold two or more different types
    of values (including hard coded strings).'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联合类型：定义一个可以容纳两种或更多不同类型值（包括硬编码字符串）的新自定义类型。
- en: TypeScript provides other types, such as intersection types. This book takes
    a pass on those types for now - they feel like edge cases and although interesting
    and vitally useful when you can, you know, use them, most of us don't live on
    the edge.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 提供了其他类型，比如交叉类型。本书暂时不涉及这些类型 - 它们感觉像是边缘情况，虽然在可以使用时很有趣且至关重要，但大多数人并不常用。
- en: Template Strings
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模板字符串
- en: Eliminate cumbersome string manipulation through the magic of template strings!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 通过模板字符串的魔力消除繁琐的字符串操作！
- en: Functions
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数
- en: A detailed look into how TypeScript enhances standard JavaScript functions,
    including typed parameters, void return values, default function parameter values
    and more.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 深入了解 TypeScript 如何增强标准 JavaScript 函数，包括类型化参数、void 返回值、默认函数参数值等。
- en: In addition, learn about Arrow Functions, often called "anonymous" or "lambda"
    functions.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，学习箭头函数，通常被称为“匿名”或“lambda”函数。
- en: Introducing Classes and Classes in Depth
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍类和深入了解类
- en: 'TypeScript''s static typing is, as they say, the [bee''s knees](http://www.phrases.org.uk/meanings/the-bees-knees.html).
    Classes are the honey and these two chapters cover them pretty thoroughly:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正如人们所说，TypeScript的静态类型是[绝佳选择](http://www.phrases.org.uk/meanings/the-bees-knees.html)。类就像蜜蜂采集的蜜，这两章对它们进行了相当彻底的讨论：
- en: Class syntax
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类语法
- en: Classes and interfaces
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类和接口
- en: Inheritance
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 继承
- en: Abstract classes
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 抽象类
- en: Static class members
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态类成员
- en: Classes are an important building block for object oriented programming and
    TypeScript provides some solid support here.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 类是面向对象编程的重要组成部分，TypeScript在这里提供了可靠的支持。
- en: Generics
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 泛型
- en: Learn TypeScripts' version of generics as you know them from C# and Java.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 学习 TypeScript 版本的泛型，就像你从 C# 和 Java 中所了解的那样。
- en: Continue Learning
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 继续学习
- en: A big long list of links that will hopefully lead you to TypeScript Greatness.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个大长串的链接，希望能带领你走向 TypeScript 的伟大。
- en: ¹. Isn't this always the case? No specific thing in this post-modern JavaScript
    world of ours is particularly complicated. It surely adds up though. [↩](#reffn_1
    "Jump back to footnote [1] in the text.")
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ¹. 这总是这样吗？在我们这个后现代 JavaScript 世界里，没有什么特别复杂的事情。不过，当然，事情终究会变得复杂起来。 [↩](#reffn_1
    "跳回文本中的脚注 [1]")
- en: ². If you or someone you know is a TypeScript doubter, have a look at this chapter
    and its videos. Invest fifteen minutes or so here and then make up your mind about
    whether you want to invest more time after that. [↩](#reffn_2 "Jump back to footnote
    [2] in the text.")
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ². 如果你或你认识的人对 TypeScript 感到怀疑，请看看这一章及其视频。在这里投资十五分钟左右，然后决定是否想要在此之后继续投资更多时间。 [↩](#reffn_2
    "跳回文本中的脚注 [2]")
- en: ³. As they say in the Old Country, "Come for the static typing, stay for the
    interfaces." [↩](#reffn_3 "Jump back to footnote [3] in the text.")
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ³. 正如古老的国度所说，“为了静态类型而来，为了接口而留下。” [↩](#reffn_3 "跳回文本中的脚注 [3]")
