- en: Lesson 6 Intro
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this lesson, we begin our exploration of **generic operators**—procedures
    that can be called on different data types. The basic idea behind generic operators
    is that we have different types of data that are "intelligent"—they know how to
    manipulate themselves. Procedures are then allowed to be "stupid"—they don't need
    to know anything about data types and somehow it still works out.
  prefs: []
  type: TYPE_NORMAL
- en: We'll then introduce **Racket-1**, a simple Racket interpreter written in Racket.
    While it cannot do all the things Racket can, it does demonstrate the basic components
    that make up an interpreter.
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You should have a good understanding of `calc.rkt` and data abstraction.
  prefs: []
  type: TYPE_NORMAL
- en: Readings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the relevant readings for this lesson:'
  prefs: []
  type: TYPE_NORMAL
- en: '[SICP 2.4](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-17.html#%25_sec_2.4)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SICP 2.51-2.52](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-18.html#%25_sec_2.5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Lecture Notes](http://www-inst.eecs.berkeley.edu/~cs61as/reader/notes.pdf#page=42)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
