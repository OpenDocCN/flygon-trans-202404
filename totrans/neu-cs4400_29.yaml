- en: CurryingTuesday, January 31st
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A *curried* function is a function that, instead of accepting two (or more)
    arguments, accepts only one and returns a function that accepts the rest. For
    example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: It’s easy to write functions for translating between normal and curried versions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Typed version of that, with examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Usages — common with H.O. functions like map, where we want to *fix* one argument.
  prefs: []
  type: TYPE_NORMAL
- en: 'When dealing with such higher-order code, the types are very helpful, since
    every arrow corresponds to a function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'It is common to make the `->` function type associate to the right, so you
    can find this type written as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: or even as
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: but that can be a little confusing…
  prefs: []
  type: TYPE_NORMAL
