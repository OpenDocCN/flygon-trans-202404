- en: 'Chapter 19: The Anti-derivative or Indefinite Integral'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Finding an anti-derivative is finding a function that has a given derivative
    over a range of values. Classes of derivatives for which this can be done are
    described along with some methods for finding anti-derivatives.
  prefs: []
  type: TYPE_NORMAL
- en: Topics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 19.1  [Introduction](section01.html)
  prefs: []
  type: TYPE_NORMAL
- en: 19.2  [Non-uniqueness of Anti-derivatives](section02.html)
  prefs: []
  type: TYPE_NORMAL
- en: 19.3  [Anti-derivatives by Inspection and Classes of Functions that we can Anti-differentiate](section03.html)
  prefs: []
  type: TYPE_NORMAL
- en: 19.4  [Substitution](section04.html)
  prefs: []
  type: TYPE_NORMAL
- en: 19.5  [Integration by Parts](section05.html)
  prefs: []
  type: TYPE_NORMAL
- en: 19.6  [Differentiation with Respect to a Parameter](section06.html)
  prefs: []
  type: TYPE_NORMAL
- en: 19.7  [Partial Fraction Decomposition](section07.html)
  prefs: []
  type: TYPE_NORMAL
- en: 19.1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If we want to study an unknown function defined by some physical or other situation,
    the method of analysis consists of studying its derivative, as a function of appropriate
    variables, and deducing from them an equation for it.
  prefs: []
  type: TYPE_NORMAL
- en: The equation will generally be an example of a differential equation, which
    is an equation that involves derivatives of an unknown function. The process of
    solving a differential equation is called integrating it.
  prefs: []
  type: TYPE_NORMAL
- en: One important special case of this problem occurs when we have an explicit formula
    for the derivative of a function f defined over an interval of a single variable
    x and this formula is depends only on the independent variable x.
  prefs: []
  type: TYPE_NORMAL
- en: '**We want to know as much as this information can provide us about the function
    f.**'
  prefs: []
  type: TYPE_NORMAL
- en: Thus we want to go from g(x), with ![](../Images/f443d4b8683a2f300346b8ded1f897f1.jpg)for
    a < x < b, to f(x); we want to "undo" the differential operator ![](../Images/25cc3744d08508b0331c8dadf2cc48a2.jpg),
    and this could be called undifferentiating to find f(x) itself or as much about
    it as we can; the standard name for this task is finding **the anti-derivative**
    of g(x).
  prefs: []
  type: TYPE_NORMAL
- en: This procedure is also called **finding the indefinite integral of g(x) with
    respect to x.**
  prefs: []
  type: TYPE_NORMAL
- en: We will not use this terminology below, because we want to define the *definite
    integral* in a completely different way, and want to avoid confusion between the
    two notions.
  prefs: []
  type: TYPE_NORMAL
- en: Of course you can anticipate from the similarity in names that there will be
    an intimate relation between the *definite integral* (here not defined at all)
    and the *anti-derivative* here. If you guess as much you are right. But this relation
    is a basic theorem, called the fundamental theorem of calculus.
  prefs: []
  type: TYPE_NORMAL
- en: 19.2 Non-uniqueness of Anti-derivatives
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is a difficulty with finding anti-derivatives akin to the problem of defining
    the *inverse* to a function that takes on some of its values at more than one
    argument each. Knowing that the original function attains one of those values
    does not determine the inverse function; additional information in the form of
    an additional condition is necessary to distinguish among the more than one possible
    original arguments that could be called the inverse function under such circumstances.
  prefs: []
  type: TYPE_NORMAL
- en: 'In going from the derivative to the function we must contend with the fact
    that a constant has zero derivative: thus we can add any constant to any possible
    anti-derivative and get another equally valid one.'
  prefs: []
  type: TYPE_NORMAL
- en: Which is really to say that to determine an anti-derivative completely you must
    add additional information. In particular the value of the function at any one
    argument will be enough to determine it from its derivative over its domain.
  prefs: []
  type: TYPE_NORMAL
- en: Thus we must recognize the fact that without an additional condition on f, there
    is no one single anti-derivative f for given g; we can find an anti-derivative,
    or describe all anti-derivatives (in which case you should add +c to any one anti-derivative)
    but it is not quite right to use the terminology "the anti-derivative of g" until
    an additional condition has been specified.
  prefs: []
  type: TYPE_NORMAL
- en: (I recall that when I studied calculus in ancient times we had to play a game
    reminiscent of "Simon Says" with +c; if the question at hand was phrased one way
    the answer had to have a +c; otherwise not. As I recall from even longer ago,
    it is very easy to distract a person to lose at Simon Says and it is equally easy
    to forget to write +c when it is called for.)
  prefs: []
  type: TYPE_NORMAL
- en: 19.3 Anti-derivatives by Inspection and Classes of Functions that we can Anti-differentiate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The process of **differentiating** a known standard function can be achieved
    by parsing the function definition, and applying the appropriate rules of differentiation
    to each step in its definition.
  prefs: []
  type: TYPE_NORMAL
- en: There are no specific **anti-differentiation** rules; we have to use the differentiation
    rules backwards. And these allow us to anti-differentiate large classes of standard
    functions, but not all of them.
  prefs: []
  type: TYPE_NORMAL
- en: We can recognize some functions almost immediately as derivatives of others.
    For example, we can anti-differentiate any polynomial in x by applying the rule
    to differentiate powers backwards.
  prefs: []
  type: TYPE_NORMAL
- en: Thus an anti-derivative of ![](../Images/9d49ed0f34e02fa079e8f7fce1c41e7f.jpg)
    (When anti-differentiating polynomials, a standard error is to suffer a mental
    lapse in the middle of doing this and differentiate instead of anti-differentiating
    some term; always check that you haven't done this.)
  prefs: []
  type: TYPE_NORMAL
- en: We can similarly anti-differentiate **any power** (even ![](../Images/0388f465344b0857e34842bd910f6540.jpg),
    one of whose anti-derivatives is ln(x)). And we can anti-differentiate e^(ax)
    and **any polynomial in sin(x) and cos(x),** although doing the latter requires
    applying some tricks.
  prefs: []
  type: TYPE_NORMAL
- en: It turns out, that there are more tricks which allow us to differentiate **any
    rational function ![](../Images/609362ab22182c55c721ffe81b5ceb13.jpg) where p
    and q are polynomials, if we can factor q(x) into linear and quadratic factors;**
    and tricks which allow us anti-differentiate **an exponential times a polynomial,
    inverse powers of sines and cosines, functions that are polynomials divided by
    the square root of a linear or quadratic functions, products of exponentials sines
    and polynomials,** and various other classes of functions.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand there are simple looking standard functions that we cannot
    anti-differentiate, because their anti-derivatives do not happen to be standard
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: (If these anti-derivatives were sufficiently important we would give them names,
    make tables of them and add them to the list of our basic functions (which consists
    now of x, sin x and e^x). As it happens they are important but not that important;
    we give them names and tabulate them, but call them **special functions.**
  prefs: []
  type: TYPE_NORMAL
- en: The simplest functions that cannot be anti-differentiated as standard functions
    are ![](../Images/14204ae9b55b301f6dcfb83590e1cc18.jpg) both of which have special
    functions as specific anti-derivatives.)
  prefs: []
  type: TYPE_NORMAL
- en: There used to be a difference of opinion among teachers of calculus as to whether
    students should be made to learn all the tricks of anti-differentiation so that
    they could anti-differentiate anything that could be anti-differentiated.
  prefs: []
  type: TYPE_NORMAL
- en: Some felt that the mark of mastery of calculus was to be able to anti-differentiate
    strange looking functions by attempting to apply the various tricks. Others pointed
    out that there are "integral tables" which list essentially all anti-differentiable
    functions and their anti-derivatives, so that this skill, whose development is
    a wonderful exercise of ingenuity and memory, has very limited practical value.
  prefs: []
  type: TYPE_NORMAL
- en: At that time there were obstacles that students faced in getting a copy of a
    reasonably complete integral table, and in looking things up in huge ones, that
    gave the edge by a small margin to the first viewpoint.
  prefs: []
  type: TYPE_NORMAL
- en: Today, however, there are commercially available programs, Maple, MATLAB, and
    Mathematica (and perhaps others), which give you detailed formulae for the anti-derivative
    of any function you care to enter, and do so instantly; which seems to tilt the
    argument toward the second viewpoint.
  prefs: []
  type: TYPE_NORMAL
- en: Be that as it may, every student of calculus should be aware of the four basic
    tools of anti-differentiation, which we now discuss.
  prefs: []
  type: TYPE_NORMAL
- en: Before doing so we should notice the important fact that the action of finding
    an anti-derivative is a linear operation (as differentiating is) so that **an
    anti-derivative of a sum is the sum of anti-derivatives of its summands.**
  prefs: []
  type: TYPE_NORMAL
- en: 19.4 Substitution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By far the most important tool of anti-differentiation is that of applying the
    chain rule of differentiation backwards; that means given a function f(x), finding
    a function u(x), so that you can write f(x) as ![](../Images/24ac6a3796fdf585736da1b6d18afe5e.jpg)
    In that case you can claim that an anti-derivative of f is g(u(x)).
  prefs: []
  type: TYPE_NORMAL
- en: (This seems complicated when written this way, but is easier to use than it
    looks, in practice.)
  prefs: []
  type: TYPE_NORMAL
- en: For example, suppose we have f(x) = sin⁵ x cos x.
  prefs: []
  type: TYPE_NORMAL
- en: Then we can set u(x) = sin x, and find that ![](../Images/77b9511cf9faf9fbfd67178493b7a4fd.jpg),
    which we can recognize as the derivative of ![](../Images/3a378f36e9096d5c3b4ed8ab60aa9eab.jpg),
    which is then an anti-derivative of f.
  prefs: []
  type: TYPE_NORMAL
- en: The identical idea can be used to **anti-differentiate any polynomial in sines
    and cosines of odd degree in all,** if you apply the identity (sin²x + cos²x =
    1) to bring all terms into forms that are linear in one of sine or cosine like
    f is above.
  prefs: []
  type: TYPE_NORMAL
- en: Employing this technique is called **"substituting"**; the variable u is in
    a sense substituted for x.
  prefs: []
  type: TYPE_NORMAL
- en: Notice that **if we can recognize that f(x) is the derivative of a known function
    then we can anti-differentiate by inspection.**
  prefs: []
  type: TYPE_NORMAL
- en: '**Using substitution of** u(x) for x, we change the question to: can we recognize
    ![](../Images/cee8a53ac9c882145e5baf18bb4ee534.jpg) as the derivative of a function
    of u?'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the example above, the new question becomes: can we recognize sin⁵ x as
    a derivative with respect to the variable sin x? Since sin⁵ x is a power of sin
    x, we can recognize it as the derivative of ![](../Images/64150c847b8dc6786e0f1813801bb477.jpg)
    and we have found an anti-derivative of f.'
  prefs: []
  type: TYPE_NORMAL
- en: There are some well known standard substitutions that allow us to anti-differentiate
    many potentially useful functions. We review them below.
  prefs: []
  type: TYPE_NORMAL
- en: Looking for the right substitution that might help for finding some given specific
    anti-derivative is a bit of intellectual detective work. It is akin to solving
    a chess problem, in that while perhaps it is of no practical value, it may well
    be an excellent exercise for developing your reasoning powers or your ability
    to find what at first seems like finding a needle in a haystack.
  prefs: []
  type: TYPE_NORMAL
- en: Here are classes of functions (called integrands) that you should be able to
    integrate at least in theory. The details can become ugly and boring but that
    merely means that you cannot be asked to do them out very often.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. **Any polynomial in x.** These can be done directly term by term by inspection
    using the power rule backwards.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. **Any single power positive or negative in x,** such as (x-3)^(1/3) or (1-x)^(-1).
    Same method.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. **Any exponent like e^(ax).** Again direct integration can be applied using
    the rule for differentiating exponents backwards.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. **Any polynomial in sines and cosines multiplied by any exponent** as in
    the last case. Here you can use the exponential formula for sines and cosines
    to make this into an ugly sum of exponentials to each of which case 3 applies.
    Some of the exponents will be complex, but so what.
  prefs: []
  type: TYPE_NORMAL
- en: 5\. **The function ![](../Images/714b78728f70107f90734ded11bbd1cd.jpg)** whose
    integral is the arctangent of (x-a).
  prefs: []
  type: TYPE_NORMAL
- en: 6\. **Any rational function of x** which means any function of the form ![](../Images/97be8db9564a16acbf84af50820ad0ad.jpg)
    where p and q are both polynomials. To do this you must be able to factor q into
    linear (and perhaps quadratic terms), employ the technique called **"partial fraction
    expansion"** discussed in a later section, and then integrate using cases 1 and
    2 and perhaps 5 above.
  prefs: []
  type: TYPE_NORMAL
- en: (The idea is that ![](../Images/1881d2f958a0212ca0fc9f2ed124bd23.jpg) can be
    written as a sum of a polynomial and a sum over the zeroes of q(x) of single inverse
    powers (and perhaps terms like that in case 5 if you don't like to use complex
    zeroes).)
  prefs: []
  type: TYPE_NORMAL
- en: 7\. **Any rational function of sines and cosines of x** (in theory anyway).
    This reduces to a rational function to which case 6 applies after the magic substitution
    ![](../Images/425bb2ac317cbb3d333a9f66c96f2edd.jpg) The thought of carrying this
    to completion for a complicated function is too horrible for me to contemplate,
    but it ought to work. Theoretically the same thing should work for rational functions
    of sinh's and cosh's using the substitution ![](../Images/b589e2cb37021fc159789f87227e9d78.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: 8\. **A rational function of any of ![](../Images/bc0f401519e58d294f4fcf10a425c440.jpg)
    and x, or of ![](../Images/a23f1812be41d366a6440f9db2630ad3.jpg) and x, or of
    ![](../Images/f8250ac628c8be166067353c31886aee.jpg) and x.** To do these you use
    the substitution x = sin t, or x = cosh t or x = sinh t, respectively to obtain
    a rational function of sines and cosines of t in the first case and of sinh's
    and cosh's in the latter two cases. You can then apply case 7 to finish the job.
  prefs: []
  type: TYPE_NORMAL
- en: 9\. **A rational function of x and of one square root, of either a linear or
    quadratic function.** (An ugly example is ![](../Images/3722ce8a50756358061216198ea3f8eb.jpg);
    here is another ![](../Images/d60f382c45879e40db578db641919251.jpg).)
  prefs: []
  type: TYPE_NORMAL
- en: If you have a square root of a linear factor you can use the substitution t
    = that square root factor, to convert your integrand to a rational function, which
    you can then integrate using case 6.
  prefs: []
  type: TYPE_NORMAL
- en: With a quadratic factor you **complete the square** and then make linear substitutions
    to get your integrand into one of the forms of case 8.
  prefs: []
  type: TYPE_NORMAL
- en: It is a good idea to be able to recognize the classes of integrands to which
    these methods might be applied. However, unless you never make errors in doing
    anything, I suggest you use Maple or Mathematica or something like that to actually
    do complicated integrals of the later kinds if you are forced to do one.
  prefs: []
  type: TYPE_NORMAL
- en: There are some easy examples you could practice on to get an idea what is involved.
  prefs: []
  type: TYPE_NORMAL
- en: 10\. **The product of a sine or cosine or exponent in x and a polynomial in
    x.**
  prefs: []
  type: TYPE_NORMAL
- en: This reduces to doing the product of sine, cosine or exponent and a single power
    for each power in the polynomial and adding the results.
  prefs: []
  type: TYPE_NORMAL
- en: The latter integrals can be done either by integrating by parts or differentiating
    with respect to a parameter, both of which are discussed below.
  prefs: []
  type: TYPE_NORMAL
- en: 11\. **The product of an exponent, a polynomial in sines and cosines and a polynomial
    in x.** This can be reduced to case 10 by using the expression for trigonometric
    functions as complex exponentials.
  prefs: []
  type: TYPE_NORMAL
- en: 12\. **Integrals involving logarithms and other functions.** You can get rid
    of the logarithms by **integrating by parts,** and then, if you get something
    you can recognize above, you can finish the job.
  prefs: []
  type: TYPE_NORMAL
- en: '**Are these all the functions that we can integrate?**'
  prefs: []
  type: TYPE_NORMAL
- en: No, there are others. (You can generate arbitrarily complicated functions that
    you can integrate by writing down horrible looking functions and differentiating
    them. You will find it easy to integrate the results.)
  prefs: []
  type: TYPE_NORMAL
- en: And **every integrand** consisting of standard functions that are not singular
    where being integrated can be integrated numerically to whatever accuracy you
    want. The advantage of the methods described above over numerical integration
    is that you can keep parameters indefinite here, and must specify them when doing
    a straightforward numerical integration.
  prefs: []
  type: TYPE_NORMAL
- en: In addition there is a large class of special functions whose properties have
    been extensively studied, and a large number of integrals that can be expressed
    in terms of them.
  prefs: []
  type: TYPE_NORMAL
- en: In this modern age it is a good idea to cultivate the art of recognizing which
    integrands look integrable to you. If the function you want to integrate does
    not look familiar to you try one of the mathematics programs.
  prefs: []
  type: TYPE_NORMAL
- en: 19.5 Integration by Parts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The second useful tool is the backward version of the product rule. The product
    rule, as we have noted often, tells us
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5179bacdec953e479f968147818bb78d.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This means that if we seek an anti-derivative of h(x) and we can write h as
    fg', then we can write fg' as (fg)' - f 'g, and an anti-derivative of fg' is then
    the difference between any anti-derivative of (fg)' and one of f 'g.
  prefs: []
  type: TYPE_NORMAL
- en: But an anti-derivative of (fg)' is given by fg; so we can use the product rule
    here to reduce the problem of finding an anti-derivative of fg' to finding an
    anti-derivative of f 'g, for any f and g.
  prefs: []
  type: TYPE_NORMAL
- en: This tool is useful for finding anti-derivatives of products of the form A(x)x
    if you know an anti-derivative B(x) for A(x) and an anti-derivative C(x) for B(x)
    as well.
  prefs: []
  type: TYPE_NORMAL
- en: We can set f = x and g = B in the identity above, and write A(x)x = B'(x)x,
    which by this procedure is (Bx)' - B, where we have used the identity x' = 1\.
    This has Bx - C as an anti-derivative and Bx - C is therefore an anti-derivative
    of Ax.
  prefs: []
  type: TYPE_NORMAL
- en: The procedure is called **integration by parts.** It is useful for finding anti-derivatives
    of products of exponentials and powers or of trigonometric functions and powers
    or of logarithms and powers, among other things.
  prefs: []
  type: TYPE_NORMAL
- en: '**For example, suppose we want to integrate x ln x dx, that is, we seek the
    antiderivative of x ln x with respect to x.**'
  prefs: []
  type: TYPE_NORMAL
- en: If we set u = ln x and dv = x dx, we can deduce that ![](../Images/cde9cd8fdcf0e4d70c4d29952dacd23f.jpg)
    is a possible antiderivative of x.
  prefs: []
  type: TYPE_NORMAL
- en: Integrating by parts tells us then udv = (uv)' - vdu which gives, after integrating
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/41da3f818c1c75a9a4c6cb5434cb1bb6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Exercises:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Try integrating the following integrands with respect to x by using this
    technique:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**19.1\. x⁴(ln x)**'
  prefs: []
  type: TYPE_NORMAL
- en: '**19.2\. x sin x**'
  prefs: []
  type: TYPE_NORMAL
- en: '**19.3\. x exp x**'
  prefs: []
  type: TYPE_NORMAL
- en: '**19.4\. (sin x) exp x (Hint: integrate by parts twice and solve the resulting
    equation.)**'
  prefs: []
  type: TYPE_NORMAL
- en: '**19.5\. x (sin x) exp x**'
  prefs: []
  type: TYPE_NORMAL
- en: 19.6 Differentiation with Respect to a Parameter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is one other tool that can sometimes be used to evaluate anti-derivatives
    that works when certain convergence conditions hold.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose we know the anti-derivative of g(x, y) where g is some differentiable
    function of the parameter y, as well as a function of x. Then we can deduce that
    an anti-derivative of ![](../Images/a0ec9f80308b7716f631899f7afb63f5.jpg) is the
    derivative with respect to y of an anti-derivative of g.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we know that an anti-derivative of ![](../Images/c49fc6bbfe218ad5b8af76acbb7df7df.jpg)
    We may then deduce that an anti-derivative of ![](../Images/f874c587237f6aaa5997f52d3d31d4be.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: You can take higher derivatives with respect to y here as well. This allows
    you to deduce a formula for an anti-derivative of a function of the form x^k e^(ax),
    by differentiating ![](../Images/e8926c801f88818a509f9dacf1c0c624.jpg) k times
    with respect to y and then setting y = a.
  prefs: []
  type: TYPE_NORMAL
- en: This method when it applies converts finding anti-derivatives to making appropriate
    differentiations. However, almost everything you can deduce this way can be gotten
    as well by integrating by parts judiciously.
  prefs: []
  type: TYPE_NORMAL
- en: 19.7 Partial Fraction Decomposition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We know how to anti-differentiate a function of the form ![](../Images/7d60ddfbd00c9349847227a1de25b79f.jpg)
    for any a and b. This will allow us to find the anti-derivative of a rational
    function ![](../Images/97be8db9564a16acbf84af50820ad0ad.jpg) if we can reduce
    it to a sum of terms of that form and possibly a polynomial instead.
  prefs: []
  type: TYPE_NORMAL
- en: If p(x) has a higher degree than q(x) we can extract a quotient polynomial s(x)
    by a process akin to long division called synthetic division.
  prefs: []
  type: TYPE_NORMAL
- en: We may then be left with a remainder polynomial r(x). We know how to anti-differentiate
    s(x) so the task of anti-differentiating ![](../Images/97be8db9564a16acbf84af50820ad0ad.jpg)reduces
    to anti-differentiating ![](../Images/e1d314165132c769fe4f13edce75f188.jpg) where
    the numerator has lower degree than the denominator.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose now that we can factor q into factors like (x-a) or (x-b)³ or ((x-d)²+
    c²)^m.
  prefs: []
  type: TYPE_NORMAL
- en: The wonderful fact is that the expression ![](../Images/e1d314165132c769fe4f13edce75f188.jpg)can
    be separated into terms each of which has the form ![](../Images/bd42148eb8832ed4af5df1763d1cc203.jpg)or
    ![](../Images/3e9842d6ae64f84d3f7fceaec5c3217f.jpg) for some a's, d's and c's
    and integer values of b, each of which can be anti-differentiated.
  prefs: []
  type: TYPE_NORMAL
- en: And here is a procedure for separating it.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose the denominator q can be factored into (x-b)^kt(x) such that t(b) is
    not 0.
  prefs: []
  type: TYPE_NORMAL
- en: And suppose we find the first k terms of the *Taylor series expansion* of ![](../Images/849d7c5abcd375857a9bc3edab7330c4.jpg)
    about x = b
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fb50f5d332397e55cb3f5501015c9118.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Then the terms in ![](../Images/e1d314165132c769fe4f13edce75f188.jpg) that
    involve inverse powers of (x-b) are given as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**If k = 1** there is only one term, ![](../Images/de5354d1acbb986cf2488cada223812d.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: '**For k = 2** we have ![](../Images/c44da2e97e6647a7a570158d45421029.jpg) where
    A is as before while B is ![](../Images/c4fedc2b2774326ac6ec0e58e93de156.jpg)
    and so on.'
  prefs: []
  type: TYPE_NORMAL
- en: There are similar rules for quadratic factors.
  prefs: []
  type: TYPE_NORMAL
- en: The process of separating the denominator q in this manner is called **"the
    method of partial fractions".**
  prefs: []
  type: TYPE_NORMAL
- en: We review the various methods again in [Section 27.1](../chapter27/section01.html)
    and some integrals to practice on are given in [Section 27.3](../chapter27/section03.html).
    We apologize for the redundancy.
  prefs: []
  type: TYPE_NORMAL
