["```\nlogin()\n     .then(getUserDetails)\n     .then(getOrdersByUser) \n```", "```\nlet stream$ = Rx.Observable.of({ message : 'Logged in' })\n      .switchMap( result => {\n         return Rx.Observable.of({ id: 1, name : 'user' })\n      })\n      .switchMap((user) => {\n        return Rx.Observable.from(\n           [ { id: 114, userId : 1 },\n             { id: 117, userId : 1 }  ])\n      })\n\nstream$.subscribe((orders) => {\n  console.log('Orders', orders);\n})\n\n// Array of orders \n```", "```\nRx.Observable.of() \n```", "```\ngetUser()\n   .then((user) => {\n      return Promise.all(\n        getOrders(),\n        getMessages()\n      )\n   }) \n```", "```\nlet stream$ = Rx.Observable.of({ id : 1, name : 'User' })\nstream.switchMap((user) => {\n  return Rx.Observable.forkJoin(\n     Rx.Observable.from([{ id : 114, user: 1}, { id : 115, user: 1}],\n     Rx.Observable.from([{ id : 200, user: 1}, { id : 201, user: 1}])\n  )\n})\n\nstream$.subscribe((result) => {\n  console.log('Orders', result[0]);\n  console.log('Messages', result[1]);\n\n}) \n```"]