["```\nChannel <- Expression \n```", "```\npackage main\n\nfunc send() int {\n    return 2\n}\nfunc main()  {\n    ch := make(chan int, 2)\n    ch <- 1\n    ch <- send()\n} \n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main()  {\n    ch := make(chan int)\n    go func(ch chan int) {\n        ch <- 1\n        ch <- 2\n    }(ch)\n    <-ch\n    fmt.Println(<-ch)\n} \n```", "```\nv, ok := <- ch \n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main()  {\n    ch := make(chan int)\n\n    go func(ch chan int) {\n        ch <- 1\n        ch <- 2\n        close(ch)\n    }(ch)\n\n    for i := 1; i <= 3; i++ {\n        v, ok := <- ch\n        fmt.Printf(\"value is %d, ok is %v\\n\", v, ok)\n    }\n} \n```", "```\nvalue is 1, ok is true\nvalue is 2, ok is true\nvalue is 0, ok is false \n```"]