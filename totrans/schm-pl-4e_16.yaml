- en: Summary of Forms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The table that follows summarizes the Scheme syntactic forms and procedures
    described in Chapters [4](binding.html#g88) through [11](exceptions.html#g147).
    It shows the category of the form and the page number where it is defined. The
    category states whether the form describes a syntactic form or a procedure.
  prefs: []
  type: TYPE_NORMAL
- en: All page numbers appearing here refer to the printed version of this book and
    also serve as hypertext links to the corresponding locations in the electronic
    version of this book.
  prefs: []
  type: TYPE_NORMAL
- en: '| Form | Category | Page |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| `''*obj*` | syntax | [141](objects.html#./objects:s2) |'
  prefs: []
  type: TYPE_TB
- en: '| ``*obj*` | syntax | [142](objects.html#./objects:s5) |'
  prefs: []
  type: TYPE_TB
- en: '| `,*obj*` | syntax | [142](objects.html#./objects:s5) |'
  prefs: []
  type: TYPE_TB
- en: '| `,@*obj*` | syntax | [142](objects.html#./objects:s5) |'
  prefs: []
  type: TYPE_TB
- en: '| `=>` | syntax | [112](control.html#./control:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `_` | syntax | [297](syntax.html#./syntax:s26) |'
  prefs: []
  type: TYPE_TB
- en: '| `...` | syntax | [297](syntax.html#./syntax:s26) |'
  prefs: []
  type: TYPE_TB
- en: '| `#''*template*` | syntax | [300](syntax.html#./syntax:s33) |'
  prefs: []
  type: TYPE_TB
- en: '| `#`*template*` | syntax | [305](syntax.html#./syntax:s40) |'
  prefs: []
  type: TYPE_TB
- en: '| `#,*template*` | syntax | [305](syntax.html#./syntax:s40) |'
  prefs: []
  type: TYPE_TB
- en: '| `#,@*template*` | syntax | [305](syntax.html#./syntax:s40) |'
  prefs: []
  type: TYPE_TB
- en: '| `&assertion` | syntax | [366](exceptions.html#./exceptions:s21) |'
  prefs: []
  type: TYPE_TB
- en: '| `&condition` | syntax | [362](exceptions.html#./exceptions:s13) |'
  prefs: []
  type: TYPE_TB
- en: '| `&error` | syntax | [367](exceptions.html#./exceptions:s22) |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o` | syntax | [371](exceptions.html#./exceptions:s32) |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-decoding` | syntax | [375](exceptions.html#./exceptions:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-encoding` | syntax | [376](exceptions.html#./exceptions:s43) |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-file-already-exists` | syntax | [374](exceptions.html#./exceptions:s39)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-file-does-not-exist` | syntax | [374](exceptions.html#./exceptions:s40)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-file-is-read-only` | syntax | [374](exceptions.html#./exceptions:s38)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-file-protection` | syntax | [373](exceptions.html#./exceptions:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-filename` | syntax | [373](exceptions.html#./exceptions:s36) |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-invalid-position` | syntax | [372](exceptions.html#./exceptions:s35)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-port` | syntax | [375](exceptions.html#./exceptions:s41) |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-read` | syntax | [372](exceptions.html#./exceptions:s33) |'
  prefs: []
  type: TYPE_TB
- en: '| `&i/o-write` | syntax | [372](exceptions.html#./exceptions:s34) |'
  prefs: []
  type: TYPE_TB
- en: '| `&implementation-restriction` | syntax | [369](exceptions.html#./exceptions:s28)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `&irritants` | syntax | [368](exceptions.html#./exceptions:s25) |'
  prefs: []
  type: TYPE_TB
- en: '| `&lexical` | syntax | [370](exceptions.html#./exceptions:s29) |'
  prefs: []
  type: TYPE_TB
- en: '| `&message` | syntax | [368](exceptions.html#./exceptions:s24) |'
  prefs: []
  type: TYPE_TB
- en: '| `&no-infinities` | syntax | [376](exceptions.html#./exceptions:s44) |'
  prefs: []
  type: TYPE_TB
- en: '| `&no-nans` | syntax | [377](exceptions.html#./exceptions:s45) |'
  prefs: []
  type: TYPE_TB
- en: '| `&non-continuable` | syntax | [369](exceptions.html#./exceptions:s27) |'
  prefs: []
  type: TYPE_TB
- en: '| `&serious` | syntax | [366](exceptions.html#./exceptions:s19) |'
  prefs: []
  type: TYPE_TB
- en: '| `&syntax` | syntax | [370](exceptions.html#./exceptions:s30) |'
  prefs: []
  type: TYPE_TB
- en: '| `&undefined` | syntax | [371](exceptions.html#./exceptions:s31) |'
  prefs: []
  type: TYPE_TB
- en: '| `&violation` | syntax | [366](exceptions.html#./exceptions:s20) |'
  prefs: []
  type: TYPE_TB
- en: '| `&warning` | syntax | [367](exceptions.html#./exceptions:s23) |'
  prefs: []
  type: TYPE_TB
- en: '| `&who` | syntax | [369](exceptions.html#./exceptions:s26) |'
  prefs: []
  type: TYPE_TB
- en: '| `(* *num* ...)` | procedure | [172](objects.html#./objects:s91) |'
  prefs: []
  type: TYPE_TB
- en: '| `(+ *num* ...)` | procedure | [171](objects.html#./objects:s89) |'
  prefs: []
  type: TYPE_TB
- en: '| `(- *num*)` | procedure | [172](objects.html#./objects:s90) |'
  prefs: []
  type: TYPE_TB
- en: '| `(- *num[1]* *num[2]* *num[3]* ...)` | procedure | [172](objects.html#./objects:s90)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(/ *num*)` | procedure | [172](objects.html#./objects:s92) |'
  prefs: []
  type: TYPE_TB
- en: '| `(/ *num[1]* *num[2]* *num[3]* ...)` | procedure | [172](objects.html#./objects:s92)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(< *real[1]* *real[2]* *real[3]* ...)` | procedure | [170](objects.html#./objects:s88)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(<= *real[1]* *real[2]* *real[3]* ...)` | procedure | [170](objects.html#./objects:s88)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(= *num[1]* *num[2]* *num[3]* ...)` | procedure | [170](objects.html#./objects:s88)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(> *real[1]* *real[2]* *real[3]* ...)` | procedure | [170](objects.html#./objects:s88)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(>= *real[1]* *real[2]* *real[3]* ...)` | procedure | [170](objects.html#./objects:s88)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(abs *real*)` | procedure | [178](objects.html#./objects:s105) |'
  prefs: []
  type: TYPE_TB
- en: '| `(acos *num*)` | procedure | [185](objects.html#./objects:s132) |'
  prefs: []
  type: TYPE_TB
- en: '| `(and *expr* ...)` | syntax | [110](control.html#./control:s11) |'
  prefs: []
  type: TYPE_TB
- en: '| `(angle *num*)` | procedure | [183](objects.html#./objects:s124) |'
  prefs: []
  type: TYPE_TB
- en: '| `(append)` | procedure | [160](objects.html#./objects:s49) |'
  prefs: []
  type: TYPE_TB
- en: '| `(append *list* ... *obj*)` | procedure | [160](objects.html#./objects:s49)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(apply *procedure* *obj* ... *list*)` | procedure | [107](control.html#./control:s3)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(asin *num*)` | procedure | [185](objects.html#./objects:s132) |'
  prefs: []
  type: TYPE_TB
- en: '| `(assert *expression*)` | syntax | [359](exceptions.html#./exceptions:s5)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(assertion-violation *who* *msg* *irritant* ...)` | procedure | [358](exceptions.html#./exceptions:s4)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(assertion-violation? *obj*)` | procedure | [366](exceptions.html#./exceptions:s21)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(assoc *obj* *alist*)` | procedure | [165](objects.html#./objects:s58) |'
  prefs: []
  type: TYPE_TB
- en: '| `(assp *procedure* *alist*)` | procedure | [166](objects.html#./objects:s60)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(assq *obj* *alist*)` | procedure | [165](objects.html#./objects:s58) |'
  prefs: []
  type: TYPE_TB
- en: '| `(assv *obj* *alist*)` | procedure | [165](objects.html#./objects:s58) |'
  prefs: []
  type: TYPE_TB
- en: '| `(atan *num*)` | procedure | [185](objects.html#./objects:s133) |'
  prefs: []
  type: TYPE_TB
- en: '| `(atan *real[1]* *real[2]*)` | procedure | [185](objects.html#./objects:s133)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(begin *expr[1]* *expr[2]* ...)` | syntax | [108](control.html#./control:s4)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(binary-port? *obj*)` | procedure | [270](io.html#./io:s45) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-and *exint* ...)` | procedure | [186](objects.html#./objects:s134)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-arithmetic-shift *exint[1]* *exint[2]*)` | procedure | [190](objects.html#./objects:s144)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-arithmetic-shift-left *exint[1]* *exint[2]*)` | procedure | [189](objects.html#./objects:s143)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-arithmetic-shift-right *exint[1]* *exint[2]*)` | procedure | [189](objects.html#./objects:s143)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-bit-count *exint*)` | procedure | [187](objects.html#./objects:s136)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-bit-field *exint[1]* *exint[2]* *exint[3]*)` | procedure | [189](objects.html#./objects:s141)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-bit-set? *exint[1]* *exint[2]*)` | procedure | [188](objects.html#./objects:s139)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-copy-bit *exint[1]* *exint[2]* *exint[3]*)` | procedure | [188](objects.html#./objects:s140)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-copy-bit-field *exint[1]* *exint[2]* *exint[3]* *exint[4]*)` |
    procedure | [189](objects.html#./objects:s142) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-first-bit-set *exint*)` | procedure | [187](objects.html#./objects:s138)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-if *exint[1]* *exint[2]* *exint[3]*)` | procedure | [186](objects.html#./objects:s135)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-ior *exint* ...)` | procedure | [186](objects.html#./objects:s134)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-length *exint*)` | procedure | [187](objects.html#./objects:s137)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-not *exint*)` | procedure | [186](objects.html#./objects:s134)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-reverse-bit-field *exint[1]* *exint[2]* *exint[3]*)` | procedure
    | [191](objects.html#./objects:s146) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-rotate-bit-field *exint[1]* *exint[2]* *exint[3]* *exint[4]*)`
    | procedure | [190](objects.html#./objects:s145) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bitwise-xor *exint* ...)` | procedure | [186](objects.html#./objects:s134)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(boolean=? *boolean[1]* *boolean[2]*)` | procedure | [243](objects.html#./objects:s271)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(boolean? *obj*)` | procedure | [150](objects.html#./objects:s14) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bound-identifier=? *identifier[1]* *identifier[2]*)` | procedure | [302](syntax.html#./syntax:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(buffer-mode *symbol*)` | syntax | [261](io.html#./io:s27) |'
  prefs: []
  type: TYPE_TB
- en: '| `(buffer-mode? *obj*)` | syntax | [262](io.html#./io:s28) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector->sint-list *bytevector* *eness* *size*)` | procedure | [238](objects.html#./objects:s260)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector->string *bytevector* *transcoder*)` | procedure | [286](io.html#./io:s91)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector->u8-list *bytevector*)` | procedure | [232](objects.html#./objects:s252)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector->uint-list *bytevector* *eness* *size*)` | procedure | [238](objects.html#./objects:s260)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-copy *bytevector*)` | procedure | [229](objects.html#./objects:s246)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-copy! *src* *src-start* *dst* *dst-start* *n*)` | procedure
    | [230](objects.html#./objects:s247) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-fill! *bytevector* *fill*)` | procedure | [229](objects.html#./objects:s245)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-ieee-double-native-ref *bytevector* *n*)` | procedure | [239](objects.html#./objects:s262)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-ieee-double-native-set! *bytevector* *n* *x*)` | procedure |
    [239](objects.html#./objects:s263) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-ieee-double-ref *bytevector* *n* *eness*)` | procedure | [240](objects.html#./objects:s264)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-ieee-double-set! *bytevector* *n* *x* *eness*)` | procedure
    | [240](objects.html#./objects:s265) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-ieee-single-native-ref *bytevector* *n*)` | procedure | [239](objects.html#./objects:s262)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-ieee-single-native-set! *bytevector* *n* *x*)` | procedure |
    [239](objects.html#./objects:s263) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-ieee-single-ref *bytevector* *n* *eness*)` | procedure | [240](objects.html#./objects:s264)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-ieee-single-set! *bytevector* *n* *x* *eness*)` | procedure
    | [240](objects.html#./objects:s265) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-length *bytevector*)` | procedure | [229](objects.html#./objects:s243)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s16-native-ref *bytevector* *n*)` | procedure | [232](objects.html#./objects:s254)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s16-native-set! *bytevector* *n* *s16*)` | procedure | [233](objects.html#./objects:s255)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s16-ref *bytevector* *n* *eness*)` | procedure | [235](objects.html#./objects:s256)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s16-set! *bytevector* *n* *s16* *eness*)` | procedure | [236](objects.html#./objects:s257)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s32-native-ref *bytevector* *n*)` | procedure | [232](objects.html#./objects:s254)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s32-native-set! *bytevector* *n* *s32*)` | procedure | [233](objects.html#./objects:s255)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s32-ref *bytevector* *n* *eness*)` | procedure | [235](objects.html#./objects:s256)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s32-set! *bytevector* *n* *s32* *eness*)` | procedure | [236](objects.html#./objects:s257)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s64-native-ref *bytevector* *n*)` | procedure | [232](objects.html#./objects:s254)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s64-native-set! *bytevector* *n* *s64*)` | procedure | [233](objects.html#./objects:s255)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s64-ref *bytevector* *n* *eness*)` | procedure | [235](objects.html#./objects:s256)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s64-set! *bytevector* *n* *s64* *eness*)` | procedure | [236](objects.html#./objects:s257)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s8-ref *bytevector* *n*)` | procedure | [231](objects.html#./objects:s249)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-s8-set! *bytevector* *n* *s8*)` | procedure | [231](objects.html#./objects:s251)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-sint-ref *bytevector* *n* *eness* *size*)` | procedure | [237](objects.html#./objects:s258)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-sint-set! *bytevector* *n* *sint* *eness* *size*)` | procedure
    | [238](objects.html#./objects:s259) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u16-native-ref *bytevector* *n*)` | procedure | [232](objects.html#./objects:s254)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u16-native-set! *bytevector* *n* *u16*)` | procedure | [233](objects.html#./objects:s255)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u16-ref *bytevector* *n* *eness*)` | procedure | [235](objects.html#./objects:s256)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u16-set! *bytevector* *n* *u16* *eness*)` | procedure | [236](objects.html#./objects:s257)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u32-native-ref *bytevector* *n*)` | procedure | [232](objects.html#./objects:s254)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u32-native-set! *bytevector* *n* *u32*)` | procedure | [233](objects.html#./objects:s255)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u32-ref *bytevector* *n* *eness*)` | procedure | [235](objects.html#./objects:s256)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u32-set! *bytevector* *n* *u32* *eness*)` | procedure | [236](objects.html#./objects:s257)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u64-native-ref *bytevector* *n*)` | procedure | [232](objects.html#./objects:s254)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u64-native-set! *bytevector* *n* *u64*)` | procedure | [233](objects.html#./objects:s255)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u64-ref *bytevector* *n* *eness*)` | procedure | [235](objects.html#./objects:s256)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u64-set! *bytevector* *n* *u64* *eness*)` | procedure | [236](objects.html#./objects:s257)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u8-ref *bytevector* *n*)` | procedure | [230](objects.html#./objects:s248)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-u8-set! *bytevector* *n* *u8*)` | procedure | [231](objects.html#./objects:s250)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-uint-ref *bytevector* *n* *eness* *size*)` | procedure | [237](objects.html#./objects:s258)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector-uint-set! *bytevector* *n* *uint* *eness* *size*)` | procedure
    | [238](objects.html#./objects:s259) |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector=? *bytevector[1]* *bytevector[2]*)` | procedure | [229](objects.html#./objects:s244)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(bytevector? *obj*)` | procedure | [155](objects.html#./objects:s24) |'
  prefs: []
  type: TYPE_TB
- en: '| `(caaaar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(caaadr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(caaar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(caadar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(caaddr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(caadr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(caar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cadaar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cadadr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cadar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(caddar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cadddr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(caddr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cadr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(call-with-bytevector-output-port *procedure*)` | procedure | [266](io.html#./io:s38)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(call-with-bytevector-output-port *procedure* *?transcoder*)` | procedure
    | [266](io.html#./io:s38) |'
  prefs: []
  type: TYPE_TB
- en: '| `(call-with-current-continuation *procedure*)` | procedure | [123](control.html#./control:s54)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(call-with-input-file *path* *procedure*)` | procedure | [281](io.html#./io:s77)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(call-with-output-file *path* *procedure*)` | procedure | [282](io.html#./io:s78)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(call-with-port *port* *procedure*)` | procedure | [272](io.html#./io:s51)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(call-with-string-output-port *procedure*)` | procedure | [267](io.html#./io:s39)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(call-with-values *producer* *consumer*)` | procedure | [131](control.html#./control:s71)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(call/cc *procedure*)` | procedure | [123](control.html#./control:s54) |'
  prefs: []
  type: TYPE_TB
- en: '| `(car *pair*)` | procedure | [156](objects.html#./objects:s38) |'
  prefs: []
  type: TYPE_TB
- en: '| `(case *expr[0]* *clause[1]* *clause[2]* ...)` | syntax | [113](control.html#./control:s18)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(case-lambda *clause* ...)` | syntax | [94](binding.html#./binding:s13)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdaaar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdaadr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdaar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdadar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdaddr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdadr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cddaar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cddadr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cddar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdddar *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cddddr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdddr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cddr *pair*)` | procedure | [157](objects.html#./objects:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cdr *pair*)` | procedure | [156](objects.html#./objects:s39) |'
  prefs: []
  type: TYPE_TB
- en: '| `(ceiling *real*)` | procedure | [177](objects.html#./objects:s103) |'
  prefs: []
  type: TYPE_TB
- en: '| `(char->integer *char*)` | procedure | [215](objects.html#./objects:s210)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-alphabetic? *char*)` | procedure | [213](objects.html#./objects:s203)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-ci<=? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s202)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-ci<? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s202)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-ci=? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s202)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-ci>=? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s202)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-ci>? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s202)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-downcase *char*)` | procedure | [214](objects.html#./objects:s207)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-foldcase *char*)` | procedure | [215](objects.html#./objects:s209)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-general-category *char*)` | procedure | [214](objects.html#./objects:s205)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-lower-case? *char*)` | procedure | [213](objects.html#./objects:s204)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-numeric? *char*)` | procedure | [213](objects.html#./objects:s203)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-title-case? *char*)` | procedure | [213](objects.html#./objects:s204)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-titlecase *char*)` | procedure | [214](objects.html#./objects:s208)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-upcase *char*)` | procedure | [214](objects.html#./objects:s206) |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-upper-case? *char*)` | procedure | [213](objects.html#./objects:s204)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char-whitespace? *char*)` | procedure | [213](objects.html#./objects:s203)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char<=? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s201)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char<? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s201)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char=? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s201)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char>=? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s201)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char>? *char[1]* *char[2]* *char[3]* ...)` | procedure | [212](objects.html#./objects:s201)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(char? *obj*)` | procedure | [154](objects.html#./objects:s19) |'
  prefs: []
  type: TYPE_TB
- en: '| `(close-input-port *input-port*)` | procedure | [285](io.html#./io:s88) |'
  prefs: []
  type: TYPE_TB
- en: '| `(close-output-port *output-port*)` | procedure | [285](io.html#./io:s88)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(close-port *port*)` | procedure | [270](io.html#./io:s46) |'
  prefs: []
  type: TYPE_TB
- en: '| `(command-line)` | procedure | [350](libraries.html#./libraries:s17) |'
  prefs: []
  type: TYPE_TB
- en: '| `(complex? *obj*)` | procedure | [151](objects.html#./objects:s17) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cond *clause[1]* *clause[2]* ...)` | syntax | [111](control.html#./control:s13)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(condition *condition* ...)` | procedure | [362](exceptions.html#./exceptions:s15)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(condition-accessor *rtd* *procedure*)` | procedure | [365](exceptions.html#./exceptions:s18)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(condition-irritants *condition*)` | procedure | [368](exceptions.html#./exceptions:s25)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(condition-message *condition*)` | procedure | [368](exceptions.html#./exceptions:s24)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(condition-predicate *rtd*)` | procedure | [365](exceptions.html#./exceptions:s18)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(condition-who *condition*)` | procedure | [369](exceptions.html#./exceptions:s26)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(condition? *obj*)` | procedure | [362](exceptions.html#./exceptions:s14)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(cons *obj[1]* *obj[2]*)` | procedure | [156](objects.html#./objects:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(cons* *obj* ... *final-obj*)` | procedure | [158](objects.html#./objects:s44)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `*constant*` | syntax | [141](objects.html#./objects:s1) |'
  prefs: []
  type: TYPE_TB
- en: '| `(cos *num*)` | procedure | [185](objects.html#./objects:s131) |'
  prefs: []
  type: TYPE_TB
- en: '| `(current-error-port)` | procedure | [263](io.html#./io:s32) |'
  prefs: []
  type: TYPE_TB
- en: '| `(current-input-port)` | procedure | [263](io.html#./io:s32) |'
  prefs: []
  type: TYPE_TB
- en: '| `(current-output-port)` | procedure | [263](io.html#./io:s32) |'
  prefs: []
  type: TYPE_TB
- en: '| `(datum->syntax *template-identifier* *obj*)` | procedure | [308](syntax.html#./syntax:s45)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(define *var* *expr*)` | syntax | [100](binding.html#./binding:s24) |'
  prefs: []
  type: TYPE_TB
- en: '| `(define *var*)` | syntax | [100](binding.html#./binding:s24) |'
  prefs: []
  type: TYPE_TB
- en: '| `(define (*var[0]* *var[1]* ...) *body[1]* *body[2]* ...)` | syntax | [100](binding.html#./binding:s24)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(define (*var[0]* . *var[r]*) *body[1]* *body[2]* ...)` | syntax | [100](binding.html#./binding:s24)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(define (*var[0]* *var[1]* *var[2]* ... . *var[r]*) *body[1]* *body[2]* ...)`
    | syntax | [100](binding.html#./binding:s24) |'
  prefs: []
  type: TYPE_TB
- en: '| `(define-condition-type *name* *parent* *constructor* *pred* *field* ...)`
    | syntax | [364](exceptions.html#./exceptions:s17) |'
  prefs: []
  type: TYPE_TB
- en: '| `(define-enumeration *name* (*symbol* ...) *constructor*)` | syntax | [250](objects.html#./objects:s290)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(define-record-type *record-name* *clause* ...)` | syntax | [328](records.html#./records:s13)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(define-record-type (*record-name* *constructor* *pred*) *clause* ...)`
    | syntax | [328](records.html#./records:s13) |'
  prefs: []
  type: TYPE_TB
- en: '| `(define-syntax *keyword* *expr*)` | syntax | [292](syntax.html#./syntax:s12)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(delay *expr*)` | syntax | [128](control.html#./control:s65) |'
  prefs: []
  type: TYPE_TB
- en: '| `(delete-file *path*)` | procedure | [286](io.html#./io:s90) |'
  prefs: []
  type: TYPE_TB
- en: '| `(denominator *rat*)` | procedure | [181](objects.html#./objects:s119) |'
  prefs: []
  type: TYPE_TB
- en: '| `(display *obj*)` | procedure | [285](io.html#./io:s85) |'
  prefs: []
  type: TYPE_TB
- en: '| `(display *obj* *textual-output-port*)` | procedure | [285](io.html#./io:s85)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(div *x[1]* *x[2]*)` | procedure | [175](objects.html#./objects:s99) |'
  prefs: []
  type: TYPE_TB
- en: '| `(div-and-mod *x[1]* *x[2]*)` | procedure | [175](objects.html#./objects:s99)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(div0 *x[1]* *x[2]*)` | procedure | [176](objects.html#./objects:s100) |'
  prefs: []
  type: TYPE_TB
- en: '| `(div0-and-mod0 *x[1]* *x[2]*)` | procedure | [176](objects.html#./objects:s100)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(do ((*var* *init* *update*) ...) (*test* *result* ...) *expr* ...)` | syntax
    | [115](control.html#./control:s25) |'
  prefs: []
  type: TYPE_TB
- en: '| `(dynamic-wind *in* *body* *out*)` | procedure | [124](control.html#./control:s56)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `else` | syntax | [112](control.html#./control:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `(endianness *symbol*)` | syntax | [228](objects.html#./objects:s240) |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set->list *enum-set*)` | procedure | [252](objects.html#./objects:s294)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-complement *enum-set*)` | procedure | [254](objects.html#./objects:s299)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-constructor *enum-set*)` | procedure | [251](objects.html#./objects:s292)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-difference *enum-set[1]* *enum-set[2]*)` | procedure | [253](objects.html#./objects:s298)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-indexer *enum-set*)` | procedure | [254](objects.html#./objects:s301)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-intersection *enum-set[1]* *enum-set[2]*)` | procedure | [253](objects.html#./objects:s298)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-member? *symbol* *enum-set*)` | procedure | [253](objects.html#./objects:s297)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-projection *enum-set[1]* *enum-set[2]*)` | procedure | [254](objects.html#./objects:s300)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-subset? *enum-set[1]* *enum-set[2]*)` | procedure | [252](objects.html#./objects:s295)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-union *enum-set[1]* *enum-set[2]*)` | procedure | [253](objects.html#./objects:s298)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set-universe *enum-set*)` | procedure | [252](objects.html#./objects:s293)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(enum-set=? *enum-set[1]* *enum-set[2]*)` | procedure | [252](objects.html#./objects:s296)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(environment *import-spec* ...)` | procedure | [137](control.html#./control:s81)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(eof-object)` | procedure | [273](io.html#./io:s54) |'
  prefs: []
  type: TYPE_TB
- en: '| `(eof-object? *obj*)` | procedure | [273](io.html#./io:s53) |'
  prefs: []
  type: TYPE_TB
- en: '| `(eol-style *symbol*)` | syntax | [259](io.html#./io:s23) |'
  prefs: []
  type: TYPE_TB
- en: '| `(eq? *obj[1]* *obj[2]*)` | procedure | [143](objects.html#./objects:s10)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(equal-hash *obj*)` | procedure | [245](objects.html#./objects:s279) |'
  prefs: []
  type: TYPE_TB
- en: '| `(equal? *obj[1]* *obj[2]*)` | procedure | [148](objects.html#./objects:s13)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(eqv? *obj[1]* *obj[2]*)` | procedure | [146](objects.html#./objects:s12)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(error *who* *msg* *irritant* ...)` | procedure | [358](exceptions.html#./exceptions:s4)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(error-handling-mode *symbol*)` | syntax | [260](io.html#./io:s25) |'
  prefs: []
  type: TYPE_TB
- en: '| `(error? *obj*)` | procedure | [367](exceptions.html#./exceptions:s22) |'
  prefs: []
  type: TYPE_TB
- en: '| `(eval *obj* *environment*)` | procedure | [136](control.html#./control:s80)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(even? *int*)` | procedure | [174](objects.html#./objects:s96) |'
  prefs: []
  type: TYPE_TB
- en: '| `(exact *num*)` | procedure | [180](objects.html#./objects:s114) |'
  prefs: []
  type: TYPE_TB
- en: '| `(exact->inexact *num*)` | procedure | [181](objects.html#./objects:s116)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(exact-integer-sqrt *n*)` | procedure | [184](objects.html#./objects:s128)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(exact? *num*)` | procedure | [170](objects.html#./objects:s86) |'
  prefs: []
  type: TYPE_TB
- en: '| `(exists *procedure* *list[1]* *list[2]* ...)` | procedure | [119](control.html#./control:s36)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(exit)` | procedure | [350](libraries.html#./libraries:s18) |'
  prefs: []
  type: TYPE_TB
- en: '| `(exit *obj*)` | procedure | [350](libraries.html#./libraries:s18) |'
  prefs: []
  type: TYPE_TB
- en: '| `(exp *num*)` | procedure | [184](objects.html#./objects:s129) |'
  prefs: []
  type: TYPE_TB
- en: '| `(expt *num[1]* *num[2]*)` | procedure | [179](objects.html#./objects:s111)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `fields` | syntax | [331](records.html#./records:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `(file-exists? *path*)` | procedure | [286](io.html#./io:s89) |'
  prefs: []
  type: TYPE_TB
- en: '| `(file-options *symbol* ...)` | syntax | [261](io.html#./io:s26) |'
  prefs: []
  type: TYPE_TB
- en: '| `(filter *procedure* *list*)` | procedure | [164](objects.html#./objects:s55)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(find *procedure* *list*)` | procedure | [165](objects.html#./objects:s57)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(finite? *real*)` | procedure | [174](objects.html#./objects:s97) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fixnum->flonum *fx*)` | procedure | [211](objects.html#./objects:s198)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fixnum-width)` | procedure | [193](objects.html#./objects:s152) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fixnum? *obj*)` | procedure | [193](objects.html#./objects:s150) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl* *fl* ...)` | procedure | [207](objects.html#./objects:s186) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl+ *fl* ...)` | procedure | [206](objects.html#./objects:s184) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl- *fl*)` | procedure | [206](objects.html#./objects:s185) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl- *fl[1]* *fl[2]* *fl[3]* ...)` | procedure | [206](objects.html#./objects:s185)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl/ *fl*)` | procedure | [207](objects.html#./objects:s187) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl/ *fl[1]* *fl[2]* *fl[3]* ...)` | procedure | [207](objects.html#./objects:s187)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl<=? *fl[1]* *fl[2]* *fl[3]* ...)` | procedure | [203](objects.html#./objects:s178)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl<? *fl[1]* *fl[2]* *fl[3]* ...)` | procedure | [203](objects.html#./objects:s178)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl=? *fl[1]* *fl[2]* *fl[3]* ...)` | procedure | [203](objects.html#./objects:s178)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl>=? *fl[1]* *fl[2]* *fl[3]* ...)` | procedure | [203](objects.html#./objects:s178)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fl>? *fl[1]* *fl[2]* *fl[3]* ...)` | procedure | [203](objects.html#./objects:s178)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(flabs *fl*)` | procedure | [209](objects.html#./objects:s192) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flacos *fl*)` | procedure | [210](objects.html#./objects:s195) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flasin *fl*)` | procedure | [210](objects.html#./objects:s195) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flatan *fl*)` | procedure | [210](objects.html#./objects:s195) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flatan *fl[1]* *fl[2]*)` | procedure | [210](objects.html#./objects:s195)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(flceiling *fl*)` | procedure | [208](objects.html#./objects:s190) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flcos *fl*)` | procedure | [210](objects.html#./objects:s194) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fldenominator *fl*)` | procedure | [209](objects.html#./objects:s191) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fldiv *fl[1]* *fl[2]*)` | procedure | [207](objects.html#./objects:s188)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fldiv-and-mod *fl[1]* *fl[2]*)` | procedure | [207](objects.html#./objects:s188)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fldiv0 *fl[1]* *fl[2]*)` | procedure | [208](objects.html#./objects:s189)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fldiv0-and-mod0 *fl[1]* *fl[2]*)` | procedure | [208](objects.html#./objects:s189)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fleven? *fl-int*)` | procedure | [205](objects.html#./objects:s182) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flexp *fl*)` | procedure | [209](objects.html#./objects:s193) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flexpt *fl[1]* *fl[2]*)` | procedure | [210](objects.html#./objects:s197)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(flfinite? *fl*)` | procedure | [205](objects.html#./objects:s181) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flfloor *fl*)` | procedure | [208](objects.html#./objects:s190) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flinfinite? *fl*)` | procedure | [205](objects.html#./objects:s181) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flinteger? *fl*)` | procedure | [204](objects.html#./objects:s180) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fllog *fl*)` | procedure | [209](objects.html#./objects:s193) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fllog *fl[1]* *fl[2]*)` | procedure | [209](objects.html#./objects:s193)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(flmax *fl[1]* *fl[2]* ...)` | procedure | [205](objects.html#./objects:s183)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(flmin *fl[1]* *fl[2]* ...)` | procedure | [205](objects.html#./objects:s183)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(flmod *fl[1]* *fl[2]*)` | procedure | [207](objects.html#./objects:s188)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(flmod0 *fl[1]* *fl[2]*)` | procedure | [208](objects.html#./objects:s189)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(flnan? *fl*)` | procedure | [205](objects.html#./objects:s181) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flnegative? *fl*)` | procedure | [204](objects.html#./objects:s179) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flnumerator *fl*)` | procedure | [209](objects.html#./objects:s191) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flodd? *fl-int*)` | procedure | [205](objects.html#./objects:s182) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flonum? *obj*)` | procedure | [203](objects.html#./objects:s177) |'
  prefs: []
  type: TYPE_TB
- en: '| `(floor *real*)` | procedure | [177](objects.html#./objects:s102) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flpositive? *fl*)` | procedure | [204](objects.html#./objects:s179) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flround *fl*)` | procedure | [208](objects.html#./objects:s190) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flsin *fl*)` | procedure | [210](objects.html#./objects:s194) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flsqrt *fl*)` | procedure | [210](objects.html#./objects:s196) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fltan *fl*)` | procedure | [210](objects.html#./objects:s194) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fltruncate *fl*)` | procedure | [208](objects.html#./objects:s190) |'
  prefs: []
  type: TYPE_TB
- en: '| `(flush-output-port *output-port*)` | procedure | [280](io.html#./io:s74)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(flzero? *fl*)` | procedure | [204](objects.html#./objects:s179) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fold-left *procedure* *obj* *list[1]* *list[2]* ...)` | procedure | [120](control.html#./control:s38)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fold-right *procedure* *obj* *list[1]* *list[2]* ...)` | procedure | [121](control.html#./control:s41)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(for-all *procedure* *list[1]* *list[2]* ...)` | procedure | [119](control.html#./control:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(for-each *procedure* *list[1]* *list[2]* ...)` | procedure | [118](control.html#./control:s33)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(force *promise*)` | procedure | [128](control.html#./control:s65) |'
  prefs: []
  type: TYPE_TB
- en: '| `(free-identifier=? *identifier[1]* *identifier[2]*)` | procedure | [302](syntax.html#./syntax:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx* *fx[1]* *fx[2]*)` | procedure | [195](objects.html#./objects:s159)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx*/carry *fx[1]* *fx[2]* *fx[3]*)` | procedure | [197](objects.html#./objects:s162)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx+ *fx[1]* *fx[2]*)` | procedure | [195](objects.html#./objects:s157)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx+/carry *fx[1]* *fx[2]* *fx[3]*)` | procedure | [197](objects.html#./objects:s162)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx- *fx*)` | procedure | [195](objects.html#./objects:s158) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx- *fx[1]* *fx[2]*)` | procedure | [195](objects.html#./objects:s158)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx-/carry *fx[1]* *fx[2]* *fx[3]*)` | procedure | [197](objects.html#./objects:s162)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx<=? *fx[1]* *fx[2]* *fx[3]* ...)` | procedure | [193](objects.html#./objects:s153)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx<? *fx[1]* *fx[2]* *fx[3]* ...)` | procedure | [193](objects.html#./objects:s153)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx=? *fx[1]* *fx[2]* *fx[3]* ...)` | procedure | [193](objects.html#./objects:s153)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx>=? *fx[1]* *fx[2]* *fx[3]* ...)` | procedure | [193](objects.html#./objects:s153)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fx>? *fx[1]* *fx[2]* *fx[3]* ...)` | procedure | [193](objects.html#./objects:s153)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxand *fx* ...)` | procedure | [197](objects.html#./objects:s163) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxarithmetic-shift *fx[1]* *fx[2]*)` | procedure | [201](objects.html#./objects:s173)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxarithmetic-shift-left *fx[1]* *fx[2]*)` | procedure | [201](objects.html#./objects:s172)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxarithmetic-shift-right *fx[1]* *fx[2]*)` | procedure | [201](objects.html#./objects:s172)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxbit-count *fx*)` | procedure | [198](objects.html#./objects:s165) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxbit-field *fx[1]* *fx[2]* *fx[3]*)` | procedure | [200](objects.html#./objects:s170)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxbit-set? *fx[1]* *fx[2]*)` | procedure | [199](objects.html#./objects:s168)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxcopy-bit *fx[1]* *fx[2]* *fx[3]*)` | procedure | [200](objects.html#./objects:s169)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxcopy-bit-field *fx[1]* *fx[2]* *fx[3]* *fx[4]*)` | procedure | [200](objects.html#./objects:s171)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxdiv *fx[1]* *fx[2]*)` | procedure | [196](objects.html#./objects:s160)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxdiv-and-mod *fx[1]* *fx[2]*)` | procedure | [196](objects.html#./objects:s160)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxdiv0 *fx[1]* *fx[2]*)` | procedure | [196](objects.html#./objects:s161)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxdiv0-and-mod0 *fx[1]* *fx[2]*)` | procedure | [196](objects.html#./objects:s161)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxeven? *fx*)` | procedure | [194](objects.html#./objects:s155) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxfirst-bit-set *fx*)` | procedure | [199](objects.html#./objects:s167)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxif *fx[1]* *fx[2]* *fx[3]*)` | procedure | [198](objects.html#./objects:s164)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxior *fx* ...)` | procedure | [197](objects.html#./objects:s163) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxlength *fx*)` | procedure | [198](objects.html#./objects:s166) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxmax *fx[1]* *fx[2]* ...)` | procedure | [195](objects.html#./objects:s156)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxmin *fx[1]* *fx[2]* ...)` | procedure | [195](objects.html#./objects:s156)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxmod *fx[1]* *fx[2]*)` | procedure | [196](objects.html#./objects:s160)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxmod0 *fx[1]* *fx[2]*)` | procedure | [196](objects.html#./objects:s161)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxnegative? *fx*)` | procedure | [194](objects.html#./objects:s154) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxnot *fx*)` | procedure | [197](objects.html#./objects:s163) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxodd? *fx*)` | procedure | [194](objects.html#./objects:s155) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxpositive? *fx*)` | procedure | [194](objects.html#./objects:s154) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxreverse-bit-field *fx[1]* *fx[2]* *fx[3]*)` | procedure | [202](objects.html#./objects:s175)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxrotate-bit-field *fx[1]* *fx[2]* *fx[3]* *fx[4]*)` | procedure | [201](objects.html#./objects:s174)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxxor *fx* ...)` | procedure | [197](objects.html#./objects:s163) |'
  prefs: []
  type: TYPE_TB
- en: '| `(fxzero? *fx*)` | procedure | [194](objects.html#./objects:s154) |'
  prefs: []
  type: TYPE_TB
- en: '| `(gcd *int* ...)` | procedure | [179](objects.html#./objects:s109) |'
  prefs: []
  type: TYPE_TB
- en: '| `(generate-temporaries *list*)` | procedure | [310](syntax.html#./syntax:s49)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-bytevector-all *binary-input-port*)` | procedure | [275](io.html#./io:s60)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-bytevector-n *binary-input-port* *n*)` | procedure | [274](io.html#./io:s57)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-bytevector-n! *binary-input-port* *bytevector* *start* *n*)` | procedure
    | [274](io.html#./io:s58) |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-bytevector-some *binary-input-port*)` | procedure | [275](io.html#./io:s59)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-char *textual-input-port*)` | procedure | [275](io.html#./io:s61) |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-datum *textual-input-port*)` | procedure | [278](io.html#./io:s67)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-line *textual-input-port*)` | procedure | [277](io.html#./io:s66) |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-string-all *textual-input-port*)` | procedure | [277](io.html#./io:s65)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-string-n *textual-input-port* *n*)` | procedure | [276](io.html#./io:s63)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-string-n! *textual-input-port* *string* *start* *n*)` | procedure |
    [276](io.html#./io:s64) |'
  prefs: []
  type: TYPE_TB
- en: '| `(get-u8 *binary-input-port*)` | procedure | [274](io.html#./io:s55) |'
  prefs: []
  type: TYPE_TB
- en: '| `(greatest-fixnum)` | procedure | [193](objects.html#./objects:s151) |'
  prefs: []
  type: TYPE_TB
- en: '| `(guard (*var* *clause[1]* *clause[2]* ...) *b1* *b2* ...)` | syntax | [361](exceptions.html#./exceptions:s8)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-clear! *hashtable*)` | procedure | [249](objects.html#./objects:s287)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-clear! *hashtable* *size*)` | procedure | [249](objects.html#./objects:s287)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-contains? *hashtable* *key*)` | procedure | [246](objects.html#./objects:s282)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-copy *hashtable*)` | procedure | [248](objects.html#./objects:s286)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-copy *hashtable* *mutable?*)` | procedure | [248](objects.html#./objects:s286)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-delete! *hashtable* *key*)` | procedure | [248](objects.html#./objects:s284)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-entries *hashtable*)` | procedure | [250](objects.html#./objects:s289)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-equivalence-function *hashtable*)` | procedure | [245](objects.html#./objects:s278)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-hash-function *hashtable*)` | procedure | [245](objects.html#./objects:s278)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-keys *hashtable*)` | procedure | [249](objects.html#./objects:s288)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-mutable? *hashtable*)` | procedure | [245](objects.html#./objects:s277)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-ref *hashtable* *key* *default*)` | procedure | [246](objects.html#./objects:s281)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-set! *hashtable* *key* *obj*)` | procedure | [246](objects.html#./objects:s280)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-size *hashtable*)` | procedure | [248](objects.html#./objects:s285)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable-update! *hashtable* *key* *procedure* *default*)` | procedure
    | [247](objects.html#./objects:s283) |'
  prefs: []
  type: TYPE_TB
- en: '| `(hashtable? *obj*)` | procedure | [155](objects.html#./objects:s25) |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-decoding-error? *obj*)` | procedure | [375](exceptions.html#./exceptions:s42)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-encoding-error-char *condition*)` | procedure | [376](exceptions.html#./exceptions:s43)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-encoding-error? *obj*)` | procedure | [376](exceptions.html#./exceptions:s43)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-error-filename *condition*)` | procedure | [373](exceptions.html#./exceptions:s36)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-error-port *condition*)` | procedure | [375](exceptions.html#./exceptions:s41)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-error-position *condition*)` | procedure | [372](exceptions.html#./exceptions:s35)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-error? *obj*)` | procedure | [371](exceptions.html#./exceptions:s32)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-file-already-exists-error? *obj*)` | procedure | [374](exceptions.html#./exceptions:s39)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-file-does-not-exist-error? *obj*)` | procedure | [374](exceptions.html#./exceptions:s40)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-file-is-read-only-error? *obj*)` | procedure | [374](exceptions.html#./exceptions:s38)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-file-protection-error? *obj*)` | procedure | [373](exceptions.html#./exceptions:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-filename-error? *obj*)` | procedure | [373](exceptions.html#./exceptions:s36)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-invalid-position-error? *obj*)` | procedure | [372](exceptions.html#./exceptions:s35)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-port-error? *obj*)` | procedure | [375](exceptions.html#./exceptions:s41)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-read-error? *obj*)` | procedure | [372](exceptions.html#./exceptions:s33)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(i/o-write-error? *obj*)` | procedure | [372](exceptions.html#./exceptions:s34)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(identifier-syntax *tmpl*)` | syntax | [297](syntax.html#./syntax:s27) |'
  prefs: []
  type: TYPE_TB
- en: '| `(identifier-syntax (*id[1]* *tmpl[1]*) ((set! *id[2]* *e[2]*) *tmpl[2]*))`
    | syntax | [297](syntax.html#./syntax:s27) |'
  prefs: []
  type: TYPE_TB
- en: '| `(identifier? *obj*)` | procedure | [301](syntax.html#./syntax:s35) |'
  prefs: []
  type: TYPE_TB
- en: '| `(if *test* *consequent* *alternative*)` | syntax | [109](control.html#./control:s8)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(if *test* *consequent*)` | syntax | [109](control.html#./control:s8) |'
  prefs: []
  type: TYPE_TB
- en: '| `(imag-part *num*)` | procedure | [182](objects.html#./objects:s121) |'
  prefs: []
  type: TYPE_TB
- en: '| `immutable` | syntax | [331](records.html#./records:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `(implementation-restriction-violation? *obj*)` | procedure | [369](exceptions.html#./exceptions:s28)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(inexact *num*)` | procedure | [180](objects.html#./objects:s112) |'
  prefs: []
  type: TYPE_TB
- en: '| `(inexact->exact *num*)` | procedure | [181](objects.html#./objects:s116)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(inexact? *num*)` | procedure | [170](objects.html#./objects:s87) |'
  prefs: []
  type: TYPE_TB
- en: '| `(infinite? *real*)` | procedure | [174](objects.html#./objects:s97) |'
  prefs: []
  type: TYPE_TB
- en: '| `(input-port? *obj*)` | procedure | [270](io.html#./io:s44) |'
  prefs: []
  type: TYPE_TB
- en: '| `(integer->char *n*)` | procedure | [215](objects.html#./objects:s211) |'
  prefs: []
  type: TYPE_TB
- en: '| `(integer-valued? *obj*)` | procedure | [153](objects.html#./objects:s18)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(integer? *obj*)` | procedure | [151](objects.html#./objects:s17) |'
  prefs: []
  type: TYPE_TB
- en: '| `(irritants-condition? *obj*)` | procedure | [368](exceptions.html#./exceptions:s25)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(lambda *formals* *body[1]* *body[2]* ...)` | syntax | [92](binding.html#./binding:s3)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(latin-1-codec)` | procedure | [259](io.html#./io:s22) |'
  prefs: []
  type: TYPE_TB
- en: '| `(lcm *int* ...)` | procedure | [179](objects.html#./objects:s110) |'
  prefs: []
  type: TYPE_TB
- en: '| `(least-fixnum)` | procedure | [193](objects.html#./objects:s151) |'
  prefs: []
  type: TYPE_TB
- en: '| `(length *list*)` | procedure | [159](objects.html#./objects:s46) |'
  prefs: []
  type: TYPE_TB
- en: '| `(let ((*var* *expr*) ...) *body[1]* *body[2]* ...)` | syntax | [95](binding.html#./binding:s16)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(let *name* ((*var* *expr*) ...) *body[1]* *body[2]* ...)` | syntax | [114](control.html#./control:s20)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(let* ((*var* *expr*) ...) *body[1]* *body[2]* ...)` | syntax | [96](binding.html#./binding:s18)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(let*-values ((*formals* *expr*) ...) *body[1]* *body[2]* ...)` | syntax
    | [99](binding.html#./binding:s23) |'
  prefs: []
  type: TYPE_TB
- en: '| `(let-syntax ((*keyword* *expr*) ...) *form[1]* *form[2]* ...)` | syntax
    | [293](syntax.html#./syntax:s13) |'
  prefs: []
  type: TYPE_TB
- en: '| `(let-values ((*formals* *expr*) ...) *body[1]* *body[2]* ...)` | syntax
    | [99](binding.html#./binding:s23) |'
  prefs: []
  type: TYPE_TB
- en: '| `(letrec ((*var* *expr*) ...) *body[1]* *body[2]* ...)` | syntax | [97](binding.html#./binding:s20)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(letrec* ((*var* *expr*) ...) *body[1]* *body[2]* ...)` | syntax | [98](binding.html#./binding:s22)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(letrec-syntax ((*keyword* *expr*) ...) *form[1]* *form[2]* ...)` | syntax
    | [293](syntax.html#./syntax:s13) |'
  prefs: []
  type: TYPE_TB
- en: '| `(lexical-violation? *obj*)` | procedure | [370](exceptions.html#./exceptions:s29)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(list *obj* ...)` | procedure | [158](objects.html#./objects:s43) |'
  prefs: []
  type: TYPE_TB
- en: '| `(list->string *list*)` | procedure | [223](objects.html#./objects:s229)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(list->vector *list*)` | procedure | [226](objects.html#./objects:s238)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(list-ref *list* *n*)` | procedure | [159](objects.html#./objects:s47) |'
  prefs: []
  type: TYPE_TB
- en: '| `(list-sort *predicate* *list*)` | procedure | [167](objects.html#./objects:s62)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(list-tail *list* *n*)` | procedure | [160](objects.html#./objects:s48)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(list? *obj*)` | procedure | [158](objects.html#./objects:s45) |'
  prefs: []
  type: TYPE_TB
- en: '| `(log *num*)` | procedure | [184](objects.html#./objects:s130) |'
  prefs: []
  type: TYPE_TB
- en: '| `(log *num[1]* *num[2]*)` | procedure | [184](objects.html#./objects:s130)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(lookahead-char *textual-input-port*)` | procedure | [275](io.html#./io:s62)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(lookahead-u8 *binary-input-port*)` | procedure | [274](io.html#./io:s56)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(magnitude *num*)` | procedure | [183](objects.html#./objects:s125) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-assertion-violation)` | procedure | [366](exceptions.html#./exceptions:s21)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-bytevector *n*)` | procedure | [228](objects.html#./objects:s242)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-bytevector *n* *fill*)` | procedure | [228](objects.html#./objects:s242)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-custom-binary-input-port *id* *r!* *gp* *sp!* *close*)` | procedure
    | [267](io.html#./io:s41) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-custom-binary-input/output-port *id* *r!* *w!* *gp* *sp!* *close*)`
    | procedure | [267](io.html#./io:s41) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-custom-binary-output-port *id* *w!* *gp* *sp!* *close*)` | procedure
    | [267](io.html#./io:s41) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-custom-textual-input-port *id* *r!* *gp* *sp!* *close*)` | procedure
    | [268](io.html#./io:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-custom-textual-input/output-port *id* *r!* *w!* *gp* *sp!* *close*)`
    | procedure | [268](io.html#./io:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-custom-textual-output-port *id* *w!* *gp* *sp!* *close*)` | procedure
    | [268](io.html#./io:s42) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-enumeration *symbol-list*)` | procedure | [251](objects.html#./objects:s291)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-eq-hashtable)` | procedure | [243](objects.html#./objects:s274) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-eq-hashtable *size*)` | procedure | [243](objects.html#./objects:s274)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-eqv-hashtable)` | procedure | [244](objects.html#./objects:s275) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-eqv-hashtable *size*)` | procedure | [244](objects.html#./objects:s275)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-error)` | procedure | [367](exceptions.html#./exceptions:s22) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-hashtable *hash* *equiv?*)` | procedure | [244](objects.html#./objects:s276)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-hashtable *hash* *equiv?* *size*)` | procedure | [244](objects.html#./objects:s276)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-decoding-error *pobj*)` | procedure | [375](exceptions.html#./exceptions:s42)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-encoding-error *pobj* *cobj*)` | procedure | [376](exceptions.html#./exceptions:s43)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-error)` | procedure | [371](exceptions.html#./exceptions:s32)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-file-already-exists-error *filename*)` | procedure | [374](exceptions.html#./exceptions:s39)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-file-does-not-exist-error *filename*)` | procedure | [374](exceptions.html#./exceptions:s40)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-file-is-read-only-error *filename*)` | procedure | [374](exceptions.html#./exceptions:s38)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-file-protection-error *filename*)` | procedure | [373](exceptions.html#./exceptions:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-filename-error *filename*)` | procedure | [373](exceptions.html#./exceptions:s36)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-invalid-position-error *position*)` | procedure | [372](exceptions.html#./exceptions:s35)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-port-error *pobj*)` | procedure | [375](exceptions.html#./exceptions:s41)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-read-error)` | procedure | [372](exceptions.html#./exceptions:s33)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-i/o-write-error)` | procedure | [372](exceptions.html#./exceptions:s34)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-implementation-restriction-violation)` | procedure | [369](exceptions.html#./exceptions:s28)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-irritants-condition *irritants*)` | procedure | [368](exceptions.html#./exceptions:s25)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-lexical-violation)` | procedure | [370](exceptions.html#./exceptions:s29)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-message-condition *message*)` | procedure | [368](exceptions.html#./exceptions:s24)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-no-infinities-violation)` | procedure | [376](exceptions.html#./exceptions:s44)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-no-nans-violation)` | procedure | [377](exceptions.html#./exceptions:s45)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-non-continuable-violation)` | procedure | [369](exceptions.html#./exceptions:s27)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-polar *real[1]* *real[2]*)` | procedure | [183](objects.html#./objects:s123)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-record-constructor-descriptor *rtd* *parent-rcd* *protocol*)` | procedure
    | [332](records.html#./records:s24) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-record-type-descriptor *name* *parent* *uid* *s?* *o?* *fields*)`
    | procedure | [331](records.html#./records:s20) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-rectangular *real[1]* *real[2]*)` | procedure | [182](objects.html#./objects:s122)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-serious-condition)` | procedure | [366](exceptions.html#./exceptions:s19)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-string *n*)` | procedure | [218](objects.html#./objects:s218) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-string *n* *char*)` | procedure | [218](objects.html#./objects:s218)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-syntax-violation *form* *subform*)` | procedure | [370](exceptions.html#./exceptions:s30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-transcoder *codec*)` | procedure | [259](io.html#./io:s19) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-transcoder *codec* *eol-style*)` | procedure | [259](io.html#./io:s19)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-transcoder *codec* *eol-style* *error-handling-mode*)` | procedure
    | [259](io.html#./io:s19) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-undefined-violation)` | procedure | [371](exceptions.html#./exceptions:s31)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-variable-transformer *procedure*)` | procedure | [306](syntax.html#./syntax:s42)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-vector *n*)` | procedure | [224](objects.html#./objects:s232) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-vector *n* *obj*)` | procedure | [224](objects.html#./objects:s232)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-violation)` | procedure | [366](exceptions.html#./exceptions:s20)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-warning)` | procedure | [367](exceptions.html#./exceptions:s23) |'
  prefs: []
  type: TYPE_TB
- en: '| `(make-who-condition *who*)` | procedure | [369](exceptions.html#./exceptions:s26)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(map *procedure* *list[1]* *list[2]* ...)` | procedure | [117](control.html#./control:s30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(max *real[1]* *real[2]* ...)` | procedure | [178](objects.html#./objects:s107)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(member *obj* *list*)` | procedure | [161](objects.html#./objects:s51) |'
  prefs: []
  type: TYPE_TB
- en: '| `(memp *procedure* *list*)` | procedure | [163](objects.html#./objects:s52)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(memq *obj* *list*)` | procedure | [161](objects.html#./objects:s51) |'
  prefs: []
  type: TYPE_TB
- en: '| `(memv *obj* *list*)` | procedure | [161](objects.html#./objects:s51) |'
  prefs: []
  type: TYPE_TB
- en: '| `(message-condition? *obj*)` | procedure | [368](exceptions.html#./exceptions:s24)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(min *real[1]* *real[2]* ...)` | procedure | [178](objects.html#./objects:s108)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(mod *x[1]* *x[2]*)` | procedure | [175](objects.html#./objects:s99) |'
  prefs: []
  type: TYPE_TB
- en: '| `(mod0 *x[1]* *x[2]*)` | procedure | [176](objects.html#./objects:s100) |'
  prefs: []
  type: TYPE_TB
- en: '| `(modulo *int[1]* *int[2]*)` | procedure | [175](objects.html#./objects:s98)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `mutable` | syntax | [331](records.html#./records:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `(nan? *real*)` | procedure | [174](objects.html#./objects:s97) |'
  prefs: []
  type: TYPE_TB
- en: '| `(native-endianness)` | procedure | [228](objects.html#./objects:s241) |'
  prefs: []
  type: TYPE_TB
- en: '| `(native-eol-style)` | procedure | [260](io.html#./io:s24) |'
  prefs: []
  type: TYPE_TB
- en: '| `(native-transcoder)` | procedure | [259](io.html#./io:s21) |'
  prefs: []
  type: TYPE_TB
- en: '| `(negative? *real*)` | procedure | [173](objects.html#./objects:s95) |'
  prefs: []
  type: TYPE_TB
- en: '| `(newline)` | procedure | [285](io.html#./io:s87) |'
  prefs: []
  type: TYPE_TB
- en: '| `(newline *textual-output-port*)` | procedure | [285](io.html#./io:s87) |'
  prefs: []
  type: TYPE_TB
- en: '| `(no-infinities-violation? *obj*)` | procedure | [376](exceptions.html#./exceptions:s44)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(no-nans-violation? *obj*)` | procedure | [377](exceptions.html#./exceptions:s45)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(non-continuable-violation? *obj*)` | procedure | [369](exceptions.html#./exceptions:s27)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `nongenerative` | syntax | [331](records.html#./records:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `(not *obj*)` | procedure | [110](control.html#./control:s10) |'
  prefs: []
  type: TYPE_TB
- en: '| `(null-environment *version*)` | procedure | [137](control.html#./control:s82)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(null? *obj*)` | procedure | [151](objects.html#./objects:s15) |'
  prefs: []
  type: TYPE_TB
- en: '| `(number->string *num*)` | procedure | [191](objects.html#./objects:s148)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(number->string *num* *radix*)` | procedure | [191](objects.html#./objects:s148)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(number->string *num* *radix* *precision*)` | procedure | [191](objects.html#./objects:s148)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(number? *obj*)` | procedure | [151](objects.html#./objects:s17) |'
  prefs: []
  type: TYPE_TB
- en: '| `(numerator *rat*)` | procedure | [181](objects.html#./objects:s118) |'
  prefs: []
  type: TYPE_TB
- en: '| `(odd? *int*)` | procedure | [174](objects.html#./objects:s96) |'
  prefs: []
  type: TYPE_TB
- en: '| `opaque` | syntax | [331](records.html#./records:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-bytevector-input-port *bytevector*)` | procedure | [264](io.html#./io:s34)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-bytevector-input-port *bytevector* *?transcoder*)` | procedure | [264](io.html#./io:s34)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-bytevector-output-port)` | procedure | [265](io.html#./io:s36) |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-bytevector-output-port *?transcoder*)` | procedure | [265](io.html#./io:s36)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-input-port *path*)` | procedure | [262](io.html#./io:s29) |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-input-port *path* *options*)` | procedure | [262](io.html#./io:s29)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-input-port *path* *options* *b-mode*)` | procedure | [262](io.html#./io:s29)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-input-port *path* *options* *b-mode* *?transcoder*)` | procedure
    | [262](io.html#./io:s29) |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-input/output-port *path*)` | procedure | [263](io.html#./io:s31)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-input/output-port *path* *options*)` | procedure | [263](io.html#./io:s31)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-input/output-port *path* *options* *b-mode*)` | procedure | [263](io.html#./io:s31)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-input/output-port *path* *options* *b-mode* *?transcoder*)` |
    procedure | [263](io.html#./io:s31) |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-output-port *path*)` | procedure | [262](io.html#./io:s30) |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-output-port *path* *options*)` | procedure | [262](io.html#./io:s30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-output-port *path* *options* *b-mode*)` | procedure | [262](io.html#./io:s30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-file-output-port *path* *options* *b-mode* *?transcoder*)` | procedure
    | [262](io.html#./io:s30) |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-input-file *path*)` | procedure | [280](io.html#./io:s75) |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-output-file *path*)` | procedure | [281](io.html#./io:s76) |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-string-input-port *string*)` | procedure | [265](io.html#./io:s35)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(open-string-output-port)` | procedure | [266](io.html#./io:s37) |'
  prefs: []
  type: TYPE_TB
- en: '| `(or *expr* ...)` | syntax | [110](control.html#./control:s12) |'
  prefs: []
  type: TYPE_TB
- en: '| `(output-port-buffer-mode *port*)` | procedure | [273](io.html#./io:s52)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(output-port? *obj*)` | procedure | [270](io.html#./io:s44) |'
  prefs: []
  type: TYPE_TB
- en: '| `(pair? *obj*)` | procedure | [151](objects.html#./objects:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `parent` | syntax | [331](records.html#./records:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `parent-rtd` | syntax | [331](records.html#./records:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `(partition *procedure* *list*)` | procedure | [164](objects.html#./objects:s56)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(peek-char)` | procedure | [284](io.html#./io:s83) |'
  prefs: []
  type: TYPE_TB
- en: '| `(peek-char *textual-input-port*)` | procedure | [284](io.html#./io:s83)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(port-eof? *input-port*)` | procedure | [278](io.html#./io:s68) |'
  prefs: []
  type: TYPE_TB
- en: '| `(port-has-port-position? *port*)` | procedure | [271](io.html#./io:s49)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(port-has-set-port-position!? *port*)` | procedure | [272](io.html#./io:s50)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(port-position *port*)` | procedure | [271](io.html#./io:s49) |'
  prefs: []
  type: TYPE_TB
- en: '| `(port-transcoder *port*)` | procedure | [271](io.html#./io:s48) |'
  prefs: []
  type: TYPE_TB
- en: '| `(port? *obj*)` | procedure | [270](io.html#./io:s43) |'
  prefs: []
  type: TYPE_TB
- en: '| `(positive? *real*)` | procedure | [173](objects.html#./objects:s94) |'
  prefs: []
  type: TYPE_TB
- en: '| `(*expr[0]* *expr[1]* ...)` | syntax | [107](control.html#./control:s1) |'
  prefs: []
  type: TYPE_TB
- en: '| `(procedure? *obj*)` | procedure | [155](objects.html#./objects:s23) |'
  prefs: []
  type: TYPE_TB
- en: '| `protocol` | syntax | [331](records.html#./records:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `(put-bytevector *binary-output-port* *bytevector*)` | procedure | [279](io.html#./io:s70)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(put-bytevector *binary-output-port* *bytevector* *start*)` | procedure
    | [279](io.html#./io:s70) |'
  prefs: []
  type: TYPE_TB
- en: '| `(put-bytevector *binary-output-port* *bytevector* *start* *n*)` | procedure
    | [279](io.html#./io:s70) |'
  prefs: []
  type: TYPE_TB
- en: '| `(put-char *textual-output-port* *char*)` | procedure | [279](io.html#./io:s71)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(put-datum *textual-output-port* *obj*)` | procedure | [279](io.html#./io:s73)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(put-string *textual-output-port* *string*)` | procedure | [279](io.html#./io:s72)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(put-string *textual-output-port* *string* *start*)` | procedure | [279](io.html#./io:s72)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(put-string *textual-output-port* *string* *start* *n*)` | procedure | [279](io.html#./io:s72)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(put-u8 *binary-output-port* *octet*)` | procedure | [278](io.html#./io:s69)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(quasiquote *obj* ...)` | syntax | [142](objects.html#./objects:s5) |'
  prefs: []
  type: TYPE_TB
- en: '| `(quasisyntax *template* ...)` | syntax | [305](syntax.html#./syntax:s40)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(quote *obj*)` | syntax | [141](objects.html#./objects:s2) |'
  prefs: []
  type: TYPE_TB
- en: '| `(quotient *int[1]* *int[2]*)` | procedure | [175](objects.html#./objects:s98)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(raise *obj*)` | procedure | [357](exceptions.html#./exceptions:s3) |'
  prefs: []
  type: TYPE_TB
- en: '| `(raise-continuable *obj*)` | procedure | [357](exceptions.html#./exceptions:s3)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(rational-valued? *obj*)` | procedure | [153](objects.html#./objects:s18)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(rational? *obj*)` | procedure | [151](objects.html#./objects:s17) |'
  prefs: []
  type: TYPE_TB
- en: '| `(rationalize *real[1]* *real[2]*)` | procedure | [181](objects.html#./objects:s117)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(read)` | procedure | [284](io.html#./io:s81) |'
  prefs: []
  type: TYPE_TB
- en: '| `(read *textual-input-port*)` | procedure | [284](io.html#./io:s81) |'
  prefs: []
  type: TYPE_TB
- en: '| `(read-char)` | procedure | [284](io.html#./io:s82) |'
  prefs: []
  type: TYPE_TB
- en: '| `(read-char *textual-input-port*)` | procedure | [284](io.html#./io:s82)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(real->flonum *real*)` | procedure | [211](objects.html#./objects:s198)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(real-part *num*)` | procedure | [182](objects.html#./objects:s120) |'
  prefs: []
  type: TYPE_TB
- en: '| `(real-valued? *obj*)` | procedure | [153](objects.html#./objects:s18) |'
  prefs: []
  type: TYPE_TB
- en: '| `(real? *obj*)` | procedure | [151](objects.html#./objects:s17) |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-accessor *rtd* *idx*)` | procedure | [334](records.html#./records:s31)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-constructor *rcd*)` | procedure | [333](records.html#./records:s29)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-constructor-descriptor *record-name*)` | syntax | [333](records.html#./records:s28)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-field-mutable? *rtd* *idx*)` | procedure | [338](records.html#./records:s39)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-mutator *rtd* *idx*)` | procedure | [334](records.html#./records:s32)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-predicate *rtd*)` | procedure | [333](records.html#./records:s30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-rtd *record*)` | procedure | [338](records.html#./records:s41) |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-type-descriptor *record-name*)` | syntax | [333](records.html#./records:s28)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-type-descriptor? *obj*)` | procedure | [332](records.html#./records:s23)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-type-field-names *rtd*)` | procedure | [337](records.html#./records:s38)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-type-generative? *rtd*)` | procedure | [337](records.html#./records:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-type-name *rtd*)` | procedure | [336](records.html#./records:s34)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-type-opaque? *rtd*)` | procedure | [337](records.html#./records:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-type-parent *rtd*)` | procedure | [336](records.html#./records:s35)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-type-sealed? *rtd*)` | procedure | [337](records.html#./records:s37)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record-type-uid *rtd*)` | procedure | [336](records.html#./records:s36)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(record? *obj*)` | procedure | [338](records.html#./records:s40) |'
  prefs: []
  type: TYPE_TB
- en: '| `(remainder *int[1]* *int[2]*)` | procedure | [175](objects.html#./objects:s98)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(remove *obj* *list*)` | procedure | [163](objects.html#./objects:s53) |'
  prefs: []
  type: TYPE_TB
- en: '| `(remp *procedure* *list*)` | procedure | [163](objects.html#./objects:s54)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(remq *obj* *list*)` | procedure | [163](objects.html#./objects:s53) |'
  prefs: []
  type: TYPE_TB
- en: '| `(remv *obj* *list*)` | procedure | [163](objects.html#./objects:s53) |'
  prefs: []
  type: TYPE_TB
- en: '| `(reverse *list*)` | procedure | [161](objects.html#./objects:s50) |'
  prefs: []
  type: TYPE_TB
- en: '| `(round *real*)` | procedure | [178](objects.html#./objects:s104) |'
  prefs: []
  type: TYPE_TB
- en: '| `(scheme-report-environment *version*)` | procedure | [137](control.html#./control:s82)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `sealed` | syntax | [331](records.html#./records:s16) |'
  prefs: []
  type: TYPE_TB
- en: '| `(serious-condition? *obj*)` | procedure | [366](exceptions.html#./exceptions:s19)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(set! *var* *expr*)` | syntax | [102](binding.html#./binding:s28) |'
  prefs: []
  type: TYPE_TB
- en: '| `(set-car! *pair* *obj*)` | procedure | [157](objects.html#./objects:s40)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(set-cdr! *pair* *obj*)` | procedure | [157](objects.html#./objects:s41)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(set-port-position! *port* *pos*)` | procedure | [272](io.html#./io:s50)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(simple-conditions *condition*)` | procedure | [363](exceptions.html#./exceptions:s16)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(sin *num*)` | procedure | [185](objects.html#./objects:s131) |'
  prefs: []
  type: TYPE_TB
- en: '| `(sint-list->bytevector *list* *eness* *size*)` | procedure | [239](objects.html#./objects:s261)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(sqrt *num*)` | procedure | [183](objects.html#./objects:s127) |'
  prefs: []
  type: TYPE_TB
- en: '| `(standard-error-port)` | procedure | [264](io.html#./io:s33) |'
  prefs: []
  type: TYPE_TB
- en: '| `(standard-input-port)` | procedure | [264](io.html#./io:s33) |'
  prefs: []
  type: TYPE_TB
- en: '| `(standard-output-port)` | procedure | [264](io.html#./io:s33) |'
  prefs: []
  type: TYPE_TB
- en: '| `(string *char* ...)` | procedure | [218](objects.html#./objects:s217) |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->bytevector *string* *transcoder*)` | procedure | [287](io.html#./io:s92)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->list *string*)` | procedure | [222](objects.html#./objects:s228)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->number *string*)` | procedure | [191](objects.html#./objects:s147)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->number *string* *radix*)` | procedure | [191](objects.html#./objects:s147)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->symbol *string*)` | procedure | [242](objects.html#./objects:s269)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->utf16 *string*)` | procedure | [287](io.html#./io:s94) |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->utf16 *string* *endianness*)` | procedure | [287](io.html#./io:s94)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->utf32 *string*)` | procedure | [287](io.html#./io:s94) |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->utf32 *string* *endianness*)` | procedure | [287](io.html#./io:s94)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string->utf8 *string*)` | procedure | [287](io.html#./io:s93) |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-append *string* ...)` | procedure | [219](objects.html#./objects:s223)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-ci-hash *string*)` | procedure | [245](objects.html#./objects:s279)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-ci<=? *string[1]* *string[2]* *string[3]* ...)` | procedure | [217](objects.html#./objects:s216)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-ci<? *string[1]* *string[2]* *string[3]* ...)` | procedure | [217](objects.html#./objects:s216)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-ci=? *string[1]* *string[2]* *string[3]* ...)` | procedure | [217](objects.html#./objects:s216)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-ci>=? *string[1]* *string[2]* *string[3]* ...)` | procedure | [217](objects.html#./objects:s216)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-ci>? *string[1]* *string[2]* *string[3]* ...)` | procedure | [217](objects.html#./objects:s216)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-copy *string*)` | procedure | [219](objects.html#./objects:s222)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-downcase *string*)` | procedure | [221](objects.html#./objects:s226)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-fill! *string* *char*)` | procedure | [220](objects.html#./objects:s225)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-foldcase *string*)` | procedure | [221](objects.html#./objects:s226)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-for-each *procedure* *string[1]* *string[2]* ...)` | procedure |
    [122](control.html#./control:s50) |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-hash *string*)` | procedure | [245](objects.html#./objects:s279)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-length *string*)` | procedure | [218](objects.html#./objects:s219)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-normalize-nfc *string*)` | procedure | [222](objects.html#./objects:s227)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-normalize-nfd *string*)` | procedure | [222](objects.html#./objects:s227)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-normalize-nfkc *string*)` | procedure | [222](objects.html#./objects:s227)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-normalize-nfkd *string*)` | procedure | [222](objects.html#./objects:s227)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-ref *string* *n*)` | procedure | [218](objects.html#./objects:s220)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-set! *string* *n* *char*)` | procedure | [219](objects.html#./objects:s221)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-titlecase *string*)` | procedure | [221](objects.html#./objects:s226)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string-upcase *string*)` | procedure | [221](objects.html#./objects:s226)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string<=? *string[1]* *string[2]* *string[3]* ...)` | procedure | [216](objects.html#./objects:s215)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string<? *string[1]* *string[2]* *string[3]* ...)` | procedure | [216](objects.html#./objects:s215)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string=? *string[1]* *string[2]* *string[3]* ...)` | procedure | [216](objects.html#./objects:s215)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string>=? *string[1]* *string[2]* *string[3]* ...)` | procedure | [216](objects.html#./objects:s215)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string>? *string[1]* *string[2]* *string[3]* ...)` | procedure | [216](objects.html#./objects:s215)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(string? *obj*)` | procedure | [154](objects.html#./objects:s20) |'
  prefs: []
  type: TYPE_TB
- en: '| `(substring *string* *start* *end*)` | procedure | [220](objects.html#./objects:s224)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(symbol->string *symbol*)` | procedure | [242](objects.html#./objects:s270)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(symbol-hash *symbol*)` | procedure | [245](objects.html#./objects:s279)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(symbol=? *symbol[1]* *symbol[2]*)` | procedure | [242](objects.html#./objects:s268)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(symbol? *obj*)` | procedure | [154](objects.html#./objects:s22) |'
  prefs: []
  type: TYPE_TB
- en: '| `(syntax *template*)` | syntax | [300](syntax.html#./syntax:s33) |'
  prefs: []
  type: TYPE_TB
- en: '| `(syntax->datum *obj*)` | procedure | [308](syntax.html#./syntax:s44) |'
  prefs: []
  type: TYPE_TB
- en: '| `(syntax-case *expr* (*literal* ...) *clause* ...)` | syntax | [299](syntax.html#./syntax:s30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(syntax-rules (*literal* ...) *clause* ...)` | syntax | [294](syntax.html#./syntax:s14)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(syntax-violation *who* *msg* *form*)` | procedure | [359](exceptions.html#./exceptions:s6)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(syntax-violation *who* *msg* *form* *subform*)` | procedure | [359](exceptions.html#./exceptions:s6)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(syntax-violation-form *condition*)` | procedure | [370](exceptions.html#./exceptions:s30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(syntax-violation-subform *condition*)` | procedure | [370](exceptions.html#./exceptions:s30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(syntax-violation? *obj*)` | procedure | [370](exceptions.html#./exceptions:s30)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(tan *num*)` | procedure | [185](objects.html#./objects:s131) |'
  prefs: []
  type: TYPE_TB
- en: '| `(textual-port? *obj*)` | procedure | [270](io.html#./io:s45) |'
  prefs: []
  type: TYPE_TB
- en: '| `(transcoded-port *binary-port* *transcoder*)` | procedure | [271](io.html#./io:s47)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(transcoder-codec *transcoder*)` | procedure | [259](io.html#./io:s20) |'
  prefs: []
  type: TYPE_TB
- en: '| `(transcoder-eol-style *transcoder*)` | procedure | [259](io.html#./io:s20)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(transcoder-error-handling-mode *transcoder*)` | procedure | [259](io.html#./io:s20)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(truncate *real*)` | procedure | [177](objects.html#./objects:s101) |'
  prefs: []
  type: TYPE_TB
- en: '| `(u8-list->bytevector *list*)` | procedure | [232](objects.html#./objects:s253)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(uint-list->bytevector *list* *eness* *size*)` | procedure | [239](objects.html#./objects:s261)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(undefined-violation? *obj*)` | procedure | [371](exceptions.html#./exceptions:s31)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(unless *test-expr* *expr[1]* *expr[2]* ...)` | syntax | [112](control.html#./control:s17)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(unquote *obj* ...)` | syntax | [142](objects.html#./objects:s5) |'
  prefs: []
  type: TYPE_TB
- en: '| `(unquote-splicing *obj* ...)` | syntax | [142](objects.html#./objects:s5)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(unsyntax *template* ...)` | syntax | [305](syntax.html#./syntax:s40) |'
  prefs: []
  type: TYPE_TB
- en: '| `(unsyntax-splicing *template* ...)` | syntax | [305](syntax.html#./syntax:s40)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(utf-16-codec)` | procedure | [259](io.html#./io:s22) |'
  prefs: []
  type: TYPE_TB
- en: '| `(utf-8-codec)` | procedure | [259](io.html#./io:s22) |'
  prefs: []
  type: TYPE_TB
- en: '| `(utf16->string *bytevector* *endianness*)` | procedure | [288](io.html#./io:s96)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(utf16->string *bytevector* *endianness* *endianness-mandatory?*)` | procedure
    | [288](io.html#./io:s96) |'
  prefs: []
  type: TYPE_TB
- en: '| `(utf32->string *bytevector* *endianness*)` | procedure | [288](io.html#./io:s96)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(utf32->string *bytevector* *endianness* *endianness-mandatory?*)` | procedure
    | [288](io.html#./io:s96) |'
  prefs: []
  type: TYPE_TB
- en: '| `(utf8->string *bytevector*)` | procedure | [287](io.html#./io:s95) |'
  prefs: []
  type: TYPE_TB
- en: '| `(values *obj* ...)` | procedure | [131](control.html#./control:s70) |'
  prefs: []
  type: TYPE_TB
- en: '| `*variable*` | syntax | [91](binding.html#./binding:s2) |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector *obj* ...)` | procedure | [224](objects.html#./objects:s231) |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector->list *vector*)` | procedure | [225](objects.html#./objects:s237)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector-fill! *vector* *obj*)` | procedure | [225](objects.html#./objects:s236)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector-for-each *procedure* *vector[1]* *vector[2]* ...)` | procedure |
    [122](control.html#./control:s47) |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector-length *vector*)` | procedure | [224](objects.html#./objects:s233)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector-map *procedure* *vector[1]* *vector[1]* ...)` | procedure | [121](control.html#./control:s44)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector-ref *vector* *n*)` | procedure | [224](objects.html#./objects:s234)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector-set! *vector* *n* *obj*)` | procedure | [225](objects.html#./objects:s235)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector-sort *predicate* *vector*)` | procedure | [226](objects.html#./objects:s239)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector-sort! *predicate* *vector*)` | procedure | [226](objects.html#./objects:s239)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(vector? *obj*)` | procedure | [154](objects.html#./objects:s21) |'
  prefs: []
  type: TYPE_TB
- en: '| `(violation? *obj*)` | procedure | [366](exceptions.html#./exceptions:s20)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(warning? *obj*)` | procedure | [367](exceptions.html#./exceptions:s23)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(when *test-expr* *expr[1]* *expr[2]* ...)` | syntax | [112](control.html#./control:s17)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(who-condition? *obj*)` | procedure | [369](exceptions.html#./exceptions:s26)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(with-exception-handler *procedure* *thunk*)` | procedure | [360](exceptions.html#./exceptions:s7)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(with-input-from-file *path* *thunk*)` | procedure | [283](io.html#./io:s79)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(with-output-to-file *path* *thunk*)` | procedure | [283](io.html#./io:s80)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(with-syntax ((*pattern* *expr*) ...) *body[1]* *body[2]* ...)` | syntax
    | [304](syntax.html#./syntax:s38) |'
  prefs: []
  type: TYPE_TB
- en: '| `(write *obj*)` | procedure | [284](io.html#./io:s84) |'
  prefs: []
  type: TYPE_TB
- en: '| `(write *obj* *textual-output-port*)` | procedure | [284](io.html#./io:s84)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(write-char *char*)` | procedure | [285](io.html#./io:s86) |'
  prefs: []
  type: TYPE_TB
- en: '| `(write-char *char* *textual-output-port*)` | procedure | [285](io.html#./io:s86)
    |'
  prefs: []
  type: TYPE_TB
- en: '| `(zero? *num*)` | procedure | [173](objects.html#./objects:s93) |'
  prefs: []
  type: TYPE_TB
