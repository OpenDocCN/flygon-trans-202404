- en: Directories and Links
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Lecture Notes for CS 140
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Spring 2014
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: John Ousterhout
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Readings for this topic from *Operating Systems: Principles and Practice*:
    Sections 13.1-13.2.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Naming: how do users refer to their files? How does OS find file, given name?'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'First step: file descriptor has to be stored on disk, so it will persist across
    system reboots.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Early UNIX versions: all descriptors stored in a fixed- size array on disk.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Originally entire descriptor array was at the outer edge of the disk. Result:
    long seeks between descriptors and file data.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Later improvements:'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Place descriptor array mid-way across disk.
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Many small descriptor arrays spread across disk, so descriptors can be near
    to file data.
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Space for descriptors is fixed when the disk is initialized, and can't be changed.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'UNIX/Linux/Pintos terms:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: File descriptor is called an *i-node*
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Index of i-node in the descriptor array: *i-number*. Internally the OS uses
    the i-number as an identifier for the file.'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: When a file is open, its descriptor is kept in main memory. When the file is
    closed, the descriptor is stored back to disk.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'File naming: users want to use text names to refer to files. Special disk structures
    called *directories* are used to map names to descriptor indexes.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Early approaches to directory management:'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A single directory for the entire disk:'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If one user uses a particular name, no-one else can.
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Many early personal computers worked this way.
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A single directory for each user (e.g. TOPS-10):'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoids problems between users, but still makes it hard to organize information.
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Modern systems support hierarchical directory structures. UNIX/Linux approach:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Directories are stored on disk just like regular files (i.e. file descriptor
    with 14 pointers, etc.) except file descriptor has special flag bit set to indicate
    that it's a directory.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Each directory contains <*name*, *i-number*> pairs in no particular order.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The file pointed to by the i-number may be another directory. Hence, get hierarchical
    tree structure. Names have slashes separating the levels of the tree.
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: There is one special directory, called the *root*. This directory has no name;
    it has i-number 2 (i-numbers 0 and 1 have other special purposes).
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: On some systems user programs can read directories just like regular files.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Only the operating system can write directories.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Working directories
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Cumbersome constantly to have to specify the full path name for all files.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Have OS remember one distinguished directory per process, called the *working
    directory*.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If a file name doesn't start with "/" then it is looked up starting in the working
    directory.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Names starting with "/" are looked up starting in the root directory.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Links
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*UNIX hard links*:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is possible for more than one directory entry to refer to a single file.
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: UNIX uses reference counts in file descriptors to keep track of hard links referring
    to a file.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Files are deleted when the last directory entry goes away.
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Must prevent circularities.
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Symbolic links*:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A file whose contents are another file name.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个内容是另一个文件名的文件。
- en: Stored on disk like regular files, but with special flag set in descriptor.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在磁盘上，像普通文件一样，但在描述符中设置了特殊标志。
- en: If a symbolic link is encountered during file lookup, switch to target named
    in symbolic link, continue lookup from there.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在文件查找过程中遇到符号链接，则切换到符号链接中指定的目标，然后从那里继续查找。
