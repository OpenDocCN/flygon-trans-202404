- en: '| [![Tal. French Roast, 6th Avenue and 11th, Manhattan 1995.](../Images/6d8def4d9dc4d6cd678a33f24fe27297.jpg)](/http://philip.greenspun.com/images/pcd1255/tal-midriff-22.tcl)
    |'
  prefs: []
  type: TYPE_TB
- en: Style
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: part of [SQL for Web Nerds](index.html) by [Philip Greenspun](http://philip.greenspun.com/)
    |
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a familiar simple example from [the complex queries chapter](complex-queries.html):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: 'Doesn''t seem so simple, eh? How about if we rewrite it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: If your code isn't properly indented then you will never be able to debug it.
    How can we justify using the word "properly"? After all, the SQL parser doesn't
    take extra spaces or newlines into account.
  prefs: []
  type: TYPE_NORMAL
- en: '**Software is indented properly when the structure of the software is revealed
    *and* when the indentation style is familiar to a community of programmers.**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Rules for All Queries
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If it fits on one line, it is okay to leave on one line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: 'If it doesn''t fit nicely on one line, give each clause a separate line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: 'If the stuff for a particular clause won''t fit on one line, put a newline
    immediately after the keyword that opens the clause. Then indent the items underneath.
    Here''s an example from the ArsDigita Community System''s static .html page administration
    section. We''re querying the `static_pages` table, which holds a copy of any .html
    files in the Unix file system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: In this query, there are two items in the select list, a count of all the rows
    and a sum of the bytes in the `page_body` column (of type CLOB, hence the requirement
    to use `dbms_lob.getlength` rather than simply `length`). We want Oracle to format
    these numbers with separation characters between every three digits. For this,
    we have to use the `to_char` function and a mask of `'999G999G999G999G999'` (the
    "G" tells Oracle to use the appropriate character depending on the country where
    it is installed, e.g., comma in the U.S. and period in Europe). Then we have to
    give the results correlation names so that they will be easy to use as Tcl variables.
    By the time we're done with all of this, it would be confusing to put both items
    on the same line.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s another example, this time from the top-level comment administation
    page for the ArsDigita Community System. We''re going to get back a single row
    with a count of each type of user-submitted comment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: Notice the use of `sum(decode` to count the number of each type of comment.
    This gives us similar information to what we'd get from a GROUP BY, but we get
    a sum total as well as category totals. Also, the numbers come out with the column
    names of our choice. Of course, this kind of query only works when you know in
    advance the possible values of `comment_type`.
  prefs: []
  type: TYPE_NORMAL
- en: '[The Oracle docs on DECODE](http://www.oradoc.com/keyword/decode)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: for an explanation of the number formatting wizardry, see Oracle8 Server SQL
    Reference [section on format conversion](http://www.oradoc.com/keyword/format_models)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rules for GROUP BY queries
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When you''re doing a GROUP BY, put the columns that determine the group identity
    first in the select list. Put the aggregate columns that compute a function for
    that group afterwards:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: 'Next: [procedural](procedural.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '[philg@mit.edu](http://philip.greenspun.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: Reader's Comments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The where clause is in two lines in the example above though the text suggests
    one line:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '"If it doesn''t fit nicely on one line, give each clause a separate line:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: select *
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: from news
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: where sysdate > expiration_date
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: and approved_p = 't'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: order by release_date desc, creation_date desc"
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this case, one line would be the better, of course.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Peter Tury](/shared/community-member?user_id=221702), June 12, 2002
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Add a comment](/comments/add?page_id=3537) | [Add a link](/links/add?page_id=3537)'
  prefs: []
  type: TYPE_NORMAL
