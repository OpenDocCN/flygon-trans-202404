- en: HubSpot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '6.824 2015 Lecture 19: HubSpot'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Note:** These lecture notes were slightly modified from the ones posted on
    the 6.824 [course website](http://nil.csail.mit.edu/6.824/2015/schedule.html)
    from Spring 2015.'
  prefs: []
  type: TYPE_NORMAL
- en: Distributed systems in the real world
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Who builds distributed systems:'
  prefs: []
  type: TYPE_NORMAL
- en: SaaS market
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Startups: CustomMade, Instagram, HubSpot'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Mature: Akamai, Facebook, Twitter'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enterprise market
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Startup: Basho (Riak), Infinio, Hadapt'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Mature: VMWare, Vertica'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '...and graduate students'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'High-level components:'
  prefs: []
  type: TYPE_NORMAL
- en: 'front-end: load balancing routers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: handlers, caching, storage, business services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'infra-services: logging, updates, authentication'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Low-level components:'
  prefs: []
  type: TYPE_NORMAL
- en: RPCs (semantics, failure)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: coordination (consensus, Paxos)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: persistence (serialization semantics)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: caching
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abstractions (queues, jobs, workflows)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building the thing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Business needs will affect scale and architecture
  prefs: []
  type: TYPE_NORMAL
- en: 'dating website core data: OkCupid uses 2 beefy database servers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'analytics distributed DB: Vertica/Netezza clusters have around 100 nodes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'mid-size SaaS company: HubSpot uses around 100 single-node DBs or around 10
    node HBase clusters'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MySQL mostly
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Akamai, Facebook, Amazon: tens of thousands of machines'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Small SaaS startup:'
  prefs: []
  type: TYPE_NORMAL
- en: early on the best thing is to figure out if you have a good idea that people
    would buy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: typically use a platform like Heroku, Google App Engine, AWS, Joyent, CloudFoundry
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Midsized SaaS:'
  prefs: []
  type: TYPE_NORMAL
- en: need more control than what PaaS offers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: scale may enable you to build better solutions more cheaply
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: open source solutions can help you
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Mature SaaS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Jepsen tool](http://aphyr.com/tags/jepsen)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '"Ensure your design works if scale changes by 10x or 20x; the right solution
    for x often not optimal for 100x", Jeff Dean'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'How to think about your design:'
  prefs: []
  type: TYPE_NORMAL
- en: understand what your system needs to do and the semantics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: understand workload scale then estimate (L2 access time, network latency) and
    plan to understand performance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running the thing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '"telemetry beats event logging"'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'logs can be hard to understand: getting a good story out is difficult'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'logging: first line of defense, doesn''t scale well'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: logs on different machines
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: what if timestamps are useless because clocks are not synced
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: lots of tools around logging
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: having log data in queryable format tends to be very useful
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: monitoring, telemetry, alerting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: annotate code with timing and counting events
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: measure how big a memory queue is or how long a request takes and you can count
    it
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: can do telemetry at multiple granularities so we can break long requests into
    smaller pieces and pinpoint problems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Management: command and control'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: in classroom settings you don't have to set up a bunch of machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: as your business scales new machines need to be set up => must automate
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: separate configuration from app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HubSpot uses a ZooKeeper like system that allows apps to get config values
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maven for dependencies in Java
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jenkins for continuous integration testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: automated testing makes it easy to verify newly introduced changes to your code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UI testing can be a little harder (simulate clicks, different layout in different
    browsers)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: front end changes => must change tests?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Teams
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'people: how do you get together and build the thing'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'analogy: software engineering process is sort of like a distributed system
    with unreliable components.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: somehow must build reliable software on a reliable schedule
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'gotta take care of your people: culture has to be amenable to people growing,
    learning and failing'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Process
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'waterfall: big design upfront and then implement it'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'agile/scrum: don''t know the whole solution, need to iterate on designs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'kanban:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'lean:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: making a big change on fast changing code base
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: if you branch and then merge your changes, chances are the codebase has changed
    drastically
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: you can try to have two different branches deployed such that the new branch
    can be tested in production
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: culture changes with growth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: need to pay attention to culture and happiness of employees
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: very important to measure happiness
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: having small teams might help because people can own projects
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
