["```\n// `===`\u3067\u306f\u3001\u7570\u306a\u308b\u30c7\u30fc\u30bf\u578b\u306e\u6bd4\u8f03\u7d50\u679c\u306ffalse\nconsole.log(1 === \"1\"); // => false \n```", "```\n// `==`\u3067\u306f\u3001\u7570\u306a\u308b\u30c7\u30fc\u30bf\u578b\u306f\u6697\u9ed9\u7684\u306a\u578b\u5909\u63db\u3092\u3057\u3066\u304b\u3089\u6bd4\u8f03\u3055\u308c\u308b\n// \u6697\u9ed9\u7684\u306a\u578b\u5909\u63db\u306b\u3088\u3063\u3066 1 == 1 \u306e\u3088\u3046\u306b\u5909\u63db\u3055\u308c\u3066\u304b\u3089\u6bd4\u8f03\u3055\u308c\u308b\nconsole.log(1 == \"1\"); // => true \n```", "```\n// \u6697\u9ed9\u7684\u306a\u578b\u5909\u63db\u304c\u884c\u308f\u308c\u3001\u6570\u5024\u306e\u52a0\u7b97\u3068\u3057\u3066\u8a08\u7b97\u3055\u308c\u308b\n1 + true; // => 2\n// \u6b21\u306e\u3088\u3046\u306b\u6697\u9ed9\u7684\u306b\u5909\u63db\u3055\u308c\u3066\u304b\u3089\u8a08\u7b97\u3055\u308c\u308b\n1 + 1; // => 2 \n```", "```\n// \u7570\u306a\u308b\u578b\u3067\u3042\u308b\u5834\u5408\u306b\u6697\u9ed9\u7684\u306a\u578b\u5909\u63db\u304c\u884c\u308f\u308c\u308b\nconsole.log(1 == \"1\"); // => true\nconsole.log(0 == false); // => true\nconsole.log(10 == [\"10\"]); // => true \n```", "```\nconsole.log(1 === \"1\"); // => false\nconsole.log(0 === false); // => false\nconsole.log(10 === [\"10\"]); // => false \n```", "```\n1 + \"2\"; // => \"12\"\n// \u6f14\u7b97\u904e\u7a0b\u3067\u6b21\u306e\u3088\u3046\u306b\u6697\u9ed9\u7684\u306a\u578b\u5909\u63db\u304c\u884c\u308f\u308c\u308b\n\"1\" + \"2\"; // => \"12\" \n```", "```\n1 - \"2\"; // => -1\n// \u6f14\u7b97\u904e\u7a0b\u3067\u6b21\u306e\u3088\u3046\u306b\u6697\u9ed9\u7684\u306a\u578b\u5909\u63db\u304c\u884c\u308f\u308c\u308b\n1 - 2; // => -1 \n```", "```\nconst x = 1, y = \"2\", z = 3;\nconsole.log(x + y + z); // => \"123\"\nconsole.log(y + x + z); // => \"213\"\nconsole.log(x + z + y); // => \"42\" \n```", "```\nBoolean(\"string\"); // => true\nBoolean(1); // => true\nBoolean({}); // => true\nBoolean(0); // => false\nBoolean(\"\"); // => false\nBoolean(null); // => false \n```", "```\n// x \u306f undefined\nlet x; \nif (!x) {\n    console.log(\"falsy\u306a\u5024\u306a\u3089\u8868\u793a\", x);\n} \n```", "```\n// x \u306f undefined\nlet x;\nif (x === undefined) {\n    console.log(\"x\u304cundefined\u306a\u3089\u8868\u793a\", x);\n} \n```", "```\nString(1); // => \"1\" \n```", "```\nString(\"str\"); // => \"str\"\nString(true); // => \"true\"\nString(null); // => \"null\"\nString(undefined); // => \"undefined\"\nString(Symbol(\"\u30b7\u30f3\u30dc\u30eb\u306e\u8aac\u660e\u6587\")); // => \"Symbol(\u30b7\u30f3\u30dc\u30eb\u306e\u8aac\u660e\u6587)\"\n// \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u3067\u306f\u306a\u3044\u5024\u306e\u5834\u5408\nString([1, 2, 3]); // => \"1,2,3\"\nString({ key: \"value\" }); // => \"[object Object]\"\nString(function() {}); // \"function() {}\" \n```", "```\n\"\u6587\u5b57\u5217\" + x; // \u6587\u5b57\u5217\u3068\u306a\u308b\uff1f \n```", "```\n\"\u6587\u5b57\u5217\u3068\" + Symbol(\"\u30b7\u30f3\u30dc\u30eb\u306e\u8aac\u660e\"); // => TypeError: can't convert symbol to string \n```", "```\n\"\u6587\u5b57\u5217\u3068\" + String(Symbol(\"\u30b7\u30f3\u30dc\u30eb\u306e\u8aac\u660e\")); // => \"\u6587\u5b57\u5217\u3068Symbol(\u30b7\u30f3\u30dc\u30eb\u306e\u8aac\u660e)\" \n```", "```\n// \u30e6\u30fc\u30b6\u30fc\u5165\u529b\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\nconst input = window.prompt(\"\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\", \"42\");\n// \u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\u3059\u308b\nconst num = Number(input);\nconsole.log(typeof num); // => \"number\"\nconsole.log(num); // \u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\u3057\u305f\u3082\u306e \n```", "```\n// \"1\"\u3092\u30d1\u30fc\u30b9\u3057\u306610\u9032\u6570\u3068\u3057\u3066\u53d6\u308a\u51fa\u3059\nconsole.log(Number.parseInt(\"1\", 10)); // => 1\n// \u4f59\u8a08\u306a\u6587\u5b57\u306f\u7121\u8996\u3057\u3066\u30d1\u30fc\u30b9\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\nconsole.log(Number.parseInt(\"42px\", 10)); // => 42\nconsole.log(Number.parseInt(\"10.5\", 10)); // => 10\n// \u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3057\u3066\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3068\u3057\u3066\u53d6\u308a\u51fa\u3059\nconsole.log(Number.parseFloat(\"1\")); // => 1\nconsole.log(Number.parseFloat(\"42.5px\")); // => 42.5\nconsole.log(Number.parseFloat(\"10.5\")); // => 10.5 \n```", "```\n// \u6570\u5b57\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u6570\u5024\u3078\u306f\u5909\u63db\u3067\u304d\u306a\u3044\nNumber(\"\u6587\u5b57\u5217\"); // => NaN\n// \u672a\u5b9a\u7fa9\u306e\u5024\u306fNaN\u306b\u306a\u308b\nNumber(undefined); // => NaN \n```", "```\nconst userInput = \"\u4efb\u610f\u306e\u6587\u5b57\u5217\";\nconst num = Number.parseInt(userInput, 10);\nif (Number.isNaN(num)) {\n    console.log(\"\u30d1\u30fc\u30b9\u3057\u305f\u7d50\u679cNaN\u306b\u306a\u3063\u305f\", num);\n} \n```", "```\nNumber({}); // => NaN \n```", "```\nconst x = 10;\nconst y = x + NaN;\nconst z = y + 20;\nconsole.log(x); // => 10\nconsole.log(y); // => NaN\nconsole.log(z); // => NaN \n```", "```\n// NaN\u306fnumber\u578b\nconsole.log(typeof NaN); // => \"number\" \n```", "```\nfunction isNaN(x) {\n    // NaN\u306f\u81ea\u5206\u81ea\u8eab\u3068\u4e00\u81f4\u3057\u306a\u3044\n    return x !== x;\n}\nconsole.log(isNaN(1)); // => false\nconsole.log(isNaN(\"str\")); // => false\nconsole.log(isNaN({})); // => false\nconsole.log(isNaN([])); // => false\nconsole.log(isNaN(NaN)); // => true \n```", "```\nNumber.isNaN(NaN); // => true \n```", "```\n// \u4efb\u610f\u306e\u500b\u6570\u306e\u6570\u5024\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u5408\u8a08\u5024\u3092\u8fd4\u3059\u95a2\u6570\nfunction sum(...values) {\n    return values.reduce((total, value) => {\n        return total + value;\n    }, 0);\n}\nconst x = 1, z = 10;\nlet y; // `y`\u306fundefined\nconsole.log(sum(x, y, z)); // => NaN \n```", "```\nsum(1, undefined, 10); // => NaN\n// \u8a08\u7b97\u4e2d\u306bNaN\u3068\u306a\u308b\u305f\u3081\u3001\u6700\u7d42\u7d50\u679c\u3082NaN\u306b\u306a\u308b\n1 + undefined; // => NaN\nNaN + 10; // => NaN \n```", "```\nfunction sum(...values) {\n    return values.reduce((total, value) => {\n        // `value`\u3092Number\u3067\u660e\u793a\u7684\u306b\u6570\u5024\u3078\u5909\u63db\u3057\u3066\u304b\u3089\u52a0\u7b97\u3059\u308b\n        return total + Number(value);\n    }, 0);\n}\nconst x = 1, z = 10;\nlet y; // `y`\u306fundefined\nconsole.log(sum(x, y, z)); // => NaN \n```", "```\n/**\n * \u6570\u5024\u3092\u5408\u8a08\u3057\u305f\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n * 1\u3064\u4ee5\u4e0a\u306e\u6570\u5024\u3068\u5171\u306b\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n * @param {...number} values\n * @returns {number}\n **/\nfunction sum(...values) {\n    return values.reduce((total, value) => {\n        // \u5024\u304cNumber\u578b\u3067\u306f\u306a\u3044\u5834\u5408\u306b\u3001\u4f8b\u5916\u3092\u6295\u3052\u308b\n        if (typeof value !== \"number\") {\n            throw new Error(`${value}\u306fNumber\u578b\u3067\u306f\u3042\u308a\u307e\u305b\u3093`);\n        }\n        return total + Number(value);\n    }, 0);\n}\nconst x = 1, z = 10;\nlet y; // `y`\u306fundefined\nconsole.log(x, y, z);\n// Number\u578b\u306e\u5024\u3067\u306f\u306a\u3044`y`\u3092\u6e21\u3057\u3066\u3044\u308b\u305f\u3081\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\nconsole.log(sum(x, y, z)); // => Error \n```", "```\n// \u7a7a\u6587\u5b57\u5217\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\nfunction isEmptyString(str) {\n    // `str`\u304cfalsy\u306a\u5024\u306a\u3089\u3001`isEmptyString`\u95a2\u6570\u306f`true`\u3092\u8fd4\u3059\n    return !Boolean(str);\n}\n// \u7a7a\u6587\u5b57\u5217\u5217\u306e\u5834\u5408\u306f\u3001true\u3092\u8fd4\u3059\nconsole.log(isEmptyString(\"\")); // => true\n// falsy\u306a\u5024\u306e\u5834\u5408\u306f\u3001true\u3092\u8fd4\u3059\nconsole.log(isEmptyString(0)); // => true\n// undefined\u306e\u5834\u5408\u306f\u3001true\u3092\u8fd4\u3059\nconsole.log(isEmptyString()); // => true \n```", "```\n// \u7a7a\u6587\u5b57\u5217\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\nfunction isEmptyString(str) {\n    // String\u578b\u3067length\u304c0\u306e\u5024\u306e\u5834\u5408\u306ftrue\u3092\u8fd4\u3059\n    return typeof str === \"string\" && str.length === 0;\n}\nconsole.log(isEmptyString(\"\")); // => true\n// falsy\u306a\u5024\u3067\u3082\u6b63\u3057\u304f\u5224\u5b9a\u3067\u304d\u308b\nconsole.log(isEmptyString(0)); // => false\nconsole.log(isEmptyString()); // => false \n```"]