- en: The CS109UI module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CS109UI模块
- en: I have written a simple module called cs109ui that makes it possible to write
    programs with a simple graphical user interface without learning about the Swing
    library or worrying about event-based programming. We use this module for several
    projects in [CS109](http://otfried.org/courses/cs109).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我编写了一个简单的模块叫做cs109ui，它使得可以编写具有简单图形用户界面的程序，而无需了解Swing库或担心基于事件的编程。我们在[CS109](http://otfried.org/courses/cs109)中的几个项目中使用这个模块。
- en: Basic use
  id: totrans-2
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 基本用法
- en: To use the module, you need to install it as explained in the [installation
    page](project-install.html).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用该模块，你需要按照[installation page](project-install.html)中的说明进行安装。
- en: The module creates a window. You can fill this window with something interesting
    by drawing an image (using the operations explained [here](tutorial-drawing.html)),
    and then calling show.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块创建一个窗口。你可以通过绘制图像（使用[这里](tutorial-drawing.html)解释的操作）来填充这个窗口，然后调用show。
- en: The setTitle command sets the caption of the window.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: setTitle命令设置窗口的标题。
- en: Here is a basic example ([uitest1.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest1.kt)).
    The function draw draws to a java.awt.image.BufferedImage (it's exactly the same
    drawing code as in the [drawing example](tutorial-drawing.html)).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个基本示例（[uitest1.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest1.kt)）。函数draw绘制到一个java.awt.image.BufferedImage（与[drawing
    example](tutorial-drawing.html)中的绘图代码完全相同）。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We compile and run the program:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编译并运行程序：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The program opens a new window like this:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 程序会打开一个像这样的新窗口：
- en: '![Screenshot of uitest1.kt](../Images/670ee8e22b35961a1f0a52eb01dc4370.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![uitest1.kt的屏幕截图](../Images/670ee8e22b35961a1f0a52eb01dc4370.jpg)'
- en: Note that the program has not yet terminated, even though the main function
    has already returned. To end the program, you have to close the window manually
    using the mouse.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，尽管主函数已经返回，程序尚未终止。要结束程序，你必须手动使用鼠标关闭窗口。
- en: Updating the display
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 更新显示
- en: You can change the contents of the window by drawing a new image and calling
    show again. (You can draw to the same image as before or use a new one.)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过绘制一个新图像并再次调用show来更改窗口的内容。（你可以绘制到之前的相同图像或使用新图像。）
- en: By waiting some time in between changes to the window, you can perform some
    simple animation, like letting objects blink or move inside the window.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在窗口变化之间等待一段时间，你可以执行一些简单的动画，比如让对象在窗口内闪烁或移动。
- en: 'Here is a simple example that shows a blinking square. First the square appears
    for one second in red, then for one second in blue. Five seconds later the program
    terminates automatically ([uitest2.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest2.kt)):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个简单的示例，展示了一个闪烁的正方形。首先，正方形以红色出现一秒钟，然后以蓝色出现一秒钟。五秒后程序会自动终止（[uitest2.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest2.kt)）：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Again, you can run this using
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以使用以下命令运行：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can now write interesting programs, such as the [Simon project](http://otfried.org/courses/cs109/project-simon.html):
    You can use the terminal for text output and text input, and the window for graphical
    output.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以编写有趣的程序，比如[Simon project](http://otfried.org/courses/cs109/project-simon.html)：你可以使用终端进行文本输出和文本输入，使用窗口进行图形输出。
- en: Animation
  id: totrans-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 动画
- en: 'By updating the window very quickly, we can program some simple smooth animations.
    Here is an example that lets a red ball move smoothly over the screen ([uitest-animation.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest-animation.kt)):'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 通过快速更新窗口，我们可以编写一些简单的平滑动画。这里有一个示例，让一个红色球在屏幕上平滑移动（[uitest-animation.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest-animation.kt)）：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Keyboard input
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 键盘输入
- en: If we want to get a bit more advanced, we can perform all interaction with the
    user through the window. We can use the drawString function to show text in our
    window. The next step is to allow the user to control the program by pressing
    keys in the window.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要更进一步，我们可以通过窗口与用户进行所有交互。我们可以使用drawString函数在窗口中显示文本。下一步是允许用户通过在窗口中按键来控制程序。
- en: 'This is done using the waitKey function. It waits until the user has pressed
    a key, and then returns the character pressed. Here is a simple test program ([uitest3.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest3.kt)):'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用waitKey函数完成的。它会等待用户按下一个键，然后返回所按下的字符。这里有一个简单的测试程序（[uitest3.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest3.kt)）：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: After the window has appeared, try to type keys with the focus on the window.
    You should see the message Got character on your terminal. Pressing the 'q' key
    will terminate the program.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口出现后，尝试在窗口上聚焦时键入键。您应该在终端上看到消息“Got character”。按下“q”键将终止程序。
- en: Dialogs
  id: totrans-29
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 对话框
- en: We can make our programs more professional by using additional pop-up windows,
    usually called "dialogs".
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用额外的弹出窗口（通常称为“对话框”）使我们的程序更加专业。
- en: The simplest one just shows a message to the user. The user has to press "Ok"
    to continue the program. For instance, with this code
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法只是向用户显示一条消息。用户必须按下“确定”才能继续程序。例如，使用这段代码
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'we would get this pop-up window:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将得到这个弹出窗口：
- en: '![showMessage window](../Images/453fea90b7ab9f6f3881b6d6d7f3e08c.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![showMessage 窗口](../Images/453fea90b7ab9f6f3881b6d6d7f3e08c.jpg)'
- en: 'Slightly more interesting, we can ask a Yes/No-question, and the user can decide
    by pressing one of the two buttons:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 稍微有趣的是，我们可以询问一个是/否问题，用户可以通过按下两个按钮中的一个来决定：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'It looks like this:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 它看起来像这样：
- en: '![askYesNo window](../Images/e3a3598d89fa3a7ed69e338b5ba99108.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![askYesNo 窗口](../Images/e3a3598d89fa3a7ed69e338b5ba99108.jpg)'
- en: The askYesNo function returns the user's choice as a Boolean value.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: askYesNo 函数将用户的选择作为布尔值返回。
- en: 'Finally, we can ask the user to enter a string:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以要求用户输入一个字符串：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'It looks like this:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 它看起来像这样：
- en: '![inputString window](../Images/a7a4104c2748836445daaaeca60213b5.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![inputString 窗口](../Images/a7a4104c2748836445daaaeca60213b5.jpg)'
- en: and again the function returns the string entered by the user. (If the user
    presses "Cancel" or closes the popup-window, the empty string is returned.)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，该函数返回用户输入的字符串。（如果用户按下“取消”或关闭弹出窗口，则返回空字符串。）
- en: Advanced possibilities
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 高级功能
- en: 'There are a few more possibilities in the module: receiving mouse button clicks
    from the window, two more dialogs, and setting a time-out on user input. I will
    document these when they are needed for projects, but you can always look at the
    [example code](https://github.com/otfried/cs109/tree/master/cs109ui).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在模块中还有一些更多的可能性：从窗口接收鼠标按钮点击，另外两个对话框，以及设置用户输入的超时。当这些对项目有需要时，我会记录这些内容，但你也可以随时查看[示例代码](https://github.com/otfried/cs109/tree/master/cs109ui)。
