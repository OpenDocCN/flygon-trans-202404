- en: The CS109UI module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I have written a simple module called cs109ui that makes it possible to write
    programs with a simple graphical user interface without learning about the Swing
    library or worrying about event-based programming. We use this module for several
    projects in [CS109](http://otfried.org/courses/cs109).
  prefs: []
  type: TYPE_NORMAL
- en: Basic use
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To use the module, you need to install it as explained in the [installation
    page](project-install.html).
  prefs: []
  type: TYPE_NORMAL
- en: The module creates a window. You can fill this window with something interesting
    by drawing an image (using the operations explained [here](tutorial-drawing.html)),
    and then calling show.
  prefs: []
  type: TYPE_NORMAL
- en: The setTitle command sets the caption of the window.
  prefs: []
  type: TYPE_NORMAL
- en: Here is a basic example ([uitest1.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest1.kt)).
    The function draw draws to a java.awt.image.BufferedImage (it's exactly the same
    drawing code as in the [drawing example](tutorial-drawing.html)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We compile and run the program:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The program opens a new window like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Screenshot of uitest1.kt](../Images/670ee8e22b35961a1f0a52eb01dc4370.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note that the program has not yet terminated, even though the main function
    has already returned. To end the program, you have to close the window manually
    using the mouse.
  prefs: []
  type: TYPE_NORMAL
- en: Updating the display
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You can change the contents of the window by drawing a new image and calling
    show again. (You can draw to the same image as before or use a new one.)
  prefs: []
  type: TYPE_NORMAL
- en: By waiting some time in between changes to the window, you can perform some
    simple animation, like letting objects blink or move inside the window.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a simple example that shows a blinking square. First the square appears
    for one second in red, then for one second in blue. Five seconds later the program
    terminates automatically ([uitest2.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest2.kt)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Again, you can run this using
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'You can now write interesting programs, such as the [Simon project](http://otfried.org/courses/cs109/project-simon.html):
    You can use the terminal for text output and text input, and the window for graphical
    output.'
  prefs: []
  type: TYPE_NORMAL
- en: Animation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'By updating the window very quickly, we can program some simple smooth animations.
    Here is an example that lets a red ball move smoothly over the screen ([uitest-animation.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest-animation.kt)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Keyboard input
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If we want to get a bit more advanced, we can perform all interaction with the
    user through the window. We can use the drawString function to show text in our
    window. The next step is to allow the user to control the program by pressing
    keys in the window.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is done using the waitKey function. It waits until the user has pressed
    a key, and then returns the character pressed. Here is a simple test program ([uitest3.kt](https://github.com/otfried/cs109-kotlin/raw/master/cs109ui/uitest3.kt)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: After the window has appeared, try to type keys with the focus on the window.
    You should see the message Got character on your terminal. Pressing the 'q' key
    will terminate the program.
  prefs: []
  type: TYPE_NORMAL
- en: Dialogs
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: We can make our programs more professional by using additional pop-up windows,
    usually called "dialogs".
  prefs: []
  type: TYPE_NORMAL
- en: The simplest one just shows a message to the user. The user has to press "Ok"
    to continue the program. For instance, with this code
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'we would get this pop-up window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![showMessage window](../Images/453fea90b7ab9f6f3881b6d6d7f3e08c.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Slightly more interesting, we can ask a Yes/No-question, and the user can decide
    by pressing one of the two buttons:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'It looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![askYesNo window](../Images/e3a3598d89fa3a7ed69e338b5ba99108.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The askYesNo function returns the user's choice as a Boolean value.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we can ask the user to enter a string:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'It looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![inputString window](../Images/a7a4104c2748836445daaaeca60213b5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: and again the function returns the string entered by the user. (If the user
    presses "Cancel" or closes the popup-window, the empty string is returned.)
  prefs: []
  type: TYPE_NORMAL
- en: Advanced possibilities
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'There are a few more possibilities in the module: receiving mouse button clicks
    from the window, two more dialogs, and setting a time-out on user input. I will
    document these when they are needed for projects, but you can always look at the
    [example code](https://github.com/otfried/cs109/tree/master/cs109ui).'
  prefs: []
  type: TYPE_NORMAL
