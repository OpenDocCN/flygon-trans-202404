- en: MVC on the Web
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MVC On the web
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Explain [](GLOSSARY.html) uniqueness [](GLOSSARY.html) of [](GLOSSARY.html)
    HTTP.
  prefs: []
  type: TYPE_NORMAL
- en: 'On [](GLOSSARY.html) the [](GLOSSARY.html) web, we [](GLOSSARY.html) have [](GLOSSARY.html)
    two [](GLOSSARY.html) entities [](GLOSSARY.html) interacting: the [](GLOSSARY.html)
    server [](GLOSSARY.html) and [](GLOSSARY.html) the [](GLOSSARY.html) client. The
    [](GLOSSARY.html) server [](GLOSSARY.html) is [](GLOSSARY.html) the [](GLOSSARY.html)
    only [](GLOSSARY.html) responsible [](GLOSSARY.html) to [](GLOSSARY.html) hold
    [](GLOSSARY.html) the [](GLOSSARY.html) model. The [](GLOSSARY.html) client [](GLOSSARY.html)
    runs [](GLOSSARY.html) a [](GLOSSARY.html) web [](GLOSSARY.html) browser [](GLOSSARY.html)
    that [](GLOSSARY.html) performs [](GLOSSARY.html) requests [](GLOSSARY.html) to
    [](GLOSSARY.html) the [](GLOSSARY.html) server. These [](GLOSSARY.html) requests
    [](GLOSSARY.html) are [](GLOSSARY.html) channeled [](GLOSSARY.html) properly,
    trigger [](GLOSSARY.html) changes [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html)
    model, and [](GLOSSARY.html) give [](GLOSSARY.html) origin [](GLOSSARY.html) to
    [](GLOSSARY.html) a [](GLOSSARY.html) response [](GLOSSARY.html) that [](GLOSSARY.html)
    the [](GLOSSARY.html) client [](GLOSSARY.html) renders [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) user. Some [](GLOSSARY.html) interaction (e.g. scrolling
    [](GLOSSARY.html) a [](GLOSSARY.html) list [](GLOSSARY.html) of [](GLOSSARY.html)
    entries) may [](GLOSSARY.html) not [](GLOSSARY.html) involve the [](GLOSSARY.html)
    server [](GLOSSARY.html) at [](GLOSSARY.html) all.'
  prefs: []
  type: TYPE_NORMAL
- en: On [](GLOSSARY.html) the [](GLOSSARY.html) web, the [](GLOSSARY.html) controller
    [](GLOSSARY.html) is [](GLOSSARY.html) responsible [](GLOSSARY.html) for [](GLOSSARY.html)
    handling [](GLOSSARY.html) user [](GLOSSARY.html) events, preparing the [](GLOSSARY.html)
    view, and [](GLOSSARY.html) pushing [](GLOSSARY.html) it [](GLOSSARY.html) to
    [](GLOSSARY.html) the [](GLOSSARY.html) renderer. a [](GLOSSARY.html) quite [](GLOSSARY.html)
    different [](GLOSSARY.html) pattern.
  prefs: []
  type: TYPE_NORMAL
- en: 'MVC [](GLOSSARY.html) can [](GLOSSARY.html) also [](GLOSSARY.html) be [](GLOSSARY.html)
    used [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) web, and [](GLOSSARY.html)
    plenty [](GLOSSARY.html) of [](GLOSSARY.html) web [](GLOSSARY.html) development
    [](GLOSSARY.html) frameworks provide [](GLOSSARY.html) for [](GLOSSARY.html) free
    [](GLOSSARY.html) a [](GLOSSARY.html) well [](GLOSSARY.html) designed [](GLOSSARY.html)
    MVC [](GLOSSARY.html) architecture, where [](GLOSSARY.html) the [](GLOSSARY.html)
    programmer [](GLOSSARY.html) has just [](GLOSSARY.html) to [](GLOSSARY.html) fill
    [](GLOSSARY.html) the [](GLOSSARY.html) empty [](GLOSSARY.html) spaces [](GLOSSARY.html)
    and [](GLOSSARY.html) all [](GLOSSARY.html) the [](GLOSSARY.html) web [](GLOSSARY.html)
    heavy [](GLOSSARY.html) lifting [](GLOSSARY.html) is [](GLOSSARY.html) taken [](GLOSSARY.html)
    care [](GLOSSARY.html) of. As [](GLOSSARY.html) usual, the [](GLOSSARY.html) model
    [](GLOSSARY.html) objects [](GLOSSARY.html) represent [](GLOSSARY.html) the [](GLOSSARY.html)
    business [](GLOSSARY.html) domain [](GLOSSARY.html) of [](GLOSSARY.html) our [](GLOSSARY.html)
    application, with [](GLOSSARY.html) the [](GLOSSARY.html) task [](GLOSSARY.html)
    of [](GLOSSARY.html) persistence [](GLOSSARY.html) given [](GLOSSARY.html) to
    [](GLOSSARY.html) the [](GLOSSARY.html) model [](GLOSSARY.html) or [](GLOSSARY.html)
    to [](GLOSSARY.html) another [](GLOSSARY.html) layer: they either [](GLOSSARY.html)
    talk [](GLOSSARY.html) to [](GLOSSARY.html) a [](GLOSSARY.html) database [](GLOSSARY.html)
    directly (generally, but [](GLOSSARY.html) not [](GLOSSARY.html) always, an [](GLOSSARY.html)
    SQL [](GLOSSARY.html) one) or through [](GLOSSARY.html) an [](GLOSSARY.html) Object-Relational
    [](GLOSSARY.html) Mapper [](GLOSSARY.html) to [](GLOSSARY.html) convert [](GLOSSARY.html)
    the [](GLOSSARY.html) Object [](GLOSSARY.html) Oriented [](GLOSSARY.html) nature
    [](GLOSSARY.html) of the [](GLOSSARY.html) model [](GLOSSARY.html) classes [](GLOSSARY.html)
    into [](GLOSSARY.html) something [](GLOSSARY.html) a [](GLOSSARY.html) relational
    [](GLOSSARY.html) database [](GLOSSARY.html) can [](GLOSSARY.html) digest. Similarly,
    the [](GLOSSARY.html) Controller [](GLOSSARY.html) receives [](GLOSSARY.html)
    the [](GLOSSARY.html) HTTP [](GLOSSARY.html) request [](GLOSSARY.html) from [](GLOSSARY.html)
    the [](GLOSSARY.html) user, as [](GLOSSARY.html) dispatched [](GLOSSARY.html)
    by [](GLOSSARY.html) the Web [](GLOSSARY.html) framework. It [](GLOSSARY.html)
    is [](GLOSSARY.html) responsible [](GLOSSARY.html) for [](GLOSSARY.html) applying
    [](GLOSSARY.html) business [](GLOSSARY.html) logic [](GLOSSARY.html) and [](GLOSSARY.html)
    coordinating the [](GLOSSARY.html) other [](GLOSSARY.html) objects [](GLOSSARY.html)
    to [](GLOSSARY.html) display [](GLOSSARY.html) the [](GLOSSARY.html) final [](GLOSSARY.html)
    web [](GLOSSARY.html) page (or [](GLOSSARY.html) parts [](GLOSSARY.html) of [](GLOSSARY.html)
    it) to [](GLOSSARY.html) the [](GLOSSARY.html) user. In [](GLOSSARY.html) general,
    what [](GLOSSARY.html) the [](GLOSSARY.html) controller [](GLOSSARY.html) does
    [](GLOSSARY.html) at [](GLOSSARY.html) this [](GLOSSARY.html) point [](GLOSSARY.html)
    is [](GLOSSARY.html) to [](GLOSSARY.html) parse [](GLOSSARY.html) the [](GLOSSARY.html)
    request, selects [](GLOSSARY.html) the [](GLOSSARY.html) proper [](GLOSSARY.html)
    model [](GLOSSARY.html) objects [](GLOSSARY.html) to [](GLOSSARY.html) honor [](GLOSSARY.html)
    this [](GLOSSARY.html) request, selects [](GLOSSARY.html) a [](GLOSSARY.html)
    view appropriate [](GLOSSARY.html) for [](GLOSSARY.html) the [](GLOSSARY.html)
    request [](GLOSSARY.html) and [](GLOSSARY.html) let [](GLOSSARY.html) the [](GLOSSARY.html)
    view [](GLOSSARY.html) the [](GLOSSARY.html) task [](GLOSSARY.html) of [](GLOSSARY.html)
    rendering [](GLOSSARY.html) the [](GLOSSARY.html) final HTML [](GLOSSARY.html)
    for [](GLOSSARY.html) the [](GLOSSARY.html) browser''s [](GLOSSARY.html) consumption.
    To [](GLOSSARY.html) do [](GLOSSARY.html) so, the [](GLOSSARY.html) view [](GLOSSARY.html)
    normally [](GLOSSARY.html) combines [](GLOSSARY.html) the controller-provided
    [](GLOSSARY.html) data [](GLOSSARY.html) with [](GLOSSARY.html) a [](GLOSSARY.html)
    template [](GLOSSARY.html) mechanism.'
  prefs: []
  type: TYPE_NORMAL
- en: On [](GLOSSARY.html) the [](GLOSSARY.html) web, the [](GLOSSARY.html) separation
    [](GLOSSARY.html) between [](GLOSSARY.html) the [](GLOSSARY.html) View (the [](GLOSSARY.html)
    HTML [](GLOSSARY.html) and [](GLOSSARY.html) the [](GLOSSARY.html) browser [](GLOSSARY.html)
    as [](GLOSSARY.html) a renderer) and [](GLOSSARY.html) the [](GLOSSARY.html) Controller
    (the [](GLOSSARY.html) server [](GLOSSARY.html) side [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) code) is [](GLOSSARY.html) strong [](GLOSSARY.html) and
    [](GLOSSARY.html) with [](GLOSSARY.html) a bottleneck [](GLOSSARY.html) in [](GLOSSARY.html)
    communication. Primary [](GLOSSARY.html) events [](GLOSSARY.html) are [](GLOSSARY.html)
    HTTP [](GLOSSARY.html) requests (GET/POST)
  prefs: []
  type: TYPE_NORMAL
- en: 'The [](GLOSSARY.html) controller [](GLOSSARY.html) can [](GLOSSARY.html) switch
    [](GLOSSARY.html) model [](GLOSSARY.html) or [](GLOSSARY.html) views [](GLOSSARY.html)
    as [](GLOSSARY.html) it [](GLOSSARY.html) sees [](GLOSSARY.html) fit, but [](GLOSSARY.html)
    in [](GLOSSARY.html) general [](GLOSSARY.html) it [](GLOSSARY.html) is initialized
    [](GLOSSARY.html) and [](GLOSSARY.html) deeply [](GLOSSARY.html) related [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) view. How [](GLOSSARY.html) the [](GLOSSARY.html)
    controller [](GLOSSARY.html) get [](GLOSSARY.html) to [](GLOSSARY.html) know these
    [](GLOSSARY.html) different [](GLOSSARY.html) models [](GLOSSARY.html) or [](GLOSSARY.html)
    views [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html) done [](GLOSSARY.html)
    either [](GLOSSARY.html) through [](GLOSSARY.html) accessor [](GLOSSARY.html)
    methods (external [](GLOSSARY.html) code "pushes" the [](GLOSSARY.html) new [](GLOSSARY.html)
    model [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) controller)
    or [](GLOSSARY.html) through [](GLOSSARY.html) a [](GLOSSARY.html) provider class
    (e.g. the [](GLOSSARY.html) controller [](GLOSSARY.html) knows [](GLOSSARY.html)
    where [](GLOSSARY.html) to [](GLOSSARY.html) get [](GLOSSARY.html) a [](GLOSSARY.html)
    model: the [](GLOSSARY.html) provider [](GLOSSARY.html) class [](GLOSSARY.html)
    hands it [](GLOSSARY.html) out [](GLOSSARY.html) when [](GLOSSARY.html) needed).
    knockout.js'
  prefs: []
  type: TYPE_NORMAL
- en: Something [](GLOSSARY.html) about [](GLOSSARY.html) REST [](GLOSSARY.html) in
    [](GLOSSARY.html) web [](GLOSSARY.html) mvc
  prefs: []
  type: TYPE_NORMAL
- en: '.. image:: web_mvc'
  prefs: []
  type: TYPE_NORMAL
- en: 'View: renders [](GLOSSARY.html) the [](GLOSSARY.html) HTTP [](GLOSSARY.html)
    response [](GLOSSARY.html) from [](GLOSSARY.html) a [](GLOSSARY.html) template
    [](GLOSSARY.html) and [](GLOSSARY.html) the [](GLOSSARY.html) contents [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) model. Controller: Handles [](GLOSSARY.html)
    the [](GLOSSARY.html) HTTP [](GLOSSARY.html) request [](GLOSSARY.html) as [](GLOSSARY.html)
    passed [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html) front [](GLOSSARY.html)
    controller, and [](GLOSSARY.html) selects [](GLOSSARY.html) the most [](GLOSSARY.html)
    appropriate [](GLOSSARY.html) models [](GLOSSARY.html) and [](GLOSSARY.html) View
    [](GLOSSARY.html) for [](GLOSSARY.html) the [](GLOSSARY.html) rendering.'
  prefs: []
  type: TYPE_NORMAL
- en: Page Controller
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To [](GLOSSARY.html) keep [](GLOSSARY.html) the [](GLOSSARY.html) view [](GLOSSARY.html)
    and [](GLOSSARY.html) the [](GLOSSARY.html) controller [](GLOSSARY.html) synchronized,
    there [](GLOSSARY.html) are [](GLOSSARY.html) two [](GLOSSARY.html) possible [](GLOSSARY.html)
    approaches: “push” strategy: data [](GLOSSARY.html) is [](GLOSSARY.html) pushed
    [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html) controller [](GLOSSARY.html)
    into [](GLOSSARY.html) the [](GLOSSARY.html) view. “pull” strategy: data [](GLOSSARY.html)
    is [](GLOSSARY.html) pulled [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html)
    view [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html) controller'
  prefs: []
  type: TYPE_NORMAL
- en: For [](GLOSSARY.html) example, suppose [](GLOSSARY.html) the [](GLOSSARY.html)
    user [](GLOSSARY.html) adds [](GLOSSARY.html) a [](GLOSSARY.html) comment [](GLOSSARY.html)
    to [](GLOSSARY.html) a [](GLOSSARY.html) forum. Once [](GLOSSARY.html) he [](GLOSSARY.html)
    submits [](GLOSSARY.html) the request, its [](GLOSSARY.html) comment [](GLOSSARY.html)
    is [](GLOSSARY.html) now [](GLOSSARY.html) accepted [](GLOSSARY.html) by [](GLOSSARY.html)
    a [](GLOSSARY.html) controller, which [](GLOSSARY.html) will [](GLOSSARY.html)
    add [](GLOSSARY.html) it [](GLOSSARY.html) to [](GLOSSARY.html) the model. The
    [](GLOSSARY.html) view [](GLOSSARY.html) and [](GLOSSARY.html) the [](GLOSSARY.html)
    model [](GLOSSARY.html) are [](GLOSSARY.html) now [](GLOSSARY.html) desynchronized.
    The [](GLOSSARY.html) controller [](GLOSSARY.html) now [](GLOSSARY.html) can reply
    [](GLOSSARY.html) by [](GLOSSARY.html) pushing [](GLOSSARY.html) the [](GLOSSARY.html)
    new [](GLOSSARY.html) information [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    view, so [](GLOSSARY.html) that [](GLOSSARY.html) the [](GLOSSARY.html) user-submitted
    comment [](GLOSSARY.html) can [](GLOSSARY.html) appear. Any [](GLOSSARY.html)
    other [](GLOSSARY.html) comment [](GLOSSARY.html) that [](GLOSSARY.html) was [](GLOSSARY.html)
    added [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) model [](GLOSSARY.html)
    will [](GLOSSARY.html) also [](GLOSSARY.html) be pushed [](GLOSSARY.html) into
    [](GLOSSARY.html) the [](GLOSSARY.html) view, allowing [](GLOSSARY.html) the [](GLOSSARY.html)
    user [](GLOSSARY.html) to [](GLOSSARY.html) see [](GLOSSARY.html) its [](GLOSSARY.html)
    view [](GLOSSARY.html) change [](GLOSSARY.html) as [](GLOSSARY.html) comments
    [](GLOSSARY.html) are added.
  prefs: []
  type: TYPE_NORMAL
- en: In [](GLOSSARY.html) the [](GLOSSARY.html) pull [](GLOSSARY.html) model, the
    [](GLOSSARY.html) view [](GLOSSARY.html) is [](GLOSSARY.html) responsible [](GLOSSARY.html)
    for [](GLOSSARY.html) requesting [](GLOSSARY.html) and [](GLOSSARY.html) fetching
    [](GLOSSARY.html) data from [](GLOSSARY.html) the [](GLOSSARY.html) controller
    [](GLOSSARY.html) at [](GLOSSARY.html) the [](GLOSSARY.html) end [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) submit [](GLOSSARY.html) request, and
    [](GLOSSARY.html) synchronize [](GLOSSARY.html) its content. Pull [](GLOSSARY.html)
    is [](GLOSSARY.html) also [](GLOSSARY.html) generally [](GLOSSARY.html) used [](GLOSSARY.html)
    to [](GLOSSARY.html) fetch [](GLOSSARY.html) any [](GLOSSARY.html) kind [](GLOSSARY.html)
    of [](GLOSSARY.html) data [](GLOSSARY.html) from [](GLOSSARY.html) the controller
    [](GLOSSARY.html) in [](GLOSSARY.html) response [](GLOSSARY.html) to [](GLOSSARY.html)
    a [](GLOSSARY.html) user [](GLOSSARY.html) request.
  prefs: []
  type: TYPE_NORMAL
- en: spring
  prefs: []
  type: TYPE_NORMAL
- en: ruby [](GLOSSARY.html) on [](GLOSSARY.html) rails
  prefs: []
  type: TYPE_NORMAL
- en: wxpy
  prefs: []
  type: TYPE_NORMAL
- en: On [](GLOSSARY.html) the [](GLOSSARY.html) web, the [](GLOSSARY.html) View [](GLOSSARY.html)
    is [](GLOSSARY.html) delivered [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    client [](GLOSSARY.html) side [](GLOSSARY.html) for [](GLOSSARY.html) rendering
    [](GLOSSARY.html) in [](GLOSSARY.html) the browser, and [](GLOSSARY.html) the
    Model [](GLOSSARY.html) stays [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html)
    server [](GLOSSARY.html) side. When [](GLOSSARY.html) the [](GLOSSARY.html) User
    [](GLOSSARY.html) performs [](GLOSSARY.html) an [](GLOSSARY.html) action, the
    Controller [](GLOSSARY.html) will [](GLOSSARY.html) issue [](GLOSSARY.html) a
    [](GLOSSARY.html) change [](GLOSSARY.html) request [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) Model, followed [](GLOSSARY.html) by [](GLOSSARY.html) a
    [](GLOSSARY.html) request [](GLOSSARY.html) to the [](GLOSSARY.html) View [](GLOSSARY.html)
    to [](GLOSSARY.html) refresh [](GLOSSARY.html) itself. The [](GLOSSARY.html) View
    [](GLOSSARY.html) will [](GLOSSARY.html) now [](GLOSSARY.html) issue [](GLOSSARY.html)
    a [](GLOSSARY.html) get [](GLOSSARY.html) request [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) server to [](GLOSSARY.html) synchronize [](GLOSSARY.html)
    with [](GLOSSARY.html) the [](GLOSSARY.html) new [](GLOSSARY.html) Model [](GLOSSARY.html)
    contents.
  prefs: []
  type: TYPE_NORMAL
- en: User [](GLOSSARY.html) events [](GLOSSARY.html) as [](GLOSSARY.html) http [](GLOSSARY.html)
    requests, produced [](GLOSSARY.html) through [](GLOSSARY.html) either [](GLOSSARY.html)
    direct [](GLOSSARY.html) call [](GLOSSARY.html) or [](GLOSSARY.html) through XMLRPC
    [](GLOSSARY.html) calls
  prefs: []
  type: TYPE_NORMAL
- en: 'Page [](GLOSSARY.html) controller : handles [](GLOSSARY.html) requests [](GLOSSARY.html)
    for [](GLOSSARY.html) a [](GLOSSARY.html) specific [](GLOSSARY.html) web [](GLOSSARY.html)
    page'
  prefs: []
  type: TYPE_NORMAL
- en: 'Front [](GLOSSARY.html) controller: Handles [](GLOSSARY.html) request [](GLOSSARY.html)
    for [](GLOSSARY.html) multiple [](GLOSSARY.html) pages.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The [](GLOSSARY.html) browser [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    interpreted [](GLOSSARY.html) as [](GLOSSARY.html) a [](GLOSSARY.html) View: the
    [](GLOSSARY.html) page [](GLOSSARY.html) controller [](GLOSSARY.html) receives
    [](GLOSSARY.html) an [](GLOSSARY.html) http [](GLOSSARY.html) request [](GLOSSARY.html)
    and [](GLOSSARY.html) renders a [](GLOSSARY.html) html [](GLOSSARY.html) result,
    but [](GLOSSARY.html) it [](GLOSSARY.html) can [](GLOSSARY.html) also [](GLOSSARY.html)
    produce [](GLOSSARY.html) json, or [](GLOSSARY.html) xml, or [](GLOSSARY.html)
    any [](GLOSSARY.html) other [](GLOSSARY.html) format. this result [](GLOSSARY.html)
    is [](GLOSSARY.html) then [](GLOSSARY.html) sent [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) browser [](GLOSSARY.html) for [](GLOSSARY.html) visual [](GLOSSARY.html)
    rendering. The [](GLOSSARY.html) controller selects [](GLOSSARY.html) the [](GLOSSARY.html)
    proper "view [](GLOSSARY.html) renderer" and [](GLOSSARY.html) may [](GLOSSARY.html)
    switch [](GLOSSARY.html) according [](GLOSSARY.html) to [](GLOSSARY.html) different
    constraints (e.g. having [](GLOSSARY.html) to [](GLOSSARY.html) present [](GLOSSARY.html)
    a [](GLOSSARY.html) page [](GLOSSARY.html) for [](GLOSSARY.html) mobile [](GLOSSARY.html)
    vs [](GLOSSARY.html) browser)'
  prefs: []
  type: TYPE_NORMAL
- en: Backbone [](GLOSSARY.html) router
  prefs: []
  type: TYPE_NORMAL
- en: 'Original [](GLOSSARY.html) implementation [](GLOSSARY.html) of [](GLOSSARY.html)
    Smalltalk [](GLOSSARY.html) MVC: [https://github.com/petermichaux/maria](https://github.com/petermichaux/maria)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Request [](GLOSSARY.html) model: The [](GLOSSARY.html) HTTP [](GLOSSARY.html)
    request [](GLOSSARY.html) coming [](GLOSSARY.html) in [](GLOSSARY.html) can [](GLOSSARY.html)
    also [](GLOSSARY.html) be [](GLOSSARY.html) seen [](GLOSSARY.html) as [](GLOSSARY.html)
    an [](GLOSSARY.html) object [](GLOSSARY.html) part [](GLOSSARY.html) of [](GLOSSARY.html)
    the model [](GLOSSARY.html) layer. Its [](GLOSSARY.html) change [](GLOSSARY.html)
    notifies [](GLOSSARY.html) the [](GLOSSARY.html) front [](GLOSSARY.html) controller,
    which [](GLOSSARY.html) acts [](GLOSSARY.html) on [](GLOSSARY.html) it'
  prefs: []
  type: TYPE_NORMAL
- en: 'Two [](GLOSSARY.html) controllers [](GLOSSARY.html) in [](GLOSSARY.html) web
    [](GLOSSARY.html) mvc: Controller [](GLOSSARY.html) 1: mapping [](GLOSSARY.html)
    urls [](GLOSSARY.html) to [](GLOSSARY.html) a [](GLOSSARY.html) request [](GLOSSARY.html)
    handler, eventually [](GLOSSARY.html) using [](GLOSSARY.html) middleware [](GLOSSARY.html)
    to [](GLOSSARY.html) process [](GLOSSARY.html) the [](GLOSSARY.html) incoming
    [](GLOSSARY.html) request. Controller [](GLOSSARY.html) 2: the [](GLOSSARY.html)
    handlers.'
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) model [](GLOSSARY.html) never [](GLOSSARY.html) computes
    [](GLOSSARY.html) html
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) view [](GLOSSARY.html) uses [](GLOSSARY.html) a [](GLOSSARY.html)
    template [](GLOSSARY.html) rendering. The [](GLOSSARY.html) controller [](GLOSSARY.html)
    combines [](GLOSSARY.html) state [](GLOSSARY.html) from [](GLOSSARY.html) the
    [](GLOSSARY.html) Model [](GLOSSARY.html) with the [](GLOSSARY.html) template
    [](GLOSSARY.html) engine [](GLOSSARY.html) to [](GLOSSARY.html) produce [](GLOSSARY.html)
    the [](GLOSSARY.html) resulting [](GLOSSARY.html) View [](GLOSSARY.html) representation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Model: The [](GLOSSARY.html) server [](GLOSSARY.html) is [](GLOSSARY.html)
    responsible [](GLOSSARY.html) for [](GLOSSARY.html) handling [](GLOSSARY.html)
    potentially [](GLOSSARY.html) concurrent [](GLOSSARY.html) modification [](GLOSSARY.html)
    requests to [](GLOSSARY.html) the [](GLOSSARY.html) same [](GLOSSARY.html) model
    [](GLOSSARY.html) data [](GLOSSARY.html) coming [](GLOSSARY.html) from [](GLOSSARY.html)
    different [](GLOSSARY.html) clients.'
  prefs: []
  type: TYPE_NORMAL
- en: Browser
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A [](GLOSSARY.html) browser [](GLOSSARY.html) is [](GLOSSARY.html) fundamentally
    [](GLOSSARY.html) a [](GLOSSARY.html) MVC [](GLOSSARY.html) triple: it [](GLOSSARY.html)
    has [](GLOSSARY.html) a [](GLOSSARY.html) model (the [](GLOSSARY.html) HTML [](GLOSSARY.html)
    document) a [](GLOSSARY.html) View (the [](GLOSSARY.html) rendered content) and
    [](GLOSSARY.html) a [](GLOSSARY.html) controller (the [](GLOSSARY.html) part [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) browser [](GLOSSARY.html) that [](GLOSSARY.html)
    interpret [](GLOSSARY.html) user [](GLOSSARY.html) events [](GLOSSARY.html) and
    [](GLOSSARY.html) eventually [](GLOSSARY.html) modifies the [](GLOSSARY.html)
    Model''s [](GLOSSARY.html) content'
  prefs: []
  type: TYPE_NORMAL
- en: Server side MVC
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most [](GLOSSARY.html) simple [](GLOSSARY.html) form [](GLOSSARY.html) of [](GLOSSARY.html)
    MVC. The [](GLOSSARY.html) client [](GLOSSARY.html) issues [](GLOSSARY.html) a
    [](GLOSSARY.html) request [](GLOSSARY.html) as [](GLOSSARY.html) a [](GLOSSARY.html)
    GET [](GLOSSARY.html) http [](GLOSSARY.html) request, eventually with [](GLOSSARY.html)
    POST [](GLOSSARY.html) data/cookies. The [](GLOSSARY.html) server [](GLOSSARY.html)
    handles [](GLOSSARY.html) the [](GLOSSARY.html) request [](GLOSSARY.html) and
    [](GLOSSARY.html) returns [](GLOSSARY.html) a [](GLOSSARY.html) full [](GLOSSARY.html)
    HTML [](GLOSSARY.html) page. Very [](GLOSSARY.html) coarse [](GLOSSARY.html) grained,
    very [](GLOSSARY.html) all-or-nothing [](GLOSSARY.html) interaction [](GLOSSARY.html)
    that [](GLOSSARY.html) forces [](GLOSSARY.html) the [](GLOSSARY.html) client [](GLOSSARY.html)
    to [](GLOSSARY.html) refresh the [](GLOSSARY.html) visual [](GLOSSARY.html) aspect
    [](GLOSSARY.html) often, instead [](GLOSSARY.html) of [](GLOSSARY.html) incrementally.
    The [](GLOSSARY.html) application [](GLOSSARY.html) is [](GLOSSARY.html) bandwidth
    [](GLOSSARY.html) hungry [](GLOSSARY.html) and sluggish.
  prefs: []
  type: TYPE_NORMAL
- en: Rich internet application
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: On [](GLOSSARY.html) the [](GLOSSARY.html) other [](GLOSSARY.html) end [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) spectrum, we [](GLOSSARY.html) have
    [](GLOSSARY.html) RIA. RIA [](GLOSSARY.html) keep [](GLOSSARY.html) the [](GLOSSARY.html)
    model [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) server, and
    [](GLOSSARY.html) move everything [](GLOSSARY.html) else [](GLOSSARY.html) to
    [](GLOSSARY.html) the [](GLOSSARY.html) client. The [](GLOSSARY.html) client [](GLOSSARY.html)
    model [](GLOSSARY.html) is [](GLOSSARY.html) synchronized [](GLOSSARY.html) with
    [](GLOSSARY.html) the [](GLOSSARY.html) server [](GLOSSARY.html) model. No [](GLOSSARY.html)
    rendering [](GLOSSARY.html) is [](GLOSSARY.html) performed [](GLOSSARY.html) by
    [](GLOSSARY.html) the [](GLOSSARY.html) server. it [](GLOSSARY.html) just [](GLOSSARY.html)
    returns [](GLOSSARY.html) data [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    client.
  prefs: []
  type: TYPE_NORMAL
- en: sometimes [](GLOSSARY.html) referred , when [](GLOSSARY.html) in [](GLOSSARY.html)
    desktop [](GLOSSARY.html) applications, as "proxy [](GLOSSARY.html) delegate"
  prefs: []
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Validation [](GLOSSARY.html) is [](GLOSSARY.html) normally [](GLOSSARY.html)
    performed [](GLOSSARY.html) twice: on [](GLOSSARY.html) the [](GLOSSARY.html)
    client [](GLOSSARY.html) to [](GLOSSARY.html) ensure [](GLOSSARY.html) the [](GLOSSARY.html)
    data [](GLOSSARY.html) is [](GLOSSARY.html) consistent and [](GLOSSARY.html) presented
    [](GLOSSARY.html) properly [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    user. Once [](GLOSSARY.html) the [](GLOSSARY.html) user [](GLOSSARY.html) submits
    [](GLOSSARY.html) its [](GLOSSARY.html) data, though, validation [](GLOSSARY.html)
    on the [](GLOSSARY.html) server [](GLOSSARY.html) must [](GLOSSARY.html) also
    [](GLOSSARY.html) be [](GLOSSARY.html) performed. The [](GLOSSARY.html) request
    [](GLOSSARY.html) may [](GLOSSARY.html) be [](GLOSSARY.html) forced, and [](GLOSSARY.html)
    all [](GLOSSARY.html) the [](GLOSSARY.html) constraints [](GLOSSARY.html) we [](GLOSSARY.html)
    set from [](GLOSSARY.html) our [](GLOSSARY.html) View [](GLOSSARY.html) will [](GLOSSARY.html)
    be [](GLOSSARY.html) bypassed.'
  prefs: []
  type: TYPE_NORMAL
- en: '.. toctree:: :maxdepth: 1'
  prefs: []
  type: TYPE_NORMAL
- en: Front Controller
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Front controller
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) front [](GLOSSARY.html) controller (sometimes [](GLOSSARY.html)
    called [](GLOSSARY.html) Application) is [](GLOSSARY.html) the [](GLOSSARY.html)
    first [](GLOSSARY.html) point [](GLOSSARY.html) of [](GLOSSARY.html) entry for
    [](GLOSSARY.html) the [](GLOSSARY.html) request. It [](GLOSSARY.html) handles
    [](GLOSSARY.html) the [](GLOSSARY.html) overall [](GLOSSARY.html) dispatch [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) relevant [](GLOSSARY.html) controller,
    and [](GLOSSARY.html) deals [](GLOSSARY.html) with [](GLOSSARY.html) common [](GLOSSARY.html)
    needs [](GLOSSARY.html) such [](GLOSSARY.html) as [](GLOSSARY.html) authentication,
    session [](GLOSSARY.html) management, security, redirection. It [](GLOSSARY.html)
    contains [](GLOSSARY.html) logic [](GLOSSARY.html) that [](GLOSSARY.html) all
    [](GLOSSARY.html) requests [](GLOSSARY.html) must [](GLOSSARY.html) consider,
    reducing [](GLOSSARY.html) code [](GLOSSARY.html) duplication. It [](GLOSSARY.html)
    also [](GLOSSARY.html) adds [](GLOSSARY.html) data [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) execution [](GLOSSARY.html) context.
  prefs: []
  type: TYPE_NORMAL
- en: Dispatch [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) front
    [](GLOSSARY.html) controller [](GLOSSARY.html) is [](GLOSSARY.html) performed
    [](GLOSSARY.html) directly [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html)
    webserver.
  prefs: []
  type: TYPE_NORMAL
- en: Typically, the [](GLOSSARY.html) front [](GLOSSARY.html) controller [](GLOSSARY.html)
    can [](GLOSSARY.html) host [](GLOSSARY.html) a [](GLOSSARY.html) list [](GLOSSARY.html)
    of [](GLOSSARY.html) intercepting [](GLOSSARY.html) filters, classes [](GLOSSARY.html)
    aimed [](GLOSSARY.html) at performing [](GLOSSARY.html) specific [](GLOSSARY.html)
    operations [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) incoming
    [](GLOSSARY.html) request.
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) front [](GLOSSARY.html) controller [](GLOSSARY.html) can
    [](GLOSSARY.html) be [](GLOSSARY.html) a [](GLOSSARY.html) potential [](GLOSSARY.html)
    bottleneck. All [](GLOSSARY.html) requests [](GLOSSARY.html) pass [](GLOSSARY.html)
    through [](GLOSSARY.html) it.
  prefs: []
  type: TYPE_NORMAL
- en: 'FIXME: different [](GLOSSARY.html) interpretation [](GLOSSARY.html) of [](GLOSSARY.html)
    front [](GLOSSARY.html) controller. a [](GLOSSARY.html) single [](GLOSSARY.html)
    point [](GLOSSARY.html) of [](GLOSSARY.html) entry [](GLOSSARY.html) that [](GLOSSARY.html)
    replace the [](GLOSSARY.html) page [](GLOSSARY.html) controller [](GLOSSARY.html)
    design. The [](GLOSSARY.html) front [](GLOSSARY.html) controller [](GLOSSARY.html)
    creates [](GLOSSARY.html) commands (which [](GLOSSARY.html) replace [](GLOSSARY.html)
    page [](GLOSSARY.html) controllers) according [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) submitted [](GLOSSARY.html) request, and [](GLOSSARY.html)
    these [](GLOSSARY.html) commands [](GLOSSARY.html) are [](GLOSSARY.html) executed
    [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html) front [](GLOSSARY.html)
    controller. Commands [](GLOSSARY.html) feed [](GLOSSARY.html) information [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) views.'
  prefs: []
  type: TYPE_NORMAL
- en: 'FIXME: django [](GLOSSARY.html) approach [](GLOSSARY.html) is [](GLOSSARY.html)
    kind [](GLOSSARY.html) of [](GLOSSARY.html) mixed. There''s [](GLOSSARY.html)
    a [](GLOSSARY.html) front [](GLOSSARY.html) controller [](GLOSSARY.html) that
    [](GLOSSARY.html) dispatches [](GLOSSARY.html) to [](GLOSSARY.html) methods that
    [](GLOSSARY.html) in [](GLOSSARY.html) practice [](GLOSSARY.html) become [](GLOSSARY.html)
    page [](GLOSSARY.html) controllers. Before [](GLOSSARY.html) the [](GLOSSARY.html)
    dispatch [](GLOSSARY.html) happens, the [](GLOSSARY.html) request [](GLOSSARY.html)
    is [](GLOSSARY.html) passed through [](GLOSSARY.html) filters (middleware)'
  prefs: []
  type: TYPE_NORMAL
- en: Page Controller
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Page controller
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) page [](GLOSSARY.html) controller [](GLOSSARY.html) handles
    [](GLOSSARY.html) a [](GLOSSARY.html) specific [](GLOSSARY.html) request [](GLOSSARY.html)
    on [](GLOSSARY.html) the [](GLOSSARY.html) server, by [](GLOSSARY.html) combining
    [](GLOSSARY.html) model [](GLOSSARY.html) and [](GLOSSARY.html) view [](GLOSSARY.html)
    and [](GLOSSARY.html) send [](GLOSSARY.html) back [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) client [](GLOSSARY.html) the [](GLOSSARY.html) rendered
    [](GLOSSARY.html) view. Normally, it [](GLOSSARY.html) is [](GLOSSARY.html) bound
    [](GLOSSARY.html) to [](GLOSSARY.html) a [](GLOSSARY.html) specific [](GLOSSARY.html)
    URL.
  prefs: []
  type: TYPE_NORMAL
- en: It [](GLOSSARY.html) normally [](GLOSSARY.html) handles [](GLOSSARY.html) one
    [](GLOSSARY.html) logical [](GLOSSARY.html) page, or [](GLOSSARY.html) one [](GLOSSARY.html)
    specific [](GLOSSARY.html) action. This [](GLOSSARY.html) makes [](GLOSSARY.html)
    it [](GLOSSARY.html) extremely [](GLOSSARY.html) simple.
  prefs: []
  type: TYPE_NORMAL
- en: Once [](GLOSSARY.html) it [](GLOSSARY.html) receives [](GLOSSARY.html) the [](GLOSSARY.html)
    request, it [](GLOSSARY.html) extracts [](GLOSSARY.html) data [](GLOSSARY.html)
    from [](GLOSSARY.html) this [](GLOSSARY.html) request (e.g. HTTP headers, query
    [](GLOSSARY.html) parameters, cookies, form [](GLOSSARY.html) contents), performs
    [](GLOSSARY.html) operations [](GLOSSARY.html) on [](GLOSSARY.html) the model,
    then [](GLOSSARY.html) select [](GLOSSARY.html) the [](GLOSSARY.html) proper [](GLOSSARY.html)
    view [](GLOSSARY.html) to [](GLOSSARY.html) perform [](GLOSSARY.html) rendering.
    A [](GLOSSARY.html) template [](GLOSSARY.html) mechanism is [](GLOSSARY.html)
    generally [](GLOSSARY.html) used [](GLOSSARY.html) to [](GLOSSARY.html) render
    [](GLOSSARY.html) model [](GLOSSARY.html) data [](GLOSSARY.html) while [](GLOSSARY.html)
    separating [](GLOSSARY.html) rendering/presentation logic. It [](GLOSSARY.html)
    can [](GLOSSARY.html) render [](GLOSSARY.html) a [](GLOSSARY.html) whole [](GLOSSARY.html)
    page, a [](GLOSSARY.html) subset [](GLOSSARY.html) of [](GLOSSARY.html) it, or
    [](GLOSSARY.html) data [](GLOSSARY.html) that [](GLOSSARY.html) are [](GLOSSARY.html)
    parsed [](GLOSSARY.html) by the [](GLOSSARY.html) client-side [](GLOSSARY.html)
    javascript.
  prefs: []
  type: TYPE_NORMAL
- en: Testing [](GLOSSARY.html) the [](GLOSSARY.html) page [](GLOSSARY.html) controller
    [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html) complex [](GLOSSARY.html)
    due [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) need [](GLOSSARY.html)
    to [](GLOSSARY.html) simulate [](GLOSSARY.html) an [](GLOSSARY.html) HTTP request.
    Ideally, one [](GLOSSARY.html) would [](GLOSSARY.html) partition [](GLOSSARY.html)
    non-HTTP [](GLOSSARY.html) related [](GLOSSARY.html) functionality [](GLOSSARY.html)
    and [](GLOSSARY.html) make them [](GLOSSARY.html) testable [](GLOSSARY.html) without
    [](GLOSSARY.html) an [](GLOSSARY.html) HTTP [](GLOSSARY.html) context, otherwise
    [](GLOSSARY.html) the [](GLOSSARY.html) web [](GLOSSARY.html) framework [](GLOSSARY.html)
    environment must [](GLOSSARY.html) be [](GLOSSARY.html) present [](GLOSSARY.html)
    and [](GLOSSARY.html) set [](GLOSSARY.html) up.
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) page [](GLOSSARY.html) controller [](GLOSSARY.html) often
    [](GLOSSARY.html) is [](GLOSSARY.html) implemented [](GLOSSARY.html) as [](GLOSSARY.html)
    a [](GLOSSARY.html) reimplementation [](GLOSSARY.html) of [](GLOSSARY.html) a
    [](GLOSSARY.html) base [](GLOSSARY.html) class, to [](GLOSSARY.html) provide [](GLOSSARY.html)
    reusable [](GLOSSARY.html) functionality [](GLOSSARY.html) that [](GLOSSARY.html)
    is [](GLOSSARY.html) common [](GLOSSARY.html) to [](GLOSSARY.html) all [](GLOSSARY.html)
    page [](GLOSSARY.html) controllers.
  prefs: []
  type: TYPE_NORMAL
- en: 'In [](GLOSSARY.html) general, functionalities [](GLOSSARY.html) like [](GLOSSARY.html)
    session [](GLOSSARY.html) management, authentication, and [](GLOSSARY.html) similar
    low-level [](GLOSSARY.html) operations [](GLOSSARY.html) are [](GLOSSARY.html)
    not [](GLOSSARY.html) handled [](GLOSSARY.html) at [](GLOSSARY.html) the [](GLOSSARY.html)
    page [](GLOSSARY.html) controller [](GLOSSARY.html) level. A [](GLOSSARY.html)
    different [](GLOSSARY.html) technique is [](GLOSSARY.html) used: Filters (aka
    [](GLOSSARY.html) Middleware)'
  prefs: []
  type: TYPE_NORMAL
- en: 'FIXME: common [](GLOSSARY.html) functionality [](GLOSSARY.html) between [](GLOSSARY.html)
    different [](GLOSSARY.html) page [](GLOSSARY.html) controllers [](GLOSSARY.html)
    may [](GLOSSARY.html) require [](GLOSSARY.html) inheritance. This [](GLOSSARY.html)
    can [](GLOSSARY.html) force [](GLOSSARY.html) hierarchies [](GLOSSARY.html) that
    [](GLOSSARY.html) not [](GLOSSARY.html) necessarily [](GLOSSARY.html) are [](GLOSSARY.html)
    appropriate, and [](GLOSSARY.html) force [](GLOSSARY.html) refactorings as [](GLOSSARY.html)
    new [](GLOSSARY.html) pages [](GLOSSARY.html) are [](GLOSSARY.html) added.'
  prefs: []
  type: TYPE_NORMAL
- en: Templated View
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Templated View
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To [](GLOSSARY.html) render [](GLOSSARY.html) the [](GLOSSARY.html) contents
    [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) model, normally [](GLOSSARY.html)
    but [](GLOSSARY.html) not [](GLOSSARY.html) exclusively [](GLOSSARY.html) in [](GLOSSARY.html)
    HTML, a template [](GLOSSARY.html) View [](GLOSSARY.html) is [](GLOSSARY.html)
    used. The [](GLOSSARY.html) template [](GLOSSARY.html) is [](GLOSSARY.html) a
    [](GLOSSARY.html) blueprint [](GLOSSARY.html) document, containing [](GLOSSARY.html)
    HTML mixed [](GLOSSARY.html) with [](GLOSSARY.html) placeholder [](GLOSSARY.html)
    tags. These [](GLOSSARY.html) tags [](GLOSSARY.html) are [](GLOSSARY.html) replaced
    [](GLOSSARY.html) when [](GLOSSARY.html) the [](GLOSSARY.html) controller [](GLOSSARY.html)
    applies model's [](GLOSSARY.html) data [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) template, producing [](GLOSSARY.html) the [](GLOSSARY.html)
    final [](GLOSSARY.html) HTML [](GLOSSARY.html) content.
  prefs: []
  type: TYPE_NORMAL
- en: This [](GLOSSARY.html) mechanism [](GLOSSARY.html) isolates [](GLOSSARY.html)
    the [](GLOSSARY.html) data [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html)
    production [](GLOSSARY.html) of [](GLOSSARY.html) HTML. It [](GLOSSARY.html) also
    [](GLOSSARY.html) allows to [](GLOSSARY.html) select [](GLOSSARY.html) a [](GLOSSARY.html)
    different [](GLOSSARY.html) template [](GLOSSARY.html) if [](GLOSSARY.html) the
    [](GLOSSARY.html) same [](GLOSSARY.html) data [](GLOSSARY.html) must [](GLOSSARY.html)
    be [](GLOSSARY.html) delivered [](GLOSSARY.html) in [](GLOSSARY.html) a [](GLOSSARY.html)
    different form (e.g. JSON, or [](GLOSSARY.html) XML) or [](GLOSSARY.html) for
    [](GLOSSARY.html) a [](GLOSSARY.html) different [](GLOSSARY.html) device (HTML
    [](GLOSSARY.html) for [](GLOSSARY.html) a [](GLOSSARY.html) computer [](GLOSSARY.html)
    vs. for [](GLOSSARY.html) a [](GLOSSARY.html) cellphone). Template [](GLOSSARY.html)
    authors [](GLOSSARY.html) don't [](GLOSSARY.html) need [](GLOSSARY.html) to [](GLOSSARY.html)
    know [](GLOSSARY.html) the [](GLOSSARY.html) framework, but [](GLOSSARY.html)
    they [](GLOSSARY.html) can [](GLOSSARY.html) focus on [](GLOSSARY.html) the [](GLOSSARY.html)
    visual [](GLOSSARY.html) result, while [](GLOSSARY.html) controller [](GLOSSARY.html)
    authors [](GLOSSARY.html) don't [](GLOSSARY.html) need [](GLOSSARY.html) to [](GLOSSARY.html)
    worry [](GLOSSARY.html) about visual [](GLOSSARY.html) issues, and [](GLOSSARY.html)
    focus [](GLOSSARY.html) instead [](GLOSSARY.html) on [](GLOSSARY.html) passing
    [](GLOSSARY.html) the [](GLOSSARY.html) needed [](GLOSSARY.html) data [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) template.
  prefs: []
  type: TYPE_NORMAL
- en: Middleware Filters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Middleware filters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There [](GLOSSARY.html) are [](GLOSSARY.html) operations [](GLOSSARY.html) that
    [](GLOSSARY.html) are [](GLOSSARY.html) common [](GLOSSARY.html) and [](GLOSSARY.html)
    require [](GLOSSARY.html) a [](GLOSSARY.html) lot [](GLOSSARY.html) of [](GLOSSARY.html)
    pre [](GLOSSARY.html) or [](GLOSSARY.html) post [](GLOSSARY.html) processing in
    [](GLOSSARY.html) web [](GLOSSARY.html) handling. Things [](GLOSSARY.html) like
    [](GLOSSARY.html) authentication, session [](GLOSSARY.html) management, compression,
    cookie [](GLOSSARY.html) extraction, logging, and [](GLOSSARY.html) so [](GLOSSARY.html)
    on. It's [](GLOSSARY.html) common [](GLOSSARY.html) to [](GLOSSARY.html) provide
    [](GLOSSARY.html) the [](GLOSSARY.html) code [](GLOSSARY.html) dealing [](GLOSSARY.html)
    with these [](GLOSSARY.html) issues [](GLOSSARY.html) as [](GLOSSARY.html) pluggable
    [](GLOSSARY.html) components [](GLOSSARY.html) called [](GLOSSARY.html) Intercepting
    [](GLOSSARY.html) Filters [](GLOSSARY.html) or [](GLOSSARY.html) Middleware. These
    [](GLOSSARY.html) operations [](GLOSSARY.html) are [](GLOSSARY.html) common [](GLOSSARY.html)
    to [](GLOSSARY.html) all [](GLOSSARY.html) pages [](GLOSSARY.html) and [](GLOSSARY.html)
    it's [](GLOSSARY.html) convenient [](GLOSSARY.html) to [](GLOSSARY.html) centralize
    them. They [](GLOSSARY.html) also [](GLOSSARY.html) tend [](GLOSSARY.html) to
    [](GLOSSARY.html) be [](GLOSSARY.html) agnostic [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) actual [](GLOSSARY.html) application, therefore offering
    [](GLOSSARY.html) a [](GLOSSARY.html) huge [](GLOSSARY.html) reuse [](GLOSSARY.html)
    potential.
  prefs: []
  type: TYPE_NORMAL
- en: Filters [](GLOSSARY.html) are [](GLOSSARY.html) generally [](GLOSSARY.html)
    not [](GLOSSARY.html) dependent [](GLOSSARY.html) on [](GLOSSARY.html) each [](GLOSSARY.html)
    other. When [](GLOSSARY.html) they [](GLOSSARY.html) are, it's [](GLOSSARY.html)
    important that [](GLOSSARY.html) they [](GLOSSARY.html) are [](GLOSSARY.html)
    traversed [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html) proper
    [](GLOSSARY.html) order.
  prefs: []
  type: TYPE_NORMAL
- en: They [](GLOSSARY.html) act [](GLOSSARY.html) as [](GLOSSARY.html) pre-processing
    [](GLOSSARY.html) filters [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    request [](GLOSSARY.html) and [](GLOSSARY.html) post-processing filters [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) response.
  prefs: []
  type: TYPE_NORMAL
- en: Considering [](GLOSSARY.html) that [](GLOSSARY.html) all [](GLOSSARY.html) requests
    [](GLOSSARY.html) traverse [](GLOSSARY.html) these [](GLOSSARY.html) filters,
    their [](GLOSSARY.html) performance [](GLOSSARY.html) is [](GLOSSARY.html) of
    the [](GLOSSARY.html) highest [](GLOSSARY.html) importance.
  prefs: []
  type: TYPE_NORMAL
- en: '[FIGURE: put [](GLOSSARY.html) a [](GLOSSARY.html) layered [](GLOSSARY.html)
    request -> f1 [](GLOSSARY.html) f2 [](GLOSSARY.html) f3 [](GLOSSARY.html) controller
    -> response -> f3 [](GLOSSARY.html) f2 [](GLOSSARY.html) f1]'
  prefs: []
  type: TYPE_NORMAL
- en: Javascript MVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Javascript MVC
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) client-server [](GLOSSARY.html) nature [](GLOSSARY.html)
    of [](GLOSSARY.html) web [](GLOSSARY.html) programming [](GLOSSARY.html) gives
    [](GLOSSARY.html) raise [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    need [](GLOSSARY.html) for [](GLOSSARY.html) MVC [](GLOSSARY.html) on both [](GLOSSARY.html)
    sides. While [](GLOSSARY.html) we [](GLOSSARY.html) examined [](GLOSSARY.html)
    MVC [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) server [](GLOSSARY.html)
    side [](GLOSSARY.html) until [](GLOSSARY.html) now, we [](GLOSSARY.html) now [](GLOSSARY.html)
    examine client [](GLOSSARY.html) side. This [](GLOSSARY.html) is [](GLOSSARY.html)
    normally [](GLOSSARY.html) done [](GLOSSARY.html) through [](GLOSSARY.html) javascript.
  prefs: []
  type: TYPE_NORMAL
- en: Views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: JavaScript [](GLOSSARY.html) views [](GLOSSARY.html) are [](GLOSSARY.html) normally
    [](GLOSSARY.html) concerned [](GLOSSARY.html) with [](GLOSSARY.html) manipulating
  prefs: []
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) DOM, or
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a [](GLOSSARY.html) canvas [](GLOSSARY.html) object
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FIXME Maria [](GLOSSARY.html) implements [](GLOSSARY.html) true [](GLOSSARY.html)
    MVC. All [](GLOSSARY.html) other [](GLOSSARY.html) frameworks [](GLOSSARY.html)
    implement [](GLOSSARY.html) a [](GLOSSARY.html) derivation [](GLOSSARY.html) of
    [](GLOSSARY.html) MV*, where [](GLOSSARY.html) in [](GLOSSARY.html) particular
    the [](GLOSSARY.html) controller [](GLOSSARY.html) takes [](GLOSSARY.html) a [](GLOSSARY.html)
    different [](GLOSSARY.html) approach. Backbone [](GLOSSARY.html) uses [](GLOSSARY.html)
    Routers. Study [](GLOSSARY.html) javascript [](GLOSSARY.html) mvc [](GLOSSARY.html)
    in [](GLOSSARY.html) more [](GLOSSARY.html) details.
  prefs: []
  type: TYPE_NORMAL
- en: backbone [](GLOSSARY.html) synchronization [](GLOSSARY.html) with [](GLOSSARY.html)
    CRUD [](GLOSSARY.html) operations [](GLOSSARY.html) against [](GLOSSARY.html)
    a [](GLOSSARY.html) JSON/REST [](GLOSSARY.html) model.
  prefs: []
  type: TYPE_NORMAL
