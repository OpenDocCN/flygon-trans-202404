["```\nimport tensorflow as tf\ntf.__version__ \n```", "```\n'1.0.0' \n```", "```\n# Create a constant op\n# This op is added as a node to the default graph\nhello = tf.constant(\"Hello, TensorFlow!\")\n\n# start a TF session\nsess = tf.Session()\n\n# run the op and get result\nprint(sess.run(hello)) \n```", "```\nb'Hello, TensorFlow!' \n```", "```\n3 # a rank 0 tensor; this is a scalar with shape []\n[1. ,2., 3.] # a rank 1 tensor; this is a vector with shape [3]\n[[1., 2., 3.], [4., 5., 6.]] # a rank 2 tensor; a matrix with shape [2, 3]\n[[[1., 2., 3.]], [[7., 8., 9.]]] # a rank 3 tensor with shape [2, 1, 3] \n```", "```\n[[[1.0, 2.0, 3.0]], [[7.0, 8.0, 9.0]]] \n```", "```\nnode1 = tf.constant(3.0, tf.float32)\nnode2 = tf.constant(4.0) # also tf.float32 implicitly\nnode3 = tf.add(node1, node2) \n```", "```\nprint(\"node1:\", node1, \"node2:\", node2)\nprint(\"node3: \", node3) \n```", "```\nnode1: Tensor(\"Const_1:0\", shape=(), dtype=float32) node2: Tensor(\"Const_2:0\", shape=(), dtype=float32)\nnode3:  Tensor(\"Add:0\", shape=(), dtype=float32) \n```", "```\nsess = tf.Session()\nprint(\"sess.run(node1, node2): \", sess.run([node1, node2]))\nprint(\"sess.run(node3): \", sess.run(node3)) \n```", "```\nsess.run(node1, node2):  [3.0, 4.0]\nsess.run(node3):  7.0 \n```", "```\na = tf.placeholder(tf.float32)\nb = tf.placeholder(tf.float32)\nadder_node = a + b  # + provides a shortcut for tf.add(a, b)\n\nprint(sess.run(adder_node, feed_dict={a: 3, b: 4.5}))\nprint(sess.run(adder_node, feed_dict={a: [1,3], b: [2, 4]})) \n```", "```\n7.5\n[ 3\\.  7.] \n```", "```\nadd_and_triple = adder_node * 3.\nprint(sess.run(add_and_triple, feed_dict={a: 3, b:4.5})) \n```", "```\n22.5 \n```"]