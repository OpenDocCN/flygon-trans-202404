["```\ncp ~cs61as/autograder/templates/hw4.rkt . \n```", "```\n(define (make-interval a b) (cons a b)) \n```", "```\n-> (last-pair (list 23 72 149 34))\n(34) \n```", "```\n(define (f x y . z) <body>) \n```", "```\n(f 1 2 3 4 5 6) \n```", "```\n(define (g . w) <body>) \n```", "```\n(g 1 2 3 4 5 6) \n```", "```\n-> (same-parity 1 2 3 4 5 6 7)\n(1 3 5 7)\n\n-> (same-parity 2 3 4 5 6 7)\n(2 4 6) \n```", "```\n(define (square-list items)\n  (define (iter things answer)\n    (if (null? things)\n        answer\n        (iter (cdr things) \n              (cons (square (car things))\n                    answer))))\n  (iter items nil)) \n```", "```\n(define (square-list items)\n  (define (iter things answer)\n    (if (null? things)\n        answer\n        (iter (cdr things)\n              (cons answer\n                    (square (car things))))))\n  (iter items nil)) \n```", "```\n-> (my-substitute '((lead guitar) (bass guitar) (rhythm guitar) drums)\n                  'guitar\n                  'axe)\n((lead axe) (bass axe) (rhythm axe) drums) \n```", "```\n-> (list? (list 1 2 3))\n#t\n-> (list? 'apple)\n#f\n-> (list? 4)\n#f \n```", "```\n-> (my-substitute2 '((4 calling birds) (3 french hens) (2 turtle doves))\n                   '(1 2 3 4)\n                   '(one two three four))\n((four calling birds) (three french hens) (two turtle doves)) \n```"]