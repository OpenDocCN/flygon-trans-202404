- en: Intro to Computer Science
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Note: All links in the following paragraphs are completely optional reading
    and are included solely for the interest and amusement of the reader.*'
  prefs: []
  type: TYPE_NORMAL
- en: What Is Computer Science?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There isn't one right answer. Computer science means a lot of different things
    to a lot of different people. For some, it means building [a web application that
    allows you to connect and keep up with your friends](https://joindiaspora.com/).
    For others, it means engineering [self-driving cars](http://en.wikipedia.org/wiki/Google_driverless_car).
    For yet others, it means [lots and lots of math](http://www.librow.com/articles/article-10).
    And [so on](http://techcrunch.com/2013/07/11/raspberry-pi-microwave-hack/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Generally speaking, computer science answers the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: What can we compute?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do we compute it?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What can we do with that?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this sense, computer science isn't about computers—that's closer to electrical
    engineering—and it isn't really a science—scientists discover, we invent.
  prefs: []
  type: TYPE_NORMAL
- en: 'Computer scientists are like engineers: we [build cool stuff](http://www.youtube.com/watch?v=gy5g33S0Gzo),
    and we [solve problems](http://en.wikipedia.org/wiki/Pancake_sorting).'
  prefs: []
  type: TYPE_NORMAL
- en: Complexity and Abstraction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: All interesting problems in computer science are inherently complex—as are their
    solutions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider your web browser, the program you''re using to view this page. Clearly,
    it solves an interesting problem. It''s also highly complex: when you type in
    a URL, your browser has to determine which server to contact, ask that server
    to give it the webpage you''re looking for, download the webpage, interpret the
    webpage, and display it on your screen. Each of these steps contains its own complex
    parts.'
  prefs: []
  type: TYPE_NORMAL
- en: 'How does all of this fit together? In one word: **abstraction**! Abstraction
    allows us to treat a complicated process as a single unit, and to use that unit
    in an even more complex process.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We already use abstraction in our daily lives: To drive a car, we have to know
    how to steer and operate the pedals, but we don''t have to know how the engine
    and drivechain work. To bake an apple pie, we need a recipe and an oven, but we
    need not grow our own apples or understand how they are grown. And to use the
    internet, we don''t have to understand [the protocols for requesting webpages](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol)—our
    browser abstracts that process away, so that anyone can browse the web quickly
    and easily.'
  prefs: []
  type: TYPE_NORMAL
- en: In this course, we'll explore techniques for creating abstractions to solve
    problems.
  prefs: []
  type: TYPE_NORMAL
