- en: From SmartUI to Traditional MVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Basics of MVC: From Smart-UI to Traditional MVC'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) aim [](GLOSSARY.html) of [](GLOSSARY.html) GUI [](GLOSSARY.html)
    programming [](GLOSSARY.html) is [](GLOSSARY.html) to [](GLOSSARY.html) provide
    [](GLOSSARY.html) an [](GLOSSARY.html) interactive [](GLOSSARY.html) and [](GLOSSARY.html)
    updated [](GLOSSARY.html) visual representation [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) current [](GLOSSARY.html) state [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) application. A [](GLOSSARY.html) typical [](GLOSSARY.html)
    set [](GLOSSARY.html) of requirements [](GLOSSARY.html) is [](GLOSSARY.html) the
    [](GLOSSARY.html) need [](GLOSSARY.html) to [](GLOSSARY.html) simultaneously [](GLOSSARY.html)
    represent [](GLOSSARY.html) this [](GLOSSARY.html) state [](GLOSSARY.html) graphically
    [](GLOSSARY.html) in various [](GLOSSARY.html) forms (i.e. a [](GLOSSARY.html)
    table [](GLOSSARY.html) of [](GLOSSARY.html) numbers [](GLOSSARY.html) and [](GLOSSARY.html)
    an [](GLOSSARY.html) XY [](GLOSSARY.html) plot), modify [](GLOSSARY.html) this
    [](GLOSSARY.html) state through [](GLOSSARY.html) an [](GLOSSARY.html) unpredictable
    [](GLOSSARY.html) sequence [](GLOSSARY.html) of [](GLOSSARY.html) mouse/keyboard
    [](GLOSSARY.html) events, and [](GLOSSARY.html) keep [](GLOSSARY.html) the [](GLOSSARY.html)
    state and [](GLOSSARY.html) its [](GLOSSARY.html) visual [](GLOSSARY.html) representation
    [](GLOSSARY.html) always [](GLOSSARY.html) synchronized [](GLOSSARY.html) and
    [](GLOSSARY.html) up-to-date. At [](GLOSSARY.html) the [](GLOSSARY.html) same
    time, the [](GLOSSARY.html) application [](GLOSSARY.html) state [](GLOSSARY.html)
    must [](GLOSSARY.html) respect [](GLOSSARY.html) business [](GLOSSARY.html) logic
    [](GLOSSARY.html) constraints [](GLOSSARY.html) and [](GLOSSARY.html) be [](GLOSSARY.html)
    kept within [](GLOSSARY.html) these [](GLOSSARY.html) constraints. At [](GLOSSARY.html)
    the [](GLOSSARY.html) code [](GLOSSARY.html) level, these [](GLOSSARY.html) requirements
    [](GLOSSARY.html) are [](GLOSSARY.html) generally translated [](GLOSSARY.html)
    into [](GLOSSARY.html) objects [](GLOSSARY.html) interacting [](GLOSSARY.html)
    through [](GLOSSARY.html) a [](GLOSSARY.html) communication [](GLOSSARY.html)
    network [](GLOSSARY.html) of [](GLOSSARY.html) various degrees [](GLOSSARY.html)
    of [](GLOSSARY.html) complexity. How [](GLOSSARY.html) can [](GLOSSARY.html) we
    [](GLOSSARY.html) satisfy [](GLOSSARY.html) these [](GLOSSARY.html) requirements,
    while [](GLOSSARY.html) at [](GLOSSARY.html) the [](GLOSSARY.html) same time [](GLOSSARY.html)
    providing [](GLOSSARY.html) a [](GLOSSARY.html) flexible [](GLOSSARY.html) design
    [](GLOSSARY.html) that [](GLOSSARY.html) keeps [](GLOSSARY.html) the [](GLOSSARY.html)
    object [](GLOSSARY.html) communication [](GLOSSARY.html) simple, understandable
    [](GLOSSARY.html) and [](GLOSSARY.html) organized [](GLOSSARY.html) as [](GLOSSARY.html)
    much [](GLOSSARY.html) as [](GLOSSARY.html) possible?
  prefs: []
  type: TYPE_NORMAL
- en: MVC [](GLOSSARY.html) addresses [](GLOSSARY.html) the [](GLOSSARY.html) above
    [](GLOSSARY.html) needs. It [](GLOSSARY.html) does [](GLOSSARY.html) so [](GLOSSARY.html)
    by [](GLOSSARY.html) clever [](GLOSSARY.html) subdivision [](GLOSSARY.html) of
    [](GLOSSARY.html) competences and [](GLOSSARY.html) roles [](GLOSSARY.html) in
    [](GLOSSARY.html) the [](GLOSSARY.html) code, while [](GLOSSARY.html) introducing
    [](GLOSSARY.html) constraints [](GLOSSARY.html) that [](GLOSSARY.html) keep [](GLOSSARY.html)
    a [](GLOSSARY.html) potentially chaotic [](GLOSSARY.html) communication [](GLOSSARY.html)
    well [](GLOSSARY.html) organized [](GLOSSARY.html) and [](GLOSSARY.html) streamlined.
    MVC [](GLOSSARY.html) is [](GLOSSARY.html) incredibly flexible [](GLOSSARY.html)
    and [](GLOSSARY.html) adaptable, as [](GLOSSARY.html) we [](GLOSSARY.html) will
    [](GLOSSARY.html) see, and [](GLOSSARY.html) using [](GLOSSARY.html) one [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) many [](GLOSSARY.html) styles [](GLOSSARY.html)
    will be [](GLOSSARY.html) a [](GLOSSARY.html) matter [](GLOSSARY.html) of [](GLOSSARY.html)
    preference [](GLOSSARY.html) or [](GLOSSARY.html) constraints/best [](GLOSSARY.html)
    practices [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) development
    framework [](GLOSSARY.html) of [](GLOSSARY.html) choice.
  prefs: []
  type: TYPE_NORMAL
- en: 'GUI [](GLOSSARY.html) Programming [](GLOSSARY.html) is [](GLOSSARY.html) a
    [](GLOSSARY.html) complex [](GLOSSARY.html) task. Many [](GLOSSARY.html) different
    [](GLOSSARY.html) levels [](GLOSSARY.html) of [](GLOSSARY.html) understanding
    and [](GLOSSARY.html) handling [](GLOSSARY.html) are [](GLOSSARY.html) needed:
    UI [](GLOSSARY.html) design [](GLOSSARY.html) and [](GLOSSARY.html) usability
    [](GLOSSARY.html) consideration, multithreading [](GLOSSARY.html) and [](GLOSSARY.html)
    multiprocessing [](GLOSSARY.html) for [](GLOSSARY.html) asynchronous [](GLOSSARY.html)
    evaluation, event [](GLOSSARY.html) notification [](GLOSSARY.html) coherence [](GLOSSARY.html)
    and [](GLOSSARY.html) balancing, adaptability [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) GUI to [](GLOSSARY.html) unexpected [](GLOSSARY.html) requests
    [](GLOSSARY.html) and [](GLOSSARY.html) changes [](GLOSSARY.html) of [](GLOSSARY.html)
    style. There [](GLOSSARY.html) are [](GLOSSARY.html) plenty [](GLOSSARY.html)
    of dialogs, buttons, lists, all [](GLOSSARY.html) with [](GLOSSARY.html) different
    [](GLOSSARY.html) performance, presentation [](GLOSSARY.html) and visibility [](GLOSSARY.html)
    needs. In [](GLOSSARY.html) a [](GLOSSARY.html) sense, a [](GLOSSARY.html) GUI
    [](GLOSSARY.html) application [](GLOSSARY.html) develops [](GLOSSARY.html) emerging
    properties [](GLOSSARY.html) characteristic [](GLOSSARY.html) of [](GLOSSARY.html)
    a [](GLOSSARY.html) complex [](GLOSSARY.html) system [](GLOSSARY.html) where [](GLOSSARY.html)
    multiple [](GLOSSARY.html) entities interact. Keeping [](GLOSSARY.html) this [](GLOSSARY.html)
    system [](GLOSSARY.html) under [](GLOSSARY.html) strict [](GLOSSARY.html) control
    [](GLOSSARY.html) is [](GLOSSARY.html) the [](GLOSSARY.html) only way [](GLOSSARY.html)
    to [](GLOSSARY.html) maintain [](GLOSSARY.html) chaos [](GLOSSARY.html) at [](GLOSSARY.html)
    bay.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In [](GLOSSARY.html) this [](GLOSSARY.html) chapter, we [](GLOSSARY.html) will
    [](GLOSSARY.html) start [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html)
    most [](GLOSSARY.html) trivial [](GLOSSARY.html) implementation of [](GLOSSARY.html)
    a [](GLOSSARY.html) GUI [](GLOSSARY.html) application [](GLOSSARY.html) with [](GLOSSARY.html)
    both [](GLOSSARY.html) visual [](GLOSSARY.html) and [](GLOSSARY.html) non-visual
    [](GLOSSARY.html) logic: a [](GLOSSARY.html) single [](GLOSSARY.html) class responsible
    [](GLOSSARY.html) for [](GLOSSARY.html) everything. This [](GLOSSARY.html) approach,
    known [](GLOSSARY.html) as [](GLOSSARY.html) Smart [](GLOSSARY.html) UI, will
    [](GLOSSARY.html) be [](GLOSSARY.html) our foundation [](GLOSSARY.html) for [](GLOSSARY.html)
    a [](GLOSSARY.html) progressive [](GLOSSARY.html) refactoring [](GLOSSARY.html)
    into [](GLOSSARY.html) the [](GLOSSARY.html) three [](GLOSSARY.html) basic [](GLOSSARY.html)
    components of [](GLOSSARY.html) MVC: Model, View [](GLOSSARY.html) and [](GLOSSARY.html)
    Controller. We [](GLOSSARY.html) will [](GLOSSARY.html) call [](GLOSSARY.html)
    the [](GLOSSARY.html) result [](GLOSSARY.html) a “traditional [](GLOSSARY.html)
    MVC” design.'
  prefs: []
  type: TYPE_NORMAL
- en: Smart UI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Smart-UI: A single class with many responsibilities'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We [](GLOSSARY.html) start [](GLOSSARY.html) this [](GLOSSARY.html) exploration
    [](GLOSSARY.html) toward [](GLOSSARY.html) MVC [](GLOSSARY.html) with [](GLOSSARY.html)
    the [](GLOSSARY.html) most [](GLOSSARY.html) trivial [](GLOSSARY.html) and [](GLOSSARY.html)
    simplistic [](GLOSSARY.html) design: **Smart [](GLOSSARY.html) UI**, also [](GLOSSARY.html)
    known [](GLOSSARY.html) as **Autonomous [](GLOSSARY.html) View**.'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '**Important**'
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) confusing [](GLOSSARY.html) characteristic [](GLOSSARY.html)
    of [](GLOSSARY.html) MVC [](GLOSSARY.html) literature [](GLOSSARY.html) is [](GLOSSARY.html)
    that [](GLOSSARY.html) different [](GLOSSARY.html) names [](GLOSSARY.html) are
    [](GLOSSARY.html) used [](GLOSSARY.html) to [](GLOSSARY.html) express [](GLOSSARY.html)
    the [](GLOSSARY.html) same [](GLOSSARY.html) concepts. Vice-versa, it [](GLOSSARY.html)
    is [](GLOSSARY.html) also [](GLOSSARY.html) common [](GLOSSARY.html) that [](GLOSSARY.html)
    the [](GLOSSARY.html) same [](GLOSSARY.html) name [](GLOSSARY.html) is [](GLOSSARY.html)
    used [](GLOSSARY.html) to [](GLOSSARY.html) express [](GLOSSARY.html) totally
    [](GLOSSARY.html) different [](GLOSSARY.html) concepts. We [](GLOSSARY.html) accept
    [](GLOSSARY.html) this [](GLOSSARY.html) by [](GLOSSARY.html) proposing [](GLOSSARY.html)
    the [](GLOSSARY.html) most [](GLOSSARY.html) common [](GLOSSARY.html) names, reporting
    "also [](GLOSSARY.html) known [](GLOSSARY.html) as" names, and [](GLOSSARY.html)
    stressing [](GLOSSARY.html) differences [](GLOSSARY.html) when [](GLOSSARY.html)
    appropriate.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'The [](GLOSSARY.html) Smart [](GLOSSARY.html) UI [](GLOSSARY.html) approach
    [](GLOSSARY.html) uses [](GLOSSARY.html) a [](GLOSSARY.html) single [](GLOSSARY.html)
    class [](GLOSSARY.html) to [](GLOSSARY.html) handle [](GLOSSARY.html) all [](GLOSSARY.html)
    responsibilities [](GLOSSARY.html) we [](GLOSSARY.html) expect [](GLOSSARY.html)
    from [](GLOSSARY.html) a [](GLOSSARY.html) GUI [](GLOSSARY.html) program:'
  prefs: []
  type: TYPE_NORMAL
- en: Receives [](GLOSSARY.html) user [](GLOSSARY.html) driven [](GLOSSARY.html) events,
    such [](GLOSSARY.html) as [](GLOSSARY.html) mouse [](GLOSSARY.html) clicks [](GLOSSARY.html)
    and [](GLOSSARY.html) keyboard [](GLOSSARY.html) input
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Holds [](GLOSSARY.html) application [](GLOSSARY.html) logic [](GLOSSARY.html)
    to [](GLOSSARY.html) convert [](GLOSSARY.html) user [](GLOSSARY.html) driven [](GLOSSARY.html)
    events [](GLOSSARY.html) into [](GLOSSARY.html) changes [](GLOSSARY.html) of [](GLOSSARY.html)
    application [](GLOSSARY.html) state
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Holds [](GLOSSARY.html) the [](GLOSSARY.html) relevant [](GLOSSARY.html) application
    [](GLOSSARY.html) state
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performs [](GLOSSARY.html) visual [](GLOSSARY.html) rendering [](GLOSSARY.html)
    of [](GLOSSARY.html) its [](GLOSSARY.html) state
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As [](GLOSSARY.html) an [](GLOSSARY.html) example [](GLOSSARY.html) implementation
    [](GLOSSARY.html) of [](GLOSSARY.html) a [](GLOSSARY.html) Smart [](GLOSSARY.html)
    UI, consider [](GLOSSARY.html) a [](GLOSSARY.html) click [](GLOSSARY.html) counter
    [](GLOSSARY.html) application, which [](GLOSSARY.html) shows [](GLOSSARY.html)
    a [](GLOSSARY.html) button [](GLOSSARY.html) with [](GLOSSARY.html) a [](GLOSSARY.html)
    number. The [](GLOSSARY.html) number [](GLOSSARY.html) is [](GLOSSARY.html) increased
    [](GLOSSARY.html) every [](GLOSSARY.html) time [](GLOSSARY.html) the [](GLOSSARY.html)
    button [](GLOSSARY.html) is [](GLOSSARY.html) clicked.
  prefs: []
  type: TYPE_NORMAL
- en: '![](SmartUI.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The [](GLOSSARY.html) code [](GLOSSARY.html) is [](GLOSSARY.html) as [](GLOSSARY.html)
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The [](GLOSSARY.html) application's [](GLOSSARY.html) main [](GLOSSARY.html)
    and [](GLOSSARY.html) only [](GLOSSARY.html) visual [](GLOSSARY.html) component,
    `Counter`, is [](GLOSSARY.html) derived [](GLOSSARY.html) from a [](GLOSSARY.html)
    single [](GLOSSARY.html) GUI [](GLOSSARY.html) class, a [](GLOSSARY.html) Qt `QPushButton`.
    Observe [](GLOSSARY.html) in [](GLOSSARY.html) particular [](GLOSSARY.html) how
    `Counter` is
  prefs: []
  type: TYPE_NORMAL
- en: Storing [](GLOSSARY.html) the [](GLOSSARY.html) current [](GLOSSARY.html) click
    [](GLOSSARY.html) count [](GLOSSARY.html) value [](GLOSSARY.html) in [](GLOSSARY.html)
    the [](GLOSSARY.html) member [](GLOSSARY.html) variable `self._value`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Handling [](GLOSSARY.html) the [](GLOSSARY.html) logic [](GLOSSARY.html) that
    [](GLOSSARY.html) modifies `self._value`. Every [](GLOSSARY.html) time [](GLOSSARY.html)
    the [](GLOSSARY.html) button [](GLOSSARY.html) is clicked, Qt [](GLOSSARY.html)
    invokes `mouseReleaseEvent` automatically. In [](GLOSSARY.html) this [](GLOSSARY.html)
    method the [](GLOSSARY.html) click [](GLOSSARY.html) counter [](GLOSSARY.html)
    is [](GLOSSARY.html) incremented.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Synchronizes [](GLOSSARY.html) the [](GLOSSARY.html) aspect [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) button [](GLOSSARY.html) with [](GLOSSARY.html)
    the [](GLOSSARY.html) current `self._value`, by [](GLOSSARY.html) invoking `setText`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This [](GLOSSARY.html) minimalist [](GLOSSARY.html) design [](GLOSSARY.html)
    seems [](GLOSSARY.html) appealing [](GLOSSARY.html) for [](GLOSSARY.html) its
    [](GLOSSARY.html) simplicity [](GLOSSARY.html) and [](GLOSSARY.html) compactness.
    It [](GLOSSARY.html) is [](GLOSSARY.html) a [](GLOSSARY.html) good [](GLOSSARY.html)
    starting [](GLOSSARY.html) point [](GLOSSARY.html) for [](GLOSSARY.html) trivial
    [](GLOSSARY.html) applications, and [](GLOSSARY.html) the [](GLOSSARY.html) one
    [](GLOSSARY.html) most [](GLOSSARY.html) likely [](GLOSSARY.html) to be [](GLOSSARY.html)
    implemented [](GLOSSARY.html) by [](GLOSSARY.html) novices [](GLOSSARY.html) in
    [](GLOSSARY.html) GUI [](GLOSSARY.html) programming, but [](GLOSSARY.html) it
    [](GLOSSARY.html) does [](GLOSSARY.html) not [](GLOSSARY.html) scale [](GLOSSARY.html)
    well [](GLOSSARY.html) for larger [](GLOSSARY.html) applications, where [](GLOSSARY.html)
    state, user [](GLOSSARY.html) events [](GLOSSARY.html) and [](GLOSSARY.html) graphic
    [](GLOSSARY.html) layout [](GLOSSARY.html) are [](GLOSSARY.html) more complex
    [](GLOSSARY.html) and [](GLOSSARY.html) intertwined [](GLOSSARY.html) and [](GLOSSARY.html)
    need [](GLOSSARY.html) to [](GLOSSARY.html) change [](GLOSSARY.html) often [](GLOSSARY.html)
    under [](GLOSSARY.html) development [](GLOSSARY.html) pressure. Specifically,
    observe [](GLOSSARY.html) the [](GLOSSARY.html) following [](GLOSSARY.html) issues:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Access [](GLOSSARY.html) and [](GLOSSARY.html) modification [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) current [](GLOSSARY.html) state [](GLOSSARY.html)
    from [](GLOSSARY.html) outside [](GLOSSARY.html) is [](GLOSSARY.html) cumbersome,
    being contained [](GLOSSARY.html) into [](GLOSSARY.html) the [](GLOSSARY.html)
    all-encompassing [](GLOSSARY.html) visual [](GLOSSARY.html) object: external [](GLOSSARY.html)
    objects [](GLOSSARY.html) that [](GLOSSARY.html) want [](GLOSSARY.html) to modify
    [](GLOSSARY.html) the [](GLOSSARY.html) current [](GLOSSARY.html) counter [](GLOSSARY.html)
    need [](GLOSSARY.html) to [](GLOSSARY.html) make [](GLOSSARY.html) sure [](GLOSSARY.html)
    that [](GLOSSARY.html) the [](GLOSSARY.html) represented [](GLOSSARY.html) value
    [](GLOSSARY.html) is synchronized, for [](GLOSSARY.html) example, forcing [](GLOSSARY.html)
    a [](GLOSSARY.html) call [](GLOSSARY.html) to `_update()`, or [](GLOSSARY.html)
    having [](GLOSSARY.html) the `Counter` object [](GLOSSARY.html) provide [](GLOSSARY.html)
    a `setValue()` method.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It [](GLOSSARY.html) is [](GLOSSARY.html) difficult [](GLOSSARY.html) for [](GLOSSARY.html)
    other [](GLOSSARY.html) visual [](GLOSSARY.html) objects [](GLOSSARY.html) to
    [](GLOSSARY.html) report [](GLOSSARY.html) the [](GLOSSARY.html) same [](GLOSSARY.html)
    information, maybe [](GLOSSARY.html) with [](GLOSSARY.html) two [](GLOSSARY.html)
    different [](GLOSSARY.html) visual [](GLOSSARY.html) aspects (*e.g.* both [](GLOSSARY.html)
    as [](GLOSSARY.html) a [](GLOSSARY.html) counter [](GLOSSARY.html) and [](GLOSSARY.html)
    as [](GLOSSARY.html) a progress [](GLOSSARY.html) bar)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) resulting [](GLOSSARY.html) class [](GLOSSARY.html) is
    [](GLOSSARY.html) difficult [](GLOSSARY.html) to [](GLOSSARY.html) test. The [](GLOSSARY.html)
    only [](GLOSSARY.html) way [](GLOSSARY.html) to [](GLOSSARY.html) stress [](GLOSSARY.html)
    it [](GLOSSARY.html) through its [](GLOSSARY.html) public [](GLOSSARY.html) interface
    [](GLOSSARY.html) and [](GLOSSARY.html) functionality [](GLOSSARY.html) is [](GLOSSARY.html)
    to [](GLOSSARY.html) actually [](GLOSSARY.html) probe [](GLOSSARY.html) it [](GLOSSARY.html)
    with [](GLOSSARY.html) GUI events, which [](GLOSSARY.html) is [](GLOSSARY.html)
    impractical [](GLOSSARY.html) for [](GLOSSARY.html) reasons [](GLOSSARY.html)
    we [](GLOSSARY.html) will [](GLOSSARY.html) examine [](GLOSSARY.html) later.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) logic [](GLOSSARY.html) dealing [](GLOSSARY.html) with
    [](GLOSSARY.html) visual [](GLOSSARY.html) aspect (i.e. handling [](GLOSSARY.html)
    and [](GLOSSARY.html) layouting [](GLOSSARY.html) widgets, updating [](GLOSSARY.html)
    the [](GLOSSARY.html) label [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html)
    button), interaction [](GLOSSARY.html) aspect (handling [](GLOSSARY.html) the
    [](GLOSSARY.html) user initiated [](GLOSSARY.html) mouse [](GLOSSARY.html) click
    [](GLOSSARY.html) to [](GLOSSARY.html) perform [](GLOSSARY.html) the [](GLOSSARY.html)
    increment [](GLOSSARY.html) operation) and [](GLOSSARY.html) business [](GLOSSARY.html)
    aspect (incrementing [](GLOSSARY.html) the [](GLOSSARY.html) counter) are [](GLOSSARY.html)
    of [](GLOSSARY.html) different [](GLOSSARY.html) nature, and [](GLOSSARY.html)
    would [](GLOSSARY.html) be [](GLOSSARY.html) better [](GLOSSARY.html) kept separated.
    This [](GLOSSARY.html) would [](GLOSSARY.html) ease [](GLOSSARY.html) testability,
    simplify [](GLOSSARY.html) code [](GLOSSARY.html) understanding [](GLOSSARY.html)
    and interaction.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Document View
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Document-View: dividing state from GUI'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To [](GLOSSARY.html) solve [](GLOSSARY.html) the [](GLOSSARY.html) shortcomings
    [](GLOSSARY.html) of [](GLOSSARY.html) Smart [](GLOSSARY.html) UI, we [](GLOSSARY.html)
    take [](GLOSSARY.html) advantage [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    intrinsic division [](GLOSSARY.html) into [](GLOSSARY.html) visual [](GLOSSARY.html)
    rendering, interaction [](GLOSSARY.html) and [](GLOSSARY.html) business [](GLOSSARY.html)
    logic [](GLOSSARY.html) expressed [](GLOSSARY.html) by [](GLOSSARY.html) a [](GLOSSARY.html)
    GUI application. In [](GLOSSARY.html) Smart [](GLOSSARY.html) UI, these [](GLOSSARY.html)
    three [](GLOSSARY.html) roles [](GLOSSARY.html) happen [](GLOSSARY.html) to [](GLOSSARY.html)
    be [](GLOSSARY.html) assigned [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    same class, but [](GLOSSARY.html) we [](GLOSSARY.html) can [](GLOSSARY.html) reorganize
    [](GLOSSARY.html) our [](GLOSSARY.html) code [](GLOSSARY.html) so [](GLOSSARY.html)
    that [](GLOSSARY.html) the [](GLOSSARY.html) business [](GLOSSARY.html) logic
    [](GLOSSARY.html) part [](GLOSSARY.html) is [](GLOSSARY.html) kept separated.
    The [](GLOSSARY.html) resulting [](GLOSSARY.html) design [](GLOSSARY.html) is
    [](GLOSSARY.html) a [](GLOSSARY.html) two-class [](GLOSSARY.html) system [](GLOSSARY.html)
    known [](GLOSSARY.html) in [](GLOSSARY.html) literature [](GLOSSARY.html) as **Document
    [](GLOSSARY.html) View** or **Model [](GLOSSARY.html) Delegate**.
  prefs: []
  type: TYPE_NORMAL
- en: The **Document** class [](GLOSSARY.html) is [](GLOSSARY.html) responsible [](GLOSSARY.html)
    for [](GLOSSARY.html) handling [](GLOSSARY.html) the [](GLOSSARY.html) business
    [](GLOSSARY.html) logic. It [](GLOSSARY.html) has [](GLOSSARY.html) no [](GLOSSARY.html)
    part [](GLOSSARY.html) in [](GLOSSARY.html) dealing [](GLOSSARY.html) with [](GLOSSARY.html)
    graphical [](GLOSSARY.html) rendering, nor [](GLOSSARY.html) with [](GLOSSARY.html)
    GUI [](GLOSSARY.html) events. It simply [](GLOSSARY.html) stores [](GLOSSARY.html)
    application [](GLOSSARY.html) relevant [](GLOSSARY.html) state, and [](GLOSSARY.html)
    provides [](GLOSSARY.html) an [](GLOSSARY.html) interface [](GLOSSARY.html) to
    [](GLOSSARY.html) obtain [](GLOSSARY.html) this state [](GLOSSARY.html) or [](GLOSSARY.html)
    change [](GLOSSARY.html) it [](GLOSSARY.html) according [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) rules [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    application. Additionally, it provides [](GLOSSARY.html) a [](GLOSSARY.html) mechanism
    [](GLOSSARY.html) to [](GLOSSARY.html) inform [](GLOSSARY.html) interested [](GLOSSARY.html)
    objects [](GLOSSARY.html) of [](GLOSSARY.html) changes.
  prefs: []
  type: TYPE_NORMAL
- en: The **View** class [](GLOSSARY.html) instead [](GLOSSARY.html) handles [](GLOSSARY.html)
    user [](GLOSSARY.html) events, renders [](GLOSSARY.html) itself [](GLOSSARY.html)
    visually, performs [](GLOSSARY.html) operations [](GLOSSARY.html) on [](GLOSSARY.html)
    the [](GLOSSARY.html) Document [](GLOSSARY.html) and [](GLOSSARY.html) keeps [](GLOSSARY.html)
    its [](GLOSSARY.html) visual [](GLOSSARY.html) aspect [](GLOSSARY.html) synchronized
    against [](GLOSSARY.html) the [](GLOSSARY.html) Document's [](GLOSSARY.html) state
    [](GLOSSARY.html) when [](GLOSSARY.html) it [](GLOSSARY.html) changes.
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) Document-View [](GLOSSARY.html) design [](GLOSSARY.html)
    achieves [](GLOSSARY.html) separation [](GLOSSARY.html) of [](GLOSSARY.html) the
    [](GLOSSARY.html) state [](GLOSSARY.html) from [](GLOSSARY.html) its [](GLOSSARY.html)
    graphical representation, allowing [](GLOSSARY.html) them [](GLOSSARY.html) to
    [](GLOSSARY.html) change [](GLOSSARY.html) independently. The [](GLOSSARY.html)
    Document [](GLOSSARY.html) has [](GLOSSARY.html) become a [](GLOSSARY.html) fully
    [](GLOSSARY.html) non-GUI [](GLOSSARY.html) entity [](GLOSSARY.html) that [](GLOSSARY.html)
    can [](GLOSSARY.html) act [](GLOSSARY.html) and [](GLOSSARY.html) be [](GLOSSARY.html)
    tested [](GLOSSARY.html) independently. Any [](GLOSSARY.html) registered View
    [](GLOSSARY.html) always [](GLOSSARY.html) keeps [](GLOSSARY.html) itself [](GLOSSARY.html)
    up-to-date [](GLOSSARY.html) against [](GLOSSARY.html) the [](GLOSSARY.html) Document
    [](GLOSSARY.html) contents [](GLOSSARY.html) through [](GLOSSARY.html) the notification
    [](GLOSSARY.html) system, and [](GLOSSARY.html) carry [](GLOSSARY.html) full [](GLOSSARY.html)
    responsibility [](GLOSSARY.html) for [](GLOSSARY.html) graphical [](GLOSSARY.html)
    rendering [](GLOSSARY.html) of the [](GLOSSARY.html) Document [](GLOSSARY.html)
    information [](GLOSSARY.html) and [](GLOSSARY.html) the [](GLOSSARY.html) handling
    [](GLOSSARY.html) of [](GLOSSARY.html) user [](GLOSSARY.html) interaction.
  prefs: []
  type: TYPE_NORMAL
- en: 'This [](GLOSSARY.html) design [](GLOSSARY.html) removes [](GLOSSARY.html) some
    [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) concerns [](GLOSSARY.html)
    expressed [](GLOSSARY.html) for [](GLOSSARY.html) Smart [](GLOSSARY.html) UI.
    Testing [](GLOSSARY.html) of [](GLOSSARY.html) the state [](GLOSSARY.html) and
    [](GLOSSARY.html) business [](GLOSSARY.html) logic [](GLOSSARY.html) becomes [](GLOSSARY.html)
    easier: the [](GLOSSARY.html) Document [](GLOSSARY.html) object [](GLOSSARY.html)
    can [](GLOSSARY.html) be [](GLOSSARY.html) modified [](GLOSSARY.html) or accessed
    [](GLOSSARY.html) programmatically [](GLOSSARY.html) by [](GLOSSARY.html) issuing
    [](GLOSSARY.html) calls [](GLOSSARY.html) to [](GLOSSARY.html) its [](GLOSSARY.html)
    methods. This [](GLOSSARY.html) object [](GLOSSARY.html) is [](GLOSSARY.html)
    now independent [](GLOSSARY.html) and [](GLOSSARY.html) can [](GLOSSARY.html)
    work [](GLOSSARY.html) and [](GLOSSARY.html) manipulated [](GLOSSARY.html) with
    [](GLOSSARY.html) different [](GLOSSARY.html) Views, if [](GLOSSARY.html) desired.
    An additional [](GLOSSARY.html) price [](GLOSSARY.html) in [](GLOSSARY.html) complexity
    [](GLOSSARY.html) is [](GLOSSARY.html) introduced [](GLOSSARY.html) in [](GLOSSARY.html)
    having [](GLOSSARY.html) to [](GLOSSARY.html) keep [](GLOSSARY.html) the [](GLOSSARY.html)
    View (or [](GLOSSARY.html) Views) notified [](GLOSSARY.html) of [](GLOSSARY.html)
    changes [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) Document.'
  prefs: []
  type: TYPE_NORMAL
- en: Implementation example
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We [](GLOSSARY.html) can [](GLOSSARY.html) implement [](GLOSSARY.html) this
    [](GLOSSARY.html) design [](GLOSSARY.html) to [](GLOSSARY.html) our [](GLOSSARY.html)
    Click [](GLOSSARY.html) counter [](GLOSSARY.html) application [](GLOSSARY.html)
    through [](GLOSSARY.html) progressive [](GLOSSARY.html) refactorings. The [](GLOSSARY.html)
    first [](GLOSSARY.html) step [](GLOSSARY.html) is [](GLOSSARY.html) to [](GLOSSARY.html)
    partition [](GLOSSARY.html) out [](GLOSSARY.html) the [](GLOSSARY.html) data,
    represented [](GLOSSARY.html) by [](GLOSSARY.html) the `self._value` variable,
    into [](GLOSSARY.html) the [](GLOSSARY.html) Document [](GLOSSARY.html) class.
    For [](GLOSSARY.html) our [](GLOSSARY.html) system [](GLOSSARY.html) to [](GLOSSARY.html)
    continue [](GLOSSARY.html) to [](GLOSSARY.html) work, the [](GLOSSARY.html) visual
    [](GLOSSARY.html) part [](GLOSSARY.html) View [](GLOSSARY.html) must [](GLOSSARY.html)
    now [](GLOSSARY.html) be [](GLOSSARY.html) informed [](GLOSSARY.html) of [](GLOSSARY.html)
    changes [](GLOSSARY.html) to [](GLOSSARY.html) this [](GLOSSARY.html) data. The
    [](GLOSSARY.html) Document [](GLOSSARY.html) will [](GLOSSARY.html) therefore
    [](GLOSSARY.html) not [](GLOSSARY.html) only [](GLOSSARY.html) hold `self._value`,
    but [](GLOSSARY.html) also [](GLOSSARY.html) provide [](GLOSSARY.html) an [](GLOSSARY.html)
    interface [](GLOSSARY.html) to [](GLOSSARY.html) query [](GLOSSARY.html) and [](GLOSSARY.html)
    modify [](GLOSSARY.html) this [](GLOSSARY.html) data [](GLOSSARY.html) and [](GLOSSARY.html)
    a [](GLOSSARY.html) strategy [](GLOSSARY.html) to [](GLOSSARY.html) notify [](GLOSSARY.html)
    other [](GLOSSARY.html) objects [](GLOSSARY.html) when [](GLOSSARY.html) changes
    [](GLOSSARY.html) occur. This [](GLOSSARY.html) is [](GLOSSARY.html) expressed
    [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html) following [](GLOSSARY.html)
    implementation [](GLOSSARY.html) code
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In [](GLOSSARY.html) addition [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    value, the `self._listeners` member [](GLOSSARY.html) variable [](GLOSSARY.html)
    holds [](GLOSSARY.html) references [](GLOSSARY.html) to [](GLOSSARY.html) Views
    [](GLOSSARY.html) interested [](GLOSSARY.html) in [](GLOSSARY.html) being [](GLOSSARY.html)
    notified [](GLOSSARY.html) about [](GLOSSARY.html) changes. We [](GLOSSARY.html)
    use [](GLOSSARY.html) a [](GLOSSARY.html) python [](GLOSSARY.html) set [](GLOSSARY.html)
    instead [](GLOSSARY.html) of [](GLOSSARY.html) a [](GLOSSARY.html) list [](GLOSSARY.html)
    to [](GLOSSARY.html) prevent [](GLOSSARY.html) accidental [](GLOSSARY.html) registration
    [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) same [](GLOSSARY.html)
    object [](GLOSSARY.html) twice. Interested [](GLOSSARY.html) objects [](GLOSSARY.html)
    can [](GLOSSARY.html) register [](GLOSSARY.html) and [](GLOSSARY.html) unregister
    [](GLOSSARY.html) through [](GLOSSARY.html) the [](GLOSSARY.html) following [](GLOSSARY.html)
    methods
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We [](GLOSSARY.html) then [](GLOSSARY.html) provide [](GLOSSARY.html) a [](GLOSSARY.html)
    getter [](GLOSSARY.html) method ^([1](#fn_1)) for `self._value`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We [](GLOSSARY.html) also [](GLOSSARY.html) provide [](GLOSSARY.html) a [](GLOSSARY.html)
    setter [](GLOSSARY.html) to [](GLOSSARY.html) directly [](GLOSSARY.html) set [](GLOSSARY.html)
    a [](GLOSSARY.html) specific [](GLOSSARY.html) value. Note [](GLOSSARY.html) in
    [](GLOSSARY.html) particular [](GLOSSARY.html) how [](GLOSSARY.html) the [](GLOSSARY.html)
    method [](GLOSSARY.html) notifies [](GLOSSARY.html) the [](GLOSSARY.html) registered
    [](GLOSSARY.html) listeners [](GLOSSARY.html) when [](GLOSSARY.html) the [](GLOSSARY.html)
    value [](GLOSSARY.html) changes. This [](GLOSSARY.html) is done [](GLOSSARY.html)
    by [](GLOSSARY.html) calling [](GLOSSARY.html) the [](GLOSSARY.html) listeners'
    `notify` method, as [](GLOSSARY.html) you [](GLOSSARY.html) can [](GLOSSARY.html)
    see [](GLOSSARY.html) in `self._notifyListeners`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The [](GLOSSARY.html) method `notify` is [](GLOSSARY.html) therefore [](GLOSSARY.html)
    the [](GLOSSARY.html) interface [](GLOSSARY.html) that [](GLOSSARY.html) a [](GLOSSARY.html)
    registered [](GLOSSARY.html) listener must [](GLOSSARY.html) provide [](GLOSSARY.html)
    in [](GLOSSARY.html) order [](GLOSSARY.html) to [](GLOSSARY.html) receive [](GLOSSARY.html)
    notifications [](GLOSSARY.html) about [](GLOSSARY.html) the [](GLOSSARY.html)
    mutated [](GLOSSARY.html) state [](GLOSSARY.html) of [](GLOSSARY.html) the Document
    [](GLOSSARY.html) object. Our [](GLOSSARY.html) View [](GLOSSARY.html) need [](GLOSSARY.html)
    to [](GLOSSARY.html) implement [](GLOSSARY.html) this [](GLOSSARY.html) method.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we [](GLOSSARY.html) also [](GLOSSARY.html) provide [](GLOSSARY.html)
    a [](GLOSSARY.html) method [](GLOSSARY.html) that [](GLOSSARY.html) increments
    [](GLOSSARY.html) the [](GLOSSARY.html) value [](GLOSSARY.html) according [](GLOSSARY.html)
    to [](GLOSSARY.html) the expected [](GLOSSARY.html) logic
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The [](GLOSSARY.html) View [](GLOSSARY.html) class [](GLOSSARY.html) will [](GLOSSARY.html)
    be [](GLOSSARY.html) responsible [](GLOSSARY.html) for [](GLOSSARY.html) rendering
    [](GLOSSARY.html) the [](GLOSSARY.html) information [](GLOSSARY.html) contained
    [](GLOSSARY.html) in an [](GLOSSARY.html) instance [](GLOSSARY.html) of `CounterDocument`.
    This [](GLOSSARY.html) instance [](GLOSSARY.html) is [](GLOSSARY.html) passed
    [](GLOSSARY.html) at [](GLOSSARY.html) initialization, and [](GLOSSARY.html) after
    [](GLOSSARY.html) a [](GLOSSARY.html) few [](GLOSSARY.html) formalities, the [](GLOSSARY.html)
    View [](GLOSSARY.html) register [](GLOSSARY.html) itself [](GLOSSARY.html) for
    [](GLOSSARY.html) notifications
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: When [](GLOSSARY.html) this [](GLOSSARY.html) happens, the [](GLOSSARY.html)
    Document [](GLOSSARY.html) adds [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html)
    as [](GLOSSARY.html) a [](GLOSSARY.html) listener. A [](GLOSSARY.html) notification
    [](GLOSSARY.html) is immediately [](GLOSSARY.html) delivered [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) newly [](GLOSSARY.html) added [](GLOSSARY.html)
    listener [](GLOSSARY.html) so [](GLOSSARY.html) that [](GLOSSARY.html) it [](GLOSSARY.html)
    can [](GLOSSARY.html) update itself. The `notify` method [](GLOSSARY.html) on
    [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html) is [](GLOSSARY.html)
    then [](GLOSSARY.html) called, which [](GLOSSARY.html) will [](GLOSSARY.html)
    query [](GLOSSARY.html) the [](GLOSSARY.html) current [](GLOSSARY.html) value
    [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html) Document, and [](GLOSSARY.html)
    update [](GLOSSARY.html) the [](GLOSSARY.html) text [](GLOSSARY.html) on [](GLOSSARY.html)
    the [](GLOSSARY.html) button
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Note [](GLOSSARY.html) how [](GLOSSARY.html) this [](GLOSSARY.html) method [](GLOSSARY.html)
    inquires [](GLOSSARY.html) the [](GLOSSARY.html) Document [](GLOSSARY.html) through
    [](GLOSSARY.html) its [](GLOSSARY.html) interface (calling `CounterDocument.value`).
    The [](GLOSSARY.html) View [](GLOSSARY.html) must [](GLOSSARY.html) therefore
    [](GLOSSARY.html) have [](GLOSSARY.html) detailed [](GLOSSARY.html) knowledge
    [](GLOSSARY.html) of [](GLOSSARY.html) its [](GLOSSARY.html) associated [](GLOSSARY.html)
    Model's [](GLOSSARY.html) interface [](GLOSSARY.html) and [](GLOSSARY.html) must
    [](GLOSSARY.html) deal [](GLOSSARY.html) with [](GLOSSARY.html) the [](GLOSSARY.html)
    semantic [](GLOSSARY.html) level [](GLOSSARY.html) it [](GLOSSARY.html) presents.
    Through [](GLOSSARY.html) this [](GLOSSARY.html) knowledge, the [](GLOSSARY.html)
    View [](GLOSSARY.html) extracts [](GLOSSARY.html) data [](GLOSSARY.html) from
    [](GLOSSARY.html) the [](GLOSSARY.html) Model, and [](GLOSSARY.html) converts
    “Model [](GLOSSARY.html) language” into “View [](GLOSSARY.html) language” to [](GLOSSARY.html)
    present [](GLOSSARY.html) the [](GLOSSARY.html) data [](GLOSSARY.html) into [](GLOSSARY.html)
    the [](GLOSSARY.html) visual [](GLOSSARY.html) widgets [](GLOSSARY.html) it [](GLOSSARY.html)
    is [](GLOSSARY.html) composed [](GLOSSARY.html) of.
  prefs: []
  type: TYPE_NORMAL
- en: Handling [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) click
    [](GLOSSARY.html) event [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html)
    User [](GLOSSARY.html) is [](GLOSSARY.html) performed [](GLOSSARY.html) in `mouseReleaseEvent`,
    as [](GLOSSARY.html) in [](GLOSSARY.html) Smart-UI. This [](GLOSSARY.html) time
    [](GLOSSARY.html) however, the [](GLOSSARY.html) action [](GLOSSARY.html) will
    [](GLOSSARY.html) involve [](GLOSSARY.html) the [](GLOSSARY.html) Document, again
    [](GLOSSARY.html) through [](GLOSSARY.html) its [](GLOSSARY.html) interface
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: the `setValue` call [](GLOSSARY.html) will [](GLOSSARY.html) then [](GLOSSARY.html)
    issue [](GLOSSARY.html) a [](GLOSSARY.html) change [](GLOSSARY.html) notification
    [](GLOSSARY.html) that [](GLOSSARY.html) will [](GLOSSARY.html) update [](GLOSSARY.html)
    the button [](GLOSSARY.html) text [](GLOSSARY.html) via `notify`.
  prefs: []
  type: TYPE_NORMAL
- en: We [](GLOSSARY.html) can [](GLOSSARY.html) now [](GLOSSARY.html) provide [](GLOSSARY.html)
    multiple [](GLOSSARY.html) Views [](GLOSSARY.html) with [](GLOSSARY.html) different
    [](GLOSSARY.html) representation [](GLOSSARY.html) modes [](GLOSSARY.html) for
    [](GLOSSARY.html) the same [](GLOSSARY.html) information, or [](GLOSSARY.html)
    modify [](GLOSSARY.html) it [](GLOSSARY.html) through [](GLOSSARY.html) different
    [](GLOSSARY.html) sources, either [](GLOSSARY.html) visual [](GLOSSARY.html) or
    non-visual. We [](GLOSSARY.html) can [](GLOSSARY.html) for [](GLOSSARY.html) example
    [](GLOSSARY.html) add [](GLOSSARY.html) a [](GLOSSARY.html) Progress [](GLOSSARY.html)
    Bar
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: and [](GLOSSARY.html) register [](GLOSSARY.html) it [](GLOSSARY.html) on [](GLOSSARY.html)
    the [](GLOSSARY.html) same [](GLOSSARY.html) Document [](GLOSSARY.html) instance
    [](GLOSSARY.html) at [](GLOSSARY.html) initialization
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: When [](GLOSSARY.html) the [](GLOSSARY.html) button [](GLOSSARY.html) is [](GLOSSARY.html)
    clicked, both [](GLOSSARY.html) its [](GLOSSARY.html) label [](GLOSSARY.html)
    and [](GLOSSARY.html) the [](GLOSSARY.html) progress [](GLOSSARY.html) bar [](GLOSSARY.html)
    are [](GLOSSARY.html) kept updated [](GLOSSARY.html) with [](GLOSSARY.html) the
    [](GLOSSARY.html) current [](GLOSSARY.html) value [](GLOSSARY.html) in [](GLOSSARY.html)
    the [](GLOSSARY.html) Document.
  prefs: []
  type: TYPE_NORMAL
- en: ^([1](#fn_1)) Python [](GLOSSARY.html) properties [](GLOSSARY.html) can [](GLOSSARY.html)
    be [](GLOSSARY.html) used [](GLOSSARY.html) for [](GLOSSARY.html) the [](GLOSSARY.html)
    same [](GLOSSARY.html) goal. However, python [](GLOSSARY.html) properties [](GLOSSARY.html)
    are [](GLOSSARY.html) harder [](GLOSSARY.html) to [](GLOSSARY.html) connect [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) signal/slots [](GLOSSARY.html) mechanism
    [](GLOSSARY.html) in [](GLOSSARY.html) PyQt.
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](#fn_2)) When [](GLOSSARY.html) registration [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) View [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html)
    Document [](GLOSSARY.html) is [](GLOSSARY.html) done [](GLOSSARY.html) in [](GLOSSARY.html)
    the [](GLOSSARY.html) View's initializer, as [](GLOSSARY.html) we [](GLOSSARY.html)
    are [](GLOSSARY.html) doing [](GLOSSARY.html) here, it [](GLOSSARY.html) should
    [](GLOSSARY.html) be [](GLOSSARY.html) done [](GLOSSARY.html) only [](GLOSSARY.html)
    when [](GLOSSARY.html) the initialization [](GLOSSARY.html) is [](GLOSSARY.html)
    completed, so [](GLOSSARY.html) that [](GLOSSARY.html) notify [](GLOSSARY.html)
    can [](GLOSSARY.html) be [](GLOSSARY.html) called [](GLOSSARY.html) on [](GLOSSARY.html)
    a [](GLOSSARY.html) fully initialized [](GLOSSARY.html) object. An [](GLOSSARY.html)
    alternative [](GLOSSARY.html) strategy [](GLOSSARY.html) is [](GLOSSARY.html)
    to [](GLOSSARY.html) delay [](GLOSSARY.html) this [](GLOSSARY.html) setup [](GLOSSARY.html)
    and [](GLOSSARY.html) perform [](GLOSSARY.html) it [](GLOSSARY.html) through [](GLOSSARY.html)
    a `View.setDocument` method.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '**Notification [](GLOSSARY.html) system [](GLOSSARY.html) in [](GLOSSARY.html)
    strongly [](GLOSSARY.html) typed [](GLOSSARY.html) languages**'
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) possible [](GLOSSARY.html) implementation [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) notification [](GLOSSARY.html) system
    [](GLOSSARY.html) in [](GLOSSARY.html) strongly [](GLOSSARY.html) typed languages
    [](GLOSSARY.html) uses [](GLOSSARY.html) an [](GLOSSARY.html) interface [](GLOSSARY.html)
    class `ListenerInterface` with [](GLOSSARY.html) one [](GLOSSARY.html) abstract
    [](GLOSSARY.html) method `notify()`. For [](GLOSSARY.html) example, in [](GLOSSARY.html)
    C++ we [](GLOSSARY.html) could [](GLOSSARY.html) write [](GLOSSARY.html) the [](GLOSSARY.html)
    following [](GLOSSARY.html) code
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Concrete [](GLOSSARY.html) listeners [](GLOSSARY.html) will [](GLOSSARY.html)
    implement [](GLOSSARY.html) this [](GLOSSARY.html) interface
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The [](GLOSSARY.html) Model [](GLOSSARY.html) will [](GLOSSARY.html) accept
    [](GLOSSARY.html) and [](GLOSSARY.html) handle [](GLOSSARY.html) pointers [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) Listener [](GLOSSARY.html) interface,
    thus not [](GLOSSARY.html) requiring [](GLOSSARY.html) a [](GLOSSARY.html) dependency
    [](GLOSSARY.html) toward [](GLOSSARY.html) specific [](GLOSSARY.html) Views [](GLOSSARY.html)
    or [](GLOSSARY.html) Controllers
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: A [](GLOSSARY.html) similar [](GLOSSARY.html) approach [](GLOSSARY.html) can
    [](GLOSSARY.html) be [](GLOSSARY.html) used [](GLOSSARY.html) in [](GLOSSARY.html)
    Java.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Traditional MVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Traditional MVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With [](GLOSSARY.html) the [](GLOSSARY.html) Document-View [](GLOSSARY.html)
    design [](GLOSSARY.html) we [](GLOSSARY.html) successfully [](GLOSSARY.html) extracted
    [](GLOSSARY.html) state [](GLOSSARY.html) from [](GLOSSARY.html) an [](GLOSSARY.html)
    initial Smart-UI [](GLOSSARY.html) design. The [](GLOSSARY.html) next [](GLOSSARY.html)
    objective [](GLOSSARY.html) is [](GLOSSARY.html) to [](GLOSSARY.html) extract
    [](GLOSSARY.html) the [](GLOSSARY.html) code [](GLOSSARY.html) that [](GLOSSARY.html)
    converts [](GLOSSARY.html) the primary [](GLOSSARY.html) event (in [](GLOSSARY.html)
    this [](GLOSSARY.html) case, a [](GLOSSARY.html) mouse [](GLOSSARY.html) click
    [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) button) into [](GLOSSARY.html)
    the [](GLOSSARY.html) execution [](GLOSSARY.html) of the [](GLOSSARY.html) logic
    [](GLOSSARY.html) that [](GLOSSARY.html) modifies [](GLOSSARY.html) the [](GLOSSARY.html)
    state (addition [](GLOSSARY.html) of [](GLOSSARY.html) one [](GLOSSARY.html) to
    [](GLOSSARY.html) the [](GLOSSARY.html) value). The [](GLOSSARY.html) final result
    [](GLOSSARY.html) of [](GLOSSARY.html) this [](GLOSSARY.html) refactoring [](GLOSSARY.html)
    will [](GLOSSARY.html) be [](GLOSSARY.html) a **Traditional [](GLOSSARY.html)
    MVC** design^([1](#fn_1)).
  prefs: []
  type: TYPE_NORMAL
- en: 'In [](GLOSSARY.html) Traditional [](GLOSSARY.html) MVC, the [](GLOSSARY.html)
    Document [](GLOSSARY.html) is [](GLOSSARY.html) called **Model**, and [](GLOSSARY.html)
    its [](GLOSSARY.html) role and [](GLOSSARY.html) structure [](GLOSSARY.html) is
    [](GLOSSARY.html) unchanged: it [](GLOSSARY.html) stores [](GLOSSARY.html) state
    [](GLOSSARY.html) and [](GLOSSARY.html) delivers [](GLOSSARY.html) change notifications.
    The [](GLOSSARY.html) View [](GLOSSARY.html) part [](GLOSSARY.html) is [](GLOSSARY.html)
    divided [](GLOSSARY.html) into [](GLOSSARY.html) two [](GLOSSARY.html) classes,
    the **Controller** and [](GLOSSARY.html) the **View**. Once [](GLOSSARY.html)
    instantiated [](GLOSSARY.html) and [](GLOSSARY.html) connected, Model, View, and
    [](GLOSSARY.html) Controller [](GLOSSARY.html) form [](GLOSSARY.html) a [](GLOSSARY.html)
    so-called **MVC [](GLOSSARY.html) triad**.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](mvc_triad.png)'
  prefs: []
  type: TYPE_IMG
- en: The [](GLOSSARY.html) Controller's [](GLOSSARY.html) role [](GLOSSARY.html)
    is [](GLOSSARY.html) to [](GLOSSARY.html) transform [](GLOSSARY.html) primary
    [](GLOSSARY.html) events [](GLOSSARY.html) delivered [](GLOSSARY.html) by [](GLOSSARY.html)
    the [](GLOSSARY.html) View [](GLOSSARY.html) into operations [](GLOSSARY.html)
    on [](GLOSSARY.html) the [](GLOSSARY.html) Model. Depending [](GLOSSARY.html)
    on [](GLOSSARY.html) the [](GLOSSARY.html) specifics [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) application, a [](GLOSSARY.html) Controller [](GLOSSARY.html)
    may [](GLOSSARY.html) or [](GLOSSARY.html) may [](GLOSSARY.html) not [](GLOSSARY.html)
    need a [](GLOSSARY.html) reference [](GLOSSARY.html) to [](GLOSSARY.html) the
    [](GLOSSARY.html) View, but [](GLOSSARY.html) it [](GLOSSARY.html) certainly [](GLOSSARY.html)
    needs [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html) to [](GLOSSARY.html)
    apply [](GLOSSARY.html) changes [](GLOSSARY.html) on
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: The [](GLOSSARY.html) method `addOne` performs [](GLOSSARY.html) the [](GLOSSARY.html)
    specific [](GLOSSARY.html) task [](GLOSSARY.html) of [](GLOSSARY.html) transforming
    [](GLOSSARY.html) a [](GLOSSARY.html) primary [](GLOSSARY.html) event into [](GLOSSARY.html)
    a [](GLOSSARY.html) Model [](GLOSSARY.html) operation, adding [](GLOSSARY.html)
    one [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) current [](GLOSSARY.html)
    value. Obviously, the Controller [](GLOSSARY.html) does [](GLOSSARY.html) so [](GLOSSARY.html)
    through [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html) interface.
    This [](GLOSSARY.html) operation [](GLOSSARY.html) will [](GLOSSARY.html) trigger
    [](GLOSSARY.html) a Model [](GLOSSARY.html) notification [](GLOSSARY.html) to
    [](GLOSSARY.html) its [](GLOSSARY.html) listeners
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: At [](GLOSSARY.html) initialization, the [](GLOSSARY.html) View [](GLOSSARY.html)
    instantiates [](GLOSSARY.html) its [](GLOSSARY.html) associated [](GLOSSARY.html)
    Controller, passing itself [](GLOSSARY.html) and [](GLOSSARY.html) the [](GLOSSARY.html)
    Model [](GLOSSARY.html) as [](GLOSSARY.html) parameters. As [](GLOSSARY.html)
    before, the [](GLOSSARY.html) View [](GLOSSARY.html) registers [](GLOSSARY.html)
    itself [](GLOSSARY.html) on [](GLOSSARY.html) the Model [](GLOSSARY.html) via
    [](GLOSSARY.html) the `register` method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'The [](GLOSSARY.html) View [](GLOSSARY.html) now [](GLOSSARY.html) depends
    [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) Controller [](GLOSSARY.html)
    to [](GLOSSARY.html) modify [](GLOSSARY.html) the [](GLOSSARY.html) Model: only
    [](GLOSSARY.html) strictly GUI-related [](GLOSSARY.html) handling [](GLOSSARY.html)
    is [](GLOSSARY.html) done [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html)
    View. Conversion [](GLOSSARY.html) from [](GLOSSARY.html) GUI [](GLOSSARY.html)
    events [](GLOSSARY.html) to application [](GLOSSARY.html) business [](GLOSSARY.html)
    logic [](GLOSSARY.html) is [](GLOSSARY.html) delegated [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) Controller [](GLOSSARY.html) in `mouseReleaseEvent`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Clicking [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html)
    button [](GLOSSARY.html) will [](GLOSSARY.html) result [](GLOSSARY.html) in [](GLOSSARY.html)
    a [](GLOSSARY.html) call [](GLOSSARY.html) to `Controller.addOne`, in turn [](GLOSSARY.html)
    triggering [](GLOSSARY.html) a [](GLOSSARY.html) call [](GLOSSARY.html) to `notify`
    that [](GLOSSARY.html) updates [](GLOSSARY.html) the [](GLOSSARY.html) text [](GLOSSARY.html)
    label. The [](GLOSSARY.html) activity diagram [](GLOSSARY.html) shows [](GLOSSARY.html)
    the [](GLOSSARY.html) dance [](GLOSSARY.html) of [](GLOSSARY.html) calls [](GLOSSARY.html)
    presented [](GLOSSARY.html) above. Note [](GLOSSARY.html) how [](GLOSSARY.html)
    the [](GLOSSARY.html) Model-View synchronization [](GLOSSARY.html) does [](GLOSSARY.html)
    not [](GLOSSARY.html) involve [](GLOSSARY.html) the [](GLOSSARY.html) Controller
  prefs: []
  type: TYPE_NORMAL
- en: '![](activity_diagram.png)'
  prefs: []
  type: TYPE_IMG
- en: To [](GLOSSARY.html) initialize [](GLOSSARY.html) the [](GLOSSARY.html) MVC
    [](GLOSSARY.html) triad, the [](GLOSSARY.html) client [](GLOSSARY.html) code [](GLOSSARY.html)
    needs [](GLOSSARY.html) to [](GLOSSARY.html) create [](GLOSSARY.html) the [](GLOSSARY.html)
    Model [](GLOSSARY.html) and View, and [](GLOSSARY.html) let [](GLOSSARY.html)
    them [](GLOSSARY.html) be [](GLOSSARY.html) aware [](GLOSSARY.html) of [](GLOSSARY.html)
    each [](GLOSSARY.html) other [](GLOSSARY.html) by [](GLOSSARY.html) passing [](GLOSSARY.html)
    the [](GLOSSARY.html) Model [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    View.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: The [](GLOSSARY.html) activity [](GLOSSARY.html) diagram [](GLOSSARY.html) shows
    [](GLOSSARY.html) the [](GLOSSARY.html) setup [](GLOSSARY.html) code [](GLOSSARY.html)
    given [](GLOSSARY.html) above
  prefs: []
  type: TYPE_NORMAL
- en: '![](activity_diagram_setup.png)'
  prefs: []
  type: TYPE_IMG
- en: This [](GLOSSARY.html) schema [](GLOSSARY.html) assumes [](GLOSSARY.html) that
    [](GLOSSARY.html) the [](GLOSSARY.html) controller [](GLOSSARY.html) is [](GLOSSARY.html)
    initialized [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html) View.
    This [](GLOSSARY.html) is [](GLOSSARY.html) generally desirable, given [](GLOSSARY.html)
    that [](GLOSSARY.html) View [](GLOSSARY.html) and [](GLOSSARY.html) Controller
    [](GLOSSARY.html) are [](GLOSSARY.html) so [](GLOSSARY.html) dependent [](GLOSSARY.html)
    and [](GLOSSARY.html) tailored [](GLOSSARY.html) to [](GLOSSARY.html) each other
    [](GLOSSARY.html) that [](GLOSSARY.html) passing [](GLOSSARY.html) the [](GLOSSARY.html)
    Controller [](GLOSSARY.html) from [](GLOSSARY.html) outside [](GLOSSARY.html)
    is [](GLOSSARY.html) not [](GLOSSARY.html) profitable.
  prefs: []
  type: TYPE_NORMAL
- en: 'FIXME The [](GLOSSARY.html) direct [](GLOSSARY.html) connection [](GLOSSARY.html)
    between [](GLOSSARY.html) View [](GLOSSARY.html) and [](GLOSSARY.html) Controller
    [](GLOSSARY.html) is [](GLOSSARY.html) needed [](GLOSSARY.html) for: 1) the [](GLOSSARY.html)
    View [](GLOSSARY.html) initializes [](GLOSSARY.html) the [](GLOSSARY.html) controller
    [](GLOSSARY.html) with [](GLOSSARY.html) an [](GLOSSARY.html) instance [](GLOSSARY.html)
    of [](GLOSSARY.html) itself [](GLOSSARY.html) at creation 2) the [](GLOSSARY.html)
    currently [](GLOSSARY.html) active [](GLOSSARY.html) controller [](GLOSSARY.html)
    can [](GLOSSARY.html) be [](GLOSSARY.html) found [](GLOSSARY.html) by [](GLOSSARY.html)
    traversing [](GLOSSARY.html) the [](GLOSSARY.html) view [](GLOSSARY.html) hierarchy'
  prefs: []
  type: TYPE_NORMAL
- en: 'FIXME: Strictly [](GLOSSARY.html) speaking, the [](GLOSSARY.html) controller
    [](GLOSSARY.html) does [](GLOSSARY.html) not [](GLOSSARY.html) need [](GLOSSARY.html)
    to [](GLOSSARY.html) know [](GLOSSARY.html) about [](GLOSSARY.html) the [](GLOSSARY.html)
    View: the [](GLOSSARY.html) controller [](GLOSSARY.html) receives [](GLOSSARY.html)
    events (from [](GLOSSARY.html) the [](GLOSSARY.html) user) and [](GLOSSARY.html)
    modifies [](GLOSSARY.html) the [](GLOSSARY.html) model, and [](GLOSSARY.html)
    the [](GLOSSARY.html) model syncs [](GLOSSARY.html) against [](GLOSSARY.html)
    the [](GLOSSARY.html) view. In [](GLOSSARY.html) practice. the [](GLOSSARY.html)
    user [](GLOSSARY.html) interacts [](GLOSSARY.html) with [](GLOSSARY.html) a [](GLOSSARY.html)
    view [](GLOSSARY.html) object, and [](GLOSSARY.html) the [](GLOSSARY.html) associated
    controller [](GLOSSARY.html) handles [](GLOSSARY.html) that [](GLOSSARY.html)
    operation.'
  prefs: []
  type: TYPE_NORMAL
- en: ^([1](#fn_1)) The [](GLOSSARY.html) more [](GLOSSARY.html) knowledgeable [](GLOSSARY.html)
    reader [](GLOSSARY.html) may [](GLOSSARY.html) recognize [](GLOSSARY.html) that
    [](GLOSSARY.html) this [](GLOSSARY.html) MVC [](GLOSSARY.html) model is [](GLOSSARY.html)
    not [](GLOSSARY.html) the [](GLOSSARY.html) original [](GLOSSARY.html) MVC [](GLOSSARY.html)
    as [](GLOSSARY.html) intended [](GLOSSARY.html) in [](GLOSSARY.html) its [](GLOSSARY.html)
    first [](GLOSSARY.html) implementation. We [](GLOSSARY.html) will [](GLOSSARY.html)
    go [](GLOSSARY.html) into [](GLOSSARY.html) detail [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) differences [](GLOSSARY.html) in [](GLOSSARY.html) later
    [](GLOSSARY.html) chapters. What [](GLOSSARY.html) is [](GLOSSARY.html) presented
    [](GLOSSARY.html) here [](GLOSSARY.html) is [](GLOSSARY.html) the [](GLOSSARY.html)
    modern [](GLOSSARY.html) reinterpretation [](GLOSSARY.html) of [](GLOSSARY.html)
    the original [](GLOSSARY.html) MVC, and [](GLOSSARY.html) the [](GLOSSARY.html)
    one [](GLOSSARY.html) most [](GLOSSARY.html) likely [](GLOSSARY.html) to [](GLOSSARY.html)
    be [](GLOSSARY.html) intended [](GLOSSARY.html) when [](GLOSSARY.html) talking
    about "MVC". To [](GLOSSARY.html) clarify [](GLOSSARY.html) the [](GLOSSARY.html)
    overloaded [](GLOSSARY.html) nomenclature, I [](GLOSSARY.html) chose [](GLOSSARY.html)
    to refer [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) original
    '70s [](GLOSSARY.html) design [](GLOSSARY.html) as "Reenskaug [](GLOSSARY.html)
    MVC", and [](GLOSSARY.html) its modern [](GLOSSARY.html) reinterpretation [](GLOSSARY.html)
    here [](GLOSSARY.html) presented [](GLOSSARY.html) as "Traditional [](GLOSSARY.html)
    MVC".
  prefs: []
  type: TYPE_NORMAL
- en: In depth analysis of MVC roles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An in-depth analysis of Traditional MVC roles and components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In [](GLOSSARY.html) the [](GLOSSARY.html) previous [](GLOSSARY.html) sections
    [](GLOSSARY.html) we [](GLOSSARY.html) performed [](GLOSSARY.html) a [](GLOSSARY.html)
    progressive [](GLOSSARY.html) refactoring [](GLOSSARY.html) from [](GLOSSARY.html)
    Smart-UI, to [](GLOSSARY.html) Document-View, and [](GLOSSARY.html) finally [](GLOSSARY.html)
    to [](GLOSSARY.html) Traditional [](GLOSSARY.html) MVC. This [](GLOSSARY.html)
    refactoring [](GLOSSARY.html) was [](GLOSSARY.html) driven by [](GLOSSARY.html)
    the [](GLOSSARY.html) need [](GLOSSARY.html) for [](GLOSSARY.html) additional
    [](GLOSSARY.html) flexibility, separation [](GLOSSARY.html) of [](GLOSSARY.html)
    concerns [](GLOSSARY.html) and clarification [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) different [](GLOSSARY.html) roles. MVC [](GLOSSARY.html)
    is, at [](GLOSSARY.html) its [](GLOSSARY.html) core, an [](GLOSSARY.html) exercise
    [](GLOSSARY.html) in [](GLOSSARY.html) data synchronization: the [](GLOSSARY.html)
    same [](GLOSSARY.html) data [](GLOSSARY.html) must [](GLOSSARY.html) be [](GLOSSARY.html)
    present [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html) GUI, the
    [](GLOSSARY.html) Model, and finally [](GLOSSARY.html) in [](GLOSSARY.html) any
    [](GLOSSARY.html) data [](GLOSSARY.html) source [](GLOSSARY.html) the [](GLOSSARY.html)
    Model [](GLOSSARY.html) may [](GLOSSARY.html) be [](GLOSSARY.html) using [](GLOSSARY.html)
    to [](GLOSSARY.html) access [](GLOSSARY.html) the [](GLOSSARY.html) data, for
    example [](GLOSSARY.html) a [](GLOSSARY.html) file [](GLOSSARY.html) or [](GLOSSARY.html)
    a [](GLOSSARY.html) SQL [](GLOSSARY.html) database. The [](GLOSSARY.html) MVC
    [](GLOSSARY.html) roles [](GLOSSARY.html) help [](GLOSSARY.html) us [](GLOSSARY.html)
    giving [](GLOSSARY.html) structure [](GLOSSARY.html) to [](GLOSSARY.html) the
    communication [](GLOSSARY.html) traffic [](GLOSSARY.html) needed [](GLOSSARY.html)
    by [](GLOSSARY.html) this [](GLOSSARY.html) synchronization [](GLOSSARY.html)
    ballet.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To [](GLOSSARY.html) summarize [](GLOSSARY.html) the [](GLOSSARY.html) scope
    [](GLOSSARY.html) of [](GLOSSARY.html) each [](GLOSSARY.html) role [](GLOSSARY.html)
    in [](GLOSSARY.html) Traditional [](GLOSSARY.html) MVC:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Model**: holds [](GLOSSARY.html) the [](GLOSSARY.html) application''s [](GLOSSARY.html)
    state [](GLOSSARY.html) and [](GLOSSARY.html) core [](GLOSSARY.html) functionality
    (Domain [](GLOSSARY.html) logic).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**View**: visually [](GLOSSARY.html) renders [](GLOSSARY.html) the [](GLOSSARY.html)
    Model [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) User (Presentation
    [](GLOSSARY.html) logic).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Controller**: mediates [](GLOSSARY.html) User [](GLOSSARY.html) actions [](GLOSSARY.html)
    on [](GLOSSARY.html) the [](GLOSSARY.html) GUI [](GLOSSARY.html) to [](GLOSSARY.html)
    drive [](GLOSSARY.html) modifications [](GLOSSARY.html) on [](GLOSSARY.html) the
    [](GLOSSARY.html) Model (Application [](GLOSSARY.html) logic).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Except [](GLOSSARY.html) for [](GLOSSARY.html) the [](GLOSSARY.html) most [](GLOSSARY.html)
    trivial [](GLOSSARY.html) applications, multiple [](GLOSSARY.html) classes [](GLOSSARY.html)
    can [](GLOSSARY.html) be [](GLOSSARY.html) active [](GLOSSARY.html) in [](GLOSSARY.html)
    the same [](GLOSSARY.html) role [](GLOSSARY.html) and [](GLOSSARY.html) are [](GLOSSARY.html)
    said [](GLOSSARY.html) to [](GLOSSARY.html) belong [](GLOSSARY.html) to [](GLOSSARY.html)
    a [](GLOSSARY.html) specific **layer** (i.e. Model [](GLOSSARY.html) layer, View
    layer [](GLOSSARY.html) and [](GLOSSARY.html) Controller [](GLOSSARY.html) layer).
    Objects [](GLOSSARY.html) from [](GLOSSARY.html) these [](GLOSSARY.html) layers
    [](GLOSSARY.html) are [](GLOSSARY.html) composed [](GLOSSARY.html) into [](GLOSSARY.html)
    MVC Triads [](GLOSSARY.html) that [](GLOSSARY.html) give [](GLOSSARY.html) rise
    [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) final [](GLOSSARY.html)
    application''s [](GLOSSARY.html) behavior [](GLOSSARY.html) and [](GLOSSARY.html)
    aspect. This design [](GLOSSARY.html) is [](GLOSSARY.html) blessed [](GLOSSARY.html)
    with [](GLOSSARY.html) technical [](GLOSSARY.html) advantages:'
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) clear [](GLOSSARY.html) separation [](GLOSSARY.html) of
    [](GLOSSARY.html) concerns [](GLOSSARY.html) between [](GLOSSARY.html) data [](GLOSSARY.html)
    storage, data [](GLOSSARY.html) handling, data visualization, and [](GLOSSARY.html)
    user [](GLOSSARY.html) interaction [](GLOSSARY.html) opens [](GLOSSARY.html) the
    [](GLOSSARY.html) possibility [](GLOSSARY.html) to [](GLOSSARY.html) be [](GLOSSARY.html)
    flexible in [](GLOSSARY.html) changing [](GLOSSARY.html) their [](GLOSSARY.html)
    implementation (for [](GLOSSARY.html) example, the [](GLOSSARY.html) layout [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) graphical interface).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) communication [](GLOSSARY.html) among [](GLOSSARY.html)
    objects [](GLOSSARY.html) is [](GLOSSARY.html) restricted [](GLOSSARY.html) on
    [](GLOSSARY.html) purpose [](GLOSSARY.html) and [](GLOSSARY.html) characterized
    by [](GLOSSARY.html) its [](GLOSSARY.html) triad [](GLOSSARY.html) interaction
    [](GLOSSARY.html) pattern, reducing [](GLOSSARY.html) complexity [](GLOSSARY.html)
    and [](GLOSSARY.html) side [](GLOSSARY.html) effects.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications [](GLOSSARY.html) that [](GLOSSARY.html) need [](GLOSSARY.html)
    to [](GLOSSARY.html) visualize [](GLOSSARY.html) the [](GLOSSARY.html) same [](GLOSSARY.html)
    data [](GLOSSARY.html) in [](GLOSSARY.html) different [](GLOSSARY.html) ways,
    or modify [](GLOSSARY.html) them [](GLOSSARY.html) from [](GLOSSARY.html) different
    [](GLOSSARY.html) sources (for [](GLOSSARY.html) example, a [](GLOSSARY.html)
    data [](GLOSSARY.html) table [](GLOSSARY.html) and [](GLOSSARY.html) a [](GLOSSARY.html)
    plot) can [](GLOSSARY.html) do [](GLOSSARY.html) so [](GLOSSARY.html) while [](GLOSSARY.html)
    keeping [](GLOSSARY.html) the [](GLOSSARY.html) information [](GLOSSARY.html)
    centralized [](GLOSSARY.html) and [](GLOSSARY.html) synchronized.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Separation [](GLOSSARY.html) of [](GLOSSARY.html) concerns [](GLOSSARY.html)
    leads [](GLOSSARY.html) to [](GLOSSARY.html) easier [](GLOSSARY.html) testability
    [](GLOSSARY.html) and [](GLOSSARY.html) thus [](GLOSSARY.html) higher reliability:
    each [](GLOSSARY.html) component [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    tested [](GLOSSARY.html) independently [](GLOSSARY.html) from [](GLOSSARY.html)
    the [](GLOSSARY.html) others, with [](GLOSSARY.html) their [](GLOSSARY.html) dependencies
    [](GLOSSARY.html) replaced [](GLOSSARY.html) by [](GLOSSARY.html) mock [](GLOSSARY.html)
    objects [](GLOSSARY.html) with [](GLOSSARY.html) predictable [](GLOSSARY.html)
    behavior.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Frameworks [](GLOSSARY.html) and [](GLOSSARY.html) GUI [](GLOSSARY.html) toolkits
    [](GLOSSARY.html) already [](GLOSSARY.html) provide [](GLOSSARY.html) MVC [](GLOSSARY.html)
    solutions [](GLOSSARY.html) as [](GLOSSARY.html) part [](GLOSSARY.html) of [](GLOSSARY.html)
    their design: you [](GLOSSARY.html) just [](GLOSSARY.html) have [](GLOSSARY.html)
    to “fill [](GLOSSARY.html) the [](GLOSSARY.html) blanks” to [](GLOSSARY.html)
    get [](GLOSSARY.html) a [](GLOSSARY.html) working [](GLOSSARY.html) application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Additionally, MVC [](GLOSSARY.html) accelerates [](GLOSSARY.html) development,
    improves [](GLOSSARY.html) readability [](GLOSSARY.html) and [](GLOSSARY.html)
    communication [](GLOSSARY.html) of [](GLOSSARY.html) intent:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Different [](GLOSSARY.html) teams [](GLOSSARY.html) with [](GLOSSARY.html)
    different [](GLOSSARY.html) skills [](GLOSSARY.html) can [](GLOSSARY.html) work
    [](GLOSSARY.html) in [](GLOSSARY.html) parallel [](GLOSSARY.html) on [](GLOSSARY.html)
    separate parts [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) application:
    frontend [](GLOSSARY.html) developers [](GLOSSARY.html) and [](GLOSSARY.html)
    GUI [](GLOSSARY.html) designers [](GLOSSARY.html) can [](GLOSSARY.html) work on
    [](GLOSSARY.html) the [](GLOSSARY.html) visual [](GLOSSARY.html) aspect, while
    [](GLOSSARY.html) backend [](GLOSSARY.html) developers [](GLOSSARY.html) and [](GLOSSARY.html)
    storage [](GLOSSARY.html) scaling [](GLOSSARY.html) specialists can [](GLOSSARY.html)
    work [](GLOSSARY.html) on [](GLOSSARY.html) low-level [](GLOSSARY.html) data [](GLOSSARY.html)
    representation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By [](GLOSSARY.html) defining [](GLOSSARY.html) clear [](GLOSSARY.html) interfaces
    [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) protagonists' classes,
    the [](GLOSSARY.html) code documents [](GLOSSARY.html) itself [](GLOSSARY.html)
    both [](GLOSSARY.html) through [](GLOSSARY.html) the [](GLOSSARY.html) API [](GLOSSARY.html)
    and [](GLOSSARY.html) their [](GLOSSARY.html) role [](GLOSSARY.html) within [](GLOSSARY.html)
    the [](GLOSSARY.html) MVC [](GLOSSARY.html) design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MVC [](GLOSSARY.html) provides [](GLOSSARY.html) a [](GLOSSARY.html) common
    [](GLOSSARY.html) vocabulary [](GLOSSARY.html) to [](GLOSSARY.html) talk [](GLOSSARY.html)
    about [](GLOSSARY.html) roles [](GLOSSARY.html) and [](GLOSSARY.html) responsibilities
    in [](GLOSSARY.html) design.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) large [](GLOSSARY.html) application [](GLOSSARY.html) is
    [](GLOSSARY.html) composed [](GLOSSARY.html) of [](GLOSSARY.html) many [](GLOSSARY.html)
    different [](GLOSSARY.html) triads, each [](GLOSSARY.html) ideally decoupled [](GLOSSARY.html)
    from [](GLOSSARY.html) the [](GLOSSARY.html) others, except [](GLOSSARY.html)
    at [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html) level.
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) view [](GLOSSARY.html) uses [](GLOSSARY.html) the [](GLOSSARY.html)
    controller [](GLOSSARY.html) as [](GLOSSARY.html) a "strategy" for [](GLOSSARY.html)
    its [](GLOSSARY.html) handling [](GLOSSARY.html) policy [](GLOSSARY.html) with
    [](GLOSSARY.html) respect to [](GLOSSARY.html) user [](GLOSSARY.html) events.
    While [](GLOSSARY.html) technically [](GLOSSARY.html) the [](GLOSSARY.html) view
    [](GLOSSARY.html) could [](GLOSSARY.html) change [](GLOSSARY.html) Controller
    [](GLOSSARY.html) in [](GLOSSARY.html) agreement to [](GLOSSARY.html) the [](GLOSSARY.html)
    Strategy [](GLOSSARY.html) pattern, in [](GLOSSARY.html) practice [](GLOSSARY.html)
    this [](GLOSSARY.html) never [](GLOSSARY.html) happens. View [](GLOSSARY.html)
    and [](GLOSSARY.html) controller [](GLOSSARY.html) are tightly [](GLOSSARY.html)
    connected [](GLOSSARY.html) and [](GLOSSARY.html) remain [](GLOSSARY.html) so
    [](GLOSSARY.html) for [](GLOSSARY.html) the [](GLOSSARY.html) whole [](GLOSSARY.html)
    lifetime [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) triad. Eventually,
    the [](GLOSSARY.html) controller [](GLOSSARY.html) is [](GLOSSARY.html) acted
    [](GLOSSARY.html) upon [](GLOSSARY.html) to [](GLOSSARY.html) modify [](GLOSSARY.html)
    its [](GLOSSARY.html) behavior, but [](GLOSSARY.html) it [](GLOSSARY.html) is
    [](GLOSSARY.html) never [](GLOSSARY.html) replaced [](GLOSSARY.html) altogether
    for [](GLOSSARY.html) a [](GLOSSARY.html) different [](GLOSSARY.html) one.
  prefs: []
  type: TYPE_NORMAL
- en: Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Entities [](GLOSSARY.html) taking [](GLOSSARY.html) the [](GLOSSARY.html) Model
    [](GLOSSARY.html) role [](GLOSSARY.html) are [](GLOSSARY.html) responsible [](GLOSSARY.html)
    for [](GLOSSARY.html) holding [](GLOSSARY.html) the [](GLOSSARY.html) running
    [](GLOSSARY.html) state and [](GLOSSARY.html) business [](GLOSSARY.html) functionality
    [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) application, either
    [](GLOSSARY.html) as [](GLOSSARY.html) a [](GLOSSARY.html) whole [](GLOSSARY.html)
    or [](GLOSSARY.html) as [](GLOSSARY.html) the [](GLOSSARY.html) part that [](GLOSSARY.html)
    is [](GLOSSARY.html) relevant [](GLOSSARY.html) to [](GLOSSARY.html) that [](GLOSSARY.html)
    specific [](GLOSSARY.html) MVC [](GLOSSARY.html) Triad, as [](GLOSSARY.html) either
    [](GLOSSARY.html) data (stored [](GLOSSARY.html) values) or activity (routines
    [](GLOSSARY.html) computing [](GLOSSARY.html) relevant [](GLOSSARY.html) data).
    They [](GLOSSARY.html) define [](GLOSSARY.html) the [](GLOSSARY.html) protagonists
    [](GLOSSARY.html) of the [](GLOSSARY.html) application's [](GLOSSARY.html) domain,
    their [](GLOSSARY.html) mechanism [](GLOSSARY.html) of [](GLOSSARY.html) operation
    [](GLOSSARY.html) and [](GLOSSARY.html) cooperation. Model objects [](GLOSSARY.html)
    can [](GLOSSARY.html) represent, for [](GLOSSARY.html) example,
  prefs: []
  type: TYPE_NORMAL
- en: An [](GLOSSARY.html) interface [](GLOSSARY.html) to [](GLOSSARY.html) a [](GLOSSARY.html)
    database, filesystem, low [](GLOSSARY.html) level [](GLOSSARY.html) driver, hardware
    [](GLOSSARY.html) machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access [](GLOSSARY.html) to [](GLOSSARY.html) a [](GLOSSARY.html) computational
    [](GLOSSARY.html) backend.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proxies [](GLOSSARY.html) for [](GLOSSARY.html) a [](GLOSSARY.html) remote [](GLOSSARY.html)
    service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) representation [](GLOSSARY.html) of [](GLOSSARY.html) business
    [](GLOSSARY.html) entities [](GLOSSARY.html) such [](GLOSSARY.html) as [](GLOSSARY.html)
    weather [](GLOSSARY.html) forecast [](GLOSSARY.html) in [](GLOSSARY.html) a specific
    [](GLOSSARY.html) area, people's [](GLOSSARY.html) details [](GLOSSARY.html) in
    [](GLOSSARY.html) a [](GLOSSARY.html) phonebook, tracks [](GLOSSARY.html) information
    [](GLOSSARY.html) in [](GLOSSARY.html) a music [](GLOSSARY.html) CD, student [](GLOSSARY.html)
    grades
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In [](GLOSSARY.html) some [](GLOSSARY.html) designs, graphical [](GLOSSARY.html)
    state [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) GUI, such [](GLOSSARY.html)
    as [](GLOSSARY.html) selected [](GLOSSARY.html) items, or the [](GLOSSARY.html)
    X-axis [](GLOSSARY.html) scale [](GLOSSARY.html) of [](GLOSSARY.html) a [](GLOSSARY.html)
    plot.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) running [](GLOSSARY.html) process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When [](GLOSSARY.html) implemented, a [](GLOSSARY.html) Model [](GLOSSARY.html)
    can [](GLOSSARY.html) go [](GLOSSARY.html) from [](GLOSSARY.html) a [](GLOSSARY.html)
    dictionary-like [](GLOSSARY.html) of [](GLOSSARY.html) key/value [](GLOSSARY.html)
    pairs [](GLOSSARY.html) to [](GLOSSARY.html) a complex [](GLOSSARY.html) network
    [](GLOSSARY.html) of [](GLOSSARY.html) objects [](GLOSSARY.html) with [](GLOSSARY.html)
    well [](GLOSSARY.html) defined [](GLOSSARY.html) interfaces. Regardless [](GLOSSARY.html)
    of [](GLOSSARY.html) the implementation, Models [](GLOSSARY.html) in [](GLOSSARY.html)
    Traditional [](GLOSSARY.html) MVC [](GLOSSARY.html) must [](GLOSSARY.html) provide
    [](GLOSSARY.html) the [](GLOSSARY.html) following [](GLOSSARY.html) three services:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Querying**: to [](GLOSSARY.html) inquire [](GLOSSARY.html) about [](GLOSSARY.html)
    their [](GLOSSARY.html) current [](GLOSSARY.html) state, either [](GLOSSARY.html)
    represented [](GLOSSARY.html) by high-level [](GLOSSARY.html) domain [](GLOSSARY.html)
    objects (Object [](GLOSSARY.html) Oriented [](GLOSSARY.html) approach), or [](GLOSSARY.html)
    through [](GLOSSARY.html) an [](GLOSSARY.html) IO layer [](GLOSSARY.html) of [](GLOSSARY.html)
    routines [](GLOSSARY.html) providing [](GLOSSARY.html) access [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) data (Data [](GLOSSARY.html) Oriented
    [](GLOSSARY.html) approach). In [](GLOSSARY.html) the Object [](GLOSSARY.html)
    Oriented [](GLOSSARY.html) approach, the [](GLOSSARY.html) Model [](GLOSSARY.html)
    objects [](GLOSSARY.html) generally [](GLOSSARY.html) represents [](GLOSSARY.html)
    an identifiable [](GLOSSARY.html) part [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) domain [](GLOSSARY.html) of [](GLOSSARY.html) your [](GLOSSARY.html)
    application, and [](GLOSSARY.html) provide [](GLOSSARY.html) access [](GLOSSARY.html)
    to [](GLOSSARY.html) data through [](GLOSSARY.html) a [](GLOSSARY.html) well-defined
    [](GLOSSARY.html) object-oriented [](GLOSSARY.html) interface. The [](GLOSSARY.html)
    Model [](GLOSSARY.html) can [](GLOSSARY.html) also [](GLOSSARY.html) perform computation,
    generally [](GLOSSARY.html) of [](GLOSSARY.html) information [](GLOSSARY.html)
    derived [](GLOSSARY.html) or [](GLOSSARY.html) associated [](GLOSSARY.html) to
    [](GLOSSARY.html) the [](GLOSSARY.html) main [](GLOSSARY.html) data [](GLOSSARY.html)
    it represents. In [](GLOSSARY.html) the [](GLOSSARY.html) Data [](GLOSSARY.html)
    Oriented [](GLOSSARY.html) approach, the [](GLOSSARY.html) routines “speak [](GLOSSARY.html)
    the [](GLOSSARY.html) domain language” and [](GLOSSARY.html) have [](GLOSSARY.html)
    high-level [](GLOSSARY.html) semantics [](GLOSSARY.html) to [](GLOSSARY.html)
    access [](GLOSSARY.html) the [](GLOSSARY.html) data, generally [](GLOSSARY.html)
    from [](GLOSSARY.html) a data [](GLOSSARY.html) storage (e.g. disk).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Altering**: to [](GLOSSARY.html) modify [](GLOSSARY.html) the [](GLOSSARY.html)
    current [](GLOSSARY.html) state. The [](GLOSSARY.html) Model [](GLOSSARY.html)
    interface [](GLOSSARY.html) provides [](GLOSSARY.html) set methods [](GLOSSARY.html)
    or [](GLOSSARY.html) routines [](GLOSSARY.html) to [](GLOSSARY.html) modify [](GLOSSARY.html)
    its [](GLOSSARY.html) state. The [](GLOSSARY.html) Model [](GLOSSARY.html) performs
    [](GLOSSARY.html) consistency checks [](GLOSSARY.html) about [](GLOSSARY.html)
    the [](GLOSSARY.html) data [](GLOSSARY.html) it [](GLOSSARY.html) handles, enforcing
    [](GLOSSARY.html) fundamental [](GLOSSARY.html) integrity: for [](GLOSSARY.html)
    example, it [](GLOSSARY.html) can [](GLOSSARY.html) raise [](GLOSSARY.html) an
    [](GLOSSARY.html) exception [](GLOSSARY.html) or [](GLOSSARY.html) ignore [](GLOSSARY.html)
    the [](GLOSSARY.html) passed [](GLOSSARY.html) data [](GLOSSARY.html) if [](GLOSSARY.html)
    a [](GLOSSARY.html) method setCurrentTemperature [](GLOSSARY.html) is [](GLOSSARY.html)
    called [](GLOSSARY.html) passing [](GLOSSARY.html) a [](GLOSSARY.html) string
    [](GLOSSARY.html) instead [](GLOSSARY.html) of [](GLOSSARY.html) a [](GLOSSARY.html)
    float, or [](GLOSSARY.html) a method [](GLOSSARY.html) setLength [](GLOSSARY.html)
    is [](GLOSSARY.html) called [](GLOSSARY.html) with [](GLOSSARY.html) a [](GLOSSARY.html)
    negative [](GLOSSARY.html) value.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Notifying**: to [](GLOSSARY.html) inform [](GLOSSARY.html) interested [](GLOSSARY.html)
    parties [](GLOSSARY.html) that [](GLOSSARY.html) a [](GLOSSARY.html) change [](GLOSSARY.html)
    has [](GLOSSARY.html) occurred [](GLOSSARY.html) in [](GLOSSARY.html) its state.
    The [](GLOSSARY.html) Model [](GLOSSARY.html) allows [](GLOSSARY.html) interested
    [](GLOSSARY.html) objects [](GLOSSARY.html) to [](GLOSSARY.html) register [](GLOSSARY.html)
    themselves [](GLOSSARY.html) for notifications. When [](GLOSSARY.html) a [](GLOSSARY.html)
    change [](GLOSSARY.html) occurs, these [](GLOSSARY.html) objects [](GLOSSARY.html)
    will [](GLOSSARY.html) be [](GLOSSARY.html) notified [](GLOSSARY.html) of [](GLOSSARY.html)
    this fact [](GLOSSARY.html) and [](GLOSSARY.html) can [](GLOSSARY.html) act [](GLOSSARY.html)
    accordingly, normally [](GLOSSARY.html) by [](GLOSSARY.html) synchronizing [](GLOSSARY.html)
    themselves [](GLOSSARY.html) against [](GLOSSARY.html) the Model''s [](GLOSSARY.html)
    new [](GLOSSARY.html) contents.'
  prefs: []
  type: TYPE_NORMAL
- en: Model [](GLOSSARY.html) objects [](GLOSSARY.html) should [](GLOSSARY.html) provide
    [](GLOSSARY.html) core [](GLOSSARY.html) application [](GLOSSARY.html) functionality
    [](GLOSSARY.html) through [](GLOSSARY.html) a [](GLOSSARY.html) clear [](GLOSSARY.html)
    and self-documented [](GLOSSARY.html) interface, exposing [](GLOSSARY.html) what
    [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html) done [](GLOSSARY.html)
    with [](GLOSSARY.html) the [](GLOSSARY.html) program's [](GLOSSARY.html) state.
    To [](GLOSSARY.html) operate, they [](GLOSSARY.html) can [](GLOSSARY.html) depend
    [](GLOSSARY.html) only [](GLOSSARY.html) on [](GLOSSARY.html) other [](GLOSSARY.html)
    Model [](GLOSSARY.html) objects [](GLOSSARY.html) or [](GLOSSARY.html) other [](GLOSSARY.html)
    components [](GLOSSARY.html) of the [](GLOSSARY.html) application [](GLOSSARY.html)
    that [](GLOSSARY.html) don't [](GLOSSARY.html) involve [](GLOSSARY.html) presentation,
    like [](GLOSSARY.html) an [](GLOSSARY.html) IO [](GLOSSARY.html) layer. The relationship
    [](GLOSSARY.html) among [](GLOSSARY.html) Model [](GLOSSARY.html) objects [](GLOSSARY.html)
    is [](GLOSSARY.html) that [](GLOSSARY.html) of [](GLOSSARY.html) a **strong [](GLOSSARY.html)
    dependency**.
  prefs: []
  type: TYPE_NORMAL
- en: On [](GLOSSARY.html) the [](GLOSSARY.html) other [](GLOSSARY.html) hand, a [](GLOSSARY.html)
    Model [](GLOSSARY.html) should [](GLOSSARY.html) not [](GLOSSARY.html) contain
    [](GLOSSARY.html) nor [](GLOSSARY.html) be [](GLOSSARY.html) dependent [](GLOSSARY.html)
    for [](GLOSSARY.html) its functionality [](GLOSSARY.html) on [](GLOSSARY.html)
    any [](GLOSSARY.html) graphical [](GLOSSARY.html) entity, nor [](GLOSSARY.html)
    contain [](GLOSSARY.html) formatting/visual [](GLOSSARY.html) logic [](GLOSSARY.html)
    for presentation (*e.g.* logic [](GLOSSARY.html) to [](GLOSSARY.html) make [](GLOSSARY.html)
    a [](GLOSSARY.html) negative [](GLOSSARY.html) value [](GLOSSARY.html) represented
    [](GLOSSARY.html) in [](GLOSSARY.html) red, or [](GLOSSARY.html) logic to [](GLOSSARY.html)
    present [](GLOSSARY.html) the [](GLOSSARY.html) date [](GLOSSARY.html) in [](GLOSSARY.html)
    US [](GLOSSARY.html) vs. ISO [](GLOSSARY.html) representation). Model [](GLOSSARY.html)
    objects [](GLOSSARY.html) should [](GLOSSARY.html) be completely [](GLOSSARY.html)
    unaware [](GLOSSARY.html) of [](GLOSSARY.html) how [](GLOSSARY.html) user [](GLOSSARY.html)
    interaction [](GLOSSARY.html) is [](GLOSSARY.html) handled [](GLOSSARY.html) by
    [](GLOSSARY.html) the [](GLOSSARY.html) application [](GLOSSARY.html) they live
    [](GLOSSARY.html) in, and [](GLOSSARY.html) should [](GLOSSARY.html) have [](GLOSSARY.html)
    a **weak [](GLOSSARY.html) dependency** toward [](GLOSSARY.html) its [](GLOSSARY.html)
    listeners [](GLOSSARY.html) via [](GLOSSARY.html) the notification [](GLOSSARY.html)
    generic [](GLOSSARY.html) interface.
  prefs: []
  type: TYPE_NORMAL
- en: For [](GLOSSARY.html) data [](GLOSSARY.html) modification, all [](GLOSSARY.html)
    the [](GLOSSARY.html) Model [](GLOSSARY.html) does [](GLOSSARY.html) is [](GLOSSARY.html)
    to [](GLOSSARY.html) process [](GLOSSARY.html) incoming [](GLOSSARY.html) requests
    [](GLOSSARY.html) in the [](GLOSSARY.html) form [](GLOSSARY.html) of [](GLOSSARY.html)
    method [](GLOSSARY.html) calls. Normally [](GLOSSARY.html) these [](GLOSSARY.html)
    requests [](GLOSSARY.html) are [](GLOSSARY.html) performed [](GLOSSARY.html) by
    Controllers, but [](GLOSSARY.html) a [](GLOSSARY.html) Model [](GLOSSARY.html)
    can [](GLOSSARY.html) also [](GLOSSARY.html) change [](GLOSSARY.html) due [](GLOSSARY.html)
    to [](GLOSSARY.html) requests [](GLOSSARY.html) from [](GLOSSARY.html) other [](GLOSSARY.html)
    subsystems (for [](GLOSSARY.html) example, a [](GLOSSARY.html) network [](GLOSSARY.html)
    layer), from [](GLOSSARY.html) another [](GLOSSARY.html) Model [](GLOSSARY.html)
    component [](GLOSSARY.html) or [](GLOSSARY.html) because [](GLOSSARY.html) it
    [](GLOSSARY.html) is monitoring [](GLOSSARY.html) a [](GLOSSARY.html) backend
    (e.g. a [](GLOSSARY.html) database, or [](GLOSSARY.html) a [](GLOSSARY.html) filesystem)
    and [](GLOSSARY.html) the [](GLOSSARY.html) monitored entity [](GLOSSARY.html)
    changes. The [](GLOSSARY.html) only [](GLOSSARY.html) entities [](GLOSSARY.html)
    never [](GLOSSARY.html) allowed [](GLOSSARY.html) to [](GLOSSARY.html) issue [](GLOSSARY.html)
    a [](GLOSSARY.html) change [](GLOSSARY.html) request [](GLOSSARY.html) to the
    [](GLOSSARY.html) Model [](GLOSSARY.html) are [](GLOSSARY.html) the [](GLOSSARY.html)
    Views.
  prefs: []
  type: TYPE_NORMAL
- en: 'The [](GLOSSARY.html) Model [](GLOSSARY.html) should [](GLOSSARY.html) enforce
    [](GLOSSARY.html) integrity [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    data, but [](GLOSSARY.html) it [](GLOSSARY.html) does [](GLOSSARY.html) not [](GLOSSARY.html)
    necessarily enforce [](GLOSSARY.html) validity: data [](GLOSSARY.html) might [](GLOSSARY.html)
    be [](GLOSSARY.html) correct (for [](GLOSSARY.html) example, integers [](GLOSSARY.html)
    for [](GLOSSARY.html) min/max values) but [](GLOSSARY.html) overall [](GLOSSARY.html)
    invalid [](GLOSSARY.html) for [](GLOSSARY.html) computation (for [](GLOSSARY.html)
    example, if [](GLOSSARY.html) min > max). While integrity [](GLOSSARY.html) should
    [](GLOSSARY.html) be [](GLOSSARY.html) enforced, storing [](GLOSSARY.html) invalid
    [](GLOSSARY.html) data [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    acceptable: depending on [](GLOSSARY.html) the [](GLOSSARY.html) application,
    invalid [](GLOSSARY.html) data [](GLOSSARY.html) may [](GLOSSARY.html) be [](GLOSSARY.html)
    marked [](GLOSSARY.html) as [](GLOSSARY.html) such [](GLOSSARY.html) in [](GLOSSARY.html)
    the [](GLOSSARY.html) Model [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html)
    part of [](GLOSSARY.html) the [](GLOSSARY.html) code [](GLOSSARY.html) that [](GLOSSARY.html)
    detects [](GLOSSARY.html) the [](GLOSSARY.html) invalidity, so [](GLOSSARY.html)
    that [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html) can [](GLOSSARY.html)
    represent [](GLOSSARY.html) it (for example, with [](GLOSSARY.html) a [](GLOSSARY.html)
    red [](GLOSSARY.html) font); An [](GLOSSARY.html) invalid [](GLOSSARY.html) state
    [](GLOSSARY.html) might [](GLOSSARY.html) be [](GLOSSARY.html) needed [](GLOSSARY.html)
    as [](GLOSSARY.html) a [](GLOSSARY.html) stepstone [](GLOSSARY.html) to reach
    [](GLOSSARY.html) a [](GLOSSARY.html) valid [](GLOSSARY.html) state [](GLOSSARY.html)
    at [](GLOSSARY.html) the [](GLOSSARY.html) end [](GLOSSARY.html) of [](GLOSSARY.html)
    a [](GLOSSARY.html) set [](GLOSSARY.html) of [](GLOSSARY.html) changes [](GLOSSARY.html)
    done [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html) User [](GLOSSARY.html)
    via [](GLOSSARY.html) the [](GLOSSARY.html) UI.'
  prefs: []
  type: TYPE_NORMAL
- en: 'With [](GLOSSARY.html) the [](GLOSSARY.html) above [](GLOSSARY.html) guidelines
    [](GLOSSARY.html) and [](GLOSSARY.html) restrictions [](GLOSSARY.html) in [](GLOSSARY.html)
    place, the [](GLOSSARY.html) resulting implementation [](GLOSSARY.html) is [](GLOSSARY.html)
    robust, flexible [](GLOSSARY.html) and [](GLOSSARY.html) testable: Views [](GLOSSARY.html)
    and [](GLOSSARY.html) Controllers [](GLOSSARY.html) are [](GLOSSARY.html) the
    components [](GLOSSARY.html) that [](GLOSSARY.html) change [](GLOSSARY.html) the
    [](GLOSSARY.html) most [](GLOSSARY.html) as [](GLOSSARY.html) the [](GLOSSARY.html)
    application [](GLOSSARY.html) evolves, and [](GLOSSARY.html) a [](GLOSSARY.html)
    Model [](GLOSSARY.html) that [](GLOSSARY.html) is agnostic [](GLOSSARY.html) to
    [](GLOSSARY.html) these [](GLOSSARY.html) changes [](GLOSSARY.html) is [](GLOSSARY.html)
    easier [](GLOSSARY.html) to [](GLOSSARY.html) code [](GLOSSARY.html) and [](GLOSSARY.html)
    maintain. The [](GLOSSARY.html) Model [](GLOSSARY.html) can [](GLOSSARY.html)
    be tested [](GLOSSARY.html) independently [](GLOSSARY.html) from [](GLOSSARY.html)
    the [](GLOSSARY.html) rest [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    application, and [](GLOSSARY.html) it [](GLOSSARY.html) opens [](GLOSSARY.html)
    itself [](GLOSSARY.html) to scripting, allowing [](GLOSSARY.html) the [](GLOSSARY.html)
    User [](GLOSSARY.html) to [](GLOSSARY.html) change [](GLOSSARY.html) the [](GLOSSARY.html)
    Model [](GLOSSARY.html) programmatically [](GLOSSARY.html) instead [](GLOSSARY.html)
    of through [](GLOSSARY.html) the [](GLOSSARY.html) GUI.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Not [](GLOSSARY.html) all [](GLOSSARY.html) Model [](GLOSSARY.html) objects
    [](GLOSSARY.html) are [](GLOSSARY.html) the [](GLOSSARY.html) same. We [](GLOSSARY.html)
    can [](GLOSSARY.html) generally [](GLOSSARY.html) distinguish [](GLOSSARY.html)
    three [](GLOSSARY.html) subclassifications of [](GLOSSARY.html) the [](GLOSSARY.html)
    Model [](GLOSSARY.html) layer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Keeping [](GLOSSARY.html) the [](GLOSSARY.html) application [](GLOSSARY.html)
    functionality [](GLOSSARY.html) fully [](GLOSSARY.html) supported [](GLOSSARY.html)
    by [](GLOSSARY.html) the [](GLOSSARY.html) model [](GLOSSARY.html) allows [](GLOSSARY.html)
    scriptability. The [](GLOSSARY.html) Model [](GLOSSARY.html) can [](GLOSSARY.html)
    be [](GLOSSARY.html) modified [](GLOSSARY.html) programmatically [](GLOSSARY.html)
    with [](GLOSSARY.html) a [](GLOSSARY.html) script [](GLOSSARY.html) that [](GLOSSARY.html)
    replaces [](GLOSSARY.html) the [](GLOSSARY.html) user [](GLOSSARY.html) interaction.
  prefs: []
  type: TYPE_NORMAL
- en: View
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The View
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We [](GLOSSARY.html) introduced [](GLOSSARY.html) the [](GLOSSARY.html) View
    [](GLOSSARY.html) as [](GLOSSARY.html) the [](GLOSSARY.html) component [](GLOSSARY.html)
    of [](GLOSSARY.html) our [](GLOSSARY.html) application [](GLOSSARY.html) whose
    [](GLOSSARY.html) role [](GLOSSARY.html) is [](GLOSSARY.html) to interact [](GLOSSARY.html)
    with [](GLOSSARY.html) the [](GLOSSARY.html) User, by [](GLOSSARY.html) accepting
    [](GLOSSARY.html) its [](GLOSSARY.html) input [](GLOSSARY.html) and [](GLOSSARY.html)
    showing [](GLOSSARY.html) the [](GLOSSARY.html) contents [](GLOSSARY.html) of
    the [](GLOSSARY.html) Model, and [](GLOSSARY.html) operates [](GLOSSARY.html)
    on [](GLOSSARY.html) it [](GLOSSARY.html) in **read-only**. Begin [](GLOSSARY.html)
    the [](GLOSSARY.html) face [](GLOSSARY.html) of [](GLOSSARY.html) the application,
    is [](GLOSSARY.html) also [](GLOSSARY.html) the [](GLOSSARY.html) one [](GLOSSARY.html)
    that [](GLOSSARY.html) is [](GLOSSARY.html) more [](GLOSSARY.html) likely [](GLOSSARY.html)
    to [](GLOSSARY.html) change [](GLOSSARY.html) and [](GLOSSARY.html) adapt, often
    under [](GLOSSARY.html) pressure [](GLOSSARY.html) of [](GLOSSARY.html) non-programming
    [](GLOSSARY.html) factors [](GLOSSARY.html) such [](GLOSSARY.html) as [](GLOSSARY.html)
    visual [](GLOSSARY.html) design [](GLOSSARY.html) and [](GLOSSARY.html) usability
    needs.
  prefs: []
  type: TYPE_NORMAL
- en: 'A [](GLOSSARY.html) View [](GLOSSARY.html) listens [](GLOSSARY.html) for [](GLOSSARY.html)
    Model [](GLOSSARY.html) notifications [](GLOSSARY.html) and [](GLOSSARY.html)
    responds [](GLOSSARY.html) by [](GLOSSARY.html) fetching [](GLOSSARY.html) and
    [](GLOSSARY.html) rendering the [](GLOSSARY.html) new [](GLOSSARY.html) state
    [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html) Model. This [](GLOSSARY.html)
    results [](GLOSSARY.html) in [](GLOSSARY.html) a [](GLOSSARY.html) strong [](GLOSSARY.html)
    dependency [](GLOSSARY.html) toward [](GLOSSARY.html) the Model: Views [](GLOSSARY.html)
    must [](GLOSSARY.html) access [](GLOSSARY.html) Model [](GLOSSARY.html) data,
    something [](GLOSSARY.html) that [](GLOSSARY.html) requires [](GLOSSARY.html)
    full [](GLOSSARY.html) dependency toward [](GLOSSARY.html) the [](GLOSSARY.html)
    Model''s [](GLOSSARY.html) interface [](GLOSSARY.html) and [](GLOSSARY.html) existence.'
  prefs: []
  type: TYPE_NORMAL
- en: Views [](GLOSSARY.html) are [](GLOSSARY.html) responsible [](GLOSSARY.html)
    for "purely [](GLOSSARY.html) GUI" intelligence, like [](GLOSSARY.html) handling
    [](GLOSSARY.html) behavior [](GLOSSARY.html) on resizing, repainting, data [](GLOSSARY.html)
    displaying [](GLOSSARY.html) and [](GLOSSARY.html) visual [](GLOSSARY.html) formatting.
    They [](GLOSSARY.html) are [](GLOSSARY.html) also [](GLOSSARY.html) in charge
    [](GLOSSARY.html) of [](GLOSSARY.html) handling [](GLOSSARY.html) primary [](GLOSSARY.html)
    events [](GLOSSARY.html) such [](GLOSSARY.html) as [](GLOSSARY.html) mouse [](GLOSSARY.html)
    clicks [](GLOSSARY.html) and [](GLOSSARY.html) keyboard [](GLOSSARY.html) key
    presses, but [](GLOSSARY.html) should [](GLOSSARY.html) not [](GLOSSARY.html)
    perform [](GLOSSARY.html) any [](GLOSSARY.html) modifying [](GLOSSARY.html) action
    [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html)
    as [](GLOSSARY.html) a consequence [](GLOSSARY.html) to [](GLOSSARY.html) these
    [](GLOSSARY.html) events. Instead, they [](GLOSSARY.html) should [](GLOSSARY.html)
    delegate [](GLOSSARY.html) this [](GLOSSARY.html) task [](GLOSSARY.html) to Controllers.
    They [](GLOSSARY.html) should [](GLOSSARY.html) also [](GLOSSARY.html) not [](GLOSSARY.html)
    perform [](GLOSSARY.html) any [](GLOSSARY.html) operation [](GLOSSARY.html) that
    [](GLOSSARY.html) is [](GLOSSARY.html) competence [](GLOSSARY.html) of the [](GLOSSARY.html)
    Model, nor [](GLOSSARY.html) store [](GLOSSARY.html) Model [](GLOSSARY.html) data,
    except [](GLOSSARY.html) for [](GLOSSARY.html) caching [](GLOSSARY.html) to [](GLOSSARY.html)
    improve [](GLOSSARY.html) rendering performance. Cached [](GLOSSARY.html) data
    [](GLOSSARY.html) are [](GLOSSARY.html) never [](GLOSSARY.html) authoritative,
    and [](GLOSSARY.html) should [](GLOSSARY.html) never [](GLOSSARY.html) be [](GLOSSARY.html)
    pushed back [](GLOSSARY.html) into [](GLOSSARY.html) the [](GLOSSARY.html) Model,
    or [](GLOSSARY.html) handed [](GLOSSARY.html) out [](GLOSSARY.html) to [](GLOSSARY.html)
    other [](GLOSSARY.html) objects.
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) View [](GLOSSARY.html) is [](GLOSSARY.html) generally [](GLOSSARY.html)
    composed [](GLOSSARY.html) out [](GLOSSARY.html) of **Widgets**, reusable [](GLOSSARY.html)
    visual [](GLOSSARY.html) building blocks [](GLOSSARY.html) provided [](GLOSSARY.html)
    by [](GLOSSARY.html) a [](GLOSSARY.html) Widget [](GLOSSARY.html) toolkit [](GLOSSARY.html)
    library. Examples [](GLOSSARY.html) of [](GLOSSARY.html) widgets [](GLOSSARY.html)
    are [](GLOSSARY.html) buttons, checkboxes, and [](GLOSSARY.html) menus. Complex
    [](GLOSSARY.html) interfaces [](GLOSSARY.html) are [](GLOSSARY.html) assembled
    [](GLOSSARY.html) from [](GLOSSARY.html) a [](GLOSSARY.html) collection [](GLOSSARY.html)
    of Widgets, hierarchically [](GLOSSARY.html) contained [](GLOSSARY.html) in [](GLOSSARY.html)
    dialogs, windows [](GLOSSARY.html) and [](GLOSSARY.html) other [](GLOSSARY.html)
    visual containers. This [](GLOSSARY.html) intrinsic [](GLOSSARY.html) hierarchic
    [](GLOSSARY.html) nesting [](GLOSSARY.html) must [](GLOSSARY.html) be [](GLOSSARY.html)
    factored [](GLOSSARY.html) in [](GLOSSARY.html) when [](GLOSSARY.html) we [](GLOSSARY.html)
    want to [](GLOSSARY.html) go [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html)
    basic [](GLOSSARY.html) MVC [](GLOSSARY.html) given [](GLOSSARY.html) in [](GLOSSARY.html)
    the [](GLOSSARY.html) previous [](GLOSSARY.html) section [](GLOSSARY.html) to
    [](GLOSSARY.html) a [](GLOSSARY.html) real-world [](GLOSSARY.html) MVC. The hierarchy
    [](GLOSSARY.html) is [](GLOSSARY.html) bidirectional, meaning [](GLOSSARY.html)
    that [](GLOSSARY.html) containers [](GLOSSARY.html) hold [](GLOSSARY.html) references
    [](GLOSSARY.html) to [](GLOSSARY.html) the contained [](GLOSSARY.html) widgets,
    and [](GLOSSARY.html) vice [](GLOSSARY.html) versa. Widget [](GLOSSARY.html) state
    [](GLOSSARY.html) is [](GLOSSARY.html) normally [](GLOSSARY.html) modified [](GLOSSARY.html)
    from client [](GLOSSARY.html) code [](GLOSSARY.html) via [](GLOSSARY.html) method
    [](GLOSSARY.html) calls, having [](GLOSSARY.html) no [](GLOSSARY.html) intelligence
    [](GLOSSARY.html) for [](GLOSSARY.html) receiving notifications [](GLOSSARY.html)
    from [](GLOSSARY.html) the [](GLOSSARY.html) Model. A [](GLOSSARY.html) View [](GLOSSARY.html)
    adds [](GLOSSARY.html) Model [](GLOSSARY.html) observing [](GLOSSARY.html) capabilities
    [](GLOSSARY.html) and rendering [](GLOSSARY.html) logic [](GLOSSARY.html) to [](GLOSSARY.html)
    a [](GLOSSARY.html) widget [](GLOSSARY.html) or [](GLOSSARY.html) groups [](GLOSSARY.html)
    of [](GLOSSARY.html) widgets, either [](GLOSSARY.html) through [](GLOSSARY.html)
    inheritance [](GLOSSARY.html) or composition.
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) view [](GLOSSARY.html) responds [](GLOSSARY.html) to [](GLOSSARY.html)
    Model [](GLOSSARY.html) notifications [](GLOSSARY.html) and [](GLOSSARY.html)
    repaint [](GLOSSARY.html) itself. This [](GLOSSARY.html) is, however, not the
    [](GLOSSARY.html) only [](GLOSSARY.html) reason [](GLOSSARY.html) why [](GLOSSARY.html)
    a [](GLOSSARY.html) View [](GLOSSARY.html) may [](GLOSSARY.html) have [](GLOSSARY.html)
    to [](GLOSSARY.html) inquire [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html)
    for [](GLOSSARY.html) data [](GLOSSARY.html) and [](GLOSSARY.html) repaint [](GLOSSARY.html)
    itself. The [](GLOSSARY.html) view [](GLOSSARY.html) may [](GLOSSARY.html) have
    [](GLOSSARY.html) to [](GLOSSARY.html) do [](GLOSSARY.html) so [](GLOSSARY.html)
    after [](GLOSSARY.html) a [](GLOSSARY.html) show [](GLOSSARY.html) event.
  prefs: []
  type: TYPE_NORMAL
- en: 'MVC [](GLOSSARY.html) is [](GLOSSARY.html) not [](GLOSSARY.html) only [](GLOSSARY.html)
    limited [](GLOSSARY.html) to [](GLOSSARY.html) GUI [](GLOSSARY.html) representations,
    and [](GLOSSARY.html) Views [](GLOSSARY.html) are [](GLOSSARY.html) not [](GLOSSARY.html)
    necessarily graphical [](GLOSSARY.html) objects. In [](GLOSSARY.html) fact, anything
    [](GLOSSARY.html) that [](GLOSSARY.html) can [](GLOSSARY.html) report [](GLOSSARY.html)
    information [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) User
    [](GLOSSARY.html) in some [](GLOSSARY.html) form [](GLOSSARY.html) can [](GLOSSARY.html)
    be [](GLOSSARY.html) classified [](GLOSSARY.html) as [](GLOSSARY.html) a [](GLOSSARY.html)
    View. For [](GLOSSARY.html) example, a [](GLOSSARY.html) musical [](GLOSSARY.html)
    notation [](GLOSSARY.html) Model can [](GLOSSARY.html) be [](GLOSSARY.html) observed
    [](GLOSSARY.html) by [](GLOSSARY.html) two [](GLOSSARY.html) Views: one [](GLOSSARY.html)
    that [](GLOSSARY.html) shows [](GLOSSARY.html) the [](GLOSSARY.html) musical [](GLOSSARY.html)
    notation [](GLOSSARY.html) on [](GLOSSARY.html) screen [](GLOSSARY.html) and another
    [](GLOSSARY.html) that [](GLOSSARY.html) plays [](GLOSSARY.html) it [](GLOSSARY.html)
    on [](GLOSSARY.html) the [](GLOSSARY.html) speakers.'
  prefs: []
  type: TYPE_NORMAL
- en: View [](GLOSSARY.html) can [](GLOSSARY.html) work [](GLOSSARY.html) also [](GLOSSARY.html)
    without [](GLOSSARY.html) a [](GLOSSARY.html) model, but [](GLOSSARY.html) of
    [](GLOSSARY.html) course [](GLOSSARY.html) it [](GLOSSARY.html) cannot [](GLOSSARY.html)
    display [](GLOSSARY.html) anything. It [](GLOSSARY.html) can [](GLOSSARY.html)
    accept [](GLOSSARY.html) another [](GLOSSARY.html) model. In [](GLOSSARY.html)
    that [](GLOSSARY.html) case, it [](GLOSSARY.html) will [](GLOSSARY.html) unregister
    [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html) previous one [](GLOSSARY.html)
    and [](GLOSSARY.html) register [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html)
    new [](GLOSSARY.html) one.
  prefs: []
  type: TYPE_NORMAL
- en: Controller
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Controller
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) last [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    components [](GLOSSARY.html) of [](GLOSSARY.html) MVC, the [](GLOSSARY.html) Controller,
    has [](GLOSSARY.html) the [](GLOSSARY.html) heavy [](GLOSSARY.html) duty [](GLOSSARY.html)
    task [](GLOSSARY.html) to make [](GLOSSARY.html) things [](GLOSSARY.html) happen
    [](GLOSSARY.html) by [](GLOSSARY.html) gathering, validating, and [](GLOSSARY.html)
    processing [](GLOSSARY.html) User [](GLOSSARY.html) events [](GLOSSARY.html) to
    modify [](GLOSSARY.html) the [](GLOSSARY.html) state [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) application. It [](GLOSSARY.html) operates [](GLOSSARY.html)
    on [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html) in **read-write**.
  prefs: []
  type: TYPE_NORMAL
- en: Controllers [](GLOSSARY.html) are [](GLOSSARY.html) associated [](GLOSSARY.html)
    to [](GLOSSARY.html) Views [](GLOSSARY.html) in [](GLOSSARY.html) a [](GLOSSARY.html)
    strong [](GLOSSARY.html) one-to-one [](GLOSSARY.html) mutual [](GLOSSARY.html)
    dependency, and [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html) described
    [](GLOSSARY.html) as [](GLOSSARY.html) the “business [](GLOSSARY.html) logic”
    of [](GLOSSARY.html) the [](GLOSSARY.html) View. When [](GLOSSARY.html) the [](GLOSSARY.html)
    View receives [](GLOSSARY.html) a [](GLOSSARY.html) primary [](GLOSSARY.html)
    event, it [](GLOSSARY.html) forwards [](GLOSSARY.html) execution [](GLOSSARY.html)
    to [](GLOSSARY.html) an [](GLOSSARY.html) appropriate [](GLOSSARY.html) Controller
    method, where [](GLOSSARY.html) appropriate [](GLOSSARY.html) logic [](GLOSSARY.html)
    modifies [](GLOSSARY.html) the [](GLOSSARY.html) state [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) application. Generally, the [](GLOSSARY.html) change [](GLOSSARY.html)
    is [](GLOSSARY.html) applied [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    Model, but [](GLOSSARY.html) depending [](GLOSSARY.html) on [](GLOSSARY.html)
    the [](GLOSSARY.html) problem [](GLOSSARY.html) the Controller [](GLOSSARY.html)
    can [](GLOSSARY.html) also [](GLOSSARY.html) directly [](GLOSSARY.html) modify
    [](GLOSSARY.html) the [](GLOSSARY.html) View, in [](GLOSSARY.html) particular
    [](GLOSSARY.html) when [](GLOSSARY.html) it [](GLOSSARY.html) changes visual [](GLOSSARY.html)
    state [](GLOSSARY.html) that [](GLOSSARY.html) is [](GLOSSARY.html) purely [](GLOSSARY.html)
    pertinent [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html)
    and [](GLOSSARY.html) is [](GLOSSARY.html) not [](GLOSSARY.html) represented [](GLOSSARY.html)
    in [](GLOSSARY.html) the Model. Examples [](GLOSSARY.html) of [](GLOSSARY.html)
    these [](GLOSSARY.html) cases [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    enabling/disabling [](GLOSSARY.html) some [](GLOSSARY.html) widget, scaling/zooming
    [](GLOSSARY.html) of [](GLOSSARY.html) a [](GLOSSARY.html) plot [](GLOSSARY.html)
    area, reordering [](GLOSSARY.html) of [](GLOSSARY.html) menu [](GLOSSARY.html)
    entries [](GLOSSARY.html) and [](GLOSSARY.html) so [](GLOSSARY.html) on.
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) Controller [](GLOSSARY.html) generally [](GLOSSARY.html)
    hosts [](GLOSSARY.html) a [](GLOSSARY.html) reference [](GLOSSARY.html) to [](GLOSSARY.html)
    its [](GLOSSARY.html) View [](GLOSSARY.html) and [](GLOSSARY.html) the [](GLOSSARY.html)
    Models [](GLOSSARY.html) it modifies, and [](GLOSSARY.html) depends [](GLOSSARY.html)
    strongly [](GLOSSARY.html) on [](GLOSSARY.html) their [](GLOSSARY.html) interfaces
    [](GLOSSARY.html) and [](GLOSSARY.html) presentation [](GLOSSARY.html) semantics,
    at [](GLOSSARY.html) least [](GLOSSARY.html) to [](GLOSSARY.html) a [](GLOSSARY.html)
    degree. It [](GLOSSARY.html) may [](GLOSSARY.html) act [](GLOSSARY.html) on [](GLOSSARY.html)
    Models [](GLOSSARY.html) that [](GLOSSARY.html) are [](GLOSSARY.html) not [](GLOSSARY.html)
    the [](GLOSSARY.html) ones [](GLOSSARY.html) observed [](GLOSSARY.html) by the
    [](GLOSSARY.html) associated [](GLOSSARY.html) View. Like [](GLOSSARY.html) Views,
    a [](GLOSSARY.html) Controller [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    a [](GLOSSARY.html) listener [](GLOSSARY.html) for [](GLOSSARY.html) Model notifications,
    when [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html) state [](GLOSSARY.html)
    influences [](GLOSSARY.html) how [](GLOSSARY.html) the [](GLOSSARY.html) Controller
    [](GLOSSARY.html) interprets the [](GLOSSARY.html) User [](GLOSSARY.html) events.
  prefs: []
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) controller [](GLOSSARY.html) can [](GLOSSARY.html) act
    [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) model, or [](GLOSSARY.html)
    directly [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) view, if
    [](GLOSSARY.html) it [](GLOSSARY.html) needs [](GLOSSARY.html) to [](GLOSSARY.html)
    change the [](GLOSSARY.html) visual [](GLOSSARY.html) representation [](GLOSSARY.html)
    without [](GLOSSARY.html) involving [](GLOSSARY.html) a [](GLOSSARY.html) change
    [](GLOSSARY.html) in [](GLOSSARY.html) data.
  prefs: []
  type: TYPE_NORMAL
- en: specify [](GLOSSARY.html) that [](GLOSSARY.html) it's *not* View == read-only
    [](GLOSSARY.html) widget [](GLOSSARY.html) vs [](GLOSSARY.html) Controller ==
    read-write [](GLOSSARY.html) widget.
  prefs: []
  type: TYPE_NORMAL
- en: Forces outdating traditional MVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Forces outdating Traditional MVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) Traditional [](GLOSSARY.html) MVC [](GLOSSARY.html) design
    [](GLOSSARY.html) presented [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html)
    previous [](GLOSSARY.html) section [](GLOSSARY.html) is [](GLOSSARY.html) a [](GLOSSARY.html)
    modern reinterpretation [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    MVC [](GLOSSARY.html) as [](GLOSSARY.html) described [](GLOSSARY.html) by [](GLOSSARY.html)
    Reenskaug [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html) 70s. The
    [](GLOSSARY.html) original design [](GLOSSARY.html) was [](GLOSSARY.html) developed
    [](GLOSSARY.html) under [](GLOSSARY.html) different [](GLOSSARY.html) constraints,
    and [](GLOSSARY.html) could [](GLOSSARY.html) not [](GLOSSARY.html) take [](GLOSSARY.html)
    advantage of [](GLOSSARY.html) the [](GLOSSARY.html) modern [](GLOSSARY.html)
    solutions [](GLOSSARY.html) we [](GLOSSARY.html) enjoy [](GLOSSARY.html) today.
  prefs: []
  type: TYPE_NORMAL
- en: For [](GLOSSARY.html) example, Reenskaug's [](GLOSSARY.html) Controller [](GLOSSARY.html)
    handled [](GLOSSARY.html) low [](GLOSSARY.html) level [](GLOSSARY.html) events,
    positioned [](GLOSSARY.html) the Views [](GLOSSARY.html) on [](GLOSSARY.html)
    the [](GLOSSARY.html) screen, and [](GLOSSARY.html) kept [](GLOSSARY.html) track
    [](GLOSSARY.html) of [](GLOSSARY.html) which [](GLOSSARY.html) View [](GLOSSARY.html)
    had [](GLOSSARY.html) focus [](GLOSSARY.html) and [](GLOSSARY.html) which Controller
    [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html) application [](GLOSSARY.html)
    was [](GLOSSARY.html) in [](GLOSSARY.html) charge [](GLOSSARY.html) of [](GLOSSARY.html)
    handling [](GLOSSARY.html) the [](GLOSSARY.html) events.
  prefs: []
  type: TYPE_NORMAL
- en: 'Modern [](GLOSSARY.html) environments, compared [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) ones [](GLOSSARY.html) where [](GLOSSARY.html) Reenskaug
    [](GLOSSARY.html) MVC [](GLOSSARY.html) was [](GLOSSARY.html) developed first,
    have [](GLOSSARY.html) improved [](GLOSSARY.html) on [](GLOSSARY.html) a [](GLOSSARY.html)
    lot [](GLOSSARY.html) of [](GLOSSARY.html) boilerplate [](GLOSSARY.html) tasks:
    modern [](GLOSSARY.html) Views [](GLOSSARY.html) are [](GLOSSARY.html) composed
    of [](GLOSSARY.html) widgets [](GLOSSARY.html) provided [](GLOSSARY.html) by [](GLOSSARY.html)
    either [](GLOSSARY.html) a [](GLOSSARY.html) GUI [](GLOSSARY.html) Toolkit [](GLOSSARY.html)
    or [](GLOSSARY.html) the [](GLOSSARY.html) operating [](GLOSSARY.html) system''s
    framework. These [](GLOSSARY.html) widgets [](GLOSSARY.html) acts [](GLOSSARY.html)
    both [](GLOSSARY.html) as [](GLOSSARY.html) Views [](GLOSSARY.html) and [](GLOSSARY.html)
    as [](GLOSSARY.html) Controllers [](GLOSSARY.html) as [](GLOSSARY.html) originally
    defined, because [](GLOSSARY.html) they [](GLOSSARY.html) can [](GLOSSARY.html)
    display [](GLOSSARY.html) and [](GLOSSARY.html) position [](GLOSSARY.html) themselves,
    manage [](GLOSSARY.html) focus, receive [](GLOSSARY.html) low-level [](GLOSSARY.html)
    events [](GLOSSARY.html) and [](GLOSSARY.html) convert [](GLOSSARY.html) them
    [](GLOSSARY.html) to [](GLOSSARY.html) higher [](GLOSSARY.html) level [](GLOSSARY.html)
    behavior: a [](GLOSSARY.html) modern LineEdit [](GLOSSARY.html) widget [](GLOSSARY.html)
    handles [](GLOSSARY.html) keyboard [](GLOSSARY.html) input [](GLOSSARY.html) to
    [](GLOSSARY.html) write [](GLOSSARY.html) text [](GLOSSARY.html) on [](GLOSSARY.html)
    the [](GLOSSARY.html) screen [](GLOSSARY.html) without [](GLOSSARY.html) any additional
    [](GLOSSARY.html) support. An [](GLOSSARY.html) application-level [](GLOSSARY.html)
    event [](GLOSSARY.html) loop [](GLOSSARY.html) handles [](GLOSSARY.html) events
    [](GLOSSARY.html) and [](GLOSSARY.html) dispatches them [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) appropriate [](GLOSSARY.html) receiver.'
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) result [](GLOSSARY.html) of [](GLOSSARY.html) this [](GLOSSARY.html)
    modernization [](GLOSSARY.html) is [](GLOSSARY.html) a [](GLOSSARY.html) reduction
    [](GLOSSARY.html) of [](GLOSSARY.html) responsibility [](GLOSSARY.html) of [](GLOSSARY.html)
    the Controller, and [](GLOSSARY.html) its [](GLOSSARY.html) role [](GLOSSARY.html)
    has [](GLOSSARY.html) been [](GLOSSARY.html) adapted [](GLOSSARY.html) with [](GLOSSARY.html)
    the [](GLOSSARY.html) times. New [](GLOSSARY.html) interpretations of [](GLOSSARY.html)
    the [](GLOSSARY.html) old [](GLOSSARY.html) pattern [](GLOSSARY.html) emerged,
    and [](GLOSSARY.html) the [](GLOSSARY.html) Traditional [](GLOSSARY.html) MVC
    [](GLOSSARY.html) introduced [](GLOSSARY.html) earlier [](GLOSSARY.html) is [](GLOSSARY.html)
    an example [](GLOSSARY.html) of [](GLOSSARY.html) this [](GLOSSARY.html) adaptation.
    The [](GLOSSARY.html) Controller [](GLOSSARY.html) now [](GLOSSARY.html) handles
    [](GLOSSARY.html) high-level [](GLOSSARY.html) events [](GLOSSARY.html) from the
    [](GLOSSARY.html) View, rather [](GLOSSARY.html) than [](GLOSSARY.html) raw, low
    [](GLOSSARY.html) level [](GLOSSARY.html) events, and [](GLOSSARY.html) can [](GLOSSARY.html)
    eventually [](GLOSSARY.html) take [](GLOSSARY.html) the [](GLOSSARY.html) role
    of [](GLOSSARY.html) mutator [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    Model.
  prefs: []
  type: TYPE_NORMAL
- en: On [](GLOSSARY.html) the [](GLOSSARY.html) other [](GLOSSARY.html) hand, new
    [](GLOSSARY.html) needs [](GLOSSARY.html) emerged [](GLOSSARY.html) from [](GLOSSARY.html)
    more [](GLOSSARY.html) complex [](GLOSSARY.html) and [](GLOSSARY.html) communicative
    [](GLOSSARY.html) GUIs, underlying [](GLOSSARY.html) toolkits, and [](GLOSSARY.html)
    new [](GLOSSARY.html) architectures (i.e. the [](GLOSSARY.html) web) making [](GLOSSARY.html)
    Traditional MVC [](GLOSSARY.html) sometimes [](GLOSSARY.html) too [](GLOSSARY.html)
    inflexible, sometimes [](GLOSSARY.html) too [](GLOSSARY.html) limited, and [](GLOSSARY.html)
    sometimes [](GLOSSARY.html) overdesigned for [](GLOSSARY.html) the [](GLOSSARY.html)
    specific [](GLOSSARY.html) task [](GLOSSARY.html) at [](GLOSSARY.html) hand.
  prefs: []
  type: TYPE_NORMAL
- en: In [](GLOSSARY.html) the [](GLOSSARY.html) next [](GLOSSARY.html) chapter, we
    [](GLOSSARY.html) will [](GLOSSARY.html) examine [](GLOSSARY.html) a [](GLOSSARY.html)
    palette [](GLOSSARY.html) of [](GLOSSARY.html) variations [](GLOSSARY.html) of
    [](GLOSSARY.html) the [](GLOSSARY.html) basic building [](GLOSSARY.html) blocks
    [](GLOSSARY.html) of [](GLOSSARY.html) MVC [](GLOSSARY.html) to [](GLOSSARY.html)
    provide [](GLOSSARY.html) development [](GLOSSARY.html) strategies [](GLOSSARY.html)
    for [](GLOSSARY.html) common [](GLOSSARY.html) GUI development [](GLOSSARY.html)
    needs.
  prefs: []
  type: TYPE_NORMAL
- en: 'FIXME: off-the-shelf [](GLOSSARY.html) widget [](GLOSSARY.html) sets. Reimplement
    [](GLOSSARY.html) widgets [](GLOSSARY.html) to [](GLOSSARY.html) define [](GLOSSARY.html)
    methods [](GLOSSARY.html) for [](GLOSSARY.html) events [](GLOSSARY.html) is [](GLOSSARY.html)
    annoying. proliferates [](GLOSSARY.html) classes. Controller [](GLOSSARY.html)
    was [](GLOSSARY.html) in [](GLOSSARY.html) charge [](GLOSSARY.html) of [](GLOSSARY.html)
    deciding [](GLOSSARY.html) when [](GLOSSARY.html) to [](GLOSSARY.html) relinquish
    [](GLOSSARY.html) control [](GLOSSARY.html) to [](GLOSSARY.html) other [](GLOSSARY.html)
    controllers. The [](GLOSSARY.html) active [](GLOSSARY.html) controller [](GLOSSARY.html)
    was [](GLOSSARY.html) the [](GLOSSARY.html) one [](GLOSSARY.html) handling [](GLOSSARY.html)
    events. Modern [](GLOSSARY.html) widgets [](GLOSSARY.html) handle [](GLOSSARY.html)
    damage [](GLOSSARY.html) control (e.g. due [](GLOSSARY.html) to [](GLOSSARY.html)
    hiding/showing) by [](GLOSSARY.html) themselves. The [](GLOSSARY.html) view is
    [](GLOSSARY.html) only [](GLOSSARY.html) left [](GLOSSARY.html) the [](GLOSSARY.html)
    task [](GLOSSARY.html) of [](GLOSSARY.html) updating [](GLOSSARY.html) against
    [](GLOSSARY.html) a [](GLOSSARY.html) modified [](GLOSSARY.html) model. The [](GLOSSARY.html)
    toolkit [](GLOSSARY.html) takes [](GLOSSARY.html) care [](GLOSSARY.html) of keeping
    [](GLOSSARY.html) the [](GLOSSARY.html) visual [](GLOSSARY.html) correct.'
  prefs: []
  type: TYPE_NORMAL
- en: Explain [](GLOSSARY.html) widget [](GLOSSARY.html) as [](GLOSSARY.html) a [](GLOSSARY.html)
    UI [](GLOSSARY.html) element [](GLOSSARY.html) which [](GLOSSARY.html) has [](GLOSSARY.html)
    no [](GLOSSARY.html) connection [](GLOSSARY.html) to [](GLOSSARY.html) a [](GLOSSARY.html)
    model.
  prefs: []
  type: TYPE_NORMAL
