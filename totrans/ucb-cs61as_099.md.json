["```\n> Brian \n```", "```\n> (define bagel (instantiate thing 'bagel)) \n```", "```\n> (can-go Telegraph-Ave 'east (instantiate place 'Peoples-Park))\n\n;;; assume Brian is at Telegraph\n> (ask Brian 'go 'east) \n```", "```\n> (ask Brian 'place)\n\n> (let ((where (ask Brian 'place)))\n       (ask where 'name))\n\n> (ask Peoples-park 'appear bagel) \n```", "```\n> (eq? (ask Telegraph-Ave 'look-in 'east) (ask Brian 'place))\n\n> (eq? (ask Brian 'place) 'Peoples-Park)\n\n> (eq? (ask (ask Brian 'place) 'name) 'Peoples-Park) \n```", "```\n> (define computer (instantiate thing 'Durer)) \n```", "```\n(ask 61a-lab 'appear computer) \n```", "```\n(ask 61a-lab 'appear Durer) \n```", "```\n(ask 61a-lab 'appear 'Durer) \n```", "```\n(define (name obj) (ask obj 'name))\n(define (inventory obj)\n    (if (person? obj)\n        (map name (ask obj 'possessions))\n        (map name (ask obj 'things)))) \n```"]