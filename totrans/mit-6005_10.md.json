["```\n/**\n * Find the most common word in a string.\n * @param text string containing zero or more words, where a word\n *     is a string of alphanumeric characters bounded by nonalphanumerics.\n * @return a word that occurs maximally often in text, ignoring alphabetic case.\n */\npublic static String mostCommonWord(String text) {\n    ...\n}\n```", "```\n/**\n * Find the most common word in a string.\n * @param text string containing zero or more words, \n *     where a word is a string of alphanumeric \n *     characters bounded by nonalphanumerics.\n * @return a word that occurs maximally often in text, \n *         ignoring alphabetic case.\n */\npublic static String mostCommonWord(String text) {\n    ... words = splitIntoWords(text); ...\n    ... frequencies = countOccurrences(words); ...\n    ... winner = findMostCommon(frequencies); ...\n    ... return winner;\n}\n\n/** Split a string into words ... */\nprivate static List<String> splitIntoWords(String text) {\n    ...\n}\n\n/** Count how many times each word appears ... */\nprivate static Map<String,Integer> countOccurrences(List<String> words) {\n    ...\n}\n\n/** Find the word with the highest frequency count ... */\nprivate static String findMostCommon(Map<String,Integer> frequencies) {\n    ...\n}\n```", "```\n/**\n * Solves quadratic equation ax^2 + bx + c = 0.\n * \n * @param a quadratic coefficient, requires a != 0\n * @param b linear coefficient\n * @param c constant term\n * @return a list of the real roots of the equation\n */\npublic static List<Double> quadraticRoots(int a, int b, int c) { ... }\n```"]