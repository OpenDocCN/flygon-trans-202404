- en: Advanced MVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Advanced MVC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Until [](GLOSSARY.html) now, the [](GLOSSARY.html) main [](GLOSSARY.html) focus
    [](GLOSSARY.html) was [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html)
    basic [](GLOSSARY.html) patterns [](GLOSSARY.html) of [](GLOSSARY.html) MVC. In
    [](GLOSSARY.html) this [](GLOSSARY.html) chapter, we [](GLOSSARY.html) will [](GLOSSARY.html)
    observe [](GLOSSARY.html) the [](GLOSSARY.html) broader [](GLOSSARY.html) picture
    [](GLOSSARY.html) of [](GLOSSARY.html) a [](GLOSSARY.html) MVC [](GLOSSARY.html)
    application [](GLOSSARY.html) and [](GLOSSARY.html) how [](GLOSSARY.html) the
    [](GLOSSARY.html) patterns [](GLOSSARY.html) interact with [](GLOSSARY.html) the
    [](GLOSSARY.html) real [](GLOSSARY.html) world.
  prefs: []
  type: TYPE_NORMAL
- en: '[Model persistence](model_persistence.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MVC Testing](mvc_testing.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Notification Granularity](notification_granularity.md)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Event Driven programming](event_driven_programming.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Thrashing prevention](trashing_prevention.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Validation](validation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Lapsed listener problem](lapsed_listener_problem.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Publisher Subscriber](publisher_subscriber.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Model Distribution](model_distribution.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Multithreading](multithreading.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Notification looping prevention](28_notification_looping_prevention.html):
    Prevent [](GLOSSARY.html) recursive [](GLOSSARY.html) notification [](GLOSSARY.html)
    events [](GLOSSARY.html) to [](GLOSSARY.html) propagate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Delayed Model](40_delayed_model.html): Neutralizes [](GLOSSARY.html) fast
    [](GLOSSARY.html) notifications [](GLOSSARY.html) through [](GLOSSARY.html) a
    [](GLOSSARY.html) timeout.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Throttling](41_throttling.html): Neutralizes [](GLOSSARY.html) fast [](GLOSSARY.html)
    notifications, but [](GLOSSARY.html) issue [](GLOSSARY.html) a [](GLOSSARY.html)
    change [](GLOSSARY.html) immediately.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Model persistence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Model persistence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Domain [](GLOSSARY.html) Model [](GLOSSARY.html) objects
  prefs: []
  type: TYPE_NORMAL
- en: 'In [](GLOSSARY.html) some [](GLOSSARY.html) cases, the [](GLOSSARY.html) model
    [](GLOSSARY.html) or [](GLOSSARY.html) part [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) model [](GLOSSARY.html) must [](GLOSSARY.html) be [](GLOSSARY.html)
    made [](GLOSSARY.html) persistent (for example, to [](GLOSSARY.html) disk, or
    [](GLOSSARY.html) to [](GLOSSARY.html) a [](GLOSSARY.html) database) to [](GLOSSARY.html)
    be [](GLOSSARY.html) restored [](GLOSSARY.html) at [](GLOSSARY.html) a [](GLOSSARY.html)
    later [](GLOSSARY.html) stage. Persistency [](GLOSSARY.html) layer: sometimes
    [](GLOSSARY.html) it [](GLOSSARY.html) is [](GLOSSARY.html) considered [](GLOSSARY.html)
    part [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) Model, but [](GLOSSARY.html)
    not [](GLOSSARY.html) necessarily'
  prefs: []
  type: TYPE_NORMAL
- en: Which [](GLOSSARY.html) component [](GLOSSARY.html) should [](GLOSSARY.html)
    be responsible [](GLOSSARY.html) for [](GLOSSARY.html) the [](GLOSSARY.html) persistence?
    The [](GLOSSARY.html) most [](GLOSSARY.html) natural [](GLOSSARY.html) strategy
    [](GLOSSARY.html) is [](GLOSSARY.html) to [](GLOSSARY.html) let [](GLOSSARY.html)
    the [](GLOSSARY.html) model know [](GLOSSARY.html) how [](GLOSSARY.html) to [](GLOSSARY.html)
    store [](GLOSSARY.html) and [](GLOSSARY.html) retrieve [](GLOSSARY.html) itself
    [](GLOSSARY.html) from [](GLOSSARY.html) disk [](GLOSSARY.html) or [](GLOSSARY.html)
    database. This [](GLOSSARY.html) is [](GLOSSARY.html) a [](GLOSSARY.html) popular
    solution [](GLOSSARY.html) and [](GLOSSARY.html) goes [](GLOSSARY.html) by [](GLOSSARY.html)
    the [](GLOSSARY.html) name [](GLOSSARY.html) of "ActiveRecord". It [](GLOSSARY.html)
    is [](GLOSSARY.html) simple [](GLOSSARY.html) to [](GLOSSARY.html) use [](GLOSSARY.html)
    and understand, relatively [](GLOSSARY.html) flexible [](GLOSSARY.html) and [](GLOSSARY.html)
    intuitive, but [](GLOSSARY.html) it's [](GLOSSARY.html) not [](GLOSSARY.html)
    without [](GLOSSARY.html) limitation.
  prefs: []
  type: TYPE_NORMAL
- en: 'The [](GLOSSARY.html) first, and [](GLOSSARY.html) biggest [](GLOSSARY.html)
    limitation [](GLOSSARY.html) is [](GLOSSARY.html) that [](GLOSSARY.html) it [](GLOSSARY.html)
    favors [](GLOSSARY.html) strong [](GLOSSARY.html) coupling [](GLOSSARY.html) between
    [](GLOSSARY.html) the model [](GLOSSARY.html) and [](GLOSSARY.html) the [](GLOSSARY.html)
    IO [](GLOSSARY.html) strategy: abandoning [](GLOSSARY.html) the [](GLOSSARY.html)
    local [](GLOSSARY.html) disk [](GLOSSARY.html) storage [](GLOSSARY.html) in [](GLOSSARY.html)
    favor [](GLOSSARY.html) of [](GLOSSARY.html) a remote [](GLOSSARY.html) database
    [](GLOSSARY.html) will [](GLOSSARY.html) force [](GLOSSARY.html) us [](GLOSSARY.html)
    to [](GLOSSARY.html) reimplement [](GLOSSARY.html) the [](GLOSSARY.html) IO [](GLOSSARY.html)
    strategy [](GLOSSARY.html) of [](GLOSSARY.html) all [](GLOSSARY.html) the [](GLOSSARY.html)
    model objects;'
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) second [](GLOSSARY.html) problem [](GLOSSARY.html) is [](GLOSSARY.html)
    that [](GLOSSARY.html) Model [](GLOSSARY.html) objects [](GLOSSARY.html) lifetime
    [](GLOSSARY.html) is [](GLOSSARY.html) related [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) storage backend. This [](GLOSSARY.html) makes [](GLOSSARY.html)
    testing [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html) much [](GLOSSARY.html)
    harder, because [](GLOSSARY.html) the [](GLOSSARY.html) storage [](GLOSSARY.html)
    backend must [](GLOSSARY.html) be [](GLOSSARY.html) fully [](GLOSSARY.html) functional,
    or [](GLOSSARY.html) mocked;
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) final [](GLOSSARY.html) problem [](GLOSSARY.html) of [](GLOSSARY.html)
    this [](GLOSSARY.html) approach [](GLOSSARY.html) is [](GLOSSARY.html) that, if
    [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html) is [](GLOSSARY.html)
    fully [](GLOSSARY.html) in [](GLOSSARY.html) control [](GLOSSARY.html) of its
    [](GLOSSARY.html) persistence [](GLOSSARY.html) strategy, the [](GLOSSARY.html)
    client [](GLOSSARY.html) code [](GLOSSARY.html) cannot [](GLOSSARY.html) decide
    [](GLOSSARY.html) differently, for example, if [](GLOSSARY.html) it [](GLOSSARY.html)
    wants [](GLOSSARY.html) to store [](GLOSSARY.html) the [](GLOSSARY.html) model
    [](GLOSSARY.html) object [](GLOSSARY.html) somewhere [](GLOSSARY.html) else.
  prefs: []
  type: TYPE_NORMAL
- en: 'An [](GLOSSARY.html) alternative [](GLOSSARY.html) strategy [](GLOSSARY.html)
    is [](GLOSSARY.html) to [](GLOSSARY.html) delegate [](GLOSSARY.html) persistence
    [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) Controller. The controller
    [](GLOSSARY.html) holds [](GLOSSARY.html) a [](GLOSSARY.html) reference [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) model, and [](GLOSSARY.html) to [](GLOSSARY.html)
    a [](GLOSSARY.html) Storage [](GLOSSARY.html) subsystem. In response [](GLOSSARY.html)
    to [](GLOSSARY.html) proper [](GLOSSARY.html) trigger [](GLOSSARY.html) events,
    the [](GLOSSARY.html) controller [](GLOSSARY.html) can [](GLOSSARY.html) pick
    [](GLOSSARY.html) the [](GLOSSARY.html) relevant [](GLOSSARY.html) model objects
    [](GLOSSARY.html) and [](GLOSSARY.html) push [](GLOSSARY.html) them [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) storage [](GLOSSARY.html) subsystem.
    This [](GLOSSARY.html) strategy [](GLOSSARY.html) has [](GLOSSARY.html) a [](GLOSSARY.html)
    few advantages: the [](GLOSSARY.html) model [](GLOSSARY.html) objects [](GLOSSARY.html)
    are [](GLOSSARY.html) lighter [](GLOSSARY.html) and [](GLOSSARY.html) know [](GLOSSARY.html)
    nothing [](GLOSSARY.html) of [](GLOSSARY.html) storage strategies, which [](GLOSSARY.html)
    can [](GLOSSARY.html) now [](GLOSSARY.html) be [](GLOSSARY.html) changed [](GLOSSARY.html)
    freely [](GLOSSARY.html) by [](GLOSSARY.html) using [](GLOSSARY.html) a [](GLOSSARY.html)
    different [](GLOSSARY.html) Storage service, potentially [](GLOSSARY.html) to
    [](GLOSSARY.html) a [](GLOSSARY.html) mock [](GLOSSARY.html) object [](GLOSSARY.html)
    during [](GLOSSARY.html) testing. The [](GLOSSARY.html) main [](GLOSSARY.html)
    disadvantage [](GLOSSARY.html) is that [](GLOSSARY.html) the [](GLOSSARY.html)
    additional [](GLOSSARY.html) flexibility [](GLOSSARY.html) requires [](GLOSSARY.html)
    more [](GLOSSARY.html) a [](GLOSSARY.html) complicated [](GLOSSARY.html) interaction.
    The storage [](GLOSSARY.html) can [](GLOSSARY.html) also [](GLOSSARY.html) be
    [](GLOSSARY.html) in [](GLOSSARY.html) charge [](GLOSSARY.html) of [](GLOSSARY.html)
    additional [](GLOSSARY.html) tasks, such [](GLOSSARY.html) as [](GLOSSARY.html)
    search [](GLOSSARY.html) and [](GLOSSARY.html) filtering of [](GLOSSARY.html)
    model [](GLOSSARY.html) objects, or [](GLOSSARY.html) creation (factory) of [](GLOSSARY.html)
    new [](GLOSSARY.html) objects, which [](GLOSSARY.html) the [](GLOSSARY.html) storage
    inserts [](GLOSSARY.html) into [](GLOSSARY.html) the [](GLOSSARY.html) database
    [](GLOSSARY.html) and [](GLOSSARY.html) hands [](GLOSSARY.html) out [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) controller.'
  prefs: []
  type: TYPE_NORMAL
- en: When [](GLOSSARY.html) it [](GLOSSARY.html) comes [](GLOSSARY.html) to [](GLOSSARY.html)
    data [](GLOSSARY.html) formats, there [](GLOSSARY.html) are [](GLOSSARY.html)
    many [](GLOSSARY.html) options, from [](GLOSSARY.html) the [](GLOSSARY.html) very
    [](GLOSSARY.html) simple [](GLOSSARY.html) CSV to [](GLOSSARY.html) the [](GLOSSARY.html)
    more [](GLOSSARY.html) complex [](GLOSSARY.html) like [](GLOSSARY.html) databases.
    A [](GLOSSARY.html) simple [](GLOSSARY.html) choice [](GLOSSARY.html) can [](GLOSSARY.html)
    be [](GLOSSARY.html) a [](GLOSSARY.html) nosql [](GLOSSARY.html) database, or
    a [](GLOSSARY.html) tinysql. Regardless [](GLOSSARY.html) of [](GLOSSARY.html)
    your [](GLOSSARY.html) choice, it's [](GLOSSARY.html) important [](GLOSSARY.html)
    you [](GLOSSARY.html) version [](GLOSSARY.html) your [](GLOSSARY.html) objects.
    The [](GLOSSARY.html) object [](GLOSSARY.html) is [](GLOSSARY.html) generally
    [](GLOSSARY.html) serialized [](GLOSSARY.html) in [](GLOSSARY.html) a [](GLOSSARY.html)
    stream [](GLOSSARY.html) of [](GLOSSARY.html) bytes [](GLOSSARY.html) and [](GLOSSARY.html)
    written [](GLOSSARY.html) to [](GLOSSARY.html) disk. Recovery [](GLOSSARY.html)
    implies [](GLOSSARY.html) de-serialization [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) byte [](GLOSSARY.html) string, and [](GLOSSARY.html) reconstruction
    [](GLOSSARY.html) of the [](GLOSSARY.html) object [](GLOSSARY.html) last [](GLOSSARY.html)
    state.
  prefs: []
  type: TYPE_NORMAL
- en: ORM [](GLOSSARY.html) models
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) model [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    distributed [](GLOSSARY.html) over [](GLOSSARY.html) a [](GLOSSARY.html) network
    [](GLOSSARY.html) and [](GLOSSARY.html) accessed [](GLOSSARY.html) through [](GLOSSARY.html)
    proxy [](GLOSSARY.html) classes with [](GLOSSARY.html) none [](GLOSSARY.html)
    or [](GLOSSARY.html) minor [](GLOSSARY.html) changes [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) remaining [](GLOSSARY.html) protagonists.
  prefs: []
  type: TYPE_NORMAL
- en: 'Persistency [](GLOSSARY.html) layer: aimed [](GLOSSARY.html) exclusively [](GLOSSARY.html)
    at [](GLOSSARY.html) services [](GLOSSARY.html) for [](GLOSSARY.html) persistence
    [](GLOSSARY.html) of [](GLOSSARY.html) models (so [](GLOSSARY.html) that [](GLOSSARY.html)
    they [](GLOSSARY.html) don''t [](GLOSSARY.html) contain [](GLOSSARY.html) this
    [](GLOSSARY.html) logic [](GLOSSARY.html) themselves)'
  prefs: []
  type: TYPE_NORMAL
- en: MVC Testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MVC Testing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Detail [](GLOSSARY.html) the [](GLOSSARY.html) challenges [](GLOSSARY.html)
    of [](GLOSSARY.html) asynchronous [](GLOSSARY.html) component [](GLOSSARY.html)
    in [](GLOSSARY.html) testing
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) major [](GLOSSARY.html) problem [](GLOSSARY.html) resulting
    [](GLOSSARY.html) from [](GLOSSARY.html) a [](GLOSSARY.html) complex [](GLOSSARY.html)
    View [](GLOSSARY.html) is [](GLOSSARY.html) the [](GLOSSARY.html) difficulty [](GLOSSARY.html)
    of [](GLOSSARY.html) testing. Visual [](GLOSSARY.html) components [](GLOSSARY.html)
    tend [](GLOSSARY.html) to [](GLOSSARY.html) be [](GLOSSARY.html) more [](GLOSSARY.html)
    complex [](GLOSSARY.html) to [](GLOSSARY.html) test, because [](GLOSSARY.html)
    they [](GLOSSARY.html) require simulation [](GLOSSARY.html) of [](GLOSSARY.html)
    User [](GLOSSARY.html) interaction. Toolkits [](GLOSSARY.html) provide [](GLOSSARY.html)
    techniques [](GLOSSARY.html) to [](GLOSSARY.html) create [](GLOSSARY.html) events
    programmatically, but [](GLOSSARY.html) their [](GLOSSARY.html) handling [](GLOSSARY.html)
    depends [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) event [](GLOSSARY.html)
    loop [](GLOSSARY.html) being [](GLOSSARY.html) executed. The [](GLOSSARY.html)
    blocking [](GLOSSARY.html) nature [](GLOSSARY.html) of [](GLOSSARY.html) its [](GLOSSARY.html)
    execution [](GLOSSARY.html) makes [](GLOSSARY.html) it [](GLOSSARY.html) impractical
    [](GLOSSARY.html) in [](GLOSSARY.html) a [](GLOSSARY.html) test [](GLOSSARY.html)
    setting.
  prefs: []
  type: TYPE_NORMAL
- en: Testing [](GLOSSARY.html) a [](GLOSSARY.html) GUI [](GLOSSARY.html) application
    [](GLOSSARY.html) is [](GLOSSARY.html) generally [](GLOSSARY.html) complex, due
    [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) large [](GLOSSARY.html)
    number [](GLOSSARY.html) of [](GLOSSARY.html) interactions that [](GLOSSARY.html)
    the [](GLOSSARY.html) user [](GLOSSARY.html) may [](GLOSSARY.html) potentially
    [](GLOSSARY.html) choose [](GLOSSARY.html) to [](GLOSSARY.html) perform. Manual
    [](GLOSSARY.html) testing [](GLOSSARY.html) is [](GLOSSARY.html) tedious [](GLOSSARY.html)
    and [](GLOSSARY.html) error-prone, and [](GLOSSARY.html) simulating [](GLOSSARY.html)
    user [](GLOSSARY.html) events [](GLOSSARY.html) can [](GLOSSARY.html) open [](GLOSSARY.html)
    problems [](GLOSSARY.html) relative [](GLOSSARY.html) to [](GLOSSARY.html) their
    [](GLOSSARY.html) intrinsic [](GLOSSARY.html) asynchronous [](GLOSSARY.html) nature,
    and [](GLOSSARY.html) the [](GLOSSARY.html) visual [](GLOSSARY.html) nature [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) result.
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) sensible [](GLOSSARY.html) approach [](GLOSSARY.html) is
    [](GLOSSARY.html) to [](GLOSSARY.html) leverage [](GLOSSARY.html) the [](GLOSSARY.html)
    MVC [](GLOSSARY.html) structure [](GLOSSARY.html) to [](GLOSSARY.html) attack
    [](GLOSSARY.html) the [](GLOSSARY.html) testing [](GLOSSARY.html) problem [](GLOSSARY.html)
    in a [](GLOSSARY.html) programmatic, and [](GLOSSARY.html) possibly [](GLOSSARY.html)
    synchronous [](GLOSSARY.html) way.
  prefs: []
  type: TYPE_NORMAL
- en: 'In [](GLOSSARY.html) general, you [](GLOSSARY.html) should [](GLOSSARY.html)
    be [](GLOSSARY.html) able [](GLOSSARY.html) to [](GLOSSARY.html) test [](GLOSSARY.html)
    or [](GLOSSARY.html) even [](GLOSSARY.html) use [](GLOSSARY.html) the [](GLOSSARY.html)
    model independently [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    controller [](GLOSSARY.html) and [](GLOSSARY.html) views. In [](GLOSSARY.html)
    fact, the [](GLOSSARY.html) model [](GLOSSARY.html) should be [](GLOSSARY.html)
    able [](GLOSSARY.html) to [](GLOSSARY.html) work [](GLOSSARY.html) without [](GLOSSARY.html)
    any [](GLOSSARY.html) controllers [](GLOSSARY.html) or [](GLOSSARY.html) views
    [](GLOSSARY.html) implemented [](GLOSSARY.html) at [](GLOSSARY.html) all. It''s
    [](GLOSSARY.html) a [](GLOSSARY.html) completely [](GLOSSARY.html) separated [](GLOSSARY.html)
    layer [](GLOSSARY.html) with [](GLOSSARY.html) no [](GLOSSARY.html) dependencies
    [](GLOSSARY.html) toward [](GLOSSARY.html) GUI representation, widgets, or [](GLOSSARY.html)
    strategies [](GLOSSARY.html) to [](GLOSSARY.html) apply [](GLOSSARY.html) the
    [](GLOSSARY.html) changes. If [](GLOSSARY.html) this is [](GLOSSARY.html) not
    [](GLOSSARY.html) the [](GLOSSARY.html) case, then [](GLOSSARY.html) you [](GLOSSARY.html)
    have [](GLOSSARY.html) a [](GLOSSARY.html) code [](GLOSSARY.html) smell [](GLOSSARY.html)
    that [](GLOSSARY.html) needs [](GLOSSARY.html) refactoring. There [](GLOSSARY.html)
    are [](GLOSSARY.html) however [](GLOSSARY.html) exceptions [](GLOSSARY.html) to
    [](GLOSSARY.html) this [](GLOSSARY.html) rule [7]. For [](GLOSSARY.html) example,
    suppose your [](GLOSSARY.html) model [](GLOSSARY.html) is [](GLOSSARY.html) representing
    [](GLOSSARY.html) the [](GLOSSARY.html) state [](GLOSSARY.html) of [](GLOSSARY.html)
    a [](GLOSSARY.html) drawing [](GLOSSARY.html) program. The [](GLOSSARY.html) shapes
    that [](GLOSSARY.html) are [](GLOSSARY.html) inserted [](GLOSSARY.html) in [](GLOSSARY.html)
    the [](GLOSSARY.html) model [](GLOSSARY.html) are [](GLOSSARY.html) actual [](GLOSSARY.html)
    Shape [](GLOSSARY.html) objects [](GLOSSARY.html) that [](GLOSSARY.html) are graphical
    [](GLOSSARY.html) in [](GLOSSARY.html) nature, and [](GLOSSARY.html) it [](GLOSSARY.html)
    would [](GLOSSARY.html) make [](GLOSSARY.html) sense [](GLOSSARY.html) to [](GLOSSARY.html)
    assign [](GLOSSARY.html) to [](GLOSSARY.html) these objects [](GLOSSARY.html)
    the [](GLOSSARY.html) responsibility [](GLOSSARY.html) of [](GLOSSARY.html) drawing
    [](GLOSSARY.html) themselves [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html)
    view. This [](GLOSSARY.html) is practical, but [](GLOSSARY.html) it [](GLOSSARY.html)
    can [](GLOSSARY.html) backfire: it [](GLOSSARY.html) requires [](GLOSSARY.html)
    the [](GLOSSARY.html) objects [](GLOSSARY.html) to [](GLOSSARY.html) know [](GLOSSARY.html)
    about the [](GLOSSARY.html) specific [](GLOSSARY.html) view''s [](GLOSSARY.html)
    details [](GLOSSARY.html) about [](GLOSSARY.html) how [](GLOSSARY.html) to [](GLOSSARY.html)
    draw [](GLOSSARY.html) itself [](GLOSSARY.html) onto [](GLOSSARY.html) it, meaning
    that [](GLOSSARY.html) a [](GLOSSARY.html) different [](GLOSSARY.html) view [](GLOSSARY.html)
    might [](GLOSSARY.html) not [](GLOSSARY.html) be [](GLOSSARY.html) compatible.
    Assigning representation [](GLOSSARY.html) responsibilities [](GLOSSARY.html)
    to [](GLOSSARY.html) model [](GLOSSARY.html) objects [](GLOSSARY.html) is [](GLOSSARY.html)
    a [](GLOSSARY.html) rare [](GLOSSARY.html) occurrence that [](GLOSSARY.html) can
    [](GLOSSARY.html) always [](GLOSSARY.html) be [](GLOSSARY.html) worked [](GLOSSARY.html)
    around, for [](GLOSSARY.html) example [](GLOSSARY.html) separating [](GLOSSARY.html)
    the mathematical [](GLOSSARY.html) description [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) Shape (e.g. the [](GLOSSARY.html) corners [](GLOSSARY.html)
    of [](GLOSSARY.html) a rectangle) from [](GLOSSARY.html) the [](GLOSSARY.html)
    drawing [](GLOSSARY.html) logic (e.g. the [](GLOSSARY.html) actual [](GLOSSARY.html)
    graphic [](GLOSSARY.html) calls [](GLOSSARY.html) that draw [](GLOSSARY.html)
    the [](GLOSSARY.html) rectangle [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html)
    screen) and [](GLOSSARY.html) move [](GLOSSARY.html) this [](GLOSSARY.html) drawing
    [](GLOSSARY.html) logic [](GLOSSARY.html) in [](GLOSSARY.html) a Renderer [](GLOSSARY.html)
    class.'
  prefs: []
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) view [](GLOSSARY.html) that [](GLOSSARY.html) acts [](GLOSSARY.html)
    on [](GLOSSARY.html) a [](GLOSSARY.html) widget [](GLOSSARY.html) knowing [](GLOSSARY.html)
    nothing [](GLOSSARY.html) about [](GLOSSARY.html) the [](GLOSSARY.html) model.
    View “adapter”
  prefs: []
  type: TYPE_NORMAL
- en: 'Mock [](GLOSSARY.html) view: it [](GLOSSARY.html) attaches [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) model [](GLOSSARY.html) like [](GLOSSARY.html)
    a [](GLOSSARY.html) normal [](GLOSSARY.html) view, but [](GLOSSARY.html) has [](GLOSSARY.html)
    no [](GLOSSARY.html) GUI and [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    probed. Fixture [](GLOSSARY.html) model: a [](GLOSSARY.html) model [](GLOSSARY.html)
    with [](GLOSSARY.html) well [](GLOSSARY.html) defined, well [](GLOSSARY.html)
    known [](GLOSSARY.html) data [](GLOSSARY.html) that [](GLOSSARY.html) can [](GLOSSARY.html)
    be [](GLOSSARY.html) attached to [](GLOSSARY.html) the [](GLOSSARY.html) view.
    The [](GLOSSARY.html) view [](GLOSSARY.html) should [](GLOSSARY.html) draw [](GLOSSARY.html)
    exactly [](GLOSSARY.html) what [](GLOSSARY.html) we [](GLOSSARY.html) know [](GLOSSARY.html)
    from [](GLOSSARY.html) the [](GLOSSARY.html) fixture [](GLOSSARY.html) model.'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft [](GLOSSARY.html) Visual [](GLOSSARY.html) Testing Sending [](GLOSSARY.html)
    events [](GLOSSARY.html) with [](GLOSSARY.html) xtest, or [](GLOSSARY.html) with
    [](GLOSSARY.html) the [](GLOSSARY.html) widget [](GLOSSARY.html) level [](GLOSSARY.html)
    interface. Sporadics [](GLOSSARY.html) due [](GLOSSARY.html) to [](GLOSSARY.html)
    change [](GLOSSARY.html) in [](GLOSSARY.html) layout, running [](GLOSSARY.html)
    the [](GLOSSARY.html) screensaver.
  prefs: []
  type: TYPE_NORMAL
- en: asynchronous [](GLOSSARY.html) tests [](GLOSSARY.html) tend [](GLOSSARY.html)
    to [](GLOSSARY.html) be [](GLOSSARY.html) slow (you [](GLOSSARY.html) need [](GLOSSARY.html)
    to [](GLOSSARY.html) perform [](GLOSSARY.html) an [](GLOSSARY.html) action, then
    wait [](GLOSSARY.html) for [](GLOSSARY.html) the [](GLOSSARY.html) result [](GLOSSARY.html)
    that [](GLOSSARY.html) may [](GLOSSARY.html) come [](GLOSSARY.html) and [](GLOSSARY.html)
    sporadically [](GLOSSARY.html) broken, because of [](GLOSSARY.html) race [](GLOSSARY.html)
    conditions. Favor [](GLOSSARY.html) synchronous [](GLOSSARY.html) testing, restrict
    [](GLOSSARY.html) asynchronous.
  prefs: []
  type: TYPE_NORMAL
- en: Test [](GLOSSARY.html) of [](GLOSSARY.html) components [](GLOSSARY.html) that
    [](GLOSSARY.html) are [](GLOSSARY.html) hard [](GLOSSARY.html) to [](GLOSSARY.html)
    test [](GLOSSARY.html) should [](GLOSSARY.html) be [](GLOSSARY.html) minimal,
    and [](GLOSSARY.html) the [](GLOSSARY.html) behavior of [](GLOSSARY.html) these
    [](GLOSSARY.html) components [](GLOSSARY.html) should [](GLOSSARY.html) be [](GLOSSARY.html)
    minimal [](GLOSSARY.html) as [](GLOSSARY.html) well.
  prefs: []
  type: TYPE_NORMAL
- en: You [](GLOSSARY.html) can [](GLOSSARY.html) perform [](GLOSSARY.html) tests
    [](GLOSSARY.html) of [](GLOSSARY.html) graphical [](GLOSSARY.html) components
    [](GLOSSARY.html) by [](GLOSSARY.html) pushing [](GLOSSARY.html) events [](GLOSSARY.html)
    into [](GLOSSARY.html) the GUI [](GLOSSARY.html) toolkit [](GLOSSARY.html) event
    [](GLOSSARY.html) queue, but [](GLOSSARY.html) again, they [](GLOSSARY.html) tend
    [](GLOSSARY.html) to [](GLOSSARY.html) be [](GLOSSARY.html) brittle [](GLOSSARY.html)
    and [](GLOSSARY.html) asynchronous.
  prefs: []
  type: TYPE_NORMAL
- en: Watir, WatiN, Selenium
  prefs: []
  type: TYPE_NORMAL
- en: Event Driven programming
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Interaction with the event loop
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Until [](GLOSSARY.html) now, very [](GLOSSARY.html) limited [](GLOSSARY.html)
    mention [](GLOSSARY.html) was [](GLOSSARY.html) made [](GLOSSARY.html) about [](GLOSSARY.html)
    the [](GLOSSARY.html) event [](GLOSSARY.html) dispatch [](GLOSSARY.html) mechanism
    and [](GLOSSARY.html) the [](GLOSSARY.html) event [](GLOSSARY.html) loop: we [](GLOSSARY.html)
    remained [](GLOSSARY.html) oblivious [](GLOSSARY.html) of [](GLOSSARY.html) how
    [](GLOSSARY.html) UI [](GLOSSARY.html) events [](GLOSSARY.html) were [](GLOSSARY.html)
    delivered [](GLOSSARY.html) to [](GLOSSARY.html) the View/Controller. In [](GLOSSARY.html)
    the [](GLOSSARY.html) following [](GLOSSARY.html) pages [](GLOSSARY.html) we [](GLOSSARY.html)
    will [](GLOSSARY.html) examine [](GLOSSARY.html) how [](GLOSSARY.html) events
    [](GLOSSARY.html) are [](GLOSSARY.html) dispatched and [](GLOSSARY.html) how [](GLOSSARY.html)
    crucial [](GLOSSARY.html) is [](GLOSSARY.html) a [](GLOSSARY.html) proper [](GLOSSARY.html)
    coexistence [](GLOSSARY.html) between [](GLOSSARY.html) the [](GLOSSARY.html)
    dispatch [](GLOSSARY.html) mechanism [](GLOSSARY.html) and [](GLOSSARY.html) MVC.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In [](GLOSSARY.html) the [](GLOSSARY.html) most [](GLOSSARY.html) simple [](GLOSSARY.html)
    terms, an [](GLOSSARY.html) event-driven [](GLOSSARY.html) UI [](GLOSSARY.html)
    program [](GLOSSARY.html) is [](GLOSSARY.html) built [](GLOSSARY.html) on [](GLOSSARY.html)
    top [](GLOSSARY.html) of [](GLOSSARY.html) an *event loop*. This [](GLOSSARY.html)
    infinite [](GLOSSARY.html) loop [](GLOSSARY.html) generally [](GLOSSARY.html)
    performs [](GLOSSARY.html) these [](GLOSSARY.html) operations:'
  prefs: []
  type: TYPE_NORMAL
- en: awaits [](GLOSSARY.html) for [](GLOSSARY.html) low [](GLOSSARY.html) level [](GLOSSARY.html)
    events, like [](GLOSSARY.html) a [](GLOSSARY.html) mouse [](GLOSSARY.html) click,
    a [](GLOSSARY.html) key [](GLOSSARY.html) press, or [](GLOSSARY.html) a [](GLOSSARY.html)
    request [](GLOSSARY.html) to [](GLOSSARY.html) show [](GLOSSARY.html) from [](GLOSSARY.html)
    the [](GLOSSARY.html) windowing [](GLOSSARY.html) system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: puts [](GLOSSARY.html) these [](GLOSSARY.html) events [](GLOSSARY.html) in [](GLOSSARY.html)
    a [](GLOSSARY.html) queue
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: fully [](GLOSSARY.html) consumes [](GLOSSARY.html) the [](GLOSSARY.html) queue
    [](GLOSSARY.html) and [](GLOSSARY.html) dispatches [](GLOSSARY.html) the [](GLOSSARY.html)
    events [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) appropriate
    handler (e.g. a [](GLOSSARY.html) method [](GLOSSARY.html) on [](GLOSSARY.html)
    the [](GLOSSARY.html) widget [](GLOSSARY.html) currently [](GLOSSARY.html) in
    [](GLOSSARY.html) focus). In [](GLOSSARY.html) this [](GLOSSARY.html) phase [](GLOSSARY.html)
    the [](GLOSSARY.html) thread [](GLOSSARY.html) will [](GLOSSARY.html) traverse,
    among [](GLOSSARY.html) other [](GLOSSARY.html) things, your [](GLOSSARY.html)
    MVC.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Return [](GLOSSARY.html) to [](GLOSSARY.html) 1.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This [](GLOSSARY.html) loop [](GLOSSARY.html) is [](GLOSSARY.html) executed
    [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html) main [](GLOSSARY.html)
    thread [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) program, which
    [](GLOSSARY.html) then
  prefs: []
  type: TYPE_NORMAL
- en: executes [](GLOSSARY.html) during [](GLOSSARY.html) a [](GLOSSARY.html) single
    [](GLOSSARY.html) iteration [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    event [](GLOSSARY.html) loop [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    extremely [](GLOSSARY.html) complex, and [](GLOSSARY.html) traverse the [](GLOSSARY.html)
    complex [](GLOSSARY.html) notification [](GLOSSARY.html) network [](GLOSSARY.html)
    of [](GLOSSARY.html) your [](GLOSSARY.html) MVC [](GLOSSARY.html) application.
    The [](GLOSSARY.html) event [](GLOSSARY.html) handler [](GLOSSARY.html) is, for
    [](GLOSSARY.html) all [](GLOSSARY.html) purposes, atomic. When [](GLOSSARY.html)
    it [](GLOSSARY.html) starts, it [](GLOSSARY.html) is [](GLOSSARY.html) the [](GLOSSARY.html)
    only [](GLOSSARY.html) part [](GLOSSARY.html) of [](GLOSSARY.html) your [](GLOSSARY.html)
    code [](GLOSSARY.html) that [](GLOSSARY.html) will [](GLOSSARY.html) be [](GLOSSARY.html)
    executed, and [](GLOSSARY.html) will [](GLOSSARY.html) run [](GLOSSARY.html) to
    [](GLOSSARY.html) completion with [](GLOSSARY.html) no [](GLOSSARY.html) chance
    [](GLOSSARY.html) for [](GLOSSARY.html) interruption. It [](GLOSSARY.html) is
    [](GLOSSARY.html) therefore [](GLOSSARY.html) critical, for [](GLOSSARY.html)
    the [](GLOSSARY.html) application [](GLOSSARY.html) to [](GLOSSARY.html) be [](GLOSSARY.html)
    responsive [](GLOSSARY.html) to [](GLOSSARY.html) subsequent [](GLOSSARY.html)
    events [](GLOSSARY.html) waiting in [](GLOSSARY.html) the [](GLOSSARY.html) next
    [](GLOSSARY.html) iteration [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    loop, that [](GLOSSARY.html) an [](GLOSSARY.html) event [](GLOSSARY.html) is [](GLOSSARY.html)
    fully [](GLOSSARY.html) handled [](GLOSSARY.html) within [](GLOSSARY.html) 200
    [](GLOSSARY.html) milliseconds.
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) consequence [](GLOSSARY.html) of [](GLOSSARY.html) this
    [](GLOSSARY.html) requirement [](GLOSSARY.html) is [](GLOSSARY.html) that [](GLOSSARY.html)
    anything [](GLOSSARY.html) in [](GLOSSARY.html) your [](GLOSSARY.html) MVC [](GLOSSARY.html)
    code [](GLOSSARY.html) that [](GLOSSARY.html) blocks [](GLOSSARY.html) the executing
    [](GLOSSARY.html) thread [](GLOSSARY.html) will [](GLOSSARY.html) prevent [](GLOSSARY.html)
    the [](GLOSSARY.html) event [](GLOSSARY.html) loop [](GLOSSARY.html) to [](GLOSSARY.html)
    roll, and [](GLOSSARY.html) will [](GLOSSARY.html) slow [](GLOSSARY.html) down
    [](GLOSSARY.html) or freeze [](GLOSSARY.html) your [](GLOSSARY.html) application,
    offering [](GLOSSARY.html) a [](GLOSSARY.html) suboptimal [](GLOSSARY.html) user
    [](GLOSSARY.html) experience.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples [](GLOSSARY.html) of [](GLOSSARY.html) situations [](GLOSSARY.html)
    where [](GLOSSARY.html) the [](GLOSSARY.html) above [](GLOSSARY.html) may [](GLOSSARY.html)
    occur [](GLOSSARY.html) are [](GLOSSARY.html) the [](GLOSSARY.html) following:'
  prefs: []
  type: TYPE_NORMAL
- en: initiating [](GLOSSARY.html) a [](GLOSSARY.html) network [](GLOSSARY.html) connection
    (which [](GLOSSARY.html) may [](GLOSSARY.html) block [](GLOSSARY.html) until [](GLOSSARY.html)
    a [](GLOSSARY.html) timeout [](GLOSSARY.html) is [](GLOSSARY.html) reached)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: waiting [](GLOSSARY.html) for [](GLOSSARY.html) a [](GLOSSARY.html) state [](GLOSSARY.html)
    machine [](GLOSSARY.html) to [](GLOSSARY.html) switch [](GLOSSARY.html) state
    (e.g. become [](GLOSSARY.html) idle)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: a [](GLOSSARY.html) long [](GLOSSARY.html) running [](GLOSSARY.html) computation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: reading [](GLOSSARY.html) or [](GLOSSARY.html) writing [](GLOSSARY.html) a [](GLOSSARY.html)
    large [](GLOSSARY.html) file [](GLOSSARY.html) either [](GLOSSARY.html) from [](GLOSSARY.html)
    the [](GLOSSARY.html) disk [](GLOSSARY.html) or [](GLOSSARY.html) from [](GLOSSARY.html)
    a [](GLOSSARY.html) network [](GLOSSARY.html) connection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: running [](GLOSSARY.html) an [](GLOSSARY.html) external [](GLOSSARY.html) process
    [](GLOSSARY.html) that [](GLOSSARY.html) must [](GLOSSARY.html) be [](GLOSSARY.html)
    controlled, or [](GLOSSARY.html) whose [](GLOSSARY.html) stdout [](GLOSSARY.html)
    must [](GLOSSARY.html) be [](GLOSSARY.html) parsed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You [](GLOSSARY.html) can [](GLOSSARY.html) see [](GLOSSARY.html) the [](GLOSSARY.html)
    event [](GLOSSARY.html) loop [](GLOSSARY.html) as [](GLOSSARY.html) a [](GLOSSARY.html)
    cooperative [](GLOSSARY.html) multitasking [](GLOSSARY.html) system. A [](GLOSSARY.html)
    cooperative [](GLOSSARY.html) multitasking system [](GLOSSARY.html) is [](GLOSSARY.html)
    a [](GLOSSARY.html) system [](GLOSSARY.html) allowing [](GLOSSARY.html) multiple
    [](GLOSSARY.html) tasks [](GLOSSARY.html) to [](GLOSSARY.html) run, provided [](GLOSSARY.html)
    that [](GLOSSARY.html) each [](GLOSSARY.html) task [](GLOSSARY.html) relinquish
    [](GLOSSARY.html) control when [](GLOSSARY.html) done, giving [](GLOSSARY.html)
    other [](GLOSSARY.html) tasks [](GLOSSARY.html) the [](GLOSSARY.html) chance [](GLOSSARY.html)
    to [](GLOSSARY.html) run.
  prefs: []
  type: TYPE_NORMAL
- en: 'To [](GLOSSARY.html) keep [](GLOSSARY.html) interface [](GLOSSARY.html) responsiveness,
    you [](GLOSSARY.html) must [](GLOSSARY.html) create [](GLOSSARY.html) a [](GLOSSARY.html)
    secondary [](GLOSSARY.html) thread [](GLOSSARY.html) of [](GLOSSARY.html) execution
    in [](GLOSSARY.html) your [](GLOSSARY.html) program, when [](GLOSSARY.html) the
    [](GLOSSARY.html) event [](GLOSSARY.html) handler [](GLOSSARY.html) expects [](GLOSSARY.html)
    to [](GLOSSARY.html) wait. The [](GLOSSARY.html) main [](GLOSSARY.html) thread
    [](GLOSSARY.html) spawns the [](GLOSSARY.html) secondary [](GLOSSARY.html) thread.
    The [](GLOSSARY.html) secondary [](GLOSSARY.html) thread [](GLOSSARY.html) executes
    [](GLOSSARY.html) the [](GLOSSARY.html) long [](GLOSSARY.html) running task, while
    [](GLOSSARY.html) the [](GLOSSARY.html) main [](GLOSSARY.html) thread [](GLOSSARY.html)
    can [](GLOSSARY.html) return [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    event [](GLOSSARY.html) queue [](GLOSSARY.html) and [](GLOSSARY.html) keep [](GLOSSARY.html)
    processing events. This [](GLOSSARY.html) solution [](GLOSSARY.html) now [](GLOSSARY.html)
    faces [](GLOSSARY.html) the [](GLOSSARY.html) following [](GLOSSARY.html) difficulties:'
  prefs: []
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) secondary [](GLOSSARY.html) thread [](GLOSSARY.html) must
    [](GLOSSARY.html) notify [](GLOSSARY.html) its [](GLOSSARY.html) completion [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) main [](GLOSSARY.html) thread, either
    [](GLOSSARY.html) successfully or [](GLOSSARY.html) with [](GLOSSARY.html) an
    [](GLOSSARY.html) error [](GLOSSARY.html) condition.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) secondary [](GLOSSARY.html) thread [](GLOSSARY.html) must
    [](GLOSSARY.html) interact [](GLOSSARY.html) nicely [](GLOSSARY.html) with [](GLOSSARY.html)
    the [](GLOSSARY.html) main [](GLOSSARY.html) thread. Both [](GLOSSARY.html) threads
    [](GLOSSARY.html) could [](GLOSSARY.html) access the [](GLOSSARY.html) same [](GLOSSARY.html)
    shared [](GLOSSARY.html) state, for [](GLOSSARY.html) which [](GLOSSARY.html)
    synchronization [](GLOSSARY.html) is [](GLOSSARY.html) needed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: as [](GLOSSARY.html) a [](GLOSSARY.html) corollary [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) above, the [](GLOSSARY.html) secondary [](GLOSSARY.html)
    thread [](GLOSSARY.html) should [](GLOSSARY.html) not [](GLOSSARY.html) call [](GLOSSARY.html)
    the [](GLOSSARY.html) event [](GLOSSARY.html) loop [](GLOSSARY.html) or any [](GLOSSARY.html)
    part [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html) code [](GLOSSARY.html)
    the [](GLOSSARY.html) main [](GLOSSARY.html) thread [](GLOSSARY.html) is [](GLOSSARY.html)
    fundamentally [](GLOSSARY.html) responsible [](GLOSSARY.html) for (such [](GLOSSARY.html)
    as [](GLOSSARY.html) UI [](GLOSSARY.html) handling) because [](GLOSSARY.html)
    it [](GLOSSARY.html) is [](GLOSSARY.html) probably [](GLOSSARY.html) not [](GLOSSARY.html)
    designed [](GLOSSARY.html) to [](GLOSSARY.html) be [](GLOSSARY.html) thread [](GLOSSARY.html)
    safe.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) secondary [](GLOSSARY.html) thread [](GLOSSARY.html) could
    [](GLOSSARY.html) potentially [](GLOSSARY.html) trigger [](GLOSSARY.html) notifications
    [](GLOSSARY.html) through [](GLOSSARY.html) MVC (for [](GLOSSARY.html) example,
    by modifying [](GLOSSARY.html) a [](GLOSSARY.html) model [](GLOSSARY.html) state).
    The [](GLOSSARY.html) notification [](GLOSSARY.html) will [](GLOSSARY.html) propagate
    [](GLOSSARY.html) to [](GLOSSARY.html) View [](GLOSSARY.html) and [](GLOSSARY.html)
    Controller [](GLOSSARY.html) classes, which [](GLOSSARY.html) may [](GLOSSARY.html)
    involve [](GLOSSARY.html) UI, which [](GLOSSARY.html) again [](GLOSSARY.html)
    is [](GLOSSARY.html) not [](GLOSSARY.html) designed [](GLOSSARY.html) for [](GLOSSARY.html)
    being [](GLOSSARY.html) used [](GLOSSARY.html) by [](GLOSSARY.html) a [](GLOSSARY.html)
    secondary [](GLOSSARY.html) thread.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As [](GLOSSARY.html) you [](GLOSSARY.html) can [](GLOSSARY.html) see, handling
    [](GLOSSARY.html) multithreading [](GLOSSARY.html) in [](GLOSSARY.html) an [](GLOSSARY.html)
    event [](GLOSSARY.html) driven [](GLOSSARY.html) system [](GLOSSARY.html) is [](GLOSSARY.html)
    not [](GLOSSARY.html) trivial.
  prefs: []
  type: TYPE_NORMAL
- en: An [](GLOSSARY.html) alternative [](GLOSSARY.html) approach [](GLOSSARY.html)
    to [](GLOSSARY.html) what [](GLOSSARY.html) presented [](GLOSSARY.html) above
    [](GLOSSARY.html) is [](GLOSSARY.html) suspended [](GLOSSARY.html) execution.
    The [](GLOSSARY.html) concept [](GLOSSARY.html) requires [](GLOSSARY.html) the
    [](GLOSSARY.html) language [](GLOSSARY.html) to [](GLOSSARY.html) support [](GLOSSARY.html)
    suspending [](GLOSSARY.html) a [](GLOSSARY.html) routine [](GLOSSARY.html) execution
    [](GLOSSARY.html) and relinquish [](GLOSSARY.html) control [](GLOSSARY.html) back
    [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) caller. When [](GLOSSARY.html)
    the [](GLOSSARY.html) suspended [](GLOSSARY.html) routine [](GLOSSARY.html) is
    [](GLOSSARY.html) reinstated, it [](GLOSSARY.html) will [](GLOSSARY.html) continue
    [](GLOSSARY.html) from [](GLOSSARY.html) where [](GLOSSARY.html) it [](GLOSSARY.html)
    left.
  prefs: []
  type: TYPE_NORMAL
- en: Suspended [](GLOSSARY.html) execution [](GLOSSARY.html) allows [](GLOSSARY.html)
    a [](GLOSSARY.html) handler [](GLOSSARY.html) to [](GLOSSARY.html) relinquish
    [](GLOSSARY.html) control [](GLOSSARY.html) back [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) event [](GLOSSARY.html) loop, allow [](GLOSSARY.html) for
    [](GLOSSARY.html) other [](GLOSSARY.html) events [](GLOSSARY.html) to [](GLOSSARY.html)
    be [](GLOSSARY.html) processed, and [](GLOSSARY.html) restart [](GLOSSARY.html)
    where [](GLOSSARY.html) it [](GLOSSARY.html) was. This [](GLOSSARY.html) approach
    [](GLOSSARY.html) has [](GLOSSARY.html) the [](GLOSSARY.html) following drawbacks
  prefs: []
  type: TYPE_NORMAL
- en: it [](GLOSSARY.html) requires [](GLOSSARY.html) language [](GLOSSARY.html) support
    (e.g. yield [](GLOSSARY.html) keyword [](GLOSSARY.html) in [](GLOSSARY.html) python)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: event [](GLOSSARY.html) handlers [](GLOSSARY.html) are [](GLOSSARY.html) no
    [](GLOSSARY.html) longer [](GLOSSARY.html) atomic. Processing [](GLOSSARY.html)
    other [](GLOSSARY.html) events [](GLOSSARY.html) might [](GLOSSARY.html) imply
    [](GLOSSARY.html) that [](GLOSSARY.html) the [](GLOSSARY.html) restarting handler
    [](GLOSSARY.html) is [](GLOSSARY.html) now [](GLOSSARY.html) handling [](GLOSSARY.html)
    a [](GLOSSARY.html) state [](GLOSSARY.html) that [](GLOSSARY.html) may [](GLOSSARY.html)
    no [](GLOSSARY.html) longer [](GLOSSARY.html) be [](GLOSSARY.html) consistent.
    A [](GLOSSARY.html) point [](GLOSSARY.html) of [](GLOSSARY.html) yield [](GLOSSARY.html)
    can [](GLOSSARY.html) be [](GLOSSARY.html) seen [](GLOSSARY.html) as a [](GLOSSARY.html)
    point [](GLOSSARY.html) where [](GLOSSARY.html) any [](GLOSSARY.html) code [](GLOSSARY.html)
    can [](GLOSSARY.html) be [](GLOSSARY.html) arbitrarily [](GLOSSARY.html) executed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does [](GLOSSARY.html) not [](GLOSSARY.html) solve [](GLOSSARY.html) for [](GLOSSARY.html)
    blocking [](GLOSSARY.html) calls, but [](GLOSSARY.html) may [](GLOSSARY.html)
    allow [](GLOSSARY.html) for [](GLOSSARY.html) event [](GLOSSARY.html) processing
    [](GLOSSARY.html) if [](GLOSSARY.html) the [](GLOSSARY.html) suspendable [](GLOSSARY.html)
    task can [](GLOSSARY.html) be [](GLOSSARY.html) broken [](GLOSSARY.html) down
    [](GLOSSARY.html) into [](GLOSSARY.html) chunks, where [](GLOSSARY.html) one [](GLOSSARY.html)
    can [](GLOSSARY.html) periodically [](GLOSSARY.html) relinquish [](GLOSSARY.html)
    control (e.g. a [](GLOSSARY.html) loop).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This [](GLOSSARY.html) approach [](GLOSSARY.html) is [](GLOSSARY.html) equivalent
    [](GLOSSARY.html) to [](GLOSSARY.html) calling [](GLOSSARY.html) the [](GLOSSARY.html)
    processEvents [](GLOSSARY.html) manually [](GLOSSARY.html) at [](GLOSSARY.html)
    the [](GLOSSARY.html) point [](GLOSSARY.html) of [](GLOSSARY.html) yield.
  prefs: []
  type: TYPE_NORMAL
- en: For [](GLOSSARY.html) the [](GLOSSARY.html) blocking [](GLOSSARY.html) calls,
    the [](GLOSSARY.html) ideal [](GLOSSARY.html) solution [](GLOSSARY.html) would
    [](GLOSSARY.html) be [](GLOSSARY.html) to [](GLOSSARY.html) have [](GLOSSARY.html)
    a [](GLOSSARY.html) routine [](GLOSSARY.html) that [](GLOSSARY.html) acts [](GLOSSARY.html)
    as [](GLOSSARY.html) non-blocking and [](GLOSSARY.html) notifies [](GLOSSARY.html)
    back [](GLOSSARY.html) when [](GLOSSARY.html) completed. This [](GLOSSARY.html)
    is [](GLOSSARY.html) the [](GLOSSARY.html) case [](GLOSSARY.html) of [](GLOSSARY.html)
    a [](GLOSSARY.html) callback, a [](GLOSSARY.html) routine [](GLOSSARY.html) that
    [](GLOSSARY.html) gets [](GLOSSARY.html) called when [](GLOSSARY.html) the [](GLOSSARY.html)
    secondary [](GLOSSARY.html) thread [](GLOSSARY.html) has [](GLOSSARY.html) completed
    [](GLOSSARY.html) its [](GLOSSARY.html) task. The [](GLOSSARY.html) most [](GLOSSARY.html)
    common [](GLOSSARY.html) problem [](GLOSSARY.html) of [](GLOSSARY.html) this [](GLOSSARY.html)
    approach [](GLOSSARY.html) is that [](GLOSSARY.html) the [](GLOSSARY.html) callback
    [](GLOSSARY.html) will [](GLOSSARY.html) be [](GLOSSARY.html) executed [](GLOSSARY.html)
    in [](GLOSSARY.html) the [](GLOSSARY.html) secondary [](GLOSSARY.html) thread
    [](GLOSSARY.html) as [](GLOSSARY.html) well, so [](GLOSSARY.html) in [](GLOSSARY.html)
    general [](GLOSSARY.html) it [](GLOSSARY.html) cannot [](GLOSSARY.html) perform
    any [](GLOSSARY.html) action [](GLOSSARY.html) that [](GLOSSARY.html) may [](GLOSSARY.html)
    conflict [](GLOSSARY.html) with [](GLOSSARY.html) the [](GLOSSARY.html) main [](GLOSSARY.html)
    thread. The [](GLOSSARY.html) recommended [](GLOSSARY.html) course [](GLOSSARY.html)
    of [](GLOSSARY.html) action [](GLOSSARY.html) is [](GLOSSARY.html) that the [](GLOSSARY.html)
    secondary [](GLOSSARY.html) thread, now [](GLOSSARY.html) running [](GLOSSARY.html)
    the [](GLOSSARY.html) callback, notifies [](GLOSSARY.html) the [](GLOSSARY.html)
    main [](GLOSSARY.html) thread [](GLOSSARY.html) through [](GLOSSARY.html) an [](GLOSSARY.html)
    event. Event [](GLOSSARY.html) queues [](GLOSSARY.html) implementations [](GLOSSARY.html)
    are [](GLOSSARY.html) generally [](GLOSSARY.html) aware [](GLOSSARY.html) of [](GLOSSARY.html)
    this [](GLOSSARY.html) need [](GLOSSARY.html) and [](GLOSSARY.html) are [](GLOSSARY.html)
    therefore [](GLOSSARY.html) thread [](GLOSSARY.html) safe.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: MVC [](GLOSSARY.html) was [](GLOSSARY.html) considered [](GLOSSARY.html) as
    [](GLOSSARY.html) an [](GLOSSARY.html) independent [](GLOSSARY.html) design [](GLOSSARY.html)
    approach [](GLOSSARY.html) without [](GLOSSARY.html) much [](GLOSSARY.html) consideration
    of [](GLOSSARY.html) the [](GLOSSARY.html) event [](GLOSSARY.html) system. Strictly
    [](GLOSSARY.html) speaking, MVC [](GLOSSARY.html) does [](GLOSSARY.html) not [](GLOSSARY.html)
    require [](GLOSSARY.html) an [](GLOSSARY.html) event [](GLOSSARY.html) loop, but
    [](GLOSSARY.html) its [](GLOSSARY.html) usefulness would [](GLOSSARY.html) be
    [](GLOSSARY.html) severely [](GLOSSARY.html) limited.
  prefs: []
  type: TYPE_NORMAL
- en: Explain [](GLOSSARY.html) how [](GLOSSARY.html) MVC [](GLOSSARY.html) naturally
    [](GLOSSARY.html) ends [](GLOSSARY.html) up [](GLOSSARY.html) with [](GLOSSARY.html)
    an [](GLOSSARY.html) event [](GLOSSARY.html) driven [](GLOSSARY.html) model. Explain
    [](GLOSSARY.html) the [](GLOSSARY.html) complexity [](GLOSSARY.html) of [](GLOSSARY.html)
    debugging (e.g. backtraces [](GLOSSARY.html) all [](GLOSSARY.html) coming [](GLOSSARY.html)
    from [](GLOSSARY.html) the [](GLOSSARY.html) event loop)
  prefs: []
  type: TYPE_NORMAL
- en: Behavior [](GLOSSARY.html) is [](GLOSSARY.html) no [](GLOSSARY.html) longer
    [](GLOSSARY.html) characterized [](GLOSSARY.html) by [](GLOSSARY.html) code [](GLOSSARY.html)
    alone. Emergent [](GLOSSARY.html) behavior [](GLOSSARY.html) arises [](GLOSSARY.html)
    from the [](GLOSSARY.html) potentially [](GLOSSARY.html) asynchronous [](GLOSSARY.html)
    interaction [](GLOSSARY.html) among [](GLOSSARY.html) objects, communicating [](GLOSSARY.html)
    through events. The [](GLOSSARY.html) communication [](GLOSSARY.html) network
    [](GLOSSARY.html) being [](GLOSSARY.html) mutable. This [](GLOSSARY.html) results
    [](GLOSSARY.html) in [](GLOSSARY.html) extremely complex, hard [](GLOSSARY.html)
    to [](GLOSSARY.html) understand, hard [](GLOSSARY.html) to [](GLOSSARY.html) debug
    [](GLOSSARY.html) designs.
  prefs: []
  type: TYPE_NORMAL
- en: 'solve [](GLOSSARY.html) this? One [](GLOSSARY.html) solution [](GLOSSARY.html)
    is [](GLOSSARY.html) to [](GLOSSARY.html) spawn [](GLOSSARY.html) another [](GLOSSARY.html)
    thread, and [](GLOSSARY.html) let [](GLOSSARY.html) this [](GLOSSARY.html) other
    [](GLOSSARY.html) thread do [](GLOSSARY.html) the [](GLOSSARY.html) heavy, long
    [](GLOSSARY.html) running [](GLOSSARY.html) work, while [](GLOSSARY.html) the
    [](GLOSSARY.html) main [](GLOSSARY.html) thread [](GLOSSARY.html) goes [](GLOSSARY.html)
    back [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) event loop [](GLOSSARY.html)
    and [](GLOSSARY.html) keeps [](GLOSSARY.html) processing [](GLOSSARY.html) events.
    But [](GLOSSARY.html) multithread [](GLOSSARY.html) programming [](GLOSSARY.html)
    is [](GLOSSARY.html) hard, and event [](GLOSSARY.html) driven [](GLOSSARY.html)
    multithread [](GLOSSARY.html) programming [](GLOSSARY.html) even [](GLOSSARY.html)
    more [](GLOSSARY.html) so. So [](GLOSSARY.html) ideally, you [](GLOSSARY.html)
    would [](GLOSSARY.html) prefer [](GLOSSARY.html) to [](GLOSSARY.html) have [](GLOSSARY.html)
    a [](GLOSSARY.html) single [](GLOSSARY.html) thread, but [](GLOSSARY.html) when
    [](GLOSSARY.html) it [](GLOSSARY.html) encounters something [](GLOSSARY.html)
    that [](GLOSSARY.html) is [](GLOSSARY.html) long [](GLOSSARY.html) running, you
    [](GLOSSARY.html) use [](GLOSSARY.html) a [](GLOSSARY.html) trick [](GLOSSARY.html)
    to [](GLOSSARY.html) suspend [](GLOSSARY.html) the [](GLOSSARY.html) execution
    [](GLOSSARY.html) point, and [](GLOSSARY.html) resume [](GLOSSARY.html) it [](GLOSSARY.html)
    later, when [](GLOSSARY.html) the [](GLOSSARY.html) long [](GLOSSARY.html) running
    [](GLOSSARY.html) task [](GLOSSARY.html) is [](GLOSSARY.html) completed, or [](GLOSSARY.html)
    maybe [](GLOSSARY.html) you [](GLOSSARY.html) want to [](GLOSSARY.html) do [](GLOSSARY.html)
    it [](GLOSSARY.html) in [](GLOSSARY.html) steps, each [](GLOSSARY.html) one [](GLOSSARY.html)
    short, but [](GLOSSARY.html) taken [](GLOSSARY.html) together [](GLOSSARY.html)
    they [](GLOSSARY.html) run [](GLOSSARY.html) for [](GLOSSARY.html) a [](GLOSSARY.html)
    long [](GLOSSARY.html) time. the [](GLOSSARY.html) yield [](GLOSSARY.html) keyword,
    and [](GLOSSARY.html) therefore [](GLOSSARY.html) generators, happen [](GLOSSARY.html)
    to [](GLOSSARY.html) provide [](GLOSSARY.html) this [](GLOSSARY.html) exact service:
    suspend [](GLOSSARY.html) something [](GLOSSARY.html) and [](GLOSSARY.html) resume
    [](GLOSSARY.html) it [](GLOSSARY.html) later [](GLOSSARY.html) from [](GLOSSARY.html)
    where [](GLOSSARY.html) you [](GLOSSARY.html) left [](GLOSSARY.html) it. When
    you [](GLOSSARY.html) reach [](GLOSSARY.html) the [](GLOSSARY.html) yield, the
    [](GLOSSARY.html) main [](GLOSSARY.html) thread [](GLOSSARY.html) can [](GLOSSARY.html)
    now [](GLOSSARY.html) go [](GLOSSARY.html) back [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) event [](GLOSSARY.html) loop, and keep [](GLOSSARY.html)
    processing [](GLOSSARY.html) events. Somehow, where [](GLOSSARY.html) the [](GLOSSARY.html)
    execution [](GLOSSARY.html) was [](GLOSSARY.html) suspended [](GLOSSARY.html)
    to [](GLOSSARY.html) wait [](GLOSSARY.html) for a [](GLOSSARY.html) long [](GLOSSARY.html)
    running [](GLOSSARY.html) thing [](GLOSSARY.html) there [](GLOSSARY.html) will
    [](GLOSSARY.html) be [](GLOSSARY.html) some [](GLOSSARY.html) magic [](GLOSSARY.html)
    so [](GLOSSARY.html) that [](GLOSSARY.html) when [](GLOSSARY.html) the [](GLOSSARY.html)
    long [](GLOSSARY.html) running thing [](GLOSSARY.html) is [](GLOSSARY.html) done,
    the [](GLOSSARY.html) thread [](GLOSSARY.html) will [](GLOSSARY.html) know [](GLOSSARY.html)
    about [](GLOSSARY.html) it [](GLOSSARY.html) and [](GLOSSARY.html) go [](GLOSSARY.html)
    back [](GLOSSARY.html) to [](GLOSSARY.html) where [](GLOSSARY.html) it [](GLOSSARY.html)
    was suspended. This [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    achieved [](GLOSSARY.html) either [](GLOSSARY.html) by [](GLOSSARY.html) a [](GLOSSARY.html)
    secondary [](GLOSSARY.html) thread, or [](GLOSSARY.html) by [](GLOSSARY.html)
    the [](GLOSSARY.html) main thread [](GLOSSARY.html) itself: when [](GLOSSARY.html)
    it [](GLOSSARY.html) runs [](GLOSSARY.html) out [](GLOSSARY.html) of [](GLOSSARY.html)
    events [](GLOSSARY.html) to [](GLOSSARY.html) process, it [](GLOSSARY.html) works
    [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) long running [](GLOSSARY.html)
    task, maybe [](GLOSSARY.html) to [](GLOSSARY.html) be [](GLOSSARY.html) suspended
    [](GLOSSARY.html) again [](GLOSSARY.html) a [](GLOSSARY.html) little [](GLOSSARY.html)
    later. What [](GLOSSARY.html) you [](GLOSSARY.html) see [](GLOSSARY.html) is [](GLOSSARY.html)
    what is [](GLOSSARY.html) known [](GLOSSARY.html) as [](GLOSSARY.html) collaborative
    (or [](GLOSSARY.html) cooperative) multitasking. The [](GLOSSARY.html) event [](GLOSSARY.html)
    loop [](GLOSSARY.html) is basically [](GLOSSARY.html) a "kernel", and [](GLOSSARY.html)
    yield [](GLOSSARY.html) points [](GLOSSARY.html) are [](GLOSSARY.html) equivalent
    [](GLOSSARY.html) to "system [](GLOSSARY.html) calls" into the "kernel". At [](GLOSSARY.html)
    this [](GLOSSARY.html) yield [](GLOSSARY.html) points, the [](GLOSSARY.html) control
    [](GLOSSARY.html) is [](GLOSSARY.html) returned [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) kernel, which [](GLOSSARY.html) is [](GLOSSARY.html) now
    [](GLOSSARY.html) free [](GLOSSARY.html) to [](GLOSSARY.html) run [](GLOSSARY.html)
    something [](GLOSSARY.html) else, interleaving [](GLOSSARY.html) all [](GLOSSARY.html)
    the [](GLOSSARY.html) handling [](GLOSSARY.html) and keeping [](GLOSSARY.html)
    the [](GLOSSARY.html) event [](GLOSSARY.html) processing [](GLOSSARY.html) alive,
    instead [](GLOSSARY.html) of [](GLOSSARY.html) being [](GLOSSARY.html) stuck [](GLOSSARY.html)
    at [](GLOSSARY.html) one [](GLOSSARY.html) particular handler. Note [](GLOSSARY.html)
    that [](GLOSSARY.html) this [](GLOSSARY.html) mechanism [](GLOSSARY.html) requires
    [](GLOSSARY.html) collaboration: the [](GLOSSARY.html) individual handlers [](GLOSSARY.html)
    must [](GLOSSARY.html) yield [](GLOSSARY.html) to [](GLOSSARY.html) inform [](GLOSSARY.html)
    the "kernel" "I''m [](GLOSSARY.html) not [](GLOSSARY.html) done [](GLOSSARY.html)
    here [](GLOSSARY.html) yet, but [](GLOSSARY.html) give someone [](GLOSSARY.html)
    else [](GLOSSARY.html) a [](GLOSSARY.html) chance [](GLOSSARY.html) to [](GLOSSARY.html)
    keep [](GLOSSARY.html) going". This [](GLOSSARY.html) compares [](GLOSSARY.html)
    with [](GLOSSARY.html) preemptive multitasking [](GLOSSARY.html) where [](GLOSSARY.html)
    the [](GLOSSARY.html) kernel [](GLOSSARY.html) is [](GLOSSARY.html) the [](GLOSSARY.html)
    one [](GLOSSARY.html) saying: "that''s [](GLOSSARY.html) it, you [](GLOSSARY.html)
    had [](GLOSSARY.html) enough fun, let''s [](GLOSSARY.html) someone [](GLOSSARY.html)
    else [](GLOSSARY.html) go [](GLOSSARY.html) now", which [](GLOSSARY.html) is [](GLOSSARY.html)
    what [](GLOSSARY.html) modern [](GLOSSARY.html) real [](GLOSSARY.html) kernels
    [](GLOSSARY.html) do. So asyncio [](GLOSSARY.html) is [](GLOSSARY.html) a [](GLOSSARY.html)
    form [](GLOSSARY.html) of [](GLOSSARY.html) event [](GLOSSARY.html) loop [](GLOSSARY.html)
    and [](GLOSSARY.html) collaborative [](GLOSSARY.html) multitasking [](GLOSSARY.html)
    to [](GLOSSARY.html) allow [](GLOSSARY.html) event driven [](GLOSSARY.html) programming
    [](GLOSSARY.html) without [](GLOSSARY.html) either [](GLOSSARY.html) having [](GLOSSARY.html)
    an [](GLOSSARY.html) unresponsive [](GLOSSARY.html) application [](GLOSSARY.html)
    or [](GLOSSARY.html) having to [](GLOSSARY.html) deal [](GLOSSARY.html) with [](GLOSSARY.html)
    multiple [](GLOSSARY.html) threads, callbacks [](GLOSSARY.html) and [](GLOSSARY.html)
    all [](GLOSSARY.html) the [](GLOSSARY.html) horror [](GLOSSARY.html) that [](GLOSSARY.html)
    arises [](GLOSSARY.html) from [](GLOSSARY.html) it in [](GLOSSARY.html) an [](GLOSSARY.html)
    event [](GLOSSARY.html) driven [](GLOSSARY.html) environment.'
  prefs: []
  type: TYPE_NORMAL
- en: Thrashing prevention
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To [](GLOSSARY.html) prevent [](GLOSSARY.html) trashing [](GLOSSARY.html) with
    [](GLOSSARY.html) many [](GLOSSARY.html) notifications, there [](GLOSSARY.html)
    are [](GLOSSARY.html) three [](GLOSSARY.html) strategies:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Validation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Validation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Who [](GLOSSARY.html) performs [](GLOSSARY.html) validation? View? Controller?
    Model? Consistency [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    data [](GLOSSARY.html) inside [](GLOSSARY.html) the [](GLOSSARY.html) model? Depending
    [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) application, the
    [](GLOSSARY.html) model [](GLOSSARY.html) can [](GLOSSARY.html) host [](GLOSSARY.html)
    invalid [](GLOSSARY.html) data (that [](GLOSSARY.html) is, invalid [](GLOSSARY.html)
    for [](GLOSSARY.html) the [](GLOSSARY.html) application)
  prefs: []
  type: TYPE_NORMAL
- en: Lapsed listener problem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Lapsed Listener Problem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) notification [](GLOSSARY.html) system [](GLOSSARY.html)
    introduces [](GLOSSARY.html) a [](GLOSSARY.html) potential [](GLOSSARY.html) for
    [](GLOSSARY.html) memory [](GLOSSARY.html) leaks [](GLOSSARY.html) known [](GLOSSARY.html)
    as "Lapsed [](GLOSSARY.html) listener [](GLOSSARY.html) problem". It [](GLOSSARY.html)
    occurs [](GLOSSARY.html) when [](GLOSSARY.html) a [](GLOSSARY.html) listener [](GLOSSARY.html)
    registers [](GLOSSARY.html) to [](GLOSSARY.html) a notifier, then [](GLOSSARY.html)
    goes [](GLOSSARY.html) out [](GLOSSARY.html) of [](GLOSSARY.html) scope [](GLOSSARY.html)
    without [](GLOSSARY.html) unsubscribing. The [](GLOSSARY.html) listener is [](GLOSSARY.html)
    never [](GLOSSARY.html) garbage [](GLOSSARY.html) collected [](GLOSSARY.html)
    due [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html) permanence [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) notification connection. It [](GLOSSARY.html)
    is [](GLOSSARY.html) technically [](GLOSSARY.html) still [](GLOSSARY.html) receiving
    [](GLOSSARY.html) notifications, which [](GLOSSARY.html) may [](GLOSSARY.html)
    introduce additional [](GLOSSARY.html) problems [](GLOSSARY.html) if [](GLOSSARY.html)
    these [](GLOSSARY.html) notifications [](GLOSSARY.html) are [](GLOSSARY.html)
    expensive [](GLOSSARY.html) to [](GLOSSARY.html) honor. In [](GLOSSARY.html) languages
    [](GLOSSARY.html) without [](GLOSSARY.html) GC, if [](GLOSSARY.html) the [](GLOSSARY.html)
    listener [](GLOSSARY.html) is [](GLOSSARY.html) deleted, the [](GLOSSARY.html)
    notifier [](GLOSSARY.html) can [](GLOSSARY.html) now [](GLOSSARY.html) hold [](GLOSSARY.html)
    a reference [](GLOSSARY.html) to [](GLOSSARY.html) freed [](GLOSSARY.html) memory,
    potentially [](GLOSSARY.html) resulting [](GLOSSARY.html) in [](GLOSSARY.html)
    a [](GLOSSARY.html) crash.
  prefs: []
  type: TYPE_NORMAL
- en: There [](GLOSSARY.html) are [](GLOSSARY.html) various [](GLOSSARY.html) options
    [](GLOSSARY.html) to [](GLOSSARY.html) solve [](GLOSSARY.html) this [](GLOSSARY.html)
    problem. The [](GLOSSARY.html) first [](GLOSSARY.html) is [](GLOSSARY.html) to
    [](GLOSSARY.html) make [](GLOSSARY.html) sure the [](GLOSSARY.html) listener [](GLOSSARY.html)
    is [](GLOSSARY.html) correctly [](GLOSSARY.html) unregistered [](GLOSSARY.html)
    before [](GLOSSARY.html) going [](GLOSSARY.html) out [](GLOSSARY.html) of [](GLOSSARY.html)
    scope [](GLOSSARY.html) or [](GLOSSARY.html) released.
  prefs: []
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) second [](GLOSSARY.html) option [](GLOSSARY.html) is [](GLOSSARY.html)
    to [](GLOSSARY.html) have [](GLOSSARY.html) a [](GLOSSARY.html) notification [](GLOSSARY.html)
    system [](GLOSSARY.html) using [](GLOSSARY.html) weak [](GLOSSARY.html) references.
  prefs: []
  type: TYPE_NORMAL
- en: problem [](GLOSSARY.html) can [](GLOSSARY.html) exist [](GLOSSARY.html) also
    [](GLOSSARY.html) with [](GLOSSARY.html) callbacks [](GLOSSARY.html) that [](GLOSSARY.html)
    are [](GLOSSARY.html) closures, or [](GLOSSARY.html) when [](GLOSSARY.html) exceptions
    [](GLOSSARY.html) are stored.
  prefs: []
  type: TYPE_NORMAL
- en: Publisher Subscriber
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Event bus / PubSub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Full [](GLOSSARY.html) decoupling [](GLOSSARY.html) between [](GLOSSARY.html)
    publishers [](GLOSSARY.html) and [](GLOSSARY.html) subscribers. Publishers [](GLOSSARY.html)
    don't [](GLOSSARY.html) know [](GLOSSARY.html) about [](GLOSSARY.html) subscribers,
    and [](GLOSSARY.html) vice-versa. Messages [](GLOSSARY.html) are [](GLOSSARY.html)
    sender [](GLOSSARY.html) to [](GLOSSARY.html) receiver. The [](GLOSSARY.html)
    receiver [](GLOSSARY.html) cannot "reply" to [](GLOSSARY.html) the [](GLOSSARY.html)
    sender.
  prefs: []
  type: TYPE_NORMAL
- en: Example, wxpython [](GLOSSARY.html) provides [](GLOSSARY.html) a [](GLOSSARY.html)
    nice [](GLOSSARY.html) example [](GLOSSARY.html) of [](GLOSSARY.html) pubsub [](GLOSSARY.html)
    model
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Objects [](GLOSSARY.html) that [](GLOSSARY.html) are [](GLOSSARY.html) interested
    [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html) notification [](GLOSSARY.html)
    can [](GLOSSARY.html) now [](GLOSSARY.html) subscribe [](GLOSSARY.html) to [](GLOSSARY.html)
    the qualified [](GLOSSARY.html) notification [](GLOSSARY.html) as [](GLOSSARY.html)
    follows. The handler [](GLOSSARY.html) will [](GLOSSARY.html) receive [](GLOSSARY.html)
    a [](GLOSSARY.html) message, qualified [](GLOSSARY.html) with [](GLOSSARY.html)
    the [](GLOSSARY.html) appropriate [](GLOSSARY.html) information
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: NSNotificationCenter [](GLOSSARY.html) is [](GLOSSARY.html) a [](GLOSSARY.html)
    pubsub.
  prefs: []
  type: TYPE_NORMAL
- en: decoupling [](GLOSSARY.html) makes [](GLOSSARY.html) compile [](GLOSSARY.html)
    time [](GLOSSARY.html) checks [](GLOSSARY.html) useless.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: delivery [](GLOSSARY.html) network [](GLOSSARY.html) can [](GLOSSARY.html) become
    [](GLOSSARY.html) complicated. Incorrect [](GLOSSARY.html) setup [](GLOSSARY.html)
    can [](GLOSSARY.html) lead [](GLOSSARY.html) to [](GLOSSARY.html) unintended [](GLOSSARY.html)
    listeners [](GLOSSARY.html) to [](GLOSSARY.html) receive messages [](GLOSSARY.html)
    they [](GLOSSARY.html) are [](GLOSSARY.html) not [](GLOSSARY.html) supposed [](GLOSSARY.html)
    to [](GLOSSARY.html) receive. the [](GLOSSARY.html) application [](GLOSSARY.html)
    flow [](GLOSSARY.html) is [](GLOSSARY.html) hard [](GLOSSARY.html) to [](GLOSSARY.html)
    understand [](GLOSSARY.html) and [](GLOSSARY.html) debug.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: from [](GLOSSARY.html) the [](GLOSSARY.html) code [](GLOSSARY.html) alone, it's
    [](GLOSSARY.html) hard [](GLOSSARY.html) to [](GLOSSARY.html) spot [](GLOSSARY.html)
    the [](GLOSSARY.html) dependency [](GLOSSARY.html) between [](GLOSSARY.html) a
    [](GLOSSARY.html) publisher [](GLOSSARY.html) and [](GLOSSARY.html) a [](GLOSSARY.html)
    subscriber, in [](GLOSSARY.html) particularly [](GLOSSARY.html) when [](GLOSSARY.html)
    the [](GLOSSARY.html) message [](GLOSSARY.html) is [](GLOSSARY.html) emitted [](GLOSSARY.html)
    and [](GLOSSARY.html) delivered.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: delivery [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html) synchronous
    [](GLOSSARY.html) or [](GLOSSARY.html) asynchronous, but [](GLOSSARY.html) even
    [](GLOSSARY.html) when [](GLOSSARY.html) synchronous, it's [](GLOSSARY.html) not
    [](GLOSSARY.html) possible to [](GLOSSARY.html) rely [](GLOSSARY.html) on [](GLOSSARY.html)
    delivery [](GLOSSARY.html) order.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: message [](GLOSSARY.html) source [](GLOSSARY.html) may [](GLOSSARY.html) not
    [](GLOSSARY.html) be [](GLOSSARY.html) available [](GLOSSARY.html) to [](GLOSSARY.html)
    the [](GLOSSARY.html) receiver.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: use [](GLOSSARY.html) of [](GLOSSARY.html) topics [](GLOSSARY.html) to [](GLOSSARY.html)
    group [](GLOSSARY.html) message [](GLOSSARY.html) types.
  prefs: []
  type: TYPE_NORMAL
- en: Model Distribution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Model Distribution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: sharding?
  prefs: []
  type: TYPE_NORMAL
- en: Multithreading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Multithreading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem [](GLOSSARY.html) with [](GLOSSARY.html) multiple [](GLOSSARY.html)
    threads. Sending [](GLOSSARY.html) notifications [](GLOSSARY.html) that [](GLOSSARY.html)
    are [](GLOSSARY.html) delivered [](GLOSSARY.html) as [](GLOSSARY.html) the [](GLOSSARY.html)
    same [](GLOSSARY.html) thread. Describe [](GLOSSARY.html) how [](GLOSSARY.html)
    Qt [](GLOSSARY.html) manages [](GLOSSARY.html) to [](GLOSSARY.html) handle [](GLOSSARY.html)
    delivery [](GLOSSARY.html) through [](GLOSSARY.html) the [](GLOSSARY.html) event
    [](GLOSSARY.html) loop if [](GLOSSARY.html) two [](GLOSSARY.html) objects [](GLOSSARY.html)
    have [](GLOSSARY.html) different [](GLOSSARY.html) thread [](GLOSSARY.html) affinity.
  prefs: []
  type: TYPE_NORMAL
- en: Do [](GLOSSARY.html) not [](GLOSSARY.html) spawn [](GLOSSARY.html) threads.
    makes [](GLOSSARY.html) things [](GLOSSARY.html) harder [](GLOSSARY.html) to [](GLOSSARY.html)
    handle. use [](GLOSSARY.html) a [](GLOSSARY.html) thread [](GLOSSARY.html) pool.
  prefs: []
  type: TYPE_NORMAL
- en: Models [](GLOSSARY.html) should [](GLOSSARY.html) be [](GLOSSARY.html) synchronous,
    so [](GLOSSARY.html) you [](GLOSSARY.html) can [](GLOSSARY.html) decide [](GLOSSARY.html)
    which [](GLOSSARY.html) threading [](GLOSSARY.html) strategy to [](GLOSSARY.html)
    use.
  prefs: []
  type: TYPE_NORMAL
- en: Have [](GLOSSARY.html) futures.
  prefs: []
  type: TYPE_NORMAL
- en: 'Separate [](GLOSSARY.html) threads [](GLOSSARY.html) can [](GLOSSARY.html)
    act [](GLOSSARY.html) independently, produced [](GLOSSARY.html) by [](GLOSSARY.html)
    code [](GLOSSARY.html) running [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html)
    main (event [](GLOSSARY.html) loop) thread. The [](GLOSSARY.html) problem [](GLOSSARY.html)
    is [](GLOSSARY.html) that [](GLOSSARY.html) any [](GLOSSARY.html) change [](GLOSSARY.html)
    they [](GLOSSARY.html) can [](GLOSSARY.html) do [](GLOSSARY.html) can [](GLOSSARY.html)
    propagate through [](GLOSSARY.html) the [](GLOSSARY.html) network, and [](GLOSSARY.html)
    touch [](GLOSSARY.html) parts [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    code [](GLOSSARY.html) that [](GLOSSARY.html) is [](GLOSSARY.html) currently [](GLOSSARY.html)
    handled [](GLOSSARY.html) by [](GLOSSARY.html) the main [](GLOSSARY.html) thread.
    As [](GLOSSARY.html) a [](GLOSSARY.html) result, the [](GLOSSARY.html) generally
    [](GLOSSARY.html) better [](GLOSSARY.html) way [](GLOSSARY.html) of [](GLOSSARY.html)
    handling [](GLOSSARY.html) this [](GLOSSARY.html) situation [](GLOSSARY.html)
    is that [](GLOSSARY.html) secondary [](GLOSSARY.html) threads [](GLOSSARY.html)
    communicate [](GLOSSARY.html) with [](GLOSSARY.html) the [](GLOSSARY.html) main
    [](GLOSSARY.html) thread [](GLOSSARY.html) in [](GLOSSARY.html) two [](GLOSSARY.html)
    ways:'
  prefs: []
  type: TYPE_NORMAL
- en: setting [](GLOSSARY.html) state (using [](GLOSSARY.html) locks [](GLOSSARY.html)
    for [](GLOSSARY.html) synchronization)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: posting [](GLOSSARY.html) events [](GLOSSARY.html) into [](GLOSSARY.html) the
    [](GLOSSARY.html) event [](GLOSSARY.html) loop, so [](GLOSSARY.html) that [](GLOSSARY.html)
    the [](GLOSSARY.html) main [](GLOSSARY.html) thread [](GLOSSARY.html) can [](GLOSSARY.html)
    handle [](GLOSSARY.html) them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once [](GLOSSARY.html) an [](GLOSSARY.html) event [](GLOSSARY.html) is [](GLOSSARY.html)
    triggered, the [](GLOSSARY.html) application [](GLOSSARY.html) has [](GLOSSARY.html)
    around [](GLOSSARY.html) 1/60th [](GLOSSARY.html) of [](GLOSSARY.html) a [](GLOSSARY.html)
    second [](GLOSSARY.html) to [](GLOSSARY.html) return control [](GLOSSARY.html)
    to [](GLOSSARY.html) the [](GLOSSARY.html) event [](GLOSSARY.html) loop, meaning
    [](GLOSSARY.html) that [](GLOSSARY.html) the [](GLOSSARY.html) object/notification
    [](GLOSSARY.html) network [](GLOSSARY.html) traversal must [](GLOSSARY.html) be
    [](GLOSSARY.html) over [](GLOSSARY.html) quickly. If [](GLOSSARY.html) any [](GLOSSARY.html)
    event [](GLOSSARY.html) triggers [](GLOSSARY.html) something [](GLOSSARY.html)
    that [](GLOSSARY.html) can [](GLOSSARY.html) potentially [](GLOSSARY.html) last
    [](GLOSSARY.html) for [](GLOSSARY.html) more than [](GLOSSARY.html) the [](GLOSSARY.html)
    mentioned [](GLOSSARY.html) amount [](GLOSSARY.html) of [](GLOSSARY.html) time,
    it [](GLOSSARY.html) must [](GLOSSARY.html) be [](GLOSSARY.html) executed [](GLOSSARY.html)
    in [](GLOSSARY.html) a [](GLOSSARY.html) separate [](GLOSSARY.html) thread, or
    [](GLOSSARY.html) the interface [](GLOSSARY.html) responsiveness [](GLOSSARY.html)
    will [](GLOSSARY.html) suffer. Having [](GLOSSARY.html) a [](GLOSSARY.html) separate
    [](GLOSSARY.html) thread [](GLOSSARY.html) carries [](GLOSSARY.html) its [](GLOSSARY.html)
    additional [](GLOSSARY.html) quirks: can''t [](GLOSSARY.html) normally [](GLOSSARY.html)
    touch [](GLOSSARY.html) ui [](GLOSSARY.html) code, must [](GLOSSARY.html) be [](GLOSSARY.html)
    synchronized.'
  prefs: []
  type: TYPE_NORMAL
- en: FIXME [](GLOSSARY.html) do [](GLOSSARY.html) comparison [](GLOSSARY.html) with
    [](GLOSSARY.html) asynchronous [](GLOSSARY.html) single [](GLOSSARY.html) threaded
    [](GLOSSARY.html) programming. Put [](GLOSSARY.html) a [](GLOSSARY.html) useful
    [](GLOSSARY.html) picture
  prefs: []
  type: TYPE_NORMAL
- en: Notification looping prevention
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Notification looping prevention
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Notification [](GLOSSARY.html) messages [](GLOSSARY.html) from [](GLOSSARY.html)
    the [](GLOSSARY.html) Model [](GLOSSARY.html) can [](GLOSSARY.html) become [](GLOSSARY.html)
    problematic [](GLOSSARY.html) for [](GLOSSARY.html) a [](GLOSSARY.html) series
    [](GLOSSARY.html) of reason
  prefs: []
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) Views [](GLOSSARY.html) get [](GLOSSARY.html) informed
    [](GLOSSARY.html) that [](GLOSSARY.html) changes [](GLOSSARY.html) occurred, but
    [](GLOSSARY.html) it's [](GLOSSARY.html) in [](GLOSSARY.html) a [](GLOSSARY.html)
    part [](GLOSSARY.html) of [](GLOSSARY.html) the data [](GLOSSARY.html) model [](GLOSSARY.html)
    that [](GLOSSARY.html) is [](GLOSSARY.html) not [](GLOSSARY.html) represented
    [](GLOSSARY.html) by [](GLOSSARY.html) a [](GLOSSARY.html) specific [](GLOSSARY.html)
    View. Views [](GLOSSARY.html) must [](GLOSSARY.html) go [](GLOSSARY.html) through
    [](GLOSSARY.html) a refresh [](GLOSSARY.html) cycle [](GLOSSARY.html) even [](GLOSSARY.html)
    if [](GLOSSARY.html) no [](GLOSSARY.html) data [](GLOSSARY.html) has [](GLOSSARY.html)
    changed [](GLOSSARY.html) for [](GLOSSARY.html) them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A [](GLOSSARY.html) sequence [](GLOSSARY.html) of [](GLOSSARY.html) changes
    [](GLOSSARY.html) is [](GLOSSARY.html) performed [](GLOSSARY.html) on [](GLOSSARY.html)
    the [](GLOSSARY.html) Model, forcing [](GLOSSARY.html) a [](GLOSSARY.html) refresh
    [](GLOSSARY.html) of [](GLOSSARY.html) all [](GLOSSARY.html) the Views [](GLOSSARY.html)
    at [](GLOSSARY.html) each [](GLOSSARY.html) change, while [](GLOSSARY.html) a
    [](GLOSSARY.html) single [](GLOSSARY.html) refresh [](GLOSSARY.html) at [](GLOSSARY.html)
    the [](GLOSSARY.html) end [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    sequence [](GLOSSARY.html) would suffice.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) update-change [](GLOSSARY.html) cycle [](GLOSSARY.html)
    lead [](GLOSSARY.html) to [](GLOSSARY.html) an [](GLOSSARY.html) infinite [](GLOSSARY.html)
    loop
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Consider [](GLOSSARY.html) the [](GLOSSARY.html) following [](GLOSSARY.html)
    case [](GLOSSARY.html) of [](GLOSSARY.html) a [](GLOSSARY.html) SpinBox [](GLOSSARY.html)
    containing [](GLOSSARY.html) the [](GLOSSARY.html) value [](GLOSSARY.html) 3,
    and [](GLOSSARY.html) the [](GLOSSARY.html) associated [](GLOSSARY.html) Model
    [](GLOSSARY.html) value [](GLOSSARY.html) currently [](GLOSSARY.html) set [](GLOSSARY.html)
    to [](GLOSSARY.html) 3 [](GLOSSARY.html) as [](GLOSSARY.html) well. When [](GLOSSARY.html)
    the [](GLOSSARY.html) user [](GLOSSARY.html) interacts [](GLOSSARY.html) with
    [](GLOSSARY.html) the [](GLOSSARY.html) SpinBox, clicking [](GLOSSARY.html) the
    [](GLOSSARY.html) up [](GLOSSARY.html) arrow, the [](GLOSSARY.html) following
    [](GLOSSARY.html) sequence [](GLOSSARY.html) of [](GLOSSARY.html) events [](GLOSSARY.html)
    occurs:'
  prefs: []
  type: TYPE_NORMAL
- en: a [](GLOSSARY.html) valueChanged() signal [](GLOSSARY.html) is [](GLOSSARY.html)
    issued [](GLOSSARY.html) by [](GLOSSARY.html) the [](GLOSSARY.html) SpinBox [](GLOSSARY.html)
    with [](GLOSSARY.html) the [](GLOSSARY.html) new [](GLOSSARY.html) value, 4\.
    We [](GLOSSARY.html) assume [](GLOSSARY.html) the [](GLOSSARY.html) SpinBox [](GLOSSARY.html)
    keeps [](GLOSSARY.html) showing [](GLOSSARY.html) the [](GLOSSARY.html) old [](GLOSSARY.html)
    value, as [](GLOSSARY.html) it [](GLOSSARY.html) represents [](GLOSSARY.html)
    the [](GLOSSARY.html) Model, which [](GLOSSARY.html) at [](GLOSSARY.html) the
    [](GLOSSARY.html) moment [](GLOSSARY.html) contains [](GLOSSARY.html) 3\.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) Controller.setValue(4) method [](GLOSSARY.html) is [](GLOSSARY.html)
    called, which [](GLOSSARY.html) in [](GLOSSARY.html) turn [](GLOSSARY.html) calls
    [](GLOSSARY.html) Model.setValue(4).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) Model [](GLOSSARY.html) stores [](GLOSSARY.html) the [](GLOSSARY.html)
    new [](GLOSSARY.html) value [](GLOSSARY.html) 4, then [](GLOSSARY.html) issue
    [](GLOSSARY.html) a [](GLOSSARY.html) _notifyListeners [](GLOSSARY.html) to [](GLOSSARY.html)
    inform [](GLOSSARY.html) all [](GLOSSARY.html) the [](GLOSSARY.html) connected
    [](GLOSSARY.html) views, including [](GLOSSARY.html) the [](GLOSSARY.html) SpinBox.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) SpinBox [](GLOSSARY.html) receives [](GLOSSARY.html) the
    [](GLOSSARY.html) notify(), which [](GLOSSARY.html) now [](GLOSSARY.html) fetches
    [](GLOSSARY.html) the [](GLOSSARY.html) new [](GLOSSARY.html) value [](GLOSSARY.html)
    from [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html) and [](GLOSSARY.html)
    sets [](GLOSSARY.html) the [](GLOSSARY.html) new [](GLOSSARY.html) value [](GLOSSARY.html)
    using [](GLOSSARY.html) QSpinBox.setValue(4)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: the [](GLOSSARY.html) SpinBox [](GLOSSARY.html) is [](GLOSSARY.html) still [](GLOSSARY.html)
    containing [](GLOSSARY.html) the [](GLOSSARY.html) value [](GLOSSARY.html) 3\.
    QSpinBox.setValue(4) triggers [](GLOSSARY.html) valueChanged() again.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Controller.setValue [](GLOSSARY.html) is [](GLOSSARY.html) called [](GLOSSARY.html)
    again, reproducing [](GLOSSARY.html) the [](GLOSSARY.html) situation [](GLOSSARY.html)
    at [](GLOSSARY.html) point [](GLOSSARY.html) 2.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With [](GLOSSARY.html) this [](GLOSSARY.html) scenario, the [](GLOSSARY.html)
    application [](GLOSSARY.html) is [](GLOSSARY.html) potentially [](GLOSSARY.html)
    entering [](GLOSSARY.html) a [](GLOSSARY.html) notification loop. A [](GLOSSARY.html)
    prevention [](GLOSSARY.html) strategy [](GLOSSARY.html) is [](GLOSSARY.html) to
    [](GLOSSARY.html) have [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html)
    notify [](GLOSSARY.html) the [](GLOSSARY.html) listeners [](GLOSSARY.html) only
    [](GLOSSARY.html) if the [](GLOSSARY.html) new [](GLOSSARY.html) value [](GLOSSARY.html)
    differs [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html) currently
    [](GLOSSARY.html) stored [](GLOSSARY.html) one. This [](GLOSSARY.html) solution
    [](GLOSSARY.html) will terminate [](GLOSSARY.html) at [](GLOSSARY.html) point
    [](GLOSSARY.html) 3, technically [](GLOSSARY.html) performing [](GLOSSARY.html)
    useless [](GLOSSARY.html) Controller.setValue [](GLOSSARY.html) and Model.setValue
    [](GLOSSARY.html) calls. A [](GLOSSARY.html) tempting [](GLOSSARY.html) alternative
    [](GLOSSARY.html) solution [](GLOSSARY.html) is [](GLOSSARY.html) to [](GLOSSARY.html)
    have [](GLOSSARY.html) the [](GLOSSARY.html) SpinBox increment [](GLOSSARY.html)
    its [](GLOSSARY.html) visualized [](GLOSSARY.html) value [](GLOSSARY.html) independently
    [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html) Model, thus [](GLOSSARY.html)
    having [](GLOSSARY.html) the View [](GLOSSARY.html) autonomous [](GLOSSARY.html)
    in [](GLOSSARY.html) its [](GLOSSARY.html) visualized [](GLOSSARY.html) state.
    With [](GLOSSARY.html) this [](GLOSSARY.html) approach, after [](GLOSSARY.html)
    step [](GLOSSARY.html) 1 [](GLOSSARY.html) the SpinBox [](GLOSSARY.html) will
    [](GLOSSARY.html) show [](GLOSSARY.html) the [](GLOSSARY.html) number [](GLOSSARY.html)
    4\. The [](GLOSSARY.html) chain [](GLOSSARY.html) of [](GLOSSARY.html) events
    [](GLOSSARY.html) will [](GLOSSARY.html) unfold [](GLOSSARY.html) exactly [](GLOSSARY.html)
    in [](GLOSSARY.html) the same [](GLOSSARY.html) way [](GLOSSARY.html) until [](GLOSSARY.html)
    step [](GLOSSARY.html) 4\. The [](GLOSSARY.html) SpinBox [](GLOSSARY.html) will
    [](GLOSSARY.html) now [](GLOSSARY.html) observe [](GLOSSARY.html) that [](GLOSSARY.html)
    the [](GLOSSARY.html) new [](GLOSSARY.html) value [](GLOSSARY.html) in [](GLOSSARY.html)
    the Model [](GLOSSARY.html) is [](GLOSSARY.html) the [](GLOSSARY.html) same [](GLOSSARY.html)
    as [](GLOSSARY.html) the [](GLOSSARY.html) one [](GLOSSARY.html) it [](GLOSSARY.html)
    is [](GLOSSARY.html) currently [](GLOSSARY.html) displaying, terminating [](GLOSSARY.html)
    the [](GLOSSARY.html) chain by [](GLOSSARY.html) not [](GLOSSARY.html) triggering
    [](GLOSSARY.html) a [](GLOSSARY.html) valueChanged(). Depending [](GLOSSARY.html)
    on [](GLOSSARY.html) the [](GLOSSARY.html) toolkit [](GLOSSARY.html) used, graphical
    Views [](GLOSSARY.html) may [](GLOSSARY.html) or [](GLOSSARY.html) may [](GLOSSARY.html)
    not [](GLOSSARY.html) behave [](GLOSSARY.html) as [](GLOSSARY.html) described,
    but [](GLOSSARY.html) the [](GLOSSARY.html) fundamental [](GLOSSARY.html) issue
    [](GLOSSARY.html) with [](GLOSSARY.html) this approach [](GLOSSARY.html) is [](GLOSSARY.html)
    that [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html) is [](GLOSSARY.html)
    assuming [](GLOSSARY.html) to [](GLOSSARY.html) know [](GLOSSARY.html) the [](GLOSSARY.html)
    next [](GLOSSARY.html) value, and [](GLOSSARY.html) setting [](GLOSSARY.html)
    it accordingly, without [](GLOSSARY.html) involving [](GLOSSARY.html) any [](GLOSSARY.html)
    logic [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html) Controller
    [](GLOSSARY.html) or [](GLOSSARY.html) Model. The Model [](GLOSSARY.html) could,
    for [](GLOSSARY.html) example, consider [](GLOSSARY.html) the [](GLOSSARY.html)
    new [](GLOSSARY.html) value [](GLOSSARY.html) 4 [](GLOSSARY.html) to [](GLOSSARY.html)
    be [](GLOSSARY.html) invalid [](GLOSSARY.html) and [](GLOSSARY.html) set [](GLOSSARY.html)
    itself to [](GLOSSARY.html) the [](GLOSSARY.html) next [](GLOSSARY.html) valid
    [](GLOSSARY.html) one, for [](GLOSSARY.html) example [](GLOSSARY.html) 27\. This
    [](GLOSSARY.html) will [](GLOSSARY.html) force [](GLOSSARY.html) the [](GLOSSARY.html)
    View [](GLOSSARY.html) to [](GLOSSARY.html) update [](GLOSSARY.html) its graphical
    [](GLOSSARY.html) representation [](GLOSSARY.html) again.
  prefs: []
  type: TYPE_NORMAL
- en: Another [](GLOSSARY.html) strategy [](GLOSSARY.html) is [](GLOSSARY.html) to
    [](GLOSSARY.html) prevent [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html)
    from [](GLOSSARY.html) updating [](GLOSSARY.html) itself [](GLOSSARY.html) twice
    [](GLOSSARY.html) within [](GLOSSARY.html) the same [](GLOSSARY.html) cycle [](GLOSSARY.html)
    of [](GLOSSARY.html) events. A [](GLOSSARY.html) possible [](GLOSSARY.html) implementation
    [](GLOSSARY.html) of [](GLOSSARY.html) this [](GLOSSARY.html) strategy [](GLOSSARY.html)
    is [](GLOSSARY.html) to [](GLOSSARY.html) hold [](GLOSSARY.html) a flag [](GLOSSARY.html)
    updating [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) View. The
    [](GLOSSARY.html) flag [](GLOSSARY.html) is [](GLOSSARY.html) set [](GLOSSARY.html)
    to [](GLOSSARY.html) True [](GLOSSARY.html) at [](GLOSSARY.html) step [](GLOSSARY.html)
    1\. The [](GLOSSARY.html) chain [](GLOSSARY.html) of events [](GLOSSARY.html)
    develops [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html) same [](GLOSSARY.html)
    way [](GLOSSARY.html) until [](GLOSSARY.html) step [](GLOSSARY.html) 5, where
    [](GLOSSARY.html) the [](GLOSSARY.html) setValue [](GLOSSARY.html) operation [](GLOSSARY.html)
    will check [](GLOSSARY.html) for [](GLOSSARY.html) the [](GLOSSARY.html) flag.
    If [](GLOSSARY.html) true, it [](GLOSSARY.html) will [](GLOSSARY.html) only [](GLOSSARY.html)
    update [](GLOSSARY.html) the [](GLOSSARY.html) graphical [](GLOSSARY.html) aspect
    [](GLOSSARY.html) of [](GLOSSARY.html) the widget, and [](GLOSSARY.html) skip
    [](GLOSSARY.html) the [](GLOSSARY.html) triggering [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) second [](GLOSSARY.html) valueChanged() signal. Another
    strategy [](GLOSSARY.html) is [](GLOSSARY.html) to [](GLOSSARY.html) have [](GLOSSARY.html)
    a [](GLOSSARY.html) View [](GLOSSARY.html) that [](GLOSSARY.html) does [](GLOSSARY.html)
    not [](GLOSSARY.html) triggers [](GLOSSARY.html) valueChanged [](GLOSSARY.html)
    under [](GLOSSARY.html) certain conditions.
  prefs: []
  type: TYPE_NORMAL
- en: Shut [](GLOSSARY.html) down [](GLOSSARY.html) the [](GLOSSARY.html) Model [](GLOSSARY.html)
    notification [](GLOSSARY.html) system? not [](GLOSSARY.html) a [](GLOSSARY.html)
    good [](GLOSSARY.html) idea. other [](GLOSSARY.html) parties [](GLOSSARY.html)
    will not [](GLOSSARY.html) receive [](GLOSSARY.html) events. Another [](GLOSSARY.html)
    alternative [](GLOSSARY.html) is [](GLOSSARY.html) to [](GLOSSARY.html) detach
    [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html) from [](GLOSSARY.html)
    the notification. It [](GLOSSARY.html) will [](GLOSSARY.html) not [](GLOSSARY.html)
    receive [](GLOSSARY.html) update [](GLOSSARY.html) notifications [](GLOSSARY.html)
    from [](GLOSSARY.html) the [](GLOSSARY.html) model, just [](GLOSSARY.html) set
    the [](GLOSSARY.html) value. It [](GLOSSARY.html) won't [](GLOSSARY.html) see
    [](GLOSSARY.html) changes [](GLOSSARY.html) in [](GLOSSARY.html) the [](GLOSSARY.html)
    model [](GLOSSARY.html) that [](GLOSSARY.html) originate [](GLOSSARY.html) from
    [](GLOSSARY.html) outside though.
  prefs: []
  type: TYPE_NORMAL
- en: To [](GLOSSARY.html) prevent [](GLOSSARY.html) notification [](GLOSSARY.html)
    trashing, one [](GLOSSARY.html) can [](GLOSSARY.html) rely [](GLOSSARY.html) on
    [](GLOSSARY.html) transaction, to turn [](GLOSSARY.html) off [](GLOSSARY.html)
    notifications [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) model,
    perform [](GLOSSARY.html) a [](GLOSSARY.html) set [](GLOSSARY.html) of [](GLOSSARY.html)
    changes, then triggering [](GLOSSARY.html) the [](GLOSSARY.html) notification
    [](GLOSSARY.html) by [](GLOSSARY.html) closing [](GLOSSARY.html) the [](GLOSSARY.html)
    transaction. When multiple [](GLOSSARY.html) independent [](GLOSSARY.html) modifications
    [](GLOSSARY.html) must [](GLOSSARY.html) be [](GLOSSARY.html) performed [](GLOSSARY.html)
    on [](GLOSSARY.html) the [](GLOSSARY.html) model [](GLOSSARY.html) in sequence,
    it [](GLOSSARY.html) pays [](GLOSSARY.html) off [](GLOSSARY.html) to [](GLOSSARY.html)
    have [](GLOSSARY.html) a [](GLOSSARY.html) method [](GLOSSARY.html) to [](GLOSSARY.html)
    disable [](GLOSSARY.html) and [](GLOSSARY.html) enable notifications. Without
    [](GLOSSARY.html) this [](GLOSSARY.html) technique, every [](GLOSSARY.html) individual
    [](GLOSSARY.html) change [](GLOSSARY.html) would trigger [](GLOSSARY.html) an
    [](GLOSSARY.html) update [](GLOSSARY.html) and [](GLOSSARY.html) force [](GLOSSARY.html)
    a [](GLOSSARY.html) refresh [](GLOSSARY.html) of [](GLOSSARY.html) the [](GLOSSARY.html)
    connected [](GLOSSARY.html) views, potentially [](GLOSSARY.html) ruining [](GLOSSARY.html)
    performance [](GLOSSARY.html) and [](GLOSSARY.html) exposing [](GLOSSARY.html)
    the [](GLOSSARY.html) user [](GLOSSARY.html) to [](GLOSSARY.html) progressive
    changes [](GLOSSARY.html) through [](GLOSSARY.html) the [](GLOSSARY.html) interface
    [](GLOSSARY.html) as [](GLOSSARY.html) each [](GLOSSARY.html) change [](GLOSSARY.html)
    is [](GLOSSARY.html) applied. By disabling [](GLOSSARY.html) the [](GLOSSARY.html)
    notifications, performing [](GLOSSARY.html) the [](GLOSSARY.html) changes, and
    [](GLOSSARY.html) re-enabling the [](GLOSSARY.html) notifications, a [](GLOSSARY.html)
    single [](GLOSSARY.html) update [](GLOSSARY.html) will [](GLOSSARY.html) be [](GLOSSARY.html)
    triggered. model [](GLOSSARY.html) packing multiple [](GLOSSARY.html) changes
    [](GLOSSARY.html) to [](GLOSSARY.html) deliver [](GLOSSARY.html) a [](GLOSSARY.html)
    single [](GLOSSARY.html) refresh [](GLOSSARY.html) to [](GLOSSARY.html) the [](GLOSSARY.html)
    view [](GLOSSARY.html) controller disabling [](GLOSSARY.html) notifications [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) model.
  prefs: []
  type: TYPE_NORMAL
- en: 'FIXME: Another [](GLOSSARY.html) example:'
  prefs: []
  type: TYPE_NORMAL
- en: a [](GLOSSARY.html) view [](GLOSSARY.html) has [](GLOSSARY.html) two [](GLOSSARY.html)
    methods, one [](GLOSSARY.html) that [](GLOSSARY.html) stores [](GLOSSARY.html)
    stuff [](GLOSSARY.html) on [](GLOSSARY.html) the [](GLOSSARY.html) model [](GLOSSARY.html)
    from [](GLOSSARY.html) the [](GLOSSARY.html) widget content, and [](GLOSSARY.html)
    another [](GLOSSARY.html) one [](GLOSSARY.html) that [](GLOSSARY.html) takes [](GLOSSARY.html)
    data [](GLOSSARY.html) from [](GLOSSARY.html) the [](GLOSSARY.html) model [](GLOSSARY.html)
    and [](GLOSSARY.html) stores [](GLOSSARY.html) it [](GLOSSARY.html) in the [](GLOSSARY.html)
    widgets. If [](GLOSSARY.html) the [](GLOSSARY.html) widget.setValue(model.value)
    triggers [](GLOSSARY.html) a [](GLOSSARY.html) notification [](GLOSSARY.html)
    and [](GLOSSARY.html) a [](GLOSSARY.html) request [](GLOSSARY.html) for [](GLOSSARY.html)
    syncing (as [](GLOSSARY.html) normally [](GLOSSARY.html) happens [](GLOSSARY.html)
    when [](GLOSSARY.html) the [](GLOSSARY.html) user [](GLOSSARY.html) writes [](GLOSSARY.html)
    a [](GLOSSARY.html) value), we [](GLOSSARY.html) need [](GLOSSARY.html) to [](GLOSSARY.html)
    disable notification [](GLOSSARY.html) when [](GLOSSARY.html) the [](GLOSSARY.html)
    modelToWidget() method [](GLOSSARY.html) is [](GLOSSARY.html) called, otherwise
    [](GLOSSARY.html) it [](GLOSSARY.html) will [](GLOSSARY.html) trigger notifications
    [](GLOSSARY.html) into [](GLOSSARY.html) the [](GLOSSARY.html) model, potentially
    [](GLOSSARY.html) calling [](GLOSSARY.html) modelToWidget() again.
  prefs: []
  type: TYPE_NORMAL
- en: We [](GLOSSARY.html) normally [](GLOSSARY.html) skip [](GLOSSARY.html) this
    [](GLOSSARY.html) with [](GLOSSARY.html) a [](GLOSSARY.html) flag [](GLOSSARY.html)
    in [](GLOSSARY.html) the modelToWidget() method [](GLOSSARY.html) that [](GLOSSARY.html)
    prevents [](GLOSSARY.html) recursion by [](GLOSSARY.html) bailing [](GLOSSARY.html)
    out [](GLOSSARY.html) if [](GLOSSARY.html) set [](GLOSSARY.html) to [](GLOSSARY.html)
    true, and [](GLOSSARY.html) it's [](GLOSSARY.html) set [](GLOSSARY.html) to [](GLOSSARY.html)
    true [](GLOSSARY.html) immediately, or [](GLOSSARY.html) disabling [](GLOSSARY.html)
    notification for [](GLOSSARY.html) the [](GLOSSARY.html) widget [](GLOSSARY.html)
    to [](GLOSSARY.html) synchronize. Make [](GLOSSARY.html) a [](GLOSSARY.html) code
    [](GLOSSARY.html) example [](GLOSSARY.html) for [](GLOSSARY.html) this
  prefs: []
  type: TYPE_NORMAL
- en: Delayed Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Delayed Model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'FIXME: Asynchronous. Move [](GLOSSARY.html) this [](GLOSSARY.html) one [](GLOSSARY.html)
    to [](GLOSSARY.html) advanced [](GLOSSARY.html) patterns.'
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Every [](GLOSSARY.html) time [](GLOSSARY.html) a [](GLOSSARY.html) Model [](GLOSSARY.html)
    changes, the [](GLOSSARY.html) View [](GLOSSARY.html) must [](GLOSSARY.html) refresh
    [](GLOSSARY.html) against [](GLOSSARY.html) the [](GLOSSARY.html) new [](GLOSSARY.html)
    data. This [](GLOSSARY.html) step [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    time [](GLOSSARY.html) consuming. If [](GLOSSARY.html) the [](GLOSSARY.html) Model
    [](GLOSSARY.html) is [](GLOSSARY.html) going [](GLOSSARY.html) through [](GLOSSARY.html)
    a [](GLOSSARY.html) lot [](GLOSSARY.html) of [](GLOSSARY.html) changes in [](GLOSSARY.html)
    a [](GLOSSARY.html) very [](GLOSSARY.html) short [](GLOSSARY.html) amount [](GLOSSARY.html)
    of [](GLOSSARY.html) time, shorter [](GLOSSARY.html) than [](GLOSSARY.html) the
    [](GLOSSARY.html) time [](GLOSSARY.html) needed [](GLOSSARY.html) to [](GLOSSARY.html)
    refresh [](GLOSSARY.html) the [](GLOSSARY.html) View, we [](GLOSSARY.html) might
    [](GLOSSARY.html) not [](GLOSSARY.html) want [](GLOSSARY.html) the [](GLOSSARY.html)
    View [](GLOSSARY.html) to [](GLOSSARY.html) follow [](GLOSSARY.html) through.
    This [](GLOSSARY.html) mechanism [](GLOSSARY.html) is [](GLOSSARY.html) known
    [](GLOSSARY.html) as "debouncing".
  prefs: []
  type: TYPE_NORMAL
- en: We [](GLOSSARY.html) can [](GLOSSARY.html) neutralize [](GLOSSARY.html) these
    [](GLOSSARY.html) fast [](GLOSSARY.html) changes [](GLOSSARY.html) in [](GLOSSARY.html)
    the [](GLOSSARY.html) Model [](GLOSSARY.html) either [](GLOSSARY.html) View-side
    [](GLOSSARY.html) or [](GLOSSARY.html) Model-side.
  prefs: []
  type: TYPE_NORMAL
- en: Design
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The [](GLOSSARY.html) Model [](GLOSSARY.html) holds [](GLOSSARY.html) a [](GLOSSARY.html)
    timer. Every [](GLOSSARY.html) time [](GLOSSARY.html) a [](GLOSSARY.html) change
    [](GLOSSARY.html) is [](GLOSSARY.html) performed [](GLOSSARY.html) on [](GLOSSARY.html)
    the [](GLOSSARY.html) Model [](GLOSSARY.html) and [](GLOSSARY.html) the [](GLOSSARY.html)
    Timer [](GLOSSARY.html) is [](GLOSSARY.html) not [](GLOSSARY.html) running, the
    [](GLOSSARY.html) Timer [](GLOSSARY.html) is [](GLOSSARY.html) started. No [](GLOSSARY.html)
    notification [](GLOSSARY.html) is [](GLOSSARY.html) issued [](GLOSSARY.html) to
    [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html) until [](GLOSSARY.html)
    the [](GLOSSARY.html) Timer [](GLOSSARY.html) runs [](GLOSSARY.html) out.
  prefs: []
  type: TYPE_NORMAL
- en: '![](images/delayed_model/delayed_model.png)'
  prefs: []
  type: TYPE_IMG
- en: Being [](GLOSSARY.html) the [](GLOSSARY.html) timer [](GLOSSARY.html) asynchronous,
    particular [](GLOSSARY.html) care [](GLOSSARY.html) must [](GLOSSARY.html) be
    [](GLOSSARY.html) taken [](GLOSSARY.html) to [](GLOSSARY.html) guarantee [](GLOSSARY.html)
    that [](GLOSSARY.html) the [](GLOSSARY.html) event [](GLOSSARY.html) is [](GLOSSARY.html)
    not [](GLOSSARY.html) delivered [](GLOSSARY.html) when [](GLOSSARY.html) the [](GLOSSARY.html)
    Model [](GLOSSARY.html) is [](GLOSSARY.html) undergoing [](GLOSSARY.html) another
    [](GLOSSARY.html) change.
  prefs: []
  type: TYPE_NORMAL
- en: In [](GLOSSARY.html) both [](GLOSSARY.html) cases, if [](GLOSSARY.html) the
    [](GLOSSARY.html) new [](GLOSSARY.html) change [](GLOSSARY.html) overlaps [](GLOSSARY.html)
    with [](GLOSSARY.html) the [](GLOSSARY.html) previous [](GLOSSARY.html) one, the
    [](GLOSSARY.html) old [](GLOSSARY.html) change can [](GLOSSARY.html) be [](GLOSSARY.html)
    discarded (as [](GLOSSARY.html) it [](GLOSSARY.html) will [](GLOSSARY.html) never
    [](GLOSSARY.html) get [](GLOSSARY.html) to [](GLOSSARY.html) appear [](GLOSSARY.html)
    on [](GLOSSARY.html) the [](GLOSSARY.html) view). Otherwise, the [](GLOSSARY.html)
    two [](GLOSSARY.html) changes [](GLOSSARY.html) can [](GLOSSARY.html) be [](GLOSSARY.html)
    combined if [](GLOSSARY.html) the [](GLOSSARY.html) notification [](GLOSSARY.html)
    is [](GLOSSARY.html) qualified. If [](GLOSSARY.html) it's [](GLOSSARY.html) not
    [](GLOSSARY.html) qualified, then [](GLOSSARY.html) when [](GLOSSARY.html) the
    [](GLOSSARY.html) View [](GLOSSARY.html) is [](GLOSSARY.html) finally [](GLOSSARY.html)
    notified at [](GLOSSARY.html) the [](GLOSSARY.html) end [](GLOSSARY.html) of [](GLOSSARY.html)
    the [](GLOSSARY.html) timer, it [](GLOSSARY.html) will [](GLOSSARY.html) get [](GLOSSARY.html)
    the [](GLOSSARY.html) current [](GLOSSARY.html) state.
  prefs: []
  type: TYPE_NORMAL
- en: Throttling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Throttling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Similar [](GLOSSARY.html) to [](GLOSSARY.html) debouncing, but [](GLOSSARY.html)
    the [](GLOSSARY.html) notification [](GLOSSARY.html) is [](GLOSSARY.html) issued
    [](GLOSSARY.html) immediately, and [](GLOSSARY.html) then not [](GLOSSARY.html)
    anymore [](GLOSSARY.html) until [](GLOSSARY.html) the [](GLOSSARY.html) timer
    [](GLOSSARY.html) expires. At [](GLOSSARY.html) the [](GLOSSARY.html) end [](GLOSSARY.html)
    of [](GLOSSARY.html) the [](GLOSSARY.html) timer, however, a [](GLOSSARY.html)
    check [](GLOSSARY.html) must [](GLOSSARY.html) be [](GLOSSARY.html) performed
    [](GLOSSARY.html) if [](GLOSSARY.html) the [](GLOSSARY.html) current [](GLOSSARY.html)
    value [](GLOSSARY.html) is [](GLOSSARY.html) different [](GLOSSARY.html) from
    [](GLOSSARY.html) the value [](GLOSSARY.html) issued [](GLOSSARY.html) at [](GLOSSARY.html)
    the [](GLOSSARY.html) first [](GLOSSARY.html) notification. If [](GLOSSARY.html)
    different, a [](GLOSSARY.html) new [](GLOSSARY.html) final [](GLOSSARY.html) notification
    [](GLOSSARY.html) must [](GLOSSARY.html) be [](GLOSSARY.html) issued, otherwise
    [](GLOSSARY.html) the [](GLOSSARY.html) View [](GLOSSARY.html) would [](GLOSSARY.html)
    sit [](GLOSSARY.html) desynchronized [](GLOSSARY.html) from [](GLOSSARY.html)
    the [](GLOSSARY.html) Model.
  prefs: []
  type: TYPE_NORMAL
