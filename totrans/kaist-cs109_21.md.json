["```\n>>> java.io.File(\"text.txt\").readText()\nWhen I started programming, there were no graphical displays. \nAll computer input and output was done using text.\n\n```", "```\n>>> val fname = \"words.txt\"\n>>> val list = java.io.File(fname).readLines()\n>>> list.take(10)\n[aa, aah, aahed, aahing, aahs, aal, aalii, aaliis, aals, aardvark]\n\n```", "```\n>>> val words = java.io.File(fname).useLines { it.toSet() }\n>>> words.take(10)\n[aa, aah, aahed, aahing, aahs, aal, aalii, aaliis, aals, aardvark]\n>>> val some = java.io.File(fname).useLines { it.filter { it.length > 10}.map {it.toUpperCase() }.toList() }\n>>> some.take(10)\n[ABANDONMENT, ABANDONMENTS, ABBREVIATED, ABBREVIATES, ABBREVIATING,\n ABBREVIATION, ABBREVIATIONS, ABDICATIONS, ABDOMINALLY,\n ABERRATIONS]\n\n```", "```\n>>> java.io.File(fname).forEachLine { print(it); print(' ') }\naa aah aahed aahing aahs aal aalii aaliis aals aardvark aardvarks\naardwolf aardwolves aas aasvogel aasvogels aba abaca abacas abaci\naback abacus abacuses abaft abaka abakas abalone abalones abamp\nabampere abamperes abamps abandon abandoned ...\n\n```", "```\nfun readFile(fname: String) {\n  val reader = java.io.File(fname).bufferedReader()\n  var line = reader.readLine()\n  while (line != null) {\n    println(line)\n    line = reader.readLine()\n  }\n  reader.close()\n}\n\n```", "```\nfun readFile(fname: String) {\n  val reader = java.io.File(fname).bufferedReader()\n  reader.use {\n    reader ->\n      var line = reader.readLine()\n      while (line != null) {\n        println(line)\n        line = reader.readLine()\n      }\n  }\n}\n\n```", "```\nval out = java.io.File(\"test.txt\").printWriter()\n\nfor (i in 1 .. 10)\n  out.println(\"$i: ${i * i}\")\n\nout.close()\n\n```", "```\njava.io.File(\"test.txt\").printWriter().use {\n  out ->\n    for (i in 1 .. 10)\n      out.println(\"$i: ${i * i}\")\n}\n\n```"]