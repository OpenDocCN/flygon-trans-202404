["```\nshell`npm install -g yarn`\n```", "```\nshell`npm install -g yarn`\n```", "```\nshell`mkdir jest-tutorialcd jest-tutorial`\n```", "```\nshell`mkdir jest-tutorialcd jest-tutorial`\n```", "```\nshell`touch package.json`\n```", "```\nshell`touch package.json`\n```", "```\npackage.jsonjson`{  \"name\":  \"jest-tutorial\",  \"license\":  \"UNLICENSED\"}`\n```", "```\npackage.jsonjson`{  \"name\":  \"jest-tutorial\",  \"license\":  \"UNLICENSED\"}`\n```", "```\nshell`yarn add -D typescript`\n```", "```\nshell`yarn add -D typescript`\n```", "```\nshell`yarn tsc --init`\n```", "```\nshell`yarn tsc --init`\n```", "```\nshell`yarn add -D 'jest@^28.0.0'  'ts-jest@^28.0.0'  '@types/jest@^28.0.0'`\n```", "```\nshell`yarn add -D 'jest@^28.0.0'  'ts-jest@^28.0.0'  '@types/jest@^28.0.0'`\n```", "```\nshell`yarn ts-jest config:init`\n```", "```\nshell`yarn ts-jest config:init`\n```", "```\njest.config.jsts`/** @type  {import(\"ts-jest/dist/types\").InitialOptionsTsJest} */<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  = { <data-lsp lsp=\"(property) preset: string\">preset</data-lsp>:  \"ts-jest\", <data-lsp lsp=\"(property) testEnvironment: string\">testEnvironment</data-lsp>:  \"node\",};`\n```", "```\njest.config.jsts`/** @type  {import(\"ts-jest/dist/types\").InitialOptionsTsJest} */<data-lsp lsp=\"var module: NodeModule\">module</data-lsp>.<data-lsp lsp=\"(property) NodeJS.Module.exports: any\">exports</data-lsp>  = { <data-lsp lsp=\"(property) preset: string\">preset</data-lsp>:  \"ts-jest\", <data-lsp lsp=\"(property) testEnvironment: string\">testEnvironment</data-lsp>:  \"node\",};`\n```", "```\ntext`\u251c\u2500\u2500 jest.config.js ... Jest\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u251c\u2500\u2500 node_modules ... jest\u3084typescript\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u30d5\u30a9\u30eb\u30c0\u251c\u2500\u2500 package.json\u251c\u2500\u2500 tsconfig.json ... TypeScript\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u2514\u2500\u2500 yarn.lock`\n```", "```\ntext`\u251c\u2500\u2500 jest.config.js ... Jest\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u251c\u2500\u2500 node_modules ... jest\u3084typescript\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u30d5\u30a9\u30eb\u30c0\u251c\u2500\u2500 package.json\u251c\u2500\u2500 tsconfig.json ... TypeScript\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u2514\u2500\u2500 yarn.lock`\n```", "```\nshell`touch check.test.ts`\n```", "```\nshell`touch check.test.ts`\n```", "```\ncheck.test.tsts`<data-lsp lsp=\"var test: jest.It\n(name: string, fn?: jest.ProvidesCallback | undefined, timeout?: number | undefined) => void\">test</data-lsp>(\"check\", () => {  <data-lsp lsp=\"var console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(...data: any[]): void\">log</data-lsp>(\"OK\");});`\n```", "```\ncheck.test.tsts`<data-lsp lsp=\"var test: jest.It\n(name: string, fn?: jest.ProvidesCallback | undefined, timeout?: number | undefined) => void\">test</data-lsp>(\"check\", () => {  <data-lsp lsp=\"var console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(...data: any[]): void\">log</data-lsp>(\"OK\");});`\n```", "```\nshell`yarn jest`\n```", "```\nshell`yarn jest`\n```", "```\n\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9shell`rm check.test.ts`\n```", "```\n\u524a\u9664\u3059\u308b\u30b3\u30de\u30f3\u30c9shell`rm check.test.ts`\n```", "```\nts`function  <data-lsp lsp=\"function isZero(value: number): boolean\">isZero</data-lsp>(<data-lsp lsp=\"(parameter) value: number\">value</data-lsp>:  number):  boolean {  return <data-lsp lsp=\"(parameter) value: number\">value</data-lsp> ===  0;}`\n```", "```\nts`function <data-lsp lsp=\"function isZero(value: number): boolean\">isZero</data-lsp>(<data-lsp lsp=\"(parameter) value: number\">value</data-lsp>:  number):  boolean {  return <data-lsp lsp=\"(parameter) value: number\">value</data-lsp> ===  0;}`\n```", "```\nshell`touch isZero.ts`\n```", "```\nshell`touch isZero.ts`\n```", "```\ntext`\u251c\u2500\u2500 isZero.ts ... \u30c6\u30b9\u30c8\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u251c\u2500\u2500 jest.config.js\u251c\u2500\u2500 node_modules\u251c\u2500\u2500 package.json\u251c\u2500\u2500 tsconfig.json\u2514\u2500\u2500 yarn.lock`\n```", "```\ntext`\u251c\u2500\u2500 isZero.ts ... \u30c6\u30b9\u30c8\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u251c\u2500\u2500 jest.config.js\u251c\u2500\u2500 node_modules\u251c\u2500\u2500 package.json\u251c\u2500\u2500 tsconfig.json\u2514\u2500\u2500 yarn.lock`\n```", "```\nisZero.tsts`function  <data-lsp lsp=\"function isZero(value: number): boolean\">isZero</data-lsp>(<data-lsp lsp=\"(parameter) value: number\">value</data-lsp>:  number):  boolean {  return <data-lsp lsp=\"(parameter) value: number\">value</data-lsp> ===  0;}// \u6ce8\u610f: \u3053\u306e\u307e\u307e\u3067\u306f\u30c6\u30b9\u30c8\u3067\u304d\u307e\u305b\u3093\u3002`\n```", "```\nisZero.tsts`function <data-lsp lsp=\"function isZero(value: number): boolean\">isZero</data-lsp>(<data-lsp lsp=\"(parameter) value: number\">value</data-lsp>:  number):  boolean {  return <data-lsp lsp=\"(parameter) value: number\">value</data-lsp> ===  0;}// \u6ce8\u610f: \u3053\u306e\u307e\u307e\u3067\u306f\u30c6\u30b9\u30c8\u3067\u304d\u307e\u305b\u3093\u3002`\n```", "```\nisZero.tsts`export  function  <data-lsp lsp=\"function isZero(value: number): boolean\">isZero</data-lsp>(<data-lsp lsp=\"(parameter) value: number\">value</data-lsp>:  number):  boolean {  return <data-lsp lsp=\"(parameter) value: number\">value</data-lsp> ===  0;}`\n```", "```\nisZero.tsts`export  function <data-lsp lsp=\"function isZero(value: number): boolean\">isZero</data-lsp>(<data-lsp lsp=\"(parameter) value: number\">value</data-lsp>:  number):  boolean {  return <data-lsp lsp=\"(parameter) value: number\">value</data-lsp> ===  0;}`\n```", "```\nshell`touch isZero.test.ts`\n```", "```\nshell`touch isZero.test.ts`\n```", "```\ntext`\u251c\u2500\u2500 isZero.ts ... \u30c6\u30b9\u30c8\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u251c\u2500\u2500 isZero.test.ts ... \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u251c\u2500\u2500 jest.config.js\u251c\u2500\u2500 node_modules\u251c\u2500\u2500 package.json\u251c\u2500\u2500 tsconfig.json\u2514\u2500\u2500 yarn.lock`\n```", "```\ntext`\u251c\u2500\u2500 isZero.ts ... \u30c6\u30b9\u30c8\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u251c\u2500\u2500 isZero.test.ts ... \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u251c\u2500\u2500 jest.config.js\u251c\u2500\u2500 node_modules\u251c\u2500\u2500 package.json\u251c\u2500\u2500 tsconfig.json\u2514\u2500\u2500 yarn.lock`\n```", "```\nisZero.test.tsts`import { <data-lsp lsp=\"(alias) function isZero(value: number): boolean\nimport isZero\">isZero</data-lsp> } from  \"./isZero\";`\n```", "```\nisZero.test.tsts`import { <data-lsp lsp=\"(alias) function isZero(value: number): boolean\nimport isZero\">isZero</data-lsp> } from  \"./isZero\";`\n```", "```\nisZero.test.tsts`import { <data-lsp lsp=\"(alias) function isZero(value: number): boolean\nimport isZero\">isZero</data-lsp> } from  \"./isZero\";<data-lsp lsp=\"var test: jest.It\n(name: string, fn?: jest.ProvidesCallback | undefined, timeout?: number | undefined) => void\">test</data-lsp>(\"0\u3092\u6e21\u3057\u305f\u3089true\u306b\u306a\u308b\u3053\u3068\", () => {  const  <data-lsp lsp=\"const result: boolean\">result</data-lsp>  =  <data-lsp lsp=\"(alias) isZero(value: number): boolean\nimport isZero\">isZero</data-lsp>(0);  <data-lsp lsp=\"const expect: jest.Expect\n<boolean>(actual: boolean) => jest.JestMatchers<boolean>\">expect</data-lsp>(<data-lsp lsp=\"const result: boolean\">result</data-lsp>).<data-lsp lsp=\"(method) jest.Matchers<void, boolean>.toBe<boolean>(expected: boolean): void\">toBe</data-lsp>(true);});`\n```", "```\nisZero.test.tsts`import { <data-lsp lsp=\"(alias) function isZero(value: number): boolean\nimport isZero\">isZero</data-lsp> } from  \"./isZero\";<data-lsp lsp=\"var test: jest.It\n(name: string, fn?: jest.ProvidesCallback | undefined, timeout?: number | undefined) => void\">test</data-lsp>(\"0\u3092\u6e21\u3057\u305f\u3089true\u306b\u306a\u308b\u3053\u3068\", () => {  const  <data-lsp lsp=\"const result: boolean\">result</data-lsp>  = <data-lsp lsp=\"(alias) isZero(value: number): boolean\nimport isZero\">isZero</data-lsp>(0); <data-lsp lsp=\"const expect: jest.Expect\n<boolean>(actual: boolean) => jest.JestMatchers<boolean>\">expect</data-lsp>(<data-lsp lsp=\"const result: boolean\">result</data-lsp>).<data-lsp lsp=\"(method) jest.Matchers<void, boolean>.toBe<boolean>(expected: boolean): void\">toBe</data-lsp>(true);});`\n```", "```\nshell`yarn jest`\n```", "```\nshell`yarn jest`\n```", "```\nisZero.test.tsts`import { <data-lsp lsp=\"(alias) function isZero(value: number): boolean\nimport isZero\">isZero</data-lsp> } from  \"./isZero\";<data-lsp lsp=\"var test: jest.It\n(name: string, fn?: jest.ProvidesCallback | undefined, timeout?: number | undefined) => void\">test</data-lsp>(\"0\u3092\u6e21\u3057\u305f\u3089true\u306b\u306a\u308b\u3053\u3068\", () => {  const  <data-lsp lsp=\"const result: boolean\">result</data-lsp>  =  <data-lsp lsp=\"(alias) isZero(value: number): boolean\nimport isZero\">isZero</data-lsp>(0);  <data-lsp lsp=\"const expect: jest.Expect\n<boolean>(actual: boolean) => jest.JestMatchers<boolean>\">expect</data-lsp>(<data-lsp lsp=\"const result: boolean\">result</data-lsp>).<data-lsp lsp=\"(method) jest.Matchers<void, boolean>.toBe<boolean>(expected: boolean): void\">toBe</data-lsp>(true);});<data-lsp lsp=\"var test: jest.It\n(name: string, fn?: jest.ProvidesCallback | undefined, timeout?: number | undefined) => void\">test</data-lsp>(\"1\u3092\u6e21\u3057\u305f\u3089false\u306b\u306a\u308b\u3053\u3068\", () => {  const  <data-lsp lsp=\"const result: boolean\">result</data-lsp>  =  <data-lsp lsp=\"(alias) isZero(value: number): boolean\nimport isZero\">isZero</data-lsp>(1);  <data-lsp lsp=\"const expect: jest.Expect\n<boolean>(actual: boolean) => jest.JestMatchers<boolean>\">expect</data-lsp>(<data-lsp lsp=\"const result: boolean\">result</data-lsp>).<data-lsp lsp=\"(method) jest.Matchers<void, boolean>.toBe<boolean>(expected: boolean): void\">toBe</data-lsp>(false);});`\n```", "```\nisZero.test.tsts`import { <data-lsp lsp=\"(alias) function isZero(value: number): boolean\nimport isZero\">isZero</data-lsp> } from  \"./isZero\";<data-lsp lsp=\"var test: jest.It\n(name: string, fn?: jest.ProvidesCallback | undefined, timeout?: number | undefined) => void\">test</data-lsp>(\"0\u3092\u6e21\u3057\u305f\u3089true\u306b\u306a\u308b\u3053\u3068\", () => {  const  <data-lsp lsp=\"const result: boolean\">result</data-lsp>  = <data-lsp lsp=\"(alias) isZero(value: number): boolean\nimport isZero\">isZero</data-lsp>(0); <data-lsp lsp=\"const expect: jest.Expect\n<boolean>(actual: boolean) => jest.JestMatchers<boolean>\">expect</data-lsp>(<data-lsp lsp=\"const result: boolean\">result</data-lsp>).<data-lsp lsp=\"(method) jest.Matchers<void, boolean>.toBe<boolean>(expected: boolean): void\">toBe</data-lsp>(true);});<data-lsp lsp=\"var test: jest.It\n(name: string, fn?: jest.ProvidesCallback | undefined, timeout?: number | undefined) => void\">test</data-lsp>(\"1\u3092\u6e21\u3057\u305f\u3089false\u306b\u306a\u308b\u3053\u3068\", () => {  const  <data-lsp lsp=\"const result: boolean\">result</data-lsp>  = <data-lsp lsp=\"(alias) isZero(value: number): boolean\nimport isZero\">isZero</data-lsp>(1); <data-lsp lsp=\"const expect: jest.Expect\n<boolean>(actual: boolean) => jest.JestMatchers<boolean>\">expect</data-lsp>(<data-lsp lsp=\"const result: boolean\">result</data-lsp>).<data-lsp lsp=\"(method) jest.Matchers<void, boolean>.toBe<boolean>(expected: boolean): void\">toBe</data-lsp>(false);});`\n```", "```\nshell`yarn jest`\n```", "```\nshell`yarn jest`\n```"]