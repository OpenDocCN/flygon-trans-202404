- en: Data classes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据类
- en: Objects are the basis of object-oriented programming. In Kotlin, every piece
    of data is an object. Each object has a type, such as Int, Double, String, Pair,
    List<Int>, or MutableList<String>. The type of an object determines what you can
    do with the object. When you use an object, you should think of the object as
    a black box, and you need not know what really happens inside the object. All
    you need to know is what the object does, not how it implements its functionality.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对象是面向对象编程的基础。在Kotlin中，每个数据都是一个对象。每个对象都有一个类型，比如Int、Double、String、Pair、List<Int>或MutableList<String>。对象的类型决定了你可以对对象做什么。当你使用一个对象时，你应该把对象看作一个黑盒子，你不需要知道对象内部发生了什么。你只需要知道对象做了什么，而不需要知道它是如何实现功能的。
- en: A class defines a new type of object. You can also think about a class as a
    "blueprint" for objects. Once you define a class, you can create objects from
    the blueprint.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一个类定义了一个新类型的对象。你也可以把一个类看作是对象的“蓝图”。一旦你定义了一个类，你就可以根据蓝图创建对象。
- en: Data classes
  id: totrans-3
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据类
- en: 'A common use of classes is to define objects with a number of attributes. For
    instance:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 类的常见用途是定义具有多个属性的对象。例如：
- en: A point in the plane has an \(x\)-coordinate and a \(y\)-coordinate. Depending
    on the application, the coordinates could be integers, or floating-point numbers.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平面上的一个点有一个\(x\)-坐标和一个\(y\)-坐标。根据应用程序的不同，坐标可以是整数，也可以是浮点数。
- en: A date has a year, month, and day.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个日期有年、月和日。
- en: A student object has (at least) a name, a student number, and a major.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个学生对象至少有一个姓名、一个学号和一个专业。
- en: A playing card (such as in Blackjack) has a suit (clubs, spades, hearts, or
    diamonds) and a face value (2,3,…,10, Jack, Queen, King, Ace).
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一张扑克牌（比如在黑杰克中）有一个花色（梅花、黑桃、红心或方块）和一个点数（2,3,…,10, J, Q, K, A）。
- en: '![A set of playing cards](../Images/c7aa6d2faf4d2d48d5444da65cf65e1e.jpg)'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![一副扑克牌](../Images/c7aa6d2faf4d2d48d5444da65cf65e1e.jpg)'
- en: 'Such a simple class is implemented as a data class:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这样一个简单的类被实现为一个数据类：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Point represents a two-dimensional point. It has two fields, namely x and y.
    We can create Point objects as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Point表示一个二维点。它有两个字段，即x和y。我们可以这样创建Point对象：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Not that Point(2, 5) looks like a function call, and in fact it is a call to
    the constructor for the Point class.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到Point(2, 5)看起来像一个函数调用，实际上它是对Point类构造函数的调用。
- en: 'Once we have a Point object, we can access its fields using dot-syntax:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了一个Point对象，我们可以使用点语法访问它的字段：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We can also print Point objects using println.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用println打印Point对象。
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We can compare two Point objects using == and !=. Two points are equal if and
    only if all their fields are equal.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用==和!=比较两个Point对象。只有当它们的所有字段都相等时，两个点才相等。
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let''s now look at the other examples from above: A date object could be defined
    like this:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看上面的其他示例：一个日期对象可以这样定义：
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'A student object might look like this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一个学生对象可能看起来像这样：
- en: '[PRE6]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'And a Blackjack card object could look like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个黑杰克卡片对象可能看起来像这样：
- en: '[PRE7]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
