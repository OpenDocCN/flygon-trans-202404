- en: Enumerations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An enumeration (enum) is a type with a finite set of values, such as "yes",
    "no", "maybe", or "north", "south", "east", "west".
  prefs: []
  type: TYPE_NORMAL
- en: 'An enumeration is defined like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Answer and Direction are the type names, the values of the types are written
    Answer.YES or Direction.SOUTH:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Enum values have a nice toString method, one can also obtain their name as
    the name property:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Internally, however, enums are represented as integers. You can obtain the
    integer with the ordinal property. Enum values can be compared (with the order
    given by the declaration):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'With the valueOf method of an enum class, one can convert a string to an enum
    value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'One can also obtain a list of all possible values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
