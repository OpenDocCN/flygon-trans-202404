["```\nts`function  <data-lsp lsp=\"function stack(): never\">stack</data-lsp>():  never {  <data-lsp lsp=\"function stack(): never\">stack</data-lsp>();}<data-lsp lsp=\"function stack(): never\">stack</data-lsp>();`\n```", "```\nts`function <data-lsp lsp=\"function stack(): never\">stack</data-lsp>():  never { <data-lsp lsp=\"function stack(): never\">stack</data-lsp>();}<data-lsp lsp=\"function stack(): never\">stack</data-lsp>();`\n```", "```\ntext`RangeError: Maximum call stack size exceeded`\n```", "```\ntext`RangeError: Maximum call stack size exceeded`\n```", "```\nts`<data-lsp lsp=\"function ajax(url: string): Promise<unknown>\">ajax</data-lsp>(\"https://...\");<data-lsp lsp=\"function wait(ms: number): Promise<void>\">wait</data-lsp>(3000);if (!<data-lsp lsp=\"function ajaxDone(): boolean\">ajaxDone</data-lsp>()) {  <data-lsp lsp=\"function cancelAjax(): Promise<void>\">cancelAjax</data-lsp>();}`\n```", "```\nts`<data-lsp lsp=\"function ajax(url: string): Promise<unknown>\">ajax</data-lsp>(\"https://...\");<data-lsp lsp=\"function wait(ms: number): Promise<void>\">wait</data-lsp>(3000);if (!<data-lsp lsp=\"function ajaxDone(): boolean\">ajaxDone</data-lsp>()) { <data-lsp lsp=\"function cancelAjax(): Promise<void>\">cancelAjax</data-lsp>();}`\n```", "```\nts`<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"first\");<data-lsp lsp=\"function setTimeout<[]>(callback: () => void, ms?: number | undefined): NodeJS.Timeout (+2 overloads)\nnamespace setTimeout\">setTimeout</data-lsp>(() => {  <data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"second\");},  1000);<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"third\");`\n```", "```\nts`<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"first\");<data-lsp lsp=\"function setTimeout<[]>(callback: () => void, ms?: number | undefined): NodeJS.Timeout (+2 overloads)\nnamespace setTimeout\">setTimeout</data-lsp>(() => {  <data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"second\");},  1000);<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"third\");`\n```", "```\ntext`firstsecondthird`\n```", "```\ntext`firstsecondthird`\n```", "```\ntext`firstthirdsecond`\n```", "```\ntext`firstthirdsecond`\n```", "```\nts`<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"first\");<data-lsp lsp=\"function setTimeout<[]>(callback: () => void, ms?: number | undefined): NodeJS.Timeout (+2 overloads)\nnamespace setTimeout\">setTimeout</data-lsp>(() => {  <data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"second\");},  0);<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"third\");'first''third''second'`\n```", "```\nts`<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"first\");<data-lsp lsp=\"function setTimeout<[]>(callback: () => void, ms?: number | undefined): NodeJS.Timeout (+2 overloads)\nnamespace setTimeout\">setTimeout</data-lsp>(() => {  <data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"second\");},  0);<data-lsp lsp=\"namespace console\nvar console: Console\">console</data-lsp>.<data-lsp lsp=\"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\">log</data-lsp>(\"third\");'first''third''second'`\n```", "```\nts`function  <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(<data-lsp lsp=\"(parameter) uri: string\">uri</data-lsp>:  string,  <data-lsp lsp=\"(parameter) callback: (res: Response) => void\">callback</data-lsp>: (<data-lsp lsp=\"(parameter) res: Response\">res</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) =>  void):  void {  // ...}`\n```", "```\nts`function <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(<data-lsp lsp=\"(parameter) uri: string\">uri</data-lsp>:  string, <data-lsp lsp=\"(parameter) callback: (res: Response) => void\">callback</data-lsp>: (<data-lsp lsp=\"(parameter) res: Response\">res</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) =>  void):  void {  // ...}`\n```", "```\nts`<data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res: Response\">res</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  // ...});`\n```", "```\nts`<data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res: Response\">res</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  // ...});`\n```", "```\nts`<data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res1: Response\">res1</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res2: Response\">res2</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  // ... });});`\n```", "```\nts`<data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res1: Response\">res1</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) => { <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res2: Response\">res2</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  // ... });});`\n```", "```\nts`<data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res1: Response\">res1</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res2: Response\">res2</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res3: Response\">res3</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res4: Response\">res4</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res5: Response\">res5</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res6: Response\">res6</data-lsp>:  <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  // ... }); }); }); }); });});`\n```", "```\nts`<data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res1: Response\">res1</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) => { <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res2: Response\">res2</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) => { <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res3: Response\">res3</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) => { <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res4: Response\">res4</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) => { <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res5: Response\">res5</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) => { <data-lsp lsp=\"function ajax(uri: string, callback: (res: Response) => void): void\">ajax</data-lsp>(\"https://...\", (<data-lsp lsp=\"(parameter) res6: Response\">res6</data-lsp>: <data-lsp lsp=\"interface Response\">Response</data-lsp>) => {  // ... }); }); }); }); });});`\n```"]