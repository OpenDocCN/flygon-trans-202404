["```\n# Lab 3 Minimizing Cost\nimport tensorflow as tf\ntf.set_random_seed(777)  # for reproducibility\n\n# tf Graph Input\nX = [1, 2, 3]\nY = [1, 2, 3]\n\n# Set wrong model weights\nW = tf.Variable(5.0)\n\n# Linear model\nhypothesis = X * W\n\n# cost/loss function\ncost = tf.reduce_mean(tf.square(hypothesis - Y))\n\n# Minimize: Gradient Descent Magic\noptimizer = tf.train.GradientDescentOptimizer(learning_rate=0.1)\ntrain = optimizer.minimize(cost)\n\n# Launch the graph in a session.\nsess = tf.Session()\n# Initializes global variables in the graph.\nsess.run(tf.global_variables_initializer())\n\nfor step in range(100):\n    print(step, sess.run(W))\n    sess.run(train)\n\n'''\n0 5.0\n1 1.26667\n2 1.01778\n3 1.00119\n4 1.00008\n...\n96 1.0\n97 1.0\n98 1.0\n99 1.0\n''' \n```"]