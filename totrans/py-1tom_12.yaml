- en: 图片处理
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图片处理
- en: PIL
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PIL
- en: PIL
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PIL
- en: 实例联系
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实例联系
- en: 图片转 ASC II 码
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图片转 ASC II 码
- en: 原理：
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 原理：
- en: '[http://www.jave.de/image2ascii/algorithms.html](http://www.jave.de/image2ascii/algorithms.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.jave.de/image2ascii/algorithms.html](http://www.jave.de/image2ascii/algorithms.html)'
- en: 示例代码：[https://github.com/kxxoling/image2ascii](https://github.com/kxxoling/image2ascii)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 示例代码：[https://github.com/kxxoling/image2ascii](https://github.com/kxxoling/image2ascii)
- en: 图片相似度计算
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图片相似度计算
- en: 图片相似度计算&索引
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图片相似度计算&索引
- en: QRCode
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QRCode
- en: QRCode
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QRCode
- en: QR码（全称为快速响应矩阵码；英语：Quick Response Code）是二维条码的一种， 于1994年由日本DENSO WAVE公司发明。QR 码使用四种标准化编码模式（数字，字母数字，
    二进制和 Kanji）来存储数据。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: QR码（全称为快速响应矩阵码；英语：Quick Response Code）是二维条码的一种， 于1994年由日本DENSO WAVE公司发明。QR 码使用四种标准化编码模式（数字，字母数字，
    二进制和 Kanji）来存储数据。
- en: Python QRCode 库
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python QRCode 库
- en: Python 可以安装 [qrcode](https://github.com/lincolnloop/python-qrcode) 库以获取 QR Code
    生成的支持。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Python 可以安装 [qrcode](https://github.com/lincolnloop/python-qrcode) 库以获取 QR Code
    生成的支持。
- en: 安装
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装
- en: qrcode 库依赖于 Python Image Library（PIL），不过 PIL 已经停止更新，而且其设计并不符合 Python 规范。 因此推荐使用
    PIL 的继任者 Pillow 代替。 安装 PIL 或者 Pillow 需要先安装 C 语言 PIL 库，各操作系统各有不同。 Python PIL 或者
    Pillow 的安装可以通过 `pip` 或者 `easy_install`：
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: qrcode 库依赖于 Python Image Library（PIL），不过 PIL 已经停止更新，而且其设计并不符合 Python 规范。 因此推荐使用
    PIL 的继任者 Pillow 代替。 安装 PIL 或者 Pillow 需要先安装 C 语言 PIL 库，各操作系统各有不同。 Python PIL 或者
    Pillow 的安装可以通过 `pip` 或者 `easy_install`：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 或者
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 或者
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 安装 Python QRCode：
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Python QRCode：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 使用 qrcode
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 qrcode
- en: QRCode 库提供两种嗲用提供方式——Python 库和系统命令(qr)。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: QRCode 库提供两种调用提供方式——Python 库和系统命令(qr)。
- en: qr 命令
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: qr 命令
- en: '`qr` 命令的使用如下：'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`qr` 命令的使用如下：'
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: qrcode 会根据文字的长度自动选择合适的 QRCode 版本
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: qrcode 会根据文字的长度自动选择合适的 QRCode 版本
- en: Python API
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Python API
- en: Python 下使用 qrcode 库：
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Python 下使用 qrcode 库：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 默认输出格式是 JPG，生成 SVG 需要设定 `image_factory` 参数：
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 默认输出格式是 JPG，生成 SVG 需要设定 `image_factory` 参数：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 如果需要 PNG 支持，还需要安装第三支持：
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要 PNG 支持，还需要安装第三支持：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 依旧是设定 `image_factory` 设置输出格式为 PNG：
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 依旧是设定 `image_factory` 设置输出格式为 PNG：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 几种图片转字符算法介绍
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 几种图片转字符算法介绍
- en: 图片转字符原理
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图片转字符原理
- en: 图片转字符通常分以下几种：
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图片转字符通常分以下几种：
- en: 黑白算法
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 黑白算法
- en: 灰度算法
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 灰度算法
- en: 边际追踪／界定算法
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 边际追踪／界定算法
- en: 黑白算法
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 黑白算法
- en: 黑白算法最简单
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 黑白算法最简单
- en: 低保真度解法：
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 低保真度解法：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 高保真度解法：
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 高保真度解法：
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 低保真度解法仅仅简单地通过字符 `#` 和空白符表示图形区域地颜色， 高保真算法则使用 12 个字符对应一个 `2*2` 的区域，对照表如下：
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 低保真度解法仅仅简单地通过字符 `#` 和空白符表示图形区域地颜色， 高保真算法则使用 12 个字符对应一个 `2*2` 的区域，对照表如下：
- en: '| Pattern: |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 模式： |'
- en: '[PRE10]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '|'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '|'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '|'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE13]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '|'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE14]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '|'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '|'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '|'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE17]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '|'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE18]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '|'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE19]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '|'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE20]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '|'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE21]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '|'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE22]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '|'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Character: |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 字符： |'
- en: '[PRE23]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '|'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE24]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '|'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE25]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '|'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE26]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '|'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE27]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '|'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE28]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '|'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE29]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '|'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE30]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '|'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE31]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '|'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE32]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '|'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE33]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '|'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE34]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '|'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE35]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '|'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 灰度算法
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 灰度算法
- en: 灰度算法的基本目标是追求转换后的每个字符亮度都尽可能接近该区域原始图像的亮度， 因此在文字渐渐缩小或者与人眼的距离越来越远时，看起来越发接近图片。 边缘、边框以及其它高对比度的地方应该使用更加契合其结构的字符。
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 灰度算法的基本目标是���求转换后的每个字符亮度都尽可能接近该区域原始图像的亮度， 因此在文字渐渐缩小或者与人眼的距离越来越远时，看起来越发接近图片。
    边缘、边框以及其它高对比度的地方应该使用更加契合其结构的字符。
- en: 灰度算法需要使用实现亮度－字符的转换，大多数具体实现都采用 1 个像素对 1 个字符的转换， “state of the art”算法使用 4 个像素对应一个字符，并且能够提供更清晰的结果。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 灰度算法需要使用实现亮度－字符的转换，大多数具体实现都采用 1 个像素对 1 个字符的转换， “state of the art”算法使用 4 个像素对应一个字符，并且能够提供更清晰的结果。
- en: 边际追踪／界定算法
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边际追踪／界定算法
- en: 边际界定算法看起更加复杂，但其实不然！
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 边际界定算法看起更加复杂，但其实不然！
- en: 全文主要翻译自 [java.de](http://www.jave.de/image2ascii/algorithms.html)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 全文主要翻译自 [java.de](http://www.jave.de/image2ascii/algorithms.html)
- en: 验证码破解
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证码破解
- en: 验证码的原理与破解
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证码的原理与破解
- en: '[常见验证码的弱点与验证码识别](http://drops.wooyun.org/tips/141)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[常见验证码的弱点与验证码识别](http://drops.wooyun.org/tips/141)'
