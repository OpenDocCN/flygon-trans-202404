["```\nstream.subscribe(fnValue, fnError, fnComplete) \n```", "```\nlet stream$ = Rx.Observable.create((observer) => {\n  observer.next(1)\n});\n\nstream$.subscribe((data) => {\n  console.log('Data', data);\n})\n\n// 1 \n```", "```\nlet stream$ = Rx.Observable.create((observer) => {\n   observer.error('error message');\n})\n\nstream$.subscribe(\n   (data) => console.log('Data', data)),\n   (error) => console.log('Error', error) \n```", "```\nlet stream$ = Rx.Observable.create((observer) => {\n   // x calls to observer.next(<value>)\n   observer.complete();\n}) \n```", "```\nlet stream$ = new Rx.Observable.create((observer) => {\n  let i = 0;\n  let id = setInterval(() => {\n    observer.next(i++);\n  },1000)\n\n  return function(){\n    clearInterval( id );\n  }\n})\n\nlet subscription = stream$.subscribe((value) => {\n  console.log('Value', value)\n});\n\nsetTimeout(() => {\n  subscription.unsubscribe() // here we invoke the cleanup function\n\n}, 3000) \n```"]