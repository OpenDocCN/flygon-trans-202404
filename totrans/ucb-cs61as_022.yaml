- en: Homework 0.3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Type the following command into the terminal to copy the homework template
    file to the current directory (note the period at the end):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Or, you can download the template [here](http://inst.eecs.berkeley.edu/~cs61as/templates/hw0-3.rkt).
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write a new version of the `describe-time` procedure from Homework 0-2\. You
    only need to account for time periods up to a day. Instead of returning a decimal
    number, it should behave like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Hint:** use `quotient`!'
  prefs: []
  type: TYPE_NORMAL
- en: See if you can make the program smart enough to know when to use plurals; this
    is not required.
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here''s an example of how the procedure `remove-once` should work:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: (It's okay if remove-once removes the other "morning" instead, as long as it
    removes only one of them.)
  prefs: []
  type: TYPE_NORMAL
- en: Write `remove-once`.
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Write the procedure `differences`, which takes a sentence of numbers as its
    argument and returns a sentence containing the differences between adjacent elements.
    (The length of the returned sentence is one less than that of the argument.)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Exercise 4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Write a procedure called `location` that takes two arguments, a word and a sentence.
    It should return a number indicating where in the sentence that word can be found.
    If the word isn't in the sentence, return `#f`. If the word appears more than
    once, return the location of the first appearance.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Exercise 5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Write a procedure `initials` that takes a sentence as its argument and returns
    a sentence of the first letters in each of the sentence's words.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Exercise 6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Write a procedure `copies` that takes a number and a word as arguments and returns
    a sentence containing that many copies of the given word.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Exercise 7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Write a `GPA` procedure. It should take a sentence of grades as its argument
    and return the corresponding grade point average.
  prefs: []
  type: TYPE_NORMAL
- en: '**Hint:** write a helper procedure called `base-grade` that takes a grade as
    argument and returns `0`, `1`, `2`, `3`, or `4`, and another helper procedure
    called `grade-modifier` that returns `âˆ’.33`, `0`, or `.33`, depending on whether
    the grade has a minus, a plus, or neither.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Exercise 8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Write `repeat-words`, which takes a sentence as its argument. It returns a sentence
    similar to the argument, except that if a number appears in the argument, then
    the return value contains that many copies of the following word.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '**Hint:** You don''t have to do all the work in just one procedure. Using a
    helper procedure may help.'
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Write a predicate `same-shape?` that takes two sentences as arguments. It should
    return `#t` if two conditions are met: The two sentences must have the same number
    of words, and each word of the first sentence must have the same number of letters
    as the word in the corresponding position in the second sentence.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '**Hint:** The primitive procedure `count` may be useful.'
  prefs: []
  type: TYPE_NORMAL
- en: Submit Your Homework!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For instructions, see [this guide](../submit.html). It covers basic terminal
    commands and assignment submission.
  prefs: []
  type: TYPE_NORMAL
- en: If you have any trouble submitting, do not hesitate to ask a TA!
  prefs: []
  type: TYPE_NORMAL
