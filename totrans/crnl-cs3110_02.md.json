["```\nlet abs (x : int) : int =\n  if x < 0 then -x else x\n\n```", "```\nlet abs : int -> int =\n  function x -> if x < 0 then -x else x\n\n```", "```\nlet abs = fun x -> if x < 0 then -x else x\n\n```", "```\n*val abs : int -> int = <fun>*\n\n```", "```\nTurn on Javascript to see the program.\n\n```", "```\nTurn on Javascript to see the program.\n\n```", "```\n*val squareRoot : float -> float* = <fun>\n\n```", "```\n# tryGuess;;\n*Characters 0-8: tryGuess;; ^^^^^^^^ Error: Unbound value tryGuess*\n\n```", "```\n# squareRoot 9.0;;\n*- : float = 3.0000000013969839*\n\n```", "```\n# squareRoot 9;;\n*Characters 11-12: squareRoot 9;; ^ Error: This expression has type int but is here used with type float*\n\n```", "```\nif true then *e*1 else *e*2   -->  *e*1\nif false then *e*1 else *e*2  -->  *e*2\n```", "```\nlet x = 1+4 in x*3\n   --> let x = 5 in x*3\n   --> 5*3\n   --> 15\n\n```", "```\nabs (2+1)\n   --> abs 3\n   --> if 3 < 0 then -3 else 3\n   --> if false then -3 else 3\n   --> 3\n\n```"]