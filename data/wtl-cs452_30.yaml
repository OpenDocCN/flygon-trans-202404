- en: Lecture 30 - Power On
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第30讲 - 上电
- en: Public Service Annoucements
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公共服务公告
- en: 'Final exam date: 9.00 August 7 to 11.30 August 9'
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 期末考试日期：8月7日上午9点至8月9日上午11点30分
- en: '* * *'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Power On
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上电
- en: When you turn on the power or press the reset button, what happens before you
    see the `RedBoot>` prompt?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当您打开电源或按下复位按钮时，在看到`RedBoot>`提示之前会发生什么？
- en: Power on asserts the reset input to the CPU
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上电会断言CPU的复位输入
- en: This is not determined by the instruction set architecture (ISA).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是由指令集架构（ISA）确定的。
- en: The ISA guarantees only that the CPU will (at some future time) set the pc to
    0x00000000 and start executing instructions.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ISA仅保证CPU将（在将来某个时间）将pc设置为0x00000000并开始执行指令。
- en: What happens before that, and what appears at 0x00000000 is determined by the
    design of the system surrounding the CPU on the chip.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之前发生的事情，以及0x00000000处出现的内容由芯片上CPU周围系统的设计确定。
- en: Cirrus provides this, not ARM.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cirrus提供此功能，而非ARM。
- en: 'What Cirrus provides is pretty generic: the steps are the same on others SoCs,
    but the details differ.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cirrus提供的内容非常通用：在其他SoC上步骤相同，但细节不同。
- en: There are two pretty hard resets that can occur.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 可能发生两种相当严格的复位。
- en: Turning on the power
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开电源
- en: Pressing the reset button
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下复位按钮
- en: Power-on, but with memory refresh running continuously.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上电，但内存刷新持续运行。
- en: (Jumping to 0x00000000 is a much softer reset.)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: （跳转到0x00000000是一种更温和的复位。）
- en: Asserting the reset input of the SoC, asserts the reset output of the SoC.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 施加SoC的复位输入，会使SoC的复位输出断言。
- en: The output reset goes everywhere and resets everything with a power on reset.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出复位到处都去，用上电复位重置所有内容。
- en: Negating the reset input starts the boot sequence, with the SoC in its reset
    state. Ten hardware inputs determine how the SoC boots
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 取消复位输入会启动引导序列，SoC处于复位状态。十个硬件输入确定SoC的引导方式
- en: internal/external
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部/外部
- en: pre-boot source
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预启动源
- en: watchdog state
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 看门狗状态
- en: bus width of pre-boot and pre-pre-boot
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预启动和预预启动的总线宽度
- en: These inputs allow the designer of the board hosting the SoC to determine enough
    characteristics of the boot state that it can be used for many applications
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这些输入允许承载SoC的板设计者确定引导状态的足够特性，以便用于许多应用
- en: TS-7200 is set up for internal pre-boot with source from the flash on the 32-bit
    AHB
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: TS-7200设置为内部预启动，源自32位AHB上的闪存
- en: The AHB bus has all the important high-speed components
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: AHB总线具有所有重要的高速组件
- en: memory (program and graphics)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存（程序和图形）
- en: ethernet controller
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以太网控制器
- en: USB controller, and
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB控制器
- en: 16Kbytes of mask-programmed ROM at `0x80090000`
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x80090000`处有16K字节的掩模编程ROM'
- en: Initial state
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 初始状态
- en: ARM
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: ARM
- en: The following things, which are contolled through the system control co-processor,
    are determined by the CPU architecture. They must be independent of the stuff
    added by Cirrus
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下通过系统控制协处理器控制的事物，由CPU架构确定。它们必须独立于Cirrus添加的内容
- en: MMU flat, but might be different on soft reset
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MMU平坦，但软复位可能不同
- en: Caches disabled
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 缓存禁用
- en: Slow bus clock
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 总线时钟慢
- en: Interrupts disabled
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁用中断
- en: Little-endian memory system
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 小端内存系统
- en: No access to MMU registers
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无法访问MMU寄存器
- en: Normal exception registers
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正常异常寄存器
- en: Cirrus
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Cirrus
- en: The following things, which are described in the EP9302 documentation, are properties
    of hardware Cirrus added. They are independent of how Technologic configured the
    chip when they designed the TS7200.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下在EP9302文档中描述的事物是Cirrus添加的硬件属性。它们独立于Technologic在设计TS7200时配置芯片的方式。
- en: DRAM controller(s) not initialized
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DRAM控制器未初始化
- en: Flash controller(s) not initialized
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 闪存控制器未初始化
- en: All I/O devices in reset state. (They receive hardware reset inputs from the
    CPU.)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有I/O设备处于复位状态。（它们从CPU接收硬件复位输入。）
- en: Memory map in boot mode
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引导模式下的内存映射
- en: Technologic
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Technologic
- en: The following things, which are described in the Technologic documentation,
    manual & circuit diagram, are properties of the TS7200
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下在Technologic文档、手册和电路图中描述的事物是TS7200的属性
- en: Boot control bits, set to normal boot, 32-bit bus width, sychronous boot device,
    internal, watchdog timer disabled.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引导控制位，设置为正常引导，32位总线宽度，同步引导设备，内部，看门狗定时器禁用。
- en: Physical memory map
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 物理内存映射
- en: 0x80000000 to 0x800fffff, used by Cirrus for on-chip components
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0x80000000至0x800fffff，由Cirrus用于芯片上的组件
- en: SDRAM chips break memory into 4M blocks. Addresses of 4M blocks are
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SDRAM芯片将内存分为4M块。4M块的地址为
- en: '`0x00000000` to `0x003fffff`'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x00000000`至`0x003fffff`'
- en: '`0x00400000` to `0x007fffff`'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x00400000`至`0x007fffff`'
- en: '`0x00800000` to `0x00bfffff`'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x00800000`至`0x00bfffff`'
- en: '`0x00c00000` to `0x00ffffff`'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x00c00000`至`0x00ffffff`'
- en: '`0x01000000` to `0x013fffff`'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x01000000`至`0x013fffff`'
- en: '...'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '...'
- en: TS7200 uses 4-bit chip select to divide the memoery into 256 Mbyte blocks
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: TS7200使用4位芯片选择将内存分成256 M字节块
- en: 0x00000000 to 0x0fffffff (first 256M) SDRAM, CS0, 32 bus cycles
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0x00000000至0x0fffffff（前256M）SDRAM，CS0，32总线周期
- en: '0x10000000 to 0x1fffffff: CS1, 8 bit bus cycles'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0x10000000至0x1fffffff：CS1，8位总线周期
- en: '0x20000000 to 0x2fffffff: CS2, 16 bit bus cycles.'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0x20000000至0x2fffffff：CS2，16位总线周期
- en: '0x60000000 to 0x7fffffff: CS6/7, Flash'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0x60000000至0x7fffffff：CS6/7，闪存
- en: '0x80000000 to 0x8fffffff: I/O registers including'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0x80000000至0x8fffffff：包括I/O寄存器
- en: '0x80000000 to 0x807fffff: AHB mapped registers, including'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0x80000000至0x807fffff：AHB映射寄存器，包括
- en: DMA
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DMA
- en: Ethernet
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以太网
- en: USB
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB
- en: Memory controllers
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存控制器
- en: Pre-pre-boot ROM
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预预引导ROM
- en: ICU registers
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: ICU寄存器
- en: '0x80800000 to 0x8fffffff: I/O registers'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0x80800000至0x8fffffff：I/O寄存器
- en: SDRAM chips break memory into 4M blocks. Addresses of 4M blocks are
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: SDRAM芯片将内存分成4M块。 4M块的地址为
- en: '`0x00000000` to `0x003fffff`'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x00000000`至`0x003fffff`'
- en: '`0x00400000` to `0x007fffff`'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x00400000`至`0x007fffff`'
- en: '`0x00800000` to `0x00bfffff`'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x00800000`至`0x00bfffff`'
- en: '`0x00c00000` to `0x00ffffff`'
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x00c00000`至`0x00ffffff`'
- en: '`0x01000000` to `0x013fffff`'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0x01000000`至`0x013fffff`'
- en: '...'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '...'
- en: In the AHB registers is a 16K block of ROM from `0x80090000` to `0x80093fff`
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在AHB寄存器中有一个16K的ROM块，从`0x80090000`到`0x80093fff`
- en: Initially, it is mapped to the entire memory space at 16K intervals.
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最初，它被映射到整个内存空间，间隔为16K。
- en: Chip select, and how addressing occurs.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 芯片选择，以及寻址发生的方式。
- en: Chip select of this block is `0x8009[00XXb]XXX`
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此块的芯片选择为`0x8009[00XXb]XXX`
- en: Chip select has two parts
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 芯片选择有两部分
- en: 'I/O chip select: `0x8XXXXXXX`'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: I/O芯片选择：`0x8XXXXXXX`
- en: 'AHB chip select: `0xY00XXXXX`'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: AHB芯片选择：`0xY00XXXXX`
- en: 'ROM chip select: `0xYYY9[00XXb]XXX`'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: ROM芯片选择：`0xYYY9[00XXb]XXX`
- en: The first instruction executed is the one that you find at `0x80090000`
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行的第一条指令是在`0x80090000`找到的
- en: Pre-pre-boot Sequence
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预预引导序列
- en: Jump to `0x80090018.`
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跳转到`0x80090018.`
- en: Turn on LEDs
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开LED
- en: Make the CPU completely vanilla. E.g.,
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使CPU完全普通。 例如，
- en: no caches, physical memory map,
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有缓存，物理内存映射，
- en: Turn off watchdog timer
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭看门狗定时器
- en: Acquire boot state
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取引导状态
- en: Configure external clocks (needed for serial boot)
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置外部时钟（串行引导所需）
- en: Acquire boot state configuration inputs
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取引导状态配置输入
- en: These are input pins on the EP9302, the state of which is determined by the
    TS7200\.
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些是EP9302上的输入引脚，其状态由TS7200确定。
- en: A couple are user-controllable via jumpers
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过跳线器可由用户控制的一对
- en: They are the only thing the EP9302 knows about the outside world
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们是EP9302了解外部世界的唯一事物
- en: Using boot state configure
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用引导状态配置
- en: flash memory controller
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 闪存存储控制器
- en: SDRAM memory controller
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SDRAM内存控制器
- en: These are configured with very conservative parameters
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些配置具有非常保守的参数
- en: Clear boot mode `memory map'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除引导模式`内存映射'
- en: Toggle LEDs
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换LED
- en: Switch
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开关
- en: Serial boot on UART1
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 串行引导在UART1上
- en: Output ">"
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出“>”
- en: Read 2048 bytes starting with CRUS or SURC to the ethernet buffer
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从CRUS或SURC开始读取2048字节到以太网缓冲区
- en: Jump to the start of the ethernet buffer
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跳转到以太网缓冲区的起始位置
- en: Boot from ROM outside SoC
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从SoC外部的ROM引导
- en: Assert ROM chip selects looking for CRUS
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 断言ROM芯片选择，寻找CRUS
- en: When found read 2048 bytes from the ROM to ethernet buffer
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当找到时，从ROM读取2048字节到以太网缓冲区
- en: Jump to the start of the ethernet buffer
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跳转到以太网缓冲区的起始位置
- en: Boot from flash
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从闪存引导
- en: Look for CRUS at possible flash start locations
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在可能的闪存起始位置寻找CRUS
- en: When found jump to start location plus `0x4 (account for CRUS)`
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到后跳转到起始位置加`0x4（考虑CRUS）`
- en: If not found
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果找不到
- en: load code into ethernet buffer
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码加载到以太网缓冲区
- en: flash LEDs forever
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 永远闪烁LED
- en: In the first two cases the 2048 bytes contains a memory test followed by a loader.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前两种情况下，2048字节包含内存测试，然后是加载程序。
- en: Pre-boot Sequence
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预引导序列
- en: This code knows all about the EP9302, and all about the TS7200.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码完全了解EP9302，以及TS7200。
- en: Sets up a stack in the ethernet buffer
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以太网缓冲区中设置堆栈
- en: 'Sets the CPSR to a vanilla state: no interrupts, svc mode'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将CPSR设置为普通状态：无中断，svc模式
- en: Copies 260 words of code from flash to the ethernet buffer
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从闪存复制260个字的代码到以太网缓冲区
- en: Initializes memory controllers for the memory it has
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化内存控制器以适应其具有的内存
- en: Configures GPIO.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置GPIO。
- en: Turns off the watchdog timer
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭看门狗定时器
- en: Sets up the appropriate serial port for a monitor
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为监视器设置适当的串行端口
- en: '* * *'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Return to:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到：
- en: '[Bill Cowan''s lecture notes for CS452 in s12](index.html)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩在s12的CS452讲座笔记](index.html)'
- en: '[Bill Cowan''s Spring 2012 CS452 page](../index.html)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩2012年春季的CS452页面](../index.html)'
- en: '[Bill Cowan''s CS452 page](../../index.html)'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的CS452页面](../../index.html)'
- en: '[Bill Cowan''s teaching page](../../../index.html)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的教学页面](../../../index.html)'
- en: '[Bill Cowan''s home page](../../../../index.html)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的个人主页](../../../../index.html)'
