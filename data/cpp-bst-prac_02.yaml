- en: Use the Tools Available
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用现有工具
- en: Use The Tools Available
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用现有工具
- en: An automated framework for executing these tools should be established very
    early in the development process. It should not take more than 2-3 commands to
    checkout the source code, build, and execute the tests. Once the tests are done
    executing, you should have an almost complete picture of the state and quality
    of the code.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发过程中应尽早建立一个自动化框架来执行这些工具。检出源代码、构建和执行测试不应该超过 2-3 个命令。一旦测试执行完成，你应该几乎完整地了解代码的状态和质量。
- en: Source Control
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 源代码控制
- en: Source control is an absolute necessity for any software development project.
    If you are not using one yet, start using one.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何软件开发项目，源代码控制是绝对必要的。如果你还没有使用，请开始使用。
- en: '[GitHub](https://github.com/) - allows for unlimited public repositories, must
    pay for a private repository.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub](https://github.com/) - 允许无限公共仓库，但必须付费使用私有仓库。'
- en: '[Bitbucket](https://bitbucket.org/) - allows for unlimited private repositories
    with up to 5 collaborators, for free.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Bitbucket](https://bitbucket.org/) - 允许免费拥有无限私有仓库，最多可有 5 位协作者。'
- en: '[SourceForge](http://sourceforge.net/) - open source hosting only.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SourceForge](http://sourceforge.net/) - 仅限开源托管。'
- en: '[GitLab](https://gitlab.com/) - allows for unlimited public and private repositories,
    unlimited CI Runners included, for free.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitLab](https://gitlab.com/) - 允许无限公共和私有仓库，免费包含无限 CI 运行器。'
- en: '[Visual Studio Online](https://visualstudio.com) ([http://www.visualstudio.com/what-is-visual-studio-online-vs](http://www.visualstudio.com/what-is-visual-studio-online-vs))
    - allows for unlimited public repositories, must pay for private repository. Repositories
    can be git or TFVC. Additionally: Issue tracking, project planning (multiple Agile
    templates, such as SCRUM), integrated hosted builds, integration of all this into
    Microsoft Visual Studio. Windows only.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Visual Studio Online](https://visualstudio.com) ([http://www.visualstudio.com/what-is-visual-studio-online-vs](http://www.visualstudio.com/what-is-visual-studio-online-vs))
    - 允许无限公共仓库，但必须付费使用私有仓库。仓库可以是 git 或 TFVC。此外：问题跟踪、项目计划（多种敏捷模板，如 SCRUM）、集成的托管构建，将所有这些集成到
    Microsoft Visual Studio 中。仅限 Windows。'
- en: Build Tool
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建工具
- en: 'Use an industry standard widely accepted build tool. This prevents you from
    reinventing the wheel whenever you discover / link to a new library / package
    your product / etc. Examples include:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 使用行业标准的广泛接受的构建工具。这可以防止你在发现 / 链接新库 / 打包产品 / 等时重复造轮子。例如：
- en: '[CMake](http://www.cmake.org/)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[CMake](http://www.cmake.org/)'
- en: 'Consider: [https://github.com/sakra/cotire/](https://github.com/sakra/cotire/)
    for build performance'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑使用 [https://github.com/sakra/cotire/](https://github.com/sakra/cotire/) 以提升构建性能
- en: 'Consider: [https://github.com/toeb/cmakepp](https://github.com/toeb/cmakepp)
    for enhanced usability'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑使用 [https://github.com/toeb/cmakepp](https://github.com/toeb/cmakepp) 以增强可用性
- en: 'Utilize: [https://cmake.org/cmake/help/v3.6/command/target_compile_features.html](https://cmake.org/cmake/help/v3.6/command/target_compile_features.html)
    for C++ standard flags'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用 [https://cmake.org/cmake/help/v3.6/command/target_compile_features.html](https://cmake.org/cmake/help/v3.6/command/target_compile_features.html)
    中的 C++ 标准标志
- en: '[Conan](https://www.conan.io/) - a crossplatform dependency manager for C++'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Conan](https://www.conan.io/) - 用于 C++ 的跨平台依赖管理器'
- en: '[C++ Archive Network (CPPAN)](https://cppan.org/) - a crossplatform dependency
    manager for C++'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[C++ Archive Network (CPPAN)](https://cppan.org/) - 用于 C++ 的跨平台依赖管理器'
- en: '[Waf](https://waf.io/)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Waf](https://waf.io/)'
- en: '[FASTBuild](http://www.fastbuild.org/)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[FASTBuild](http://www.fastbuild.org/)'
- en: '[Ninja](https://ninja-build.org/) - can greatly improve the incremental build
    time of your larger projects. Can be used as a target for CMake.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ninja](https://ninja-build.org/) - 可大大提高较大项目的增量构建时间。可用作 CMake 的目标。'
- en: '[Bazel](http://bazel.io/) - Note: MacOS and Linux only.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Bazel](http://bazel.io/) - 注意：仅适用于 MacOS 和 Linux。'
- en: '[gyp](https://chromium.googlesource.com/external/gyp/) - Google''s build tool
    for chromium.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[gyp](https://chromium.googlesource.com/external/gyp/) - Google 的用于 Chromium
    的构建工具。'
- en: '[maiken](https://github.com/Dekken/maiken) - Crossplatform build tool with
    Maven-esque configuration style.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[maiken](https://github.com/Dekken/maiken) - 具有类似 Maven 配置风格的跨平台构建工具。'
- en: '[Qt Build Suite](http://doc.qt.io/qbs/) - Crossplatform build tool From Qt.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Qt Build Suite](http://doc.qt.io/qbs/) - 来自 Qt 的跨平台构建工具。'
- en: '[meson](http://mesonbuild.com/index.html) - Open source build system meant
    to be both extremely fast, and, even more importantly, as user friendly as possible.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[meson](http://mesonbuild.com/index.html) - 旨在尽可能快速和用户友好的开源构建系统。'
- en: '[premake](https://premake.github.io/)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[premake](https://premake.github.io/)'
- en: Remember, it's not just a build tool, it's also a programming language. Try
    to maintain good clean build scripts and follow the recommended practices for
    the tool you are using.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，这不仅是一个构建工具，还是一种编程语言。尽量保持良好的干净构建脚本，并遵循您使用的工具的推荐实践。
- en: Continuous Integration
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 持续集成
- en: Once you have picked your build tool, set up a continuous integration environment.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了构建工具，请设置持续集成环境。
- en: Continuous Integration (CI) tools automatically build the source code as changes
    are pushed to the repository. These can be hosted privately or with a CI host.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 持续集成（CI）工具会在更改被推送到存储库时自动构建源代码。这些可以私下托管或使用CI主机托管。
- en: '[Travis CI](http://travis-ci.org)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Travis CI](http://travis-ci.org)'
- en: works well with C++
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与C++配合良好。
- en: designed for use with GitHub
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专为与GitHub一起使用而设计。
- en: free for public repositories on GitHub
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在GitHub上的公共存储库免费。
- en: '[AppVeyor](http://www.appveyor.com/)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AppVeyor](http://www.appveyor.com/)'
- en: supports Windows, MSVC and MinGW
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持Windows、MSVC和MinGW。
- en: free for public repositories on GitHub
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在GitHub上的公共存储库免费。
- en: '[Hudson CI](http://hudson-ci.org/) / [Jenkins CI](https://jenkins-ci.org/)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Hudson CI](http://hudson-ci.org/) / [Jenkins CI](https://jenkins-ci.org/)'
- en: Java Application Server is required
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要Java应用服务器。
- en: supports Windows, OS X, and Linux
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持Windows、OS X和Linux。
- en: extendable with a lot of plugins
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过许多插件进行扩展。
- en: '[TeamCity](https://www.jetbrains.com/teamcity)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TeamCity](https://www.jetbrains.com/teamcity)'
- en: has a free option for open source projects
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于开源项目有免费选项。
- en: '[Decent CI](https://github.com/lefticus/decent_ci)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Decent CI](https://github.com/lefticus/decent_ci)'
- en: simple ad-hoc continuous integration that posts results to GitHub
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单的即席持续集成，将结果发布到GitHub。
- en: supports Windows, OS X, and Linux
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持Windows、OS X和Linux。
- en: used by [ChaiScript](http://chaiscript.com/ChaiScript-BuildResults/full_dashboard.html)
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被[ChaiScript](http://chaiscript.com/ChaiScript-BuildResults/full_dashboard.html)使用。
- en: '[Visual Studio Online](https://visualstudio.com) ([http://www.visualstudio.com/what-is-visual-studio-online-vs](http://www.visualstudio.com/what-is-visual-studio-online-vs))'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Visual Studio Online](https://visualstudio.com) ([http://www.visualstudio.com/what-is-visual-studio-online-vs](http://www.visualstudio.com/what-is-visual-studio-online-vs))'
- en: Tightly integrated with the source repositories from Visual Studio Online
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与Visual Studio Online的源代码存储库紧密集成。
- en: Uses MSBuild (Visual Studio's build engine), which is available on Windows,
    OS X and Linux
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用MSBuild（Visual Studio的构建引擎），可在Windows、OS X和Linux上使用。
- en: Provides hosted build agents and also allows for user-provided build agents
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供托管构建代理，也允许用户提供构建代理。
- en: Can be controlled and monitored from within Microsoft Visual Studio
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以从Microsoft Visual Studio内部进行控制和监视。
- en: On-Premise installation via Microsoft Team Foundation Server
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Microsoft Team Foundation Server进行本地安装。
- en: '[GitLab](https://gitlab.com)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitLab](https://gitlab.com)'
- en: use custom Docker images, so can be used for C++
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自定义的Docker镜像，因此可以用于C++。
- en: has free shared runners
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有免费的共享运行器。
- en: has trivial processing of result of coverage analyze
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有对覆盖率分析结果的轻松处理。
- en: 'If you have an open source, publicly-hosted project on GitHub:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在GitHub上拥有一个开源的公共托管项目：
- en: 'go enable Travis Ci and AppVeyor integration right now. We''ll wait for you
    to come back. For a simple example of how to enable it for your C++ CMake-based
    application, see here: [https://github.com/ChaiScript/ChaiScript/blob/master/.travis.yml](https://github.com/ChaiScript/ChaiScript/blob/master/.travis.yml)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 立即启用Travis Ci和AppVeyor集成。我们会等你回来。有关如何为基于CMake的C++应用程序启用它的简单示例，请参见此处：[https://github.com/ChaiScript/ChaiScript/blob/master/.travis.yml](https://github.com/ChaiScript/ChaiScript/blob/master/.travis.yml)
- en: enable one of the coverage tools listed below (Codecov or Coveralls)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用下面列出的覆盖率工具之一（Codecov或Coveralls）。
- en: enable [Coverity Scan](https://scan.coverity.com)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用[Coverity Scan](https://scan.coverity.com)
- en: These tools are all free and relatively easy to set up. Once they are set up
    you are getting continuous building, testing, analysis and reporting of your project.
    For free.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具都是免费的，并且相对容易设置。一旦设置好，您将获得项目的持续构建、测试、分析和报告。免费的。
- en: Compilers
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编译器
- en: Use every available and reasonable set of warning options. Some warning options
    only work with optimizations enabled, or work better the higher the chosen level
    of optimization is, for example [`-Wnull-dereference`](https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wnull-dereference-367)
    with GCC.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用每个可用且合理的警告选项。一些警告选项仅在启用了优化时才有效，或者在选择的优化级别越高时效果越好，例如使用GCC的[`-Wnull-dereference`](https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wnull-dereference-367)。
- en: You should use as many compilers as you can for your platform(s). Each compiler
    implements the standard slightly differently and supporting multiple will help
    ensure the most portable, most reliable code.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该尽可能多地使用各种编译器来编译您的平台。每个编译器都会稍微不同地实现标准，并支持多个编译器将有助于确保最具可移植性、最可靠的代码。
- en: GCC / Clang
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GCC / Clang
- en: '`-Wall -Wextra -Wshadow -Wnon-virtual-dtor -pedantic`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`-Wall -Wextra -Wshadow -Wnon-virtual-dtor -pedantic`'
- en: '`-Wall -Wextra` reasonable and standard'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wall -Wextra` 合理且标准'
- en: '`-Wshadow` warn the user if a variable declaration shadows one from a parent
    context'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wshadow` 如果变量声明遮蔽了父上下文中的变量声明，则向用户发出警告'
- en: '`-Wnon-virtual-dtor` warn the user if a class with virtual functions has a
    non-virtual destructor. This helps catch hard to track down memory errors'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wnon-virtual-dtor` 如果具有虚函数的类具有非虚析构函数，则向用户发出警告。这有助于捕获难以跟踪的内存错误'
- en: '`-Wold-style-cast` warn for c-style casts'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wold-style-cast` 对c风格转换发出警告'
- en: '`-Wcast-align` warn for potential performance problem casts'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wcast-align` 警告潜在性能问题的转换'
- en: '`-Wunused` warn on anything being unused'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wunused` 警告任何未使用的内容'
- en: '`-Woverloaded-virtual` warn if you overload (not override) a virtual function'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Woverloaded-virtual` 如果您重载（而不是覆盖）虚函数，则发出警告'
- en: '`-Wpedantic` warn if non-standard C++ is used'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wpedantic` 如果使用非标准C++，则发出警告'
- en: '`-Wconversion` warn on type conversions that may lose data'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wconversion` 警告可能会丢失数据的类型转换'
- en: '`-Wsign-conversion` warn on sign conversions'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wsign-conversion` 警告有符号转换'
- en: '`-Wmisleading-indentation` warn if identation implies blocks where blocks do
    not exist'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wmisleading-indentation` 如果缩进暗示存在块但实际不存在块，则发出警告'
- en: '`-Wduplicated-cond` warn if `if` / `else` chain has duplicated conditions'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wduplicated-cond` 如果`if` / `else`链具有重复条件，则发出警告'
- en: '`-Wduplicated-branches` warn if `if` / `else` branches have duplicated code'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wduplicated-branches` 如果`if` / `else`分支具有重复代码，则发出警告'
- en: '`-Wlogical-op` warn about logical operations being used where bitwise were
    probably wanted'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wlogical-op` 警告逻辑操作被用于可能需要位操作的地方'
- en: '`-Wnull-dereference` warn if a null dereference is detected'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wnull-dereference` 如果检测到空指针解引用，则发出警告'
- en: '`-Wuseless-cast` warn if you perform a cast to the same type'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wuseless-cast` 如果执行与相同类型的转换，则发出警告'
- en: '`-Wdouble-promotion` warn if `float` is implicit promoted to `double`'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wdouble-promotion` 如果`float`被隐式提升为`double`，则发出警告'
- en: '`-Wformat=2` warn on security issues around functions that format output (ie
    `printf`)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Wformat=2` 在围绕格式化输出的函数（即`printf`）存在安全问题时发出警告'
- en: Consider using `-Weverything` and disabling the few warnings you need to on
    Clang
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑在Clang上使用`-Weverything`，并禁用您需要的少数警告
- en: '`-Weffc++` warning mode can be too noisy, but if it works for your project,
    use it also.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`-Weffc++` 警告模式可能会太吵，但如果适用于您的项目，请使用它。'
- en: MSVC
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MSVC
- en: '`/W4 /W44640` - use these and consider the following'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`/W4 /W44640` - 使用这些并考虑以下内容'
- en: '`/W4` All reasonable warnings'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/W4` 所有合理的警告'
- en: '`/w14242` ''identfier'': conversion from ''type1'' to ''type1'', possible loss
    of data'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14242` ''identfier'': 从''type1''到''type1''的转换，可能会丢失数据'
- en: '`/w14254` ''operator'': conversion from ''type1:field_bits'' to ''type2:field_bits'',
    possible loss of data'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14254` ''operator'': 从''type1:field_bits''到''type2:field_bits''的转换，可能会丢失数据'
- en: '`/w14263` ''function'': member function does not override any base class virtual
    member function'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14263` ''function'': 成员函数未覆盖任何基类虚成员函数'
- en: '`/w14265` ''classname'': class has virtual functions, but destructor is not
    virtual instances of this class may not be destructed correctly'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14265` ''classname'': 类具有虚函数，但析构函数不是虚函数，此类的实例可能无法正确销毁'
- en: '`/w14287` ''operator'': unsigned/negative constant mismatch'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14287` ''operator'': 无符号/负常量不匹配'
- en: '`/we4289` nonstandard extension used: ''variable'': loop control variable declared
    in the for-loop is used outside the for-loop scope'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/we4289` 使用了非标准扩展：''variable'': 在for循环中声明的循环控制变量在for循环范围之外使用'
- en: '`/w14296` ''operator'': expression is always ''boolean_value'''
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14296` ''operator'': 表达式始终为''boolean_value'''
- en: '`/w14311` ''variable'': pointer truncation from ''type1'' to ''type2'''
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14311` ''variable'': 从''type1''到''type2''的指针截断'
- en: '`/w14545` expression before comma evaluates to a function which is missing
    an argument list'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14545` 逗号前的表达式求值为缺少参数列表的函数'
- en: '`/w14546` function call before comma missing argument list'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14546` 逗号前的函数调用缺少参数列表'
- en: '`/w14547` ''operator'': operator before comma has no effect; expected operator
    with side-effect'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14547` ''operator'': 逗号前的运算符没有效果；预期具有副作用的运算符'
- en: '`/w14549` ''operator'': operator before comma has no effect; did you intend
    ''operator''?'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14549` ''operator'': 逗号前的运算符没有效果；您是否打算使用''operator''？'
- en: '`/w14555` expression has no effect; expected expression with side-effect'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14555` 表达式没有效果；预期具有副作用的表达式'
- en: '`/w14619` pragma warning: there is no warning number ''number'''
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14619` pragma 警告：没有警告编号''number'''
- en: '`/w14640` Enable warning on thread un-safe static member initialization'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14640` 启用线程不安全的静态成员初始化警告'
- en: '`/w14826` Conversion from ''type1'' to ''type_2'' is sign-extended. This may
    cause unexpected runtime behavior.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14826` 从''type1''转换为''type_2''是符号扩展的。这可能导致意外的运行时行为。'
- en: '`/w14905` wide string literal cast to ''LPSTR'''
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14905` 宽字符串文字转换为''LPSTR'''
- en: '`/w14906` string literal cast to ''LPWSTR'''
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14906` 字符串文字转换为''LPWSTR'''
- en: '`/w14928` illegal copy-initialization; more than one user-defined conversion
    has been implicitly applied'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/w14928` 非法的拷贝初始化；隐式应用了多个用户定义的转换'
- en: Not recommended
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 不推荐
- en: '`/Wall` - Also warns on files included from the standard library, so it''s
    not very useful and creates too many extra warnings.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/Wall` - 还会对从标准库中包含的文件发出警告，因此它并不是非常有用，而且会产生太多额外的警告。'
- en: General
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一般
- en: Start with very strict warning settings from the beginning. Trying to raise
    the warning level after the project is underway can be painful.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 从一开始就使用非常严格的警告设置。在项目进行中尝试提高警告级别可能会很痛苦。
- en: Consider using the *treat warnings as errors* setting. `/Wx` with MSVC, `-Werror`
    with GCC / Clang
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑使用*将警告视为错误*设置。在MSVC中为`/Wx`，在GCC / Clang中为`-Werror`
- en: LLVM-based tools
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于LLVM的工具
- en: 'LLVM based tools work best with a build system (such as cmake) that can output
    a compile command database, for example:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 基于LLVM的工具最适合与能够输出编译命令数据库的构建系统（例如cmake）一起使用，例如：
- en: '[PRE0]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you are not using a build system like that, you can consider [Build EAR](https://github.com/rizsotto/Bear)
    which will hook into your build system and generate a compile command database
    for you.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有使用这样的构建系统，可以考虑使用[Build EAR](https://github.com/rizsotto/Bear)，它将连接到您的构建系统并为您生成编译命令数据库。
- en: CMake now also comes with built-in support for calling `clang-tidy` during [normal
    compilation](https://cmake.org/cmake/help/latest/prop_tgt/LANG_CLANG_TIDY.html).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: CMake现在也具有在[普通编译](https://cmake.org/cmake/help/latest/prop_tgt/LANG_CLANG_TIDY.html)过程中调用`clang-tidy`的内置支持。
- en: '[include-what-you-use](https://github.com/include-what-you-use), [example results](https://github.com/ChaiScript/ChaiScript/commit/c0bf6ee99dac14a19530179874f6c95255fde173)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[include-what-you-use](https://github.com/include-what-you-use)，[示例结果](https://github.com/ChaiScript/ChaiScript/commit/c0bf6ee99dac14a19530179874f6c95255fde173)'
- en: '[clang-modernize](http://clang.llvm.org/extra/clang-modernize.html), [example
    results](https://github.com/ChaiScript/ChaiScript/commit/6eab8ddfe154a4ebbe956a5165b390ee700fae1b)'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[clang-modernize](http://clang.llvm.org/extra/clang-modernize.html)，[示例结果](https://github.com/ChaiScript/ChaiScript/commit/6eab8ddfe154a4ebbe956a5165b390ee700fae1b)'
- en: '[clang-check](http://clang.llvm.org/docs/ClangCheck.html)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[clang-check](http://clang.llvm.org/docs/ClangCheck.html)'
- en: '[clang-tidy](http://clang.llvm.org/extra/clang-tidy.html)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[clang-tidy](http://clang.llvm.org/extra/clang-tidy.html)'
- en: Static Analyzers
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 静态分析器
- en: The best bet is the static analyzer that you can run as part of your automated
    build system. Cppcheck and clang meet that requirement for free options.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳选择是作为自动化构建系统的一部分运行的静态分析器。Cppcheck和clang满足免费选项的要求。
- en: Coverity Scan
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Coverity扫描
- en: '[Coverity](https://scan.coverity.com/) has a free (for open source) static
    analysis toolkit that can work on every commit in integration with [Travis CI](http://travis-ci.org)
    and [AppVeyor](http://www.appveyor.com/).'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[Coverity](https://scan.coverity.com/) 有一个免费的（针对开源）静态分析工具包，可以与[Travis CI](http://travis-ci.org)和[AppVeyor](http://www.appveyor.com/)集成，在每次提交时都可以工作。'
- en: PVS-Studio
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PVS-Studio
- en: '[PVS-Studio](http://www.viva64.com/en/pvs-studio/) is a tool for bug detection
    in the source code of programs, written in C, C++ and C#. It is free for personal
    academic projects, open source non-commercial projects and independent projects
    of individual developers. It works in Windows and Linux environment.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[PVS-Studio](http://www.viva64.com/en/pvs-studio/) 是一个用于检测C、C++和C#程序源代码中bug的工具。对于个人学术项目、开源非商业项目和个人开发者的独立项目，它是免费的。它在Windows和Linux环境下工作。'
- en: Cppcheck
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cppcheck
- en: '[Cppcheck](http://cppcheck.sourceforge.net/) is free and open source. It strives
    for 0 false positives and does a good job at it. Therefore all warnings should
    be enabled: `--enable=all`'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[Cppcheck](http://cppcheck.sourceforge.net/) 是免费开源的。它力求达到0个假阳性，并且做得很好。因此，应该启用所有警告：`--enable=all`'
- en: 'Notes:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 注：
- en: 'For correct work it requires well formed path for headers, so before usage
    don''t forget to pass: `--check-config`.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了正确工作，需要为头文件提供格式良好的路径，因此在使用之前不要忘记传递：`--check-config`。
- en: Finding unused headers does not work with `-j` more than 1\.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现未使用的头文件不适用于`-j`大于1。
- en: Remember to add `--force` for code with a lot number of `#ifdef` if you need
    check all of them.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记得为带有大量`#ifdef`的代码添加`--force`以检查所有`#ifdef`。
- en: Clang's Static Analyzer
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Clang的静态分析器
- en: Clang's analyzer's default options are good for the respective platform. It
    can be used directly [from CMake](http://garykramlich.blogspot.com/2011/10/using-scan-build-from-clang-with-cmake.html).
    They can also be called via clang-check and clang-tidy from the [LLVM-based Tools](#llvm-based-tools).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: clang分析器的默认选项适用于各自的平台。它可以直接从[CMake](http://garykramlich.blogspot.com/2011/10/using-scan-build-from-clang-with-cmake.html)使用。它们也可以通过clang-check和clang-tidy从[基于LLVM的工具](#llvm-based-tools)中调用。
- en: Also, [CodeChecker](https://github.com/Ericsson/CodeChecker) is available as
    a front-end to clang's static analysis.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，[CodeChecker](https://github.com/Ericsson/CodeChecker)可作为clang静态分析的前端。
- en: '`clang-tidy` can be easily used with Visual Studio via the [Clang Power Tools](https://caphyon.github.io/clang-power-tools/)
    extension.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`clang-tidy`可以通过[Clang Power Tools](https://caphyon.github.io/clang-power-tools/)扩展轻松与Visual
    Studio集成。'
- en: MSVC's Static Analyzer
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MSVC的静态分析器
- en: Can be enabled with the `/analyze` [command line option](http://msdn.microsoft.com/en-us/library/ms173498.aspx).
    For now we will stick with the default options.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 可通过`/analyze` [命令行选项](http://msdn.microsoft.com/en-us/library/ms173498.aspx)启用。暂时我们将坚持使用默认选项。
- en: Flint / Flint++
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Flint / Flint++
- en: '[Flint](https://github.com/facebook/flint) and [Flint++](https://github.com/L2Program/FlintPlusPlus)
    are linters that analyze C++ code against Facebook''s coding standards.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[Flint](https://github.com/facebook/flint)和[Flint++](https://github.com/L2Program/FlintPlusPlus)是根据Facebook的编码标准分析C++代码的linters。'
- en: ReSharper C++ / CLion
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ReSharper C++ / CLion
- en: Both of these tools from [JetBrains](https://www.jetbrains.com/cpp/) offer some
    level of static analysis and automated fixes for common things that can be done
    better. They have options available for free licenses for open source project
    leaders.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 来自[JetBrains](https://www.jetbrains.com/cpp/)的这两个工具提供了一定程度的静态分析和常见问题的自动修复。他们为开源项目领导者提供了免费许可证选项。
- en: Cevelop
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cevelop
- en: The Eclipse based [Cevelop](https://www.cevelop.com/) IDE has various static
    analysis and refactoring / code fix tools available. For example, you can replace
    macros with C++ `constexprs`, refactor namespaces (extract/inline `using`, qualify
    name), and refactor your code to C++11's uniform initialization syntax. Cevelop
    is free to use.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 基于Eclipse的[Cevelop](https://www.cevelop.com/) IDE提供了各种静态分析和重构/代码修复工具。例如，您可以用C++
    `constexprs`替换宏，重构命名空间（提取/内联`using`，限定名称），并将您的代码重构为C++11的统一初始化语法。Cevelop可免费使用。
- en: Qt Creator
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Qt Creator
- en: Qt Creator can plug into the clang static analyzer.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Qt Creator可以插入clang静态分析器。
- en: Runtime Checkers
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行时检查器
- en: Code Coverage Analysis
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代码覆盖率分析
- en: A coverage analysis tool shall be run when tests are executed to make sure the
    entire application is being tested. Unfortunately, coverage analysis requires
    that compiler optimizations be disabled. This can result in significantly longer
    test execution times.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行测试时应运行覆盖分析工具，以确保整个应用程序都被测试到。不幸的是，覆盖分析需要禁用编译器优化。这可能导致测试执行时间显着增加。
- en: '[Codecov](https://codecov.io/)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Codecov](https://codecov.io/)'
- en: integrates with Travis CI and AppVeyor
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成了Travis CI和AppVeyor
- en: free for open source projects
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适用于开源项目的免费版
- en: '[Coveralls](https://coveralls.io/)'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Coveralls](https://coveralls.io/)'
- en: integrates with Travis CI and AppVeyor
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成了Travis CI和AppVeyor
- en: free for open source projects
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适用于开源项目的免费版
- en: '[LCOV](http://ltp.sourceforge.net/coverage/lcov.php)'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LCOV](http://ltp.sourceforge.net/coverage/lcov.php)'
- en: very configurable
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度可配置
- en: '[Gcovr](http://gcovr.com/)'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Gcovr](http://gcovr.com/)'
- en: '[kcov](http://simonkagstrom.github.io/kcov/index.html)'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[kcov](http://simonkagstrom.github.io/kcov/index.html)'
- en: integrates with codecov and coveralls
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与codecov和coveralls集成
- en: performs code coverage reporting without needing special compiler flags, just
    by instrumenting debug symbols.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需特殊的编译器标志即可执行代码覆盖率报告，只需插装调试符号。
- en: Valgrind
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Valgrind
- en: '[Valgrind](http://www.valgrind.org/) is a runtime code analyzer that can detect
    memory leaks, race conditions, and other associated problems. It is supported
    on various Unix platforms.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[Valgrind](http://www.valgrind.org/)是一个运行时代码分析器，可以检测内存泄漏、竞争条件和其他相关问题。它支持各种Unix平台。'
- en: Dr Memory
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Dr Memory
- en: Similar to Valgrind. [http://www.drmemory.org](http://www.drmemory.org)
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于Valgrind。[http://www.drmemory.org](http://www.drmemory.org)
- en: GCC / Clang Sanitizers
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GCC / Clang分析器
- en: These tools provide many of the same features as Valgrind, but built into the
    compiler. They are easy to use and provide a report of what went wrong.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具提供了许多与Valgrind相同的功能，但内置于编译器中。它们易于使用，并提供了出错的报告。
- en: AddressSanitizer
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 地址分析器
- en: MemorySanitizer
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存分析器
- en: ThreadSanitizer
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线程分析器
- en: UndefinedBehaviorSanitizer
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未定义行为分析器
- en: Fuzzy Analyzers
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模糊分析器
- en: If your project accepts user defined input, considering running a fuzzy input
    tester.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的项目接受用户定义的输入，请考虑运行模糊输入测试器。
- en: Both of these tools use coverage reporting to find new code execution paths
    and try to breed novel inputs for your code. They can find crashes, hangs, and
    inputs you didn't know were considered valid.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个工具都使用覆盖报告来找到新的代码执行路径，并尝试为您的代码繁衍出新的输入。它们可以找到崩溃、挂起和您不知道被视为有效的输入。
- en: '[american fuzzy lop](http://lcamtuf.coredump.cx/afl/)'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[美国模糊跳跃](http://lcamtuf.coredump.cx/afl/)'
- en: '[LibFuzzer](http://llvm.org/docs/LibFuzzer.html)'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[LibFuzzer](http://llvm.org/docs/LibFuzzer.html)'
- en: '[KLEE](http://klee.github.io/) - Can be used to fuzz individual functions'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KLEE](http://klee.github.io/) - 可用于模糊测试单个函数'
- en: Ignoring Warnings
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 忽略警告
- en: If it is determined by team consensus that the compiler or analyzer is warning
    on something that is either incorrect or unavoidable, the team will disable the
    specific error to as localized part of the code as possible.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果团队一致认为编译器或分析器在警告某些不正确或不可避免的内容，则团队将尽可能地在代码的局部部分禁用特定错误。
- en: Be sure to reenable the warning after disabling it for a section of code. You
    do not want your disabled warnings to [leak into other code](http://www.forwardscattering.org/post/48).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在禁用代码部分后重新启用警告。您不希望禁用的警告泄漏到其他代码中。
- en: Testing
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: CMake, mentioned above, has a built in framework for executing tests. Make sure
    whatever build system you use has a way to execute tests built in.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，CMake具有用于执行测试的内置框架。确保您使用的任何构建系统都具有内置的执行测试的方法。
- en: To further aid in executing tests, consider a library such as [Google Test](https://github.com/google/googletest),
    [Catch](https://github.com/philsquared/Catch), [CppUTest](https://github.com/cpputest/cpputest)
    or [Boost.Test](http://www.boost.org/doc/libs/release/libs/test/) to help you
    organize the tests.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步帮助执行测试，请考虑使用诸如[Google Test](https://github.com/google/googletest)、[Catch](https://github.com/philsquared/Catch)、[CppUTest](https://github.com/cpputest/cpputest)或[Boost.Test](http://www.boost.org/doc/libs/release/libs/test/)之类的库来帮助您组织测试。
- en: Unit Tests
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 单元测试
- en: Unit tests are for small chunks of code, individual functions which can be tested
    standalone.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试是针对小块代码、可独立测试的单个函数。
- en: Integration Tests
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 集成测试
- en: There should be a test enabled for every feature or bug fix that is committed.
    See also [Code Coverage Analysis](#code-coverage-analysis). These are tests that
    are higher level than unit tests. They should still be limited in scope to individual
    features.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 每个提交的功能或错误修复都应启用一个测试。另请参阅[代码覆盖分析](#code-coverage-analysis)。这些测试比单元测试更高级。它们仍然应该在个别特性的范围内限制。
- en: Negative Testing
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 负面测试
- en: Don't forget to make sure that your error handling is being tested and works
    properly as well. This will become obvious if you aim for 100% code coverage.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记确保您的错误处理被测试并正常工作。如果您的目标是实现100%的代码覆盖率，这将变得很明显。
- en: Debugging
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调试
- en: uftrace
  id: totrans-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: uftrace
- en: '[uftrace](https://github.com/namhyung/uftrace) can be used to generating function
    call graphs of a program execution'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '[uftrace](https://github.com/namhyung/uftrace) 可用于生成程序执行的函数调用图'
- en: rr
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: rr
- en: '[rr](http://rr-project.org/) is a free (open source) reverse debugger that
    supports C++.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '[rr](http://rr-project.org/) 是一个支持 C++ 的免费（开源）反向调试器。'
- en: Other Tools
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他工具
- en: Metrix++
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Metrix++
- en: '[Metrix++](http://metrixplusplus.sourceforge.net/) can identify and report
    on the most complex sections of your code. Reducing complex code helps you and
    the compiler understand it better and optimize it better.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '[Metrix++](http://metrixplusplus.sourceforge.net/) 可以识别并报告代码中最复杂的部分。减少复杂代码有助于您和编译器更好地理解它并进行优化。'
- en: ABI Compliance Checker
  id: totrans-201
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ABI兼容性检查器
- en: '[ABI Compliance Checker](http://ispras.linuxbase.org/index.php/ABI_compliance_checker)
    (ACC) can analyze two library versions and generates a detailed compatibility
    report regarding API and C++ ABI changes. This can help a library developer spot
    unintentional breaking changes to ensure backward compatibility.'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '[ABI兼容性检查器](http://ispras.linuxbase.org/index.php/ABI_compliance_checker) (ACC)
    可以分析两个库版本，并生成有关API和C++ ABI更改的详细兼容性报告。这可以帮助库开发人员发现无意中的破坏性更改，以确保向后兼容性。'
- en: CNCC
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CNCC
- en: '[Customizable Naming Convention Checker](https://github.com/mapbox/cncc) can
    report on identifiers in your code that do not follow certain naming conventions.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '[可定制的命名约定检查器](https://github.com/mapbox/cncc) 可以报告代码中不遵循某些命名约定的标识符。'
- en: ClangFormat
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ClangFormat
- en: '[ClangFormat](http://clang.llvm.org/docs/ClangFormat.html) can check and correct
    code formatting to match organizational conventions automatically. [Multipart
    series](https://engineering.mongodb.com/post/succeeding-with-clangformat-part-1-pitfalls-and-planning/)
    on utilizing clang-format.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '[ClangFormat](http://clang.llvm.org/docs/ClangFormat.html) 能够自动检查和纠正代码格式，使其符合组织的约定。[多部分系列](https://engineering.mongodb.com/post/succeeding-with-clangformat-part-1-pitfalls-and-planning/)
    关于利用 clang-format。'
- en: SourceMeter
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SourceMeter
- en: '[SourceMeter](https://www.sourcemeter.com/) offers a free version which provides
    many different metrics for your code and can also call into cppcheck.'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '[SourceMeter](https://www.sourcemeter.com/) 提供免费版本，为您的代码提供许多不同的度量标准，还可以调用 cppcheck。'
- en: Bloaty McBloatface
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Bloaty McBloatface
- en: '[Bloaty McBloatface](https://github.com/google/bloaty) is a binary size analyzer/profiler
    for unix-like platforms'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '[Bloaty McBloatface](https://github.com/google/bloaty) 是用于类Unix平台的二进制大小分析器/分析工具'
