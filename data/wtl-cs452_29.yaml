- en: Lecture 29 - Pathologies II
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第29讲 - 病理学II
- en: Public Service Annoucements
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公共服务公告
- en: 'Final exam date: 9.00 August 7 to 11.30 August 9'
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 期末考试日期：8月7日上午9点至8月9日上午11点30分
- en: '* * *'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Pathologies
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 病理学
- en: As we go down this list both pathology detection and the length of the edit-compile-test
    cycle grow without bound.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们逐渐深入了解这个列表，病理检测和编辑-编译-测试周期的长度会无限增长。
- en: 1\. Deadlock
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1\. 死锁
- en: 2\. Livelock (Deadly Embrace)
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2\. 活锁（致命拥抱）
- en: Definition
  id: totrans-8
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 定义
- en: Two or more tasks are READY. For each task, the state of the other tasks prevents
    progress being made regardless of which task is ACTIVE.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 两个或更多任务处于准备状态。对于每个任务，其他任务的状态阻止了进展，无论哪个任务处于活动状态。
- en: A higher level of coordination is required.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 需要更高级别的协调。
- en: Two types of livelock exist
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种类型的活锁
- en: Ones that are the result of bad coding
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 那些由糟糕编码导致的
- en: Find bug and remove it.
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到错误并消除它。
- en: Ones that are inherent in the application definition
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 那些固有于应用程序定义中的
- en: Detect livelock and work around it.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测活锁并解决它。
- en: Looking for solutions we prefer ones that avoid a central planner. Why?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在寻找解决方案时，我们更喜欢避免中央计划者。为什么？
- en: In the twentieth century there were a collection of political systems relying
    on central planners
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在20世纪，有一系列依赖中央计划者的政治体系
- en: Most no longer exist
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数已经不存在
- en: Livelock usually occurs in the context of resource contention
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 活锁通常发生在资源争用的情况下
- en: Livelock that's Really Deadlock
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 真正的死锁活锁
- en: client1 needs resource1 & resource2;
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端1需要资源1和资源2；
- en: obtains resource1 from proprietor1;
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从所有者1处获取资源1；
- en: asks proprietor2 for resource2
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向所有者2请求资源2
- en: client2 needs resource1 & resource2;
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端2需要资源1和资源2；
- en: obtains resource2 from proprietor2;
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从所有者2处获取资源2；
- en: asks proprietor1 for resource1
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向所有者1请求资源1
- en: possible code
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能的代码
- en: Client 1
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端1
- en: '[PRE0]'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Client 2
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端2
- en: '[PRE1]'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Proprietor
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有者
- en: '[PRE2]'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'state:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 状态：
- en: 'client1, client2: REPLY-BLOCKED - can''t release resources'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端1，客户端2：回复阻塞 - 无法释放资源
- en: 'proprietor1, proprietor2: SEND-BLOCKED - waiting for release'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有者1，所有者2：发送阻塞 - 等待释放
- en: this is a true deadlock -- none of the four tasks will ever run again -- even
    though there are no cycles in the call graph.
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个真正的死锁 - 四个任务都不会再运行 - 即使在调用图中没有循环。
- en: The dependencies lie elsewhere. Where?
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖关系存在于其他地方。在哪里？
- en: (You can find on the internet arguments about terminology just as intense as
    anything you will ever see in vi vs emacs or Apple vs Microsoft.)
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: （您可以在互联网上找到关于术语的争论，就像您在vi vs emacs或Apple vs Microsoft中看到的那样激烈。）
- en: Solutions
  id: totrans-40
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 解决方案
- en: Make a single compound resourse, BUT
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 制作一个单一的复合资源，但是
- en: all clients may not need both
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有客户端可能不需要全部
- en: some resources simply cannot be compounded
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些资源根本无法合并
- en: Impose a global order on resource requests that all clients must follow.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对所有客户端必须遵循的资源请求施加全局顺序。
- en: unsafe against malicious or incompetent programmers
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不安全，容易受到恶意或无能程序员的攻击
- en: some resources don't admit strong enough ordering, e.g. pieces of track in the
    train set
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些资源没有足够强的排序，例如火车轨道上的轨道段
- en: Create a mega-server that handles all resource requests
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个处理所有资源请求的超级服务器
- en: clients request all at once, mega-server provides an optimal solution to resource
    use in the presence of hundreds of deadlines.
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端一次性请求所有资源，超级服务器在存在数百个截止日期的情况下提供资源使用的最佳解决方案。
- en: client might not know that A is needed until processing with B is well-advanced
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端可能不知道需要A直到与B的处理已经进行到很深的阶段
- en: Real Livelock
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 真正的活锁
- en: Proprietor1 & proprietor2 fail the requests
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 所有者1和所有者2未能满足请求
- en: Proprietor
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有者
- en: '[PRE3]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Polling is the most likely result. Typical client code.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轮询是最可能的结果。典型的客户端代码。
- en: '[PRE4]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: And the problem is that this code usually works as long as it runs for a relatively
    short time
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题在于这段代码通常只要运行的时间相对较短就能正常工作
- en: Livelock that's Really a Critical Race
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 真正的活锁是真正的关键竞争
- en: We could try to make the clients a little more considerate
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以尝试让客户端更加体贴些
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Inherent Livelock
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 固有的活锁
- en: Remember the example where two trains come face to face, each waiting for the
    other to move. They will wait facing each other until the demo is over, probably
    polling.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 记得那个两列火车正面相对的例子，每列火车都在等待另一列火车移动。它们将面对面等待，直到演示结束，可能会轮询。
- en: What's hard about solving this problem?
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题有什么困难？
- en: Neither driver knows what the other driver is trying to do.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个驱动程序都不知道另一个驱动程序在尝试做什么。
- en: In real life,
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实生活中，
- en: the drivers would communicate, but
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 驱动程序会进行通信，但是
- en: in your software that's neither easy
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的软件中，这并不容易
- en: How many different `conversations' might need to be available?
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能需要多少不同的“对话”可用？
- en: nor desirable
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 也不是理想的
- en: What is the effect on other trains of the two drivers' special arrangement?
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个司机特殊安排对其他火车的影响是什么？
- en: What's most easy for you to do is to programme each driver with
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 对你来说最容易做的事情就是为每个驱动程序编程
- en: detection, e.g.,
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检测，例如，
- en: Delay a random time
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 延迟一个随机时间
- en: Request again
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 再次请求
- en: If turned down, work around
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果被拒绝，解决方法
- en: work around, e.g.,
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方法，例如，
- en: Recommence working on goal as though track is blocked.
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新开始工作目标，就好像轨道被阻塞了。
- en: Notice that the solution above doesn't work for the train-driver because he
    cannot release the track he is sitting on. His solution would be something like
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 注意上面的解决方案对于火车司机不适用，因为他无法释放他所在的轨道。他的解决方案可能是类似于
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 3\. Critical Races
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3. 临界竞争
- en: Example
  id: totrans-80
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 例子
- en: Two tasks, A & B, at the same priority
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两个任务，A和B，具有相同的优先级
- en: A is doing a lot of debugging IO
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: A正在进行大量的调试IO
- en: B always reserves a section of track before A, and all is fine.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: B总是在A之前预留一段轨道，一切正常。
- en: Debugging IO is removed
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调试IO被移除
- en: A reserves the section before B can get it, and execution collapses.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: A在B之前预留了一段轨道，执行崩溃了。
- en: Lower priority of A to the same level as C.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将A的优先级降低到与C相同的水平。
- en: Now C executes faster and gets a resource before D .
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在C执行更快，并在D之前获得资源。
- en: You shuffle priorities forever, eventually reverting, to put back in the debugging
    IO.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你不断地调整优先级，最终恢复，重新加入调试IO。
- en: Definition
  id: totrans-89
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 定义
- en: The order in which computation is done is an important factor in determining
    whether or not it is successful.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 计算的执行顺序是决定其成功与否的重要因素。
- en: Critical races, like Livelock can be
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 临界竞争，像活锁一样可能
- en: internal to the program, like the one above, or
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序内部，就像上面的那个，或者
- en: external to the program but inherent in the application domain
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序外部但固有于应用领域
- en: Symptoms
  id: totrans-94
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 症状
- en: Small changes in priorities change execution unpredictably, and drastically.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优先级的微小变化会使执行变得不可预测，而且剧烈。
- en: Debugging output changes execution drastically.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调试输出的更改会使执行发生剧烈变化。
- en: Changes in train speeds change execution drastically.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 火车速度的变化会使执行发生剧烈变化。
- en: Example from several terms ago
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几个学期前的例子
- en: '`Drastically'' usually means chaos in both senses of the term'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`剧烈''通常意味着术语的混乱'
- en: 'Sense one: a small change in the initial conditions produces an exponentially
    growing divergence in the execution.'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一种感觉：初始条件的微小变化会导致执行中指数增长的分歧。
- en: 'Sense two: exercise for the reader.'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二种感觉：读者的练习。
- en: Solutions
  id: totrans-102
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 解决方案
- en: Explicit synchronization
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显式同步
- en: but you then have to know the orders in which things are permitted to occur
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但你必须知道允许事件发生的顺序
- en: e.g. Try listing all the orders in which events can occur in your system
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，尝试列出系统中事件发生的所有顺序
- en: and then notice that just arriving in the same order is often not enough
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后注意到仅仅按照相同的顺序到达通常是不够的
- en: Gating is a technique of global synchronization
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 门控是一种全局同步技术
- en: which can be provided by a detective/coordinator
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这可以由侦探/协调员提供
- en: These solutions are hard to find because
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这些解决方案很难找到，因为
- en: Scenario-oriented design is natural (possibly even inescapable) for humans
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 面向场景的设计对人类来说是自然的（甚至可能是不可避免的）
- en: Too much synchronization can kill performance because it introduces extra dependencies.
    (Check to see how many tasks are delaying.)
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过多的同步会降低性能，因为它引入了额外的依赖关系。（检查有多少任务正在延迟。）
- en: 4\. Performance
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4. 性能
- en: Changes in performance of one task with respect to another often give rise to
    critical races
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 与另一个任务相比，性能的变化经常导致临界竞争
- en: The hardest problem to solve
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 最难解决的问题
- en: You just don't know what is possible
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你只是不知道什么是可能的
- en: 'Ask a question like:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提出一个问题，比如：
- en: Is my kernel code at the limit of what is possible in terms of performance?
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的内核代码是否达到了性能上的极限？
- en: We can compare the performance on message passing, etc., because two kernels
    are pretty much the same.
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以比较消息传递等性能，因为两个内核几乎相同。
- en: Compare a lot of kernels and you should be able to find a lower limit
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较很多内核，你应该能够找到一个下限
- en: Can't do the same thing for train applications
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法为火车应用做同样的事情
- en: In practice, how do you know you have performance problems? Problems I have
    seen
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，你如何知道自己有性能问题？我见过的问题
- en: Priority
  id: totrans-122
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 优先级
- en: The hardest thing to get right
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 最难做到正确的事情
- en: NP-hard for the human brain
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人脑对于NP难
- en: Practical method starts with all priorities the same, then adjusts
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际方法从所有优先级相同开始，然后进行调整
- en: symptoms of good priority assignment
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 良好优先级分配的症状
- en: The higher the priority, the more likely the ready queue is to be empty
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优先级越高，就越有可能就绪队列为空
- en: The shorter the run time in practice the higher the priority
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实践中运行时间越短，优先级越高
- en: Problems with priority
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 优先级问题
- en: Priority inversion
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优先级反转
- en: One resource, many clients
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个资源，多个客户端
- en: Tasks try to do too much
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务尝试做得太多
- en: Congestion
  id: totrans-133
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 拥塞
- en: Too many tasks
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务过多
- en: blocked tasks don't count,
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻塞的任务不计入，
- en: lowest priority tasks almost don't count
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优先级最低的任务几乎不计入
- en: Layered abstraction are costly
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 分层抽象成本高昂
- en: e.g. Notifier -> SerialServer -> InputAccumulater -> Parser -> TrackServer
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：通知器 -> 串行服务器 -> 输入累加器 -> 解析器 -> 跟踪服务器
- en: Output
  id: totrans-139
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 输出
- en: Too much terminal output interferes with train controller communication
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过多的终端输出干扰了列车控制器的通信
- en: Don't redraw the entire screen
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要重绘整个屏幕
- en: Requests to poll the sensors get backed up in the serial server, or whoever
    provides output buffering.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请求轮询传感器在串行服务器中积压，或者提供输出缓冲的其他地方。
- en: Hardware
  id: totrans-143
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 硬件
- en: Turn on optimization, but be careful
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开优化，但要小心
- en: There are places where you have done register allocation by hand
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有些地方你已经手动进行了寄存器分配
- en: Turn on caches
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开缓存
- en: locking is possible
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锁定是可能的
- en: Size & align calibration tables by size & alignment of cache lines
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 根据缓存行的大小和对齐方式调整大小和对齐校准表
- en: linker command script
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链接器命令脚本
- en: I think that this is stretching it.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我认为这有点牵强。
- en: '* * *'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Return to:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 返回至：
- en: '[Bill Cowan''s lecture notes for CS452 in s12](index.html)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩2012年春季CS452课堂笔记](index.html)'
- en: '[Bill Cowan''s Spring 2012 CS452 page](../index.html)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩2012年春季CS452页面](../index.html)'
- en: '[Bill Cowan''s CS452 page](../../index.html)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的CS452页面](../../index.html)'
- en: '[Bill Cowan''s teaching page](../../../index.html)'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的教学页面](../../../index.html)'
- en: '[Bill Cowan''s home page](../../../../index.html)'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的主页](../../../../index.html)'
