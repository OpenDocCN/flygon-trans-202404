- en: Parameterized Tests
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参数化测试
- en: Parameterized Tests
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参数化测试
- en: 'Exercise 1: Sets of example data'
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习1：示例数据集
- en: 'You have a list of pairs (word, count) that apply to the text file `mobydick_summary.txt`:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你有一个适用于文本文件`mobydick_summary.txt`的成对列表（单词，计数）：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We will create six tests from these samples.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从这些样本创建六个测试。
- en: 'Instead of creating six tests manually, we will use the **test parametrization
    in pytest**. Edit the file `test_parameterized.py` and add the following decorator
    to the test function:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 不要手动创建六个测试，我们将使用**pytest中的测试参数化**。编辑文件`test_parameterized.py`，并将以下装饰器添加到测试函数中：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Add two arguments `word` and `number` to the function header and remove the
    assignment below.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在函数头部添加两个参数`word`和`number`，并删除下面的赋值。
- en: Run the test and make sure all six tests pass.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试，确保所有六个测试都通过。
- en: 'Exercise 2: Write another parameterized test'
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习2：编写另一个参数化测试
- en: 'The function **get_top_words()** calculates the most frequent words in a text
    corpus. It should produce the following top five results for the book **mobydick_full.txt**:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 函数**get_top_words()**计算文本语料库中最常见的单词。它应该为书籍**mobydick_full.txt**产生以下前五个结果：
- en: '| position | word |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| position | word |'
- en: '| --- | --- |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 1. | of |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 1. | of |'
- en: '| 2. | the |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 2. | the |'
- en: '| 3. | is |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 3. | is |'
- en: '| 4. | sea |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 4. | sea |'
- en: '| 5. | ship |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 5. | ship |'
- en: Write one parameterized test that checks these five positions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个参数化测试，检查这五个位置。
