- en: Why I won't be writing a monad tutorial
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我不会写一个单子教程
- en: Why I won't be writing a monad tutorial
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我不会写一个单子教程
- en: '*"A ?newbie'', in Haskell, is someone who hasn''t yet implemented a compiler.
    They''ve only written a monad tutorial" - [Pseudonymn](http://sequence.complete.org/node?page=10)*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*“在Haskell中，一个‘新手’是指还没有实现编译器的人。他们只是写了一个单子教程” - [笔名](http://sequence.complete.org/node?page=10)*'
- en: Let's start with a story...
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个故事开始...
- en: Alice learns to count
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 爱丽丝学会了数数
- en: '*Young Alice and her father (who happens to be a mathematician) are visiting
    a petting zoo...*'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*年轻的爱丽丝和她的父亲（碰巧是一位数学家）正在参观一个动物园...*'
- en: 'Alice: Look at those kitties.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 爱丽丝：看那些小猫。
- en: '![two kitties](two_kitties.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![两只小猫](two_kitties.jpg)'
- en: 'Daddy: Aren''t they cute. There are *two* of them.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 爸爸：它们很可爱。有*两*只。
- en: 'Alice: Look at those doggies.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 爱丽丝：看那些小狗。
- en: '![two kitties](two_puppies.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![两只小猫](two_puppies.jpg)'
- en: 'Daddy: That''s right. Can you count? There are *two* doggies.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 爸爸：没错。你能数数吗？有*两*只小狗。
- en: 'Alice: Look at those horsies.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 爱丽丝：看那些小马。
- en: '![two kitties](two_horses.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![两只小猫](two_horses.jpg)'
- en: 'Daddy: Yes darling. Do you know what the kitties and doggies and horsies all
    have in common?'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 爸爸：是的亲爱的。你知道小猫、小狗和小马有什么共同之处吗？
- en: 'Alice: No. Nothing in common!'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 爱丽丝：没有。没有共同之处！
- en: 'Daddy: Well, actually they *do* have something in common. Can you see what
    it is?'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 爸爸：实际上它们*确实*有一些共同之处。你能看出来是什么吗？
- en: 'Alice: No! A doggy is not a kitty. A horsie is not a kitty.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 爱丽丝：不！小狗不是小猫。小马也不是小猫。
- en: 'Daddy: How about I explain for you? First, let us consider [a set S which is
    strictly well-ordered with respect to set membership and where every element of
    S is also a subset of S](http://en.wikipedia.org/wiki/Ordinal_number#Von_Neumann_definition_of_ordinals).
    Does that give you a clue?'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 爸爸：我来为你解释好吗？首先，让我们考虑[一个集合S，严格按照集合成员关系进行良序排列，其中S的每个元素也是S的子集](http://en.wikipedia.org/wiki/Ordinal_number#Von_Neumann_definition_of_ordinals)。这给你一点线索吗？
- en: 'Alice: [Bursts into tears]'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 爱丽丝：[哭泣起来]
- en: How not to win friends and influence people
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何不赢得朋友和影响人
- en: No (sensible) parent would ever try to explain how to count by starting with
    a formal definition of ordinal numbers.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 没有（明智的）父母会试图通过从序数的正式定义开始来解释如何计数。
- en: So why is it that many people feel compelled to explain a concept like monads
    by emphasizing their formal definition?
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 那么为什么许多人感觉有必要强调单子的正式定义来解释概念呢？
- en: That might be fine for a college-level math class, but it plainly does not work
    for regular programmers, who just want to create something useful.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于大学级数学课程可能没问题，但显然对于普通程序员来说行不通，他们只想创造出有用的东西。
- en: As an unfortunate result of this approach, though, there is now a whole mystique
    around the concept of monads. It has become [a bridge you must cross](http://www.thefreedictionary.com/pons+asinorum)
    on the way to true enlightenment. And there are, of course, a [plethora of monad
    tutorials](http://www.haskell.org/haskellwiki/Monad_tutorials_timeline) to help
    you cross it.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，由于这种方法，现在单子的概念周围有了一整个神秘感。它已经成为通往真正启蒙的[一座桥梁](http://www.thefreedictionary.com/pons+asinorum)。当然，有[大量的单子教程](http://www.haskell.org/haskellwiki/Monad_tutorials_timeline)可以帮助你跨越它。
- en: 'Here''s the truth: You *don''t* need to understand monads to write useful functional
    code. This is especially true for F# compared to say, Haskell.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这是事实：你*不需要*理解单子就能编写有用的函数式代码。这对于F#来说尤其如此，与Haskell相比。
- en: Monads are not a [golden hammer](http://en.wikipedia.org/wiki/Law_of_the_instrument).
    They won't make you any more productive. They won't make your code less buggy.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 单子不是[金色锤子](http://en.wikipedia.org/wiki/Law_of_the_instrument)。它们不会让你更有效率。它们不会让你的代码更少出错。
- en: So really, don't worry about them.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 所以真的，不要担心它们。
- en: Why I won't be writing a monad tutorial
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么我不会写一个单子教程
- en: So this is why I won't be writing a monad tutorial. I don't think it will help
    people learn about functional programming. If anything, it just creates confusion
    and anxiety.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我不会写一个单子教程。我认为这不会帮助人们了解函数式编程。如果有的话，它只会制造混乱和焦虑。
- en: Yes, I will use examples of monads in [many](recipe-part2.html) different [posts](computation-expressions-wrapper-types.html),
    but, other than right here, I will try to avoid using the word "monad" anywhere
    on this site. In fact, it has pride of place on my [list of banned words](../about/index.md#banned)!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我将在[许多](recipe-part2.html)不同的[帖子](computation-expressions-wrapper-types.html)中使用单子的例子，但除了这里之外，我会尽量避免在这个网站的任何地方使用“单子”这个词。事实上，它在我的[禁用词列表](../about/index.md#banned)中占据了重要位置！
- en: Why you should write a monad tutorial
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么你应该写一个单子教程
- en: On the other hand, I do think that *you* should write a monad tutorial. When
    you try to explain something to somebody else, you end up understanding it better
    yourself.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，我确实认为*你*应该写一个单子教程。当你试图向别人解释某事时，你最终会更好地理解它。
- en: 'Here''s the process I think you should follow:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我认为你应该遵循的过程：
- en: First, write lots of practical code involving lists, sequences, options, async
    workflows, computation expressions, etc.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，写很多涉及列表、序列、选项、异步工作流、计算表达式等实际代码。
- en: As you become more experienced, you will start to use more abstractions, focusing
    on the shapes of things rather than the details.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随着经验的增加，你会开始使用更多的抽象，关注事物的形状而不是细节。
- en: At some point, you will have an aha! moment -- a sudden insight that all the
    abstractions have something in common.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在某个时刻，你会有一个恍然大悟的时刻 -- 突然领悟到所有抽象都有共同之处。
- en: Bingo! Time to write your monad tutorial!
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 太棒了！是时候写你的单子教程了！
- en: The key point is that [*you have to do it in this order*](http://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/)
    -- you cannot jump straight to the last step and then work backwards. It is the
    very act of working your way through the details that enables you to understand
    the abstraction when you see it.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 关键点在于[*你必须按照这个顺序来做*](http://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/)
    -- 你不能直接跳到最后一步然后逆向操作。正是通过逐步解决细节的过程，使你能够在看到抽象时理解它。
- en: Good luck with your tutorial -- I'm off to eat a burrito.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你的教程好运 -- 我去吃个墨西哥卷饼了。
