- en: One Binary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单一二进制文件
- en: One Binary
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单一二进制文件
- en: I've seen several projects where the build rewrites some part of the code to
    generate a custom binary for each target environment. This always makes things
    more complicated than they should be, and introduces a risk that the team may
    not have consistent versions on each installation. At a minimum it involves building
    multiple, near-identical copies of the software, each of which then has to be
    deployed to the right place. It means more moving parts than necessary, which
    means more opportunities to make a mistake.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我见过几个项目，其中构建会重新编写代码的某些部分，以生成针对每个目标环境的定制二进制文件。这总是会使事情变得比它们应该的更加复杂，并引入了一个风险，即团队可能在每个安装上没有一致的版本。至少，它涉及构建多个几乎相同的软件副本，然后必须将每个副本部署到正确的位置。这意味着比必要的移动部件更多，这意味着出错的机会更多。
- en: I once worked on a team where every property change had to be checked in for
    a full build cycle, so the testers were left waiting whenever they needed a minor
    adjustment (did I mention that the build took too long as well?). I also worked
    on a team where the system administrators insisted on rebuilding from scratch
    for production (using the same scripts that we did), which meant that we had no
    proof that the version in production was the one that had been through testing.
    And so on.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 曾经，我曾在一个团队工作，那里每次属性更改都必须提交进行完整的构建周期检查，所以测试人员每当需要进行微小调整时就会被留下（我提到过构建时间太长了吗？）。我还曾在一个团队工作过，那里的系统管理员坚持要为生产环境从头开始重建（使用我们使用的相同脚本），这意味着我们无法证明生产环境中的版本是经过测试的版本。等等。
- en: 'The rule is simple: *Build a single binary that you can identify and promote
    through all the stages in the release pipeline.* Hold environment-specific details
    in the environment. This could mean, for example, keeping them in the component
    container, in a known file, or in the path.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 规则很简单：*构建一个单一的二进制文件，你可以通过发布管道中的所有阶段进行识别和推广。*将环境特定的细节保留在环境中。例如，这可能意味着将它们保存在组件容器中，在已知文件中或在路径中。
- en: 'If your team either has a code-mangling build or stores all the target settings
    with the code, that suggests that no one has thought through the design carefully
    enough to separate those features which are core to the application and those
    which are platform-specific. Or it could be worse: The team knows what to do but
    can''t prioritize the effort to make the change.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的团队要么有一个乱码的构建，要么将所有目标设置与代码存储在一起，这表明没有人认真考虑过设计，以区分那些是应用程序核心的功能和那些是特定于平台的功能。或者更糟的是：团队知道该怎么做，但无法优先考虑进行更改的努力。
- en: 'Of course, there are exceptions: You might be building for targets that have
    significantly different resource constraints, but that doesn''t apply to the majority
    of us who are writing "database to screen and back again" applications. Alternatively,
    you might be living with some legacy mess that''s too hard to fix right now. In
    such cases, you have to move incrementally — but start as soon as possible.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，也有例外情况：您可能正在为具有显着不同资源约束的目标构建，但这不适用于我们大多数编写“从数据库到屏幕再回来”应用程序的人。或者，您可能正在处理一些现在很难修复的旧系统混乱。在这种情况下，您必须进行逐步移动-但尽快开始。
- en: 'And one more thing: Keep the environment information versioned too. There''s
    nothing worse than breaking an environment configuration and not being able to
    figure out what changed. The environmental information should be versioned separately
    from the code, since they''ll change at different rates and for different reasons.
    Some teams use distributed version control systems for this (such as bazaar and
    git), since they make it easier to push changes made in production environments
    — as inevitably happens — back to the repository.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一件事：也要将环境信息进行版本控制。没有比破坏环境配置并且无法弄清楚发生了什么更糟糕的了。环境信息应该与代码分开进行版本控制，因为它们的变化速率和原因不同。一些团队使用分布式版本控制系统进行这项工作（例如bazaar和git），因为它们使得将在生产环境中进行的更改（不可避免地发生）轻松地推回存储库变得更容易。
- en: By [Steve Freeman](http://programmer.97things.oreilly.com/wiki/index.php/Steve_Freeman)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：[史蒂夫·弗里曼](http://programmer.97things.oreilly.com/wiki/index.php/Steve_Freeman)
