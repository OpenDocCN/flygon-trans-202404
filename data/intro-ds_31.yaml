- en: '[Map](data_mining_map.htm) > [Data Science](data_mining.htm) > [Predicting
    the Future](predicting_the_future.htm) > [Modeling](modeling.htm) > [Clustering](clustering.htm)
    > K-Means'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: '[地图](data_mining_map.htm) > [数据科学](data_mining.htm) > [预测未来](predicting_the_future.htm)
    > [建模](modeling.htm) > [聚类](clustering.htm) > K-Means'
- en: K-Means Clustering
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: K-Means聚类
- en: 'K-Means clustering intends to partition *n* objects into *k* clusters in which
    each object belongs to the cluster with the nearest mean. This method produces
    exactly *k* different clusters of greatest possible distinction. The best number
    of clusters *k* leading to the greatest separation (distance) is not known as
    a priori and must be computed from the data. The objective of K-Means clustering
    is to minimize total intra-cluster variance, or, the squared error function:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: K-Means聚类旨在将*n*个对象分成*k*个簇，其中每个对象属于具有最近均值的簇。该方法产生最大可能区分的*k*个不同簇。导致最大分离（距离）的最佳簇数*k*事先不知道，必须从数据中计算得出。K-Means聚类的目标是最小化总内部簇方差，或者说，平方误差函数：
- en: '![](../Images/ed5bbb05ebf413c222a1f376295bf811.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ed5bbb05ebf413c222a1f376295bf811.jpg)'
- en: '**Algorithm**'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**算法**'
- en: Clusters the data into *k* groups where *k* is predefined.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据聚类成预定义的*k*组。
- en: Select *k* points at random as cluster centers.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随机选择*k*个点作为簇中心。
- en: Assign objects to their closest cluster center according to the *Euclidean distance*
    function.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据*欧氏距离*函数将对象分配到最近的簇中心。
- en: Calculate the centroid or mean of all objects in each cluster.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每个簇中所有对象的质心或均值。
- en: Repeat steps 2, 3 and 4 until the same points are assigned to each cluster in
    consecutive rounds.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤2、3和4，直到连续轮次中每个簇都分配相同的点。
- en: '![](../Images/e24409d58c4db5126e0ece78b91b09e6.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e24409d58c4db5126e0ece78b91b09e6.jpg)'
- en: K-Means is relatively an efficient method. However, we need to specify the number
    of clusters, in advance and the final results are sensitive to initialization
    and often terminates at a local optimum. Unfortunately there is no global theoretical
    method to find the optimal number of clusters. A practical approach is to compare
    the outcomes of multiple runs with different *k* and choose the best one based
    on a predefined criterion. In general, a large *k* probably decreases the error
    but increases the risk of overfitting. *Example*:Suppose we want to group the
    visitors to a website using just their age (a one-dimensional space) as follows:15,15,16,19,19,20,20,21,22,28,35,40,41,42,43,44,60,61,65**Initial
    clusters:**Centroid (C1) = 16 [16]
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: K-Means是一个相对高效的方法。然而，我们需要提前指定簇的数量，并且最终结果对初始化非常敏感，通常在局部最优点终止。不幸的是，没有全局理论方法来找到最佳簇的数量。一个实用的方法是比较多次运行不同*k*的结果，并根据预定义的标准选择最佳结果。一般来说，较大的*k*可能会减少错误但增加过拟合的风险。*示例*：假设我们想要仅使用年龄（一维空间）对网站访问者进行分组如下：15,15,16,19,19,20,20,21,22,28,35,40,41,42,43,44,60,61,65**初始簇：**质心（C1）=
    16 [16]
- en: Centroid (C2) = 22 [22]Iteration **1**:C1 = 15.33 [15,15,16]
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 质心（C2）= 22 [22]迭代**1**：C1 = 15.33 [15,15,16]
- en: C2 = 36.25 [19,19,20,20,21,22,28,35,40,41,42,43,44,60,61,65]Iteration **2**:C1
    = 18.56 [15,15,16,19,19,20,20,21,22]
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: C2 = 36.25 [19,19,20,20,21,22,28,35,40,41,42,43,44,60,61,65]迭代**2**：C1 = 18.56
    [15,15,16,19,19,20,20,21,22]
- en: C2 = 45.90 [28,35,40,41,42,43,44,60,61,65]Iteration **3**:C1 = 19.50 [15,15,16,19,19,20,20,21,22,28]
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: C2 = 45.90 [28,35,40,41,42,43,44,60,61,65]迭代**3**：C1 = 19.50 [15,15,16,19,19,20,20,21,22,28]
- en: C2 = 47.89 [35,40,41,42,43,44,60,61,65]Iteration **4**:C1 = 19.50 [15,15,16,19,19,20,20,21,22,28]
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: C2 = 47.89 [35,40,41,42,43,44,60,61,65]迭代**4**：C1 = 19.50 [15,15,16,19,19,20,20,21,22,28]
- en: C2 = 47.89 [35,40,41,42,43,44,60,61,65]No change between iterations 3 and 4
    has been noted. By using clustering, 2 groups have been identified 15-28 and 35-65\.
    The initial choice of centroids can affect the output clusters, so the algorithm
    is often run multiple times with different starting conditions in order to get
    a fair view of what the clusters should be.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: C2 = 47.89 [35,40,41,42,43,44,60,61,65]在第3和第4次迭代之间没有变化。通过聚类，已经确定了2个组15-28和35-65。初始质心的选择会影响输出簇，因此通常以不同的起始条件多次运行算法，以便公平地了解应该是什么样的簇。
- en: '| [Exercise](clustering_kmeans_exercise.htm) | [![](../Images/a890baab528b0ca069f7f2599c0c5e39.jpg)](datasets/Kmeans.txt)
    | [K Means Interactive](http://home.dei.polimi.it/matteucc/Clustering/tutorial_html/AppletKM.html)
    |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [练习](clustering_kmeans_exercise.htm) | [![](../Images/a890baab528b0ca069f7f2599c0c5e39.jpg)](datasets/Kmeans.txt)
    | [K Means 交互式](http://home.dei.polimi.it/matteucc/Clustering/tutorial_html/AppletKM.html)
    |'
