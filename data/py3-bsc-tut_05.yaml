- en: Lists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列表
- en: Lists
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列表
- en: To handle larger amounts of data, we cannot invent a new variable for every
    new data item. Somehow we need to store more data in one variable. This is where
    Python **lists** come in.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理更大量的数据，我们不能为每个新数据项发明一个新变量。我们需要以某种方式将更多数据存储在一个变量中。这就是 Python **列表** 的用武之地。
- en: 'However, Python counts a bit different than humans do:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Python 计数方式与人类有些不同：
- en: '![indexing](indexing.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![索引](indexing.png)'
- en: Creating lists
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建列表
- en: Creating lists
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建列表
- en: Exercise 1
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 1
- en: Find out what each of the expressions does to the list in the center.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 找出每个表达式对中间列表的影响。
- en: '![list exercise](lists.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![列表练习](lists.png)'
- en: Exercise 2
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 2
- en: What does the following program do?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下程序做什么？
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Exercise 3
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 3
- en: How many babies are there in total? Write a program that calculates that number.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有多少个婴儿？编写一个计算该数字的程序。
- en: Exercise 4
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 4
- en: 'You have a list of the 20 most popular girls names from the year 2000:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你有一个列表，其中包含了 2000 年最受欢迎的 20 个女孩名字：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Write a program that prints all names starting with `'A'` or `'M'`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个程序，打印所有以`'A'`或`'M'`开头的名称。
- en: Exercise 5
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 5
- en: Use the expressions to modify the list as indicated. Use each expression once.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用表达式按要求修改列表。每个表达式只使用一次。
- en: '![list funcs exercise1](list_funcs1.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![列表函数练习1](list_funcs1.png)'
- en: Exercise 6
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 6
- en: Create a new list containing the sum of *California* and *New York* for each
    name.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新列表，其中包含每个名称的*加利福尼亚*和*纽约*的总和。
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Exercise 7
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 7
- en: Use the expressions to modify the list as indicated. Use each expression once.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用表达式按要求修改列表。每个表达式只使用一次。
- en: '![list funcs exercise2](list_funcs2.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![列表函数练习2](list_funcs2.png)'
- en: Shortcuts
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快捷键
- en: Shortcuts
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快捷键
- en: Exercise 1
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 1
- en: 'Simplify the following code using the function `sum()`:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用函数`sum()`简化以下代码：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Exercise 2
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 2
- en: 'Simplify the following code using the function `range()`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用函数`range()`简化以下代码：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Exercise 3
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 3
- en: 'Simplify the following code using the function `zip()`:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用函数`zip()`简化以下代码：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Exercise 4
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 4
- en: 'Simplify the following code using the function `enumerate()`:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用函数`enumerate()`简化以下代码：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Exercise 5
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 5
- en: 'Use `list(range())` to create the following lists:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`list(range())`创建以下列表：
- en: '`[4, 7, 9, 12]`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[4, 7, 9, 12]`'
- en: '`[10, 20, 30, 40, 50]`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[10, 20, 30, 40, 50]`'
- en: '`[33, 32, 31, 30]`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[33, 32, 31, 30]`'
- en: Exercise 6
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 6
- en: On which data types does the `len()` function work?
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`len()`函数适用于哪些数据类型？'
- en: lists
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表
- en: dictionaries
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典
- en: strings
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串
- en: floats
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数
- en: sets
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合
- en: Working with tables
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理表格
- en: Tables
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表格
- en: Data frequently occurs in the form of tables. To process tables in Python, it
    helps to know that we can put lists in other lists. These are also called **nested
    lists**.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 数据经常以表格形式出现。要在 Python 中处理表格，了解我们可以将列表放入其他列表中会很有帮助。这些也被称为**嵌套列表**。
- en: 'A simple table in Python looks like this:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Python 中一个简单的表格如下所示：
- en: '[PRE7]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In this chapter we will deal with creating and processing nested lists.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将处理创建和处理嵌套列表。
- en: Exercise 1
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 1
- en: Write all rows of the above table to the screen with a `for` loop.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`for`循环将上述表的所有行打印到屏幕上。
- en: Exercise 2
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 2
- en: Write all *cells* of the table to the screen with a double `for` loop.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用双重`for`循环将表格的所有*单元格*打印到屏幕上。
- en: Exercise 3
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 3
- en: Create an empty table of 10 x 10 cells and fill them with numbers from 1 to
    100.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个 10 x 10 单元格的空表，并用从 1 到 100 的数字填充它们。
- en: Exercise 4
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 4
- en: 'Sort the above table by the second column. Use the following code sniplet:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 按照第二列对上述表进行排序。使用以下代码片段：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
