- en: 1Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1引言
- en: '|     [1.1 Our Philosophy](#%28part._.Our_.Philosophy%29) |'
  id: totrans-1
  prefs: []
  type: TYPE_TB
  zh: '|     [1.1 我们的理念](#%28part._.Our_.Philosophy%29) |'
- en: '|     [1.2 Predictability as a Theme](#%28part._predictability%29) |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
  zh: '|     [1.2 预测性作为主题](#%28part._predictability%29) |'
- en: '|     [1.3 The Structure of This Book](#%28part._.The_.Structure_of_.This_.Book%29)
    |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '|     [1.3 本书的结构](#%28part._.The_.Structure_of_.This_.Book%29) |'
- en: '|     [1.4 The Language of This Book](#%28part._.The_.Language_of_.This_.Book%29)
    |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '|     [1.4 本书的语言](#%28part._.The_.Language_of_.This_.Book%29) |'
- en: 1.1Our Philosophy
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.1我们的理念
- en: 'Many people would regard this as being two books in one. One book is an introduction
    to programming, teaching you basic concepts of organizing data and the programs
    that operate over them, ending in the investigation of universally useful algorithms.
    The other book is an introduction to programming languages: a study, from one
    level up, of the media by which we structure these data and programs.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人会认为这是两本书。一本书是编程的简介，教授你组织数据和操作数据的程序的基本概念，最后调查普遍有用的算法。另一本书是编程语言的简介：从一个更高的层次，研究我们通过这些数据和程序来结构的媒介。
- en: Obviously, these are not unrelated topics. We learn programming through one
    or more languages, and the programs we write then become natural subjects of study
    to understand languages at large. Nevertheless, these are considered sufficiently
    different topics that they are approached separately. This is how we approached
    them, too.The one noble exception to this separation is the best computer science
    book ever written, The Structure and Interpretation of Computer Programs.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，这些不是不相关的主题。我们通过一种或多种语言学习编程，然后编写的程序成为了理解大型语言的自然学习对象。然而，这些被认为是足够不同的主题，以至于它们被单独对待。这也是我们处理它们的方式。唯一不同的例外是有史以来最好的计算机科学书籍，《计算机程序的结构和解释》。
- en: We have come to realize that this separation is neither meaningful nor helpful.
    The topics are deeply intertwined and, by accepting that interleaving, the result
    is likely to be a much better book. This is my experiment with that format.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经意识到这种分离既没有意义也没有帮助。这些主题深深地交织在一起，通过接受交错，结果很可能会是一本更好的书。这是我对这种格式的一次尝试。
- en: 1.2Predictability as a Theme
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2作为主题的可预测性
- en: There are many ways to organize the study of programming and programming languages.
    My central theme is the concept of predictability.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多组织编程和编程语言学习的方法。我的中心主题是可预测性的概念。
- en: 'Programs are typically static: they live on the moral equivalent of a paper,
    unmoving and unchanging. But when we run a program, it produces a complex, dynamic
    behavior that yields utility, pleasure, and (sometimes) frustration. Everyone
    who writes programs ultimately cares—<wbr>whether they realize it or not—<wbr>in
    predicting the latter from the former. Sometimes we even write programs to help
    us with this task (as we’ll see in [Examples, Testing, and Program Checking](testing.html),
    [Predicting Growth](predicting-growth.html), [Reasoning about Programs: A First
    Look at Types](types.html), and elsewhere).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 程序通常是静态的：它们存在于道德上的纸张等效物上，静止不动。但当我们运行程序时，它产生了复杂的动态行为，产生了效用、愉悦和（有时）挫折。所有写程序的人最终都关心——无论他们是否意识到——从前者预测后者。有时我们甚至编写程序来帮助我们完成这项任务（正如我们将在[示例、测试和程序检查](testing.html)、[预测增长](predicting-growth.html)、[关于程序的推理：第一次看到类型](types.html)和其他地方看到的）。
- en: Predictability has a bad rap. Under the guise of “program reasoning”, it came
    to be viewed simultaneously as both noble and mind-numbingly boring. It is certainly
    noble, but we will try to present it a way that will hopefully seem utterly natural,
    indeed entirely obvious (because we believe it is). Hopefully you’ll come away
    from this study reasonably convinced about the central place of predictability
    in your own work, and as a metric for programming language design.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 可预测性声誉不佳。在“程序推理”的伪装下，它被同时视为崇高和令人心生厌倦的。它确实是崇高的，但我们将试图以一种希望看起来完全自然，甚至完全显而易见的方式呈现它（因为我们相信它是）。希望通过这项研究，您能对可预测性在您自己的工作中的核心地位以及作为编程语言设计度量标准的重要性有相当的信心。
- en: 1.3The Structure of This Book
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.3本书的结构
- en: 'Unlike some other textbooks, this one does not follow a top-down narrative.
    Rather it has the flow of a conversation, with backtracking. We will often build
    up programs incrementally, just as a pair of programmers would. We will include
    mistakes, not because we don’t know better, but because this is the best way for
    you to learn. Including mistakes makes it impossible for you to read passively:
    you must instead engage with the material, because you can never be sure of the
    veracity of what you’re reading.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 与一些其他教科书不同，这本教科书没有按照自上而下的叙述方式。相反，它具有对话的流程，带有回溯。我们经常会逐步构建程序，就像一对程序员会做的那样。我们会包括错误，不是因为我们不知道更好的方法，而是因为这是你学习的最佳方式。包含错误使你无法被动地阅读：相反，你必须与材料互动，因为你永远不能确定你所阅读的内容的真实性。
- en: At the end, you’ll always get to the right answer. However, this non-linear
    path is more frustrating in the short term (you will often be tempted to say,
    “Just tell me the answer, already!”), and it makes the book a poor reference guide
    (you can’t open up to a random page and be sure what it says is correct). However,
    that feeling of frustration is the sensation of learning. We don’t know of a way
    around it.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，你总会得到正确的答案。然而，这种非线性的路径在短期内更加令人沮丧（你经常会忍不住说，“告诉我答案吧！”），而且它使这本书成为一本糟糕的参考指南（你不能随意翻开一页并确定它所说的内容是否正确）。然而，这种沮丧的感觉就是学习的感觉。我们不知道有什么办法可以避开它。
- en: 'At various points you will encounter this:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在各个地方，你会遇到这样的情况：
- en: Exercise
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 练习
- en: ''
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is an exercise. Do try it.
  id: totrans-19
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这是一个练习。试一试。
- en: 'This is a traditional textbook exercise. It’s something you need to do on your
    own. If you’re using this book as part of a course, this may very well have been
    assigned as homework. In contrast, you will also find exercise-like questions
    that look like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个传统的教科书练习。这是你需要自己完成的事情。如果你把这本书当作课程的一部分，这很可能已经被指定为作业。相反，你还会找到类似于这样的练习性问题：
- en: Do Now!
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在做！
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: There’s an activity here! Do you see it?
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这里有一个活动！你看到了吗？
- en: When you get to one of these, stop. Read, think, and formulate an answer before
    you proceed. You must do this because this is actually an exercise, but the answer
    is already in the book—<wbr>most often in the text immediately following (i.e.,
    in the part you’re reading right now)—<wbr>or is something you can determine for
    yourself by running a program. If you just read on, you’ll see the answer without
    having thought about it (or not see it at all, if the instructions are to run
    a program), so you will get to neither (a) test your knowledge, nor (b) improve
    your intuitions. In other words, these are additional, explicit attempts to encourage
    active learning. Ultimately, however, we can only encourage it; it’s up to you
    to practice it.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当你遇到这样的情况时，请停下来。在继续之前，先阅读、思考并提出答案。你必须这样做，因为这实际上是一种练习，但答案已经在书中——<wbr>通常在紧接着的文本中（即，你正在阅读的部分）——<wbr>或者是你可以通过运行程序自己确定的内容。如果你只是继续阅读，你会看到答案而没有思考它（或者根本看不到，如果指令是运行程序），因此你既无法（a）测试你的知识，也无法（b）提高你的直觉。换句话说，这些是额外的、明确的尝试来鼓励主动学习。然而，最终，我们只能鼓励它；实践它取决于你自己。
- en: 1.4The Language of This Book
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.4本书的语言
- en: This book uses a new programming language called [Pyret](http://pyret.org/).
    Pyret is the outgrowth of our deep experience programming in and designing functional,
    object-oriented, and scripting languages, as well as their type systems, program
    analyses, and development environments.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书使用一种名为[Pyret](http://pyret.org/)的新编程语言。Pyret是我们在功能、面向对象和脚本语言以及它们的类型系统、程序分析和开发环境方面的深厚经验的产物。
- en: 'The language’s syntax is inspired by Python.Unlike Python, Pyret will enforce
    indentation rather than interpret it: that is, indentation will simply become
    another syntax well-formedness criterion. But that hasn’t been implemented yet.
    It fits the niche missing in computer science education of a simple language that
    sheds both the strange corner-cases ([of which there are many](http://cs.brown.edu/~sk/Publications/Papers/Published/pmmwplck-python-full-monty/))
    of Python while adding important features that Python lacks for learning programming
    (such as algebraic datatypes, optional annotations on variables, design decisions
    that better enable the construction of development environments, and strong support
    for testing). Beginning programmers can rest in the knowledge they are being cared
    for, while programmers with past acquaintance of the language menagerie, from
    serpents to dromedaries, should find Pyret familiar and comfortable.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这种语言的语法受到Python的启发。与Python不同，Pyret将强制执行缩进而不是解释它：也就是说，缩进将简单地成为另一个语法规范。但这还没有实现。它填补了计算机科学教育中缺失的一个简单语言的空白，这种语言既摆脱了Python的奇怪的边界情况（[其中有很多](http://cs.brown.edu/~sk/Publications/Papers/Published/pmmwplck-python-full-monty/)），同时又增加了Python缺少的重要特性，用于学习编程（如代数数据类型、变量的可选注释、更好地支持开发环境构建的设计决策以及对测试的强力支持）。初学者可以放心，因为他们得到了关怀，而过去对语言动物园（从蛇到单峰驼都有）有所了解的程序员应该会觉得Pyret是熟悉和舒适的。
