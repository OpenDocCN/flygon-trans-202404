- en: 'Lab 06: Donation 5.0 - REST/Cloud Support'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实验 06：捐赠 5.0 - REST/云支持
- en: 'Lab 06: Donation 5.0 - REST/Cloud Support'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实验 06：捐赠 5.0 - REST/云支持
- en: Objectives
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标
- en: Objectives
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标
- en: In this Lab, you will complete an additional refactor of our Donation Case Study
    - **Donation.5.0**. We will build on the previous lab and add in some new features
    and most importantly,connect to a REST based Web Service. On completion of this
    lab you'll be able to
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，你将完成我们的Donation案例研究**Donation.5.0**的另一个重构。我们将在之前的实验基础上进行扩展，并添加一些新功能，最重要的是，连接到基于REST的Web服务。完成这个实验后，你将能够
- en: connect to a remote server to retrieve & delete Donations
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到远程服务器以检索和删除捐赠
- en: connect to a remote server to retrieve a single Donation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到远程服务器以检索单个捐赠
- en: add Event Handling to an Image on our Custom Donation Row
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在我们自定义的捐赠行上添加事件处理
- en: Step 01
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤 01
- en: Setup - Starter Code
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 - 起始代码
- en: As with the previous labs, you can download the solution/starter code for [Donation.5.0.starter](Donation.5.0.Starter.zip),
    or continue on with your own version.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的实验一样，你可以下载[Donation.5.0.starter](Donation.5.0.Starter.zip)的解决方案/起始代码，或者继续使用你自己的版本。
- en: 'Your current project (after renaming/copying) should looks as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你当前的项目（重命名/复制后）应该如下所示：
- en: '![](lab6s101.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s101.png)'
- en: 'In this lab, you are required to do the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，你需要做以下事情：
- en: Add REST Support via the [Donation sister site](http://donationweb-4-0.herokuapp.com)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过[捐赠姐妹网站](http://donationweb-4-0.herokuapp.com)添加REST支持
- en: Remove the Database Support and revert to the original Donation List
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除数据库支持并恢复原始的捐赠列表
- en: Refactor existing Classes to accommodate the new REST API
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重构现有类以适应新的REST API
- en: The following steps will guide you through these requirements, so we'll start
    with bringing in the classes we need to connect to our Web Service.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导你完成这些要求，所以我们将从引入连接到我们Web服务所需的类开始。
- en: Step 02
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤 02
- en: Adding REST Support & Project Clean Up
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加REST支持和项目清理
- en: The main purpose of this version of Donation is to connect to a Web Service
    ([our sister site](http://donationweb-4-0.herokuapp.com)) and be able to retrieve,
    insert and delete Donations.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个版本的Donation的主要目的是连接到一个Web服务（[我们的姐妹网站](http://donationweb-4-0.herokuapp.com)）并能够检索、插入和删除捐赠。
- en: To make things a bit easier I've devloped a simple API to make the HTTP calls
    and convert the responses from JSON into objects our Android App can use.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让事情变得更容易，我开发了一个简单的API来进行HTTP调用，并将响应从JSON转换为我们的Android应用程序可以使用的对象。
- en: So go ahead and download the package [here](api.zip).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所以继续并下载这个包[这里](api.zip)。
- en: 'The extracted archive consists of the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 解压后的存档包括以下内容：
- en: DonationApi.java
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DonationApi.java
- en: Rest.java
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rest.java
- en: (viewed in Finder)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: （在Finder中查看）
- en: '![](lab6s201.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s201.png)'
- en: 'You will need to add these classes to your Android Studio Project and the simplest
    way is to copy the api folder in Windows Explorer or Finder and paste directly
    into your **ie.app** package in your Android Studio Project. Once completed, your
    project should look something like this:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要将这些类添加到你的Android Studio项目中，最简单的方法是在Windows资源管理器或Finder中复制api文件夹，然后直接粘贴到Android
    Studio项目中的**ie.app**包中。完成后，你的项目应该看起来像这样：
- en: '![](lab6s202.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s202.png)'
- en: Now, if you Rebuild the project
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你重新构建项目
- en: Build->Rebuild Project
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 构建->重新构建项目
- en: 'you''ll have a number of errors relating to [Googles Gson](https://sites.google.com/site/gson/gson-user-guide),
    so first thing to do is add **Googles Gson''s** dependency to our project:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你会遇到一些与[Google的Gson](https://sites.google.com/site/gson/gson-user-guide)相关的错误，所以首先要做的是将**Google的Gson**依赖项添加到我们的项目中：
- en: Open your 'build.gradle' file for **app**, **NOT THE PROJECT!**
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你的'app'的'build.gradle'文件，而不是项目的���
- en: '![](lab6s203.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s203.png)'
- en: Add the Gson dependency
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 添加Gson依赖
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: so your dependencies in your build file looks something like this
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你的构建文件中的依赖关系看起来像这样
- en: '![](lab6s204.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s204.png)'
- en: Rebuild your project again and you should now be error free!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 再次重建你的项目，现在应该没有错误了！
- en: The next thing we need to do is remove/delete our database classes and reintroduce
    a simple list back into our DonationApp Application class.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来需要做的是删除我们的数据库类，并将一个简单的列表重新引入到我们的DonationApp应用程序类中。
- en: So,
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，
- en: first, just delete the whole **ie.app.database** package (don't worry about
    the errors, we'll fix those soon)
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，只需删除整个**ie.app.database**包（不用担心错误，我们很快会修复它们）
- en: next, reintroduce our donations list into the DonationApp class
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，将我们的捐赠列表重新引入DonationApp类中
- en: '[PRE1]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: finally, remove all references to **dbManager** in the project and replace with
    our **donations** or **app.donations** (depending on the context).
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，在项目中删除所有对**dbManager**的引用，并替换为我们的**donations**或**app.donations**（根据上下文而定）。
- en: We've actually taken a step back as regards functionality, as we're not adding
    donations to our list directly - the list is only to be used to hold the result
    of our REST calls.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 就功能而言，我们实际上已经退步了，因为我们不是直接将捐赠添加到我们的列表中 - 列表只用于保存我们REST调用的结果。
- en: So let's go ahead and start using our REST classes for data retrieval.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 那么让我们继续开始使用我们的REST类进行数据检索。
- en: Step 03
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第03步
- en: Donate Activity - Getting the Running Total
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 捐赠活动 - 获取运行总数
- en: When our Donation App initially starts we want to ensure that the current total
    (if any) is set correctly and corresponds to the donations listed on our sister
    web app.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们的捐赠应用程序初始启动时，我们希望确保当前总数（如果有）已正确设置，并且与我们姊妹网站列出的捐赠相对应。
- en: We need to retrieve a list of all our donations from the Server and set our
    total. We will achieve this through our REST classes and the use of AsyncTasks
    to execute those calls on a background thread.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要从服务器检索所有捐赠的列表并设置我们的总数。我们将通过我们的REST类和使用AsyncTasks在后台线程上执行这些调用来实现这一点。
- en: Before we start, we need to allow our app to access the internet (and network)
    so we need to add some permissions to our manifest file, so add the following
    to your **AndroidManifest.xml** file (just before the <application tag)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们需要允许我们的应用程序访问互联网（和网络），因此我们需要在清单文件中添加一些权限，因此请将以下内容添加到您的**AndroidManifest.xml**文件中（就在<application>标签之前）
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Introduce the following **private** class into the Donate activity
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下**私有**类引入到捐赠活动中
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To actually invoke this Task, add the following method
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要实际调用此任务，请添加以下方法
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you try and run your app, it'll connect to the web service and return our
    list from the sister site - but it will then crash. Can you work out why this
    is happening from the Logs, and how to fix it?
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尝试运行您的应用程序，它将连接到Web服务并从姊妹站点返回我们的列表 - 但然后会崩溃。您能从日志中找出这是为什么发生的以及如何修复吗？
- en: Step 04
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第04步
- en: Refactoring our Donation Model
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重构我们的捐赠模型
- en: If you've payed particular attention to the JSON string that was returned in
    the previous request, you'll see that there are 4 attributes, of different types
    - which don't match our current **Donation** class.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您特别注意了上一个请求返回的JSON字符串，您会看到有4个不同类型的属性 - 它们与我们当前的**Donation**类不匹配。
- en: This is why the app crashed - we were trying to convert our json string into
    a list of objects that are not the same type.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是应用程序崩溃的原因 - 我们试图将我们的json字符串转换为不同类型的对象列表。
- en: So go ahead and replace your current Donation Model with this one
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，请继续使用此模型替换您当前的捐赠模型
- en: '[PRE5]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'There''ll be a few small errors to fix, but once you do, run your app again
    and you should get something like the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些小错误要修复，但是一旦您修复了，再次运行您的应用程序，您应该会得到类似以下的东西：
- en: '![](lab6s401.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s401.png)'
- en: Step 05
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第05步
- en: Report Activity - Refactoring our Layouts
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 报告活动 - 重构我们的布局
- en: Now that we can see our Total Donations, let's display them in our Report Activity.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以看到我们的总捐款了，让我们在我们的报告活动中显示它们。
- en: We've a few modifications to make on our layouts first, and we're going to introduce
    Androids [SwipereRreshLayout](http://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.html)
    feature so replace your current report layout with this one
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要对我们的布局进行一些修改，并且我们将介绍Android的[SwipereRreshLayout](http://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.html)功能，因此请用此布局替换您当前的报告布局
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We also need to modify our custom row, so the user can see the number of 'upvotes'
    for each donation, so go ahead and refactor your row_donate.xml by introducing
    a new TextView Resource to display the 'upvotes'. We're also going to be able
    to delete a donation via a 'delete' button, so while you're refactoring the custom
    row, have a go at that too (like so)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要修改我们的自定义行，以便用户可以看到每笔捐赠的'upvotes'数量，因此请尝试通过引入新的TextView资源来重构您的row_donate.xml以显示'upvotes'。我们还将能够通过“删除”按钮删除捐赠，因此在重构自定义行时，请尝试这样做（就像这样）
- en: '![](lab6s501.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s501.png)'
- en: (And don't worry, the solution is on the next step, but have a go first)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: （别担心，解决方案在下一步，但首先试试）
- en: Step 06
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第06步
- en: Report Activity - Displaying our Donations
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 报告活动 - 显示我们的捐赠
- en: Here's the updated custom layout you should have (or something similar)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您应该拥有的更新的自定义布局（或类似的内容）
- en: '[PRE7]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now, if you run the app again, and select the Report Menu Option, you'll actually
    see the list that has been retrieved from the server (without any upvotes yet)
    - with no extra coding - how is this possible?
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您再次运行应用程序，并选择报告菜单选项，您实际上将看到从服务器检索到的列表（尚未进行任何投票） - 无需额外编码 - 这是如何可能的？
- en: '![](lab6s601.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s601.png)'
- en: Experiment with the Swipe Refresh gesture and see what happens?
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试滑动刷新手势，看看会发生什么？
- en: Step 07
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第07步
- en: Report Activity - Implementing Swipe Refresh
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 报告活动 - 实施滑动刷新
- en: You've probably noticed that even though we can 'refresh' our report list, all
    we see is the refresh progress spin indefinitely - we've no way to stop it except
    closing the activity.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，即使我们可以“刷新”报告列表，但我们看到的只是刷新进度一直旋转 - 除了关闭活动外，我们没有停止它的办法。
- en: '![](lab6s701.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s701.png)'
- en: The reason being, we have no backend implementation of the gesture to actually
    refresh the data in the list - so let's do that.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 原因是，我们没有后端实现手势来实际刷新列表中的数据 - 所以让我们做这个。
- en: The first thing we need to do is introduce a new AsyncTask to retrieve the donations
    - more advanced approaches could utilise interfaces and inheritance to reuse already
    existing AsyncTasks (like our GetAllTask), but for the moment, we'll try and keep
    it as simple as possible and write a new GetAllTask specifically for the Report
    activity.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是引入一个新的AsyncTask来检索捐款 - 更高级的方法可以利用接口和继承来重用已经存在的AsyncTasks（例如我们的GetAllTask），但目前我们将尽量保持尽可能简单，并为报告活动编写一个新的GetAllTask。
- en: Add the below AsyncTask to the Report Activity;
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下AsyncTask添加到Report Activity中；
- en: '[PRE8]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Fix all the errors (bar 1) and then bring in the following reference
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 修复所有错误（除了1个），然后引入以下参考资料
- en: '[PRE9]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: replace the existing onCreate() method with this one
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 用这个方法替换现有的onCreate()方法
- en: '[PRE10]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Run your app again and confirm that the refresh is working correctly, by adding
    or deleting a donation on the Web and then refreshing your Report Screen.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行您的应用程序，并确认刷新是否正常工作，方法是在Web上添加或删除捐款，然后刷新您的报告屏幕。
- en: '**Note : as everyone and anyone :-) can add and/or delete donations via the
    web app, I''d encourage you to keep the list of donations to 4 or 5 while you''re
    testing**'
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**注意：由于每个人都可以通过Web应用程序添加和/或删除捐款，因此我建议您在测试时将捐款列表保持在4或5个捐款**'
- en: We should also be displaying the 'upvotes' values for each donation so see if
    you can get that implemented before looking at the solution on the next step.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还应该显示每笔捐款的“赞数”，所以在查看下一步的解决方案之前，请查看是否可以实现它。
- en: Step 08
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第08步
- en: Report Activity - Event Handling
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 报告活动 - 事件处理
- en: Here's the solution to our updated DonationAdapter class so replace your current
    DonationAdapter with this one, and run and test your app again, to complete the
    step.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们更新后的DonationAdapter类的解决方案，所以请将您当前的DonationAdapter替换为此解决方案，并再次运行和测试您的应用程序，以完成此步骤。
- en: '[PRE11]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: While we working on the Report Activity, let's add some event handling so we
    can
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在报告活动上工作时，让我们添加一些事件处理，以便我们可以
- en: view the details of an individual Donation and
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看个人捐款的详细信息和
- en: delete a specific Donation via the delete Button
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过删除按钮删除特定的捐款
- en: Introduce this AsyncTask into the Report Activity
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在报告活动中引入此AsyncTask
- en: '[PRE12]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Fix any errors, and see can you add an **OnItemClickListener** to our Report
    class to display the Toast (below) when a row is selected, by invoking the above
    AsyncTask.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 修复任何错误，并查看您是否可以向我们的Report类添加一个**OnItemClickListener**以在选择行时显示Toast（下面是），通过调用上面的AsyncTask。
- en: '![](lab6s801.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s801.png)'
- en: To implement the delete feature, we need to implement an **OnClickListener**
    interface so go ahead and do that and bring in this AsyncTask to begin with.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现删除功能，我们需要实现一个**OnClickListener**接口，所以继续这样做，并引入这个AsyncTask来开始。
- en: '[PRE13]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: and also this method
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 以及这个方法
- en: '[PRE14]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Now, see can you call the above **onDonationDelete()** in your **onClick()**
    method so you get something like this when you click on the delete button
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，看看您是否可以在您的**onClick()**方法中调用上述**onDonationDelete()**，以便您在单击删除按钮时会得到像这样的内容
- en: '![](lab6s802.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](lab6s802.png)'
- en: Step 09
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第09步
- en: Donate Activity - Add a Donation
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 捐赠活动 - 添加捐款
- en: Here's the complete **Report.java** activity before we complete our penultimate
    step in this lab
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们完成本实验室的倒数第二步之前的完整的**Report.java**活动
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Now, let's look at how we can add a new Donation and 'insert' it into the remote
    list of Donations, maintained on the Server.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何添加一个新的捐款并将其“插入”到服务器上维护的远程捐款列表中。
- en: Open your **Donate.java** Activity and have a look at the current implementations
    of donateButtonPressed() & reset()
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你的 **Donate.java** 活动，并查看 donateButtonPressed() 和 reset() 的当前实现。
- en: '[PRE16]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: They add to our local list of Donations, and reset a simple field - we'll implement
    the reset feature in the final step so now, the first thing to do, is look at
    how we can refactor the donateButtonPressed() method to add a donation to our
    remote list and then update our total.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 它们添加到我们的本地捐赠列表，并重置一个简单的字段 - 我们将在最后一步实现重置功能，所以现在，要做的第一件事是看看我们如何重构 donateButtonPressed()
    方法以向我们的远程列表添加捐赠，然后更新我们的总数。
- en: We're going to need another AsyncTask for this so see if you can complete this
    'InsertTask' based on the previous Tasks you've implemented
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这一点，我们将需要另一个 AsyncTask，看看你是否能根据你之前实现的任务完成这个 'InsertTask'。
- en: '[PRE17]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: And referring to the lecture material, complete the donateButtonPressed() method
    that will invoke the above Task.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 并参考讲座资料，完成会调用上述任务的 donateButtonPressed() 方法。
- en: Step 10
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 10 步。
- en: Donate Activity - Reset/Delete all Donations
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 捐赠活动 - 重置/删除所有捐赠。
- en: The final step in this lab is the ability to delete, or reset, all our Donations.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实验的最后一步是删除或重置所有我们的捐赠。
- en: Remember - once you reset the Donations associated with this version of our
    Server (donationweb-4-0) Everyones Donations will be deleted, so you'll have to
    add in more Donations to keep testing your App.
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 记住 - 一旦你重置了与我们服务器这个版本（donationweb-4-0）相关联的捐赠，每个人的捐赠都将被删除，所以你将不得不添加更多的捐赠来继续测试你的应用程序。
- en: Anyway :)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何 :)
- en: Let's finish off our Donation 5.0 App by implementing the 'Reset' Menu option.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过实现“重置”菜单选项来完成我们的捐赠 5.0 应用程序。
- en: First thing to do is bring in this AsyncTask
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要做的是引入这个AsyncTask。
- en: '[PRE18]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: There's really only one line of code which needs to be added to the reset()
    method so see if you can work out what it is and be able to 'reset' (delete) all
    the Donations on the Server.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上只有一行代码需要添加到 reset() 方法中，因此看看你能否弄清楚是什么，并能够在服务器上“重置”（删除）所有的捐赠。
- en: If you get this all working, you'll notice there's a small bug in the app that
    allows the user to still view the Report Screen, even after we called the reset
    menu option.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把这一切都搞定了，你会注意到应用程序中有一个小 bug，即使我们调用了重置菜单选项，用户仍然可以查看报告屏幕。
- en: See can you fix this bug and also add in a feature to ask the user if they're
    sure they want to reset all the donations (similar to the delete a Donation feature
    on the Report Screen) like so
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 看看你能否修复这个 bug，并且还添加一个功能来询问用户是否确定要重置所有的捐赠（类似于报告屏幕上的删除捐赠功能），如下所示。
- en: '![](lab6s1001.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![lab6s1001.png](lab6s1001.png)'
- en: Solution
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案。
- en: Solution
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案。
- en: 'This is a solution to the lab:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实验的解决方案：
- en: '[Donation.5.0](Donation.5.0.zip)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[捐赠.5.0](Donation.5.0.zip)'
