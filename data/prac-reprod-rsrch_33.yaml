- en: Problem-Specific Analysis of Molecular Dynamics Trajectories for Biomolecules
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生物分子的分子动力学轨迹的问题特定分析
- en: Problem-Specific Analysis of Molecular Dynamics Trajectories for Biomolecules
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生物分子的分子动力学轨迹的问题特定分析
- en: Konrad Hinsen
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Konrad Hinsen
- en: My name is [Konrad Hinsen](http://dirac.cnrs-orleans.fr/~hinsen/), and I am
    a researcher at the [Centre de Biophysique Moléculaire](http://cbm.cnrs-orleans.fr/?lang=en)
    in Orléans, France. My field of research is molecular biophysics, and in particular
    the study of the flexibility and dynamics of proteins. All of my work is based
    on computational approaches, of which the most important ones are [elastic network
    models](http://dirac.cnrs-orleans.fr/plone/Members/hinsen/elastic-network-models-for-proteins)
    and [Molecular Dynamics](https://en.wikipedia.org/wiki/Molecular_dynamics) (MD)
    simulations. Moreover, most of my work concerns the development of computational
    methods rather than the application of already established methods.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我的名字是[Konrad Hinsen](http://dirac.cnrs-orleans.fr/~hinsen/)，我是法国奥尔良的[分子生物物理中心](http://cbm.cnrs-orleans.fr/?lang=en)的研究员。我的研究领域是分子生物物理学，特别是蛋白质的柔韧性和动力学研究。我的所有工作都基于计算方法，其中最重要的方法是[弹性网络模型](http://dirac.cnrs-orleans.fr/plone/Members/hinsen/elastic-network-models-for-proteins)和[分子动力学](https://en.wikipedia.org/wiki/Molecular_dynamics)（MD）模拟。此外，我的大部分工作涉及计算方法的开发，而不是已经建立的方法的应用。
- en: This case study is about the extraction of information from MD simulation trajectories,
    a very common type of work in my field. MD simulations themselves are relatively
    standard procedures, performed using one of a handful of well-known software packages.
    They take a few days to a few weeks on a small parallel computer with a few tens
    of processors, and produce a so-called trajectory file that is one to ten GB in
    size. Analyzing these trajectories in order to actually learn something about
    the system that was simulated is a separate step that is much less standardized,
    meaning that there is a lot of problem-specific code involved. This code is as
    much a result of the workflow as the plots of the computed quantities.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这个案例研究涉及从MD模拟轨迹中提取信息，这是我领域中非常常见的一种工作类型。MD模拟本身是相对标准的程序，使用几种众所周知的软件包之一执行。在一个具有几十个处理器的小型并行计算机上，它们需要几天到几周的时间，并产生一个所谓的轨迹文件，大小在一到十GB之间。分析这些轨迹以实际了解被模拟系统的情况是一个单独的步骤，这个步骤远没有标准化，意味着涉及大量问题特定的代码。这些代码与计算出的数量的图形一样，是工作流的结果。
- en: 'For reproducible and publishable workflows, there are three specific challenges
    in this situation:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于可重现和可发布的工作流，在这种情况下存在三个具体挑战：
- en: The size of the trajectory files, which are difficult to publish in a citeable
    way, often being larger than the current upper limits of [Zenodo](http://zenodo.org/)
    or [figshare](http://figshare.com/).
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 轨迹文件的大小很难以可引用的方式发布，通常大于[Zenodo](http://zenodo.org/)或[figshare](http://figshare.com/)当前的上限。
- en: There are CPU-intensive tasks that are typically run on a parallel computing
    cluster in batch mode, and explorative tasks that are done interactively or near-interactively
    (running short scripts that take about a second) on a desktop machine. Dependency
    tracking across machines is not supported by most workflow management systems.
    It doesn't help that computing clusters often have limited network connectivity.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有一些CPU密集型任务通常在并行计算集群上以批处理模式运行，以及在桌面机器上交互式或几乎交互式地完成的探索性任务（运行大约一秒钟的短脚本）。大多数工作流管理系统不支持跨机器的依赖跟踪。计算集群通常具有有限的网络连接，这并没有帮助。
- en: The distinction between "software packages" and "workflows" is not useful when
    most of the code being executed is problem-specific. A more appropriate code structure
    is "well-established techniques implemented in libraries", "problem-specific scripts"
    and at the top level "coordination of a small number of scripts". It's the last
    two levels that must be captured for reproducibility.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当执行的大部分代码是问题特定的时，"软件包"和"工作流"之间的区别并不有用。更合适的代码结构是"在库中实现的成熟技术"、"问题特定脚本"以及在顶层的"少量脚本的协调"。必须捕获最后两个级别以实现可重现性。
- en: Workflow
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工作流
- en: '![Diagram](khinsen.png) A published example of the workflow described below
    can be consulted in the form of two code/data packages ([package 1](https://dx.doi.org/10.6084/m9.figshare.808594),
    [package 2](https://dx.doi.org/10.6084/m9.figshare.808595)) and the [article](http://dx.doi.org/10.1063/1.4823996)
    describing the study.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![图示](khinsen.png) 可以以两个代码/数据包（[包1](https://dx.doi.org/10.6084/m9.figshare.808594)，[包2](https://dx.doi.org/10.6084/m9.figshare.808595)）和描述该研究的[文章](http://dx.doi.org/10.1063/1.4823996)的形式查阅下文描述的工作流程的已发布示例。'
- en: The workflow diagram is actually a dataflow graph with attached workflow information.
    Compared to most approaches to workflow, which place the tools (workflow manager,
    software packages, Web services, ...) in the center of attention, the approach
    I describe here focuses on the data and on the way scientists interact with the
    data. The workflow below is not about "getting a job done" but about "developping
    and fine-tuning a scientific model".
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流程图实际上是带有附加工作流信息的数据流图。与大多数关注工作流程的方法（将工作流管理器、软件包、Web服务等放在关注的中心）相比，我在这里描述的方法侧重于数据以及科学家与数据交互的方式。下面的工作流程不是关于"完成工作"，而是关于"开发和优化科学模型"。
- en: The dataflow graph shows code in rectangles, and "passive" data in rounded boxes.
    Code consists of a small number of Python scripts, of which four are shown in
    the diagram. Data flows from top to bottom, as shown by the arrows, starting with
    the MD trajectory that is the overall input, and ending in plots showing computed
    quantities. The three rounded boxes labelled "computed results" are intermediate
    results, computed by Python scripts 1 and 2 and consumed by Python scripts 3 and
    4.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 数据流图显示了矩形中的代码，以及圆角框中的"被动"数据。代码由少量Python脚本组成，图中显示了其中四个。数据从上到下流动，如箭头所示，从整体输入的MD轨迹开始，最终显示计算量的图。三个标有"计算结果"的圆角框是中间结果，由Python脚本1和2计算并由Python脚本3和4使用。
- en: 'From the point of view of workflow management and reproducibility, the most
    important distinction among the data items is "human input" (solid outline) vs.
    "computed data" (dotted outline). It''s the human input that represents the scientific
    model, and thus the main output of this workflow. It consists of code (Python
    scripts 1 to 4) and numerical parameters (a single one in the diagram), though
    that distinction is rather arbitrary: every parameter could be turned into a line
    in a script. Computed data includes the plots that go into the journal article,
    but also intermediate results. In a fully reproducible workflow, the computed
    data need not be stored, because it can be recomputed at any time. Nevertheless,
    it is often preferable to store it explicitly, in particular if recomputation
    takes a long time. Stored computed data is also more readily available for exploration
    by scientists who want to gain a better understanding of the method.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 从工作流程管理和可重现性的角度来看，数据项中最重要的区别是"人工输入"（实线轮廓）与"计算数据"（虚线轮廓）。人工输入代表科学模型，因此是此工作流程的主要输出。它由代码（Python脚本1至4）和数值参数（图中的一个）组成，尽管这种区分相当任意：每个参数都可以转换为脚本中的一行。计算数据包括进入期刊文章的图表，但也包括中间结果。在完全可重现的工作流程中，计算数据无需存储，因为可以随时重新计算。然而，通常最好明确地存储它，特别是如果重新计算需要很长时间。存储的计算数据对于希望更好地了解方法的科学家来说也更易于探索。
- en: 'The workflow consists of the iterative refinement of the models and methods.
    The two key tools in processing the workflow are:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流程包括对模型和方法的迭代改进。处理工作流程的两个关键工具是：
- en: a version control system such as [git](https://git-scm.com/) for keeping track
    of the changes
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制系统如[git](https://git-scm.com/)用于跟踪变更。
- en: the [ActivePapers](http://www.activepapers.org/) dependency manager for coordinating
    the computations
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于协调计算的[ActivePapers](http://www.activepapers.org/)依赖管理器
- en: Correspondingly, the state of the project consists of
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 相应地，项目的状态包括
- en: a repository under version control, which tracks the changes to the "human input"
    items as the project advances
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在版本控制下的存储库跟踪"人工输入"项目随着项目的推进而发生的变化。
- en: an ActivePaper file, which stores the current state of all data items and the
    dependency graph
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个ActivePaper文件，其中存储了所有数据项的当前状态和依赖关系图。
- en: 'There are two variants of a refinement step: adding a new script or parameter,
    and modifying existing scripts and parameters. The first kind, which extends the
    data flow graph, consists of the following user actions:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种细化步骤的变体：添加新脚本或参数，修改现有脚本和参数。第一种类型，扩展数据流图，包括以下用户操作：
- en: Write the new script.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写新脚本。
- en: Commit it to version control.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其提交到版本控制。
- en: Check in the script to the ActivePaper.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将脚本检入ActivePaper。
- en: Run the script via the ActivePapers dependency manager.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过ActivePapers依赖管理器运行脚本。
- en: 'The second kind, which preserves the data flow graph, differs only slightly:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 保留数据流图的第二种类型略有不同：
- en: Edit scripts and parameters.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑脚本和参数。
- en: Commit the changes to version control.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将更改提交到版本控制。
- en: Check in the modified versions to the ActivePaper.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将修改版本检入ActivePaper。
- en: Update the ActivePaper.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新ActivePaper。
- en: The fourth step recomputes all data that is affected by the changes made in
    step 1\. The recomputation is steered by the *dependency graph*, which is obtained
    from the data flow graph by redirecting arrows that point into a script to point
    instead to the outputs of the script. The ActivePapers dependency manager computes
    the dependency graph automatically during the execution of the scripts. Users
    do not have to deal with (or even know about) either graph explicitly. They write
    and run scripts as they did before reproducibility became an issue. Similar approaches
    are used in [Sumatra](http://neuralensemble.org/sumatra/) and [noWorkflow](https://github.com/gems-uff/noworkflow),
    but most workflow managers adopt the opposite strategy of letting the user construct
    a workflow explicitly and then execute it.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 第四步重新计算受第一步更改影响的所有数据。重新计算由*依赖图*引导，该图是从数据流图中获得的，通过将指向脚本的箭头重定向为指向脚本输出。ActivePapers依赖管理器在执行脚本期间自动计算依赖图。用户无需明确处理（甚至知道）任何一个图。他们编写和运行脚本的方式与在可重现性成为问题之前的方式相同。[Sumatra](http://neuralensemble.org/sumatra/)和[noWorkflow](https://github.com/gems-uff/noworkflow)中使用类似的方法，但大多数工作流管理器采用相反的策略，让用户明确构建工作流，然后执行它。
- en: 'A project can be transferred from one computer to another by copying the ActivePaper
    file and the version control repository. For the common situation in molecular
    simulations that lengthy computations are off-loaded to a cluster, step 4 in the
    above procedure is slightly modified: The ActivePaper is sent to the cluster,
    the "run new script" or "update" operation is performed on the cluster, and the
    modified ActivePaper file is transferred back to the user''s desktop machine.
    All the tools have a command-line interface, making it easy to use them over an
    ssh connection.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 通过复制ActivePaper文件和版本控制存储库，可以将项目从一台计算机转移到另一台计算机。在分子模拟中常见的情况是将漫长的计算转移到集群，上述过程中的第4步略有修改：ActivePaper发送到集群，集群上执行“运行新脚本”或“更新”操作，然后将修改后的ActivePaper文件传输回用户的桌面计算机。所有工具都具有命令行界面，可以通过ssh连接轻松使用它们。
- en: Method-development projects tend to be small, involving a handful of people.
    The pitfalls of coordinating modifications to files can easily be avoided by having
    a single person perform each refinement step, or even all of the refinement steps.
    Other participants can of course contribute ideas, and inspect the current state
    of the project for analysis.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 方法开发项目往往规模较小，涉及少数人。通过让单个人执行每个细化步骤，甚至所有细化步骤，可以轻松避免协调文件修改的陷阱。其他参与者当然可以贡献想法，并检查项目的当前状态进行分析。
- en: At the end of the project, the ActivePaper file(s) can be published, making
    all of the code and data available to other researchers. The ActivePaper file
    contains the complete final state of the project (though not its history), meaning
    that anyone can continue from that state. An ActivePaper file for a new project
    can re-use items from already published ActivePaper files through a DOI (Digital
    Object Identifier), allowing other researchers to build on published computational
    work. The DOI can also be used for citations in journal articles.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 项目结束时，ActivePaper文件可以发布，使所有代码和数据对其他研究人员可用。ActivePaper文件包含项目的完整最终状态（尽管不包括历史记录），这意味着任何人都可以从该状态继续。新项目的ActivePaper文件可以通过数字对象标识符（DOI）重用已发布的ActivePaper文件中的项目，使其他研究人员能够构建已发布的计算工作。DOI也可用于期刊文章中的引用。
- en: Pain points
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 痛点
- en: The main practical difficulty is that most of today's computational scientists
    grew up with tools and practices that are not compatible with reproducibility.
    This is particularly true for the field of molecular simulations, where reproducibly
    published studies are still rare. Working reproducibly requires adopting new tools
    and habits, and modifying existing software for integration with reprooducble
    workflows. There is a permanent temptation to give up reproducibility for faster
    scientific progress.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当今计算科学家面临的主要实际困难是，他们大多数人在成长过程中所使用的工具和实践与可重复性不兼容。这在分子模拟领域尤为明显，可重复性发布的研究仍然很少见。要实现可重复性工作，就需要采用新的工具和习惯，并修改现有软件以便与可重复工作流程集成。有一种永久的诱惑是为了更快的科学进步而放弃可重复性。
- en: The immaturity of current workflow tools for reproducible research adds another
    layer of cognitive overhead. In the workflow described above, this is mainly the
    use of separate tools for tracking history and dependencies. Today's version control
    systems, designed for software development rather than computational science,
    cannot easily be extended by the kind of dependency management required for research.
    On the other hand, writing new version control software integrated with depenency
    management represents an effort that is hard to justify at this time.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当前用于可重复性研究的工作流工具的不成熟性增加了另一层认知负担。在上述工作流中，这主要体现在使用单独的工具来跟踪历史和依赖关系上。当今的版本控制系统主要面向软件开发，而不是计算科学，因此不容易扩展为满足研究所需的依赖管理。另一方面，在当前阶段很难证明编写与依赖管理集成的新版本控制软件是值得的。
- en: A major constraint imposed by the ActivePapers system is that all code must
    be written in Python and all data must be stored in HDF5 datasets. While Python
    is popular enough for molecular simulation to make the first constraint very acceptable,
    HDF5 is still a rare choice for data storage, although this is changing thanks
    to initiatives such as [H5MD](http://nongnu.org/h5md/).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ActivePapers系统强加的一个主要限制是，所有代码必须用Python编写，所有数据必须存储在HDF5数据集中。虽然Python在分子模拟中足够流行，使第一个限制非常可接受，但HDF5仍然是数据存储的罕见选择，尽管由于诸如[H5MD](http://nongnu.org/h5md/)等倡议的推动，情况正在发生变化。
- en: The use of specific tools is rarely sufficient to ensure reproducibility. Tools
    can only take care of *replicability*, i.e. the technical aspect of tracking all
    computational dependencies such that a computation can be re-run identically.
    Reproducibility at the scientific level requires that all steps can easily be
    understood and verified by fellow scientists. Best practices for reaching this
    goal remain to be developed. One observation from the applications of the above
    workflow is the importance of access to intermediate results for human inspection.
    This suggests an overall structure of many small scripts that each do a well-defined
    job and communicate via explicitly stored datasets.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用特定工具很少足以确保可重复性。工具只能处理*可复制性*，即追踪所有计算依赖关系的技术方面，以便可以完全重新运行计算。在科学层面上实现可重复性要求所有步骤都能轻松被同行科学家理解和验证。为实现这一目标而制定的最佳实践尚未完全发展。从上述工作流应用中得出的一个观察结果是，人类检查中间结果的访问是至关重要的。这表明了许多小型脚本的整体结构，每个脚本都执行一个明确定义的任务，并通过明确存储的数据集进行通信。
- en: Key benefits
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主要优势
- en: The traditional workflow of changing scripts and running the interactively in
    a shell is extremely prone to mistakes. The most frequent one is forgetting to
    re-run a script after its input data has changed because of an update to another
    script. Before I adopted reproducibility support tools, I regularly found myself
    looking at a data file and wondering which exact sequence of script executions
    had produced it. The question typically comes up when writing a paper. Even for
    today's minimal "materials & methods" sections, it is typically necessary to look
    up parameters and other choices in the scripts when writing the documentation,
    and that's often the moment when one discovers what a mess they are. This is no
    longer an issue when the complete final project state is available for inspection,
    and guaranteed to be complete and coherent by software tools.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的更改脚本并在shell中交互运行的工作流程极易出错。最常见的错误是在另一个脚本更新后忘记重新运行脚本，导致其输入数据发生变化。在采用可重现性支持工具之前，我经常发现自己查看数据文件，并想知道哪个确切的脚本执行顺序产生了它。这个问题通常在写论文时出现。即使对于今天最简单的“材料和方法”部分，通常也需要在编写文档时查找脚本中的参数和其他选择，这往往是一个发现混乱的时刻。当完整的最终项目状态可供检查，并由软件工具保证完整和一致时，这个问题就不再存在。
- en: Key tools
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键工具
- en: The key tool in my workflow is the [ActivePapers](http://www.activepapers.org/)
    toolset, which was in fact designed specifically for supporting reproducibility
    in the context of atomistic and molecular simulations. It supports in particular
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我工作流程中的关键工具是[ActivePapers](http://www.activepapers.org/)工具集，实际上是专门设计用于支持原子和分子模拟中的可重现性。它特别支持
- en: computations on large datasets by storing them efficiently in [HDF5](https://www.hdfgroup.org/HDF5/)
    files with the dependency information stored as HDF5 metadata
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在[HDF5](https://www.hdfgroup.org/HDF5/)文件中高效存储大型数据集，并将依赖信息存储为HDF5元数据，进行大数据集的计算。
- en: dependency tracking across machines by storing all datasets and their dependency
    graph in a single HDF5 file that can be copied easily from one machine to another
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在单个HDF5文件中存储所有数据集及其依赖图，跨机器进行依赖跟踪，这样可以轻松地从一台机器复制到另一台机器。
- en: The only other reproducibility-enabling tool in the workflow is a version control
    system.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流程中唯一支持可重现性的工具是版本控制系统。
- en: Questions
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: What does "reproducibility" mean to you?
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 对你来说，“可重现性”是什么意思？
- en: Given that my work is 100% computational, my long-term goal is full reproducibility,
    starting from a specification of the simulation and ending with the plots that
    go into a journal article. This goal is unrealistic at the moment because the
    simulation software packages do not support reproducibility. One problem is the
    accumulation of numerical roundoff errors, which are insufficiently standardized
    across processors and compilers to be reproducible. Another problem is the widespread
    use of random number generators without user control over the random seed.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于我的工作完全是计算性的，我的长期目标是实现完全的可重现性，从模拟的规范开始，到进入期刊文章的图表结束。目前这个目标是不现实的，因为模拟软件包不支持可重现性。一个问题是数值舍入误差的积累，这些误差在处理器和编译器之间的标准化不足，无法实现可重现性。另一个问题是广泛使用随机数生成器，而用户无法控制随机种子。
- en: 'For this reason, I have been setting myself a more modest goal for this case
    study: reproducibility of the trajectory analysis step, using the MD simulation
    trajectories as input as if they were experimental data outside of my control.
    This is a useful compromise because the development of trajectory analysis techniques
    is the central scientific topic of this work.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 出于这个原因，我为这个案例研究设定了一个更为谨慎的目标：通过使用分子动力学模拟轨迹作为输入，实现轨迹分析步骤的可重现性，就好像它们是我无法控制的实验数据一样。这是一个有用的妥协，因为轨迹分析技术的发展是这项工作的核心科学主题。
- en: Why do you think that reproducibility in your domain is important?
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 你认为在你的领域中可重现性为何重要？
- en: Most MD simulation studies are so complex that in the absence of reproducibility,
    it is impossible to be sure what was really computed. Most mistakes do not lead
    to a recognizably wrong result, but to a somewhat different one that could well
    be correct.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数分子动力学模拟研究非常复杂，如果没有可重现性，就无法确定实际计算的内容。大多数错误并不会导致明显错误的结果，而是导致一个略有不同的结果，这个结果很可能是正确的。
- en: How or where did you learn about reproducibility?
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 你是如何或从何处了解到可重现性的？
- en: I developed them myself, having found nothing suitable for the specific needs
    of molecular simulations after a careful survey of existing technology and practices.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我自己开发了它们，经过对现有技术和实践的仔细调查后，发现没有适合分子模拟特定需求的东西。
- en: What do you see as the major challenges to doing reproducible research in your
    domain, and do you have any suggestions?
  id: totrans-54
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在你的领域进行可重复研究的主要挑战是什么，你有什么建议？
- en: The main challenges are human and social. Most of my colleagues have experienced
    the problems that non-reproducibility creates, but few are willing to invest the
    extra effort to do a better job, and many remain unaware of the tools and practices
    for reproducibility that already exist. Journals in my field generally don't require
    the publication of software or data, and do not in any way encourage reproducibility.
    Technical challenges exist in that the most popular software packages do not support
    reproducibility, but the technical challenges could be met with little effort
    if there were sufficient motivation in the community.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 主要挑战是人为和社会性的。我的大多数同事都经历过不可重复性带来的问题，但很少有人愿意投入额外的努力做得更好，许多人仍然不知道已经存在的可重复性工具和实践。在我的领域，期刊通常不要求发布软件或数据，并且在任何情况下都不鼓励可重复性。技术挑战存在于最流行的软件包不支持可重复性，但如果社区有足够的动力，技术挑战可以轻松应对。
- en: What do you view as the major incentives for doing reproducible research?
  id: totrans-56
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 你认为进行可重复研究的主要动机是什么？
- en: Feeling more confident about the correctness of my results.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对我的结果的正确性更有信心。
- en: Being able to build safely on earlier work (by myself or others)
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够安全地在之前的工作基础上构建（无论是我自己还是他人的）
- en: Are there any best practices that you'd recommend for researchers in your field?
  id: totrans-59
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在你的领域，你会推荐哪些最佳实践？
- en: I'd already be happy if publishing software and data became the norm in my field.
    It's hard to recommend any more elaborate practices before the basics become standard.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在我的领域发布软件和数据成为标准，我已经很高兴了。在基本要求成为标准之前，很难推荐更复杂的实践。
