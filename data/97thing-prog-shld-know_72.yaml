- en: Reinvent the Wheel Often
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 经常重新发明轮子
- en: Reinvent the Wheel Often
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 经常重新发明轮子
- en: '"Just use something that exists — it''s silly to reinvent the wheel..."'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: “只需使用已存在的东西 —— 重新发明轮子太愚蠢了……”
- en: Have you ever heard this or some variation thereof? Sure you have! Every developer
    and student probably hears comments like this frequently. Why though? Why is reinventing
    the wheel so frowned upon? Because, more often than not, existing code is working
    code. It has already gone through some sort of quality control, rigorous testing,
    and is being used successfully. Additionally, the time and effort invested in
    reinvention are unlikely to pay off as well as using an existing product or code
    base. Should you bother reinventing the wheel? Why? When?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否曾听过这样或类似的说法？当然听过！每个开发者和学生可能经常听到类似的评论。但为什么？为什么重新发明轮子如此受人鄙视？因为往往情况下，现有的代码是可行的代码。它已经经历过某种质量控制、严格测试，并且已经被成功使用。此外，重新发明所投入的时间和精力不太可能像使用现有产品或代码库那样收益良多。你应该费心重新发明轮子吗？为什么？何时？
- en: Perhaps you have seen publications about patterns in software development, or
    books on software design. These books can be sleepers regardless of how wonderful
    the information contained in them is. The same way watching a movie about sailing
    is very different to going sailing, so too is using existing code versus designing
    your own software from the ground up, testing it, breaking it, repairing it, and
    improving it along the way.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你曾看过关于软件开发模式的出版物，或者关于软件设计的书籍。无论这些书中包含的信息有多么精彩，它们可能都会让人昏昏欲睡。就像观看一部关于航海的电影与亲自出海截然不同一样，使用现有代码与从零开始设计自己的软件、测试它、打破它、修复它，并在这个过程中不断改进它也是如此。
- en: 'Reinventing the wheel is not just an exercise in where to place code constructs:
    It is how to get an intimate knowledge of the inner workings of various components
    that already exist. Do you know how memory managers work? Virtual paging? Could
    you implement these yourself? How about double-linked lists? Dynamic array classes?
    ODBC clients? Could you write a graphical user interface that works like a popular
    one you know and like? Can you create your own web-browser widgets? Do you know
    when to write a multiplexed system versus a multi-threaded one? How to decide
    between a file- or a memory-based database? Most developers simply have never
    created these types of core software implementations themselves and therefore
    do not have an intimate knowledge of how they work. The consequence is all these
    kinds of software are viewed as mysterious black boxes that just work. Understanding
    only the surface of the water is not enough to reveal the hidden dangers beneath.
    Not knowing the deeper things in software development will limit your ability
    to create stellar work.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 重新发明轮子不仅仅是一个放置代码结构的练习：它是如何深入了解已经存在的各种组件内部工作原理的方法。你知道内存管理器是如何工作的吗？虚拟分页？你能自己实现这些吗？双向链表呢？动态数组类？ODBC客户端？你能编写一个工作方式类似于你喜欢的流行界面的图形用户界面吗？你能创建自己的网络浏览器部件吗？你知道什么时候编写多路复用系统与多线程系统？如何在文件型或内存型数据库之间做出决策？大多数开发者简单地从未自己创建过这些类型的核心软件实现，因此对它们的工作原理没有深入的了解。结果是，所有这些类型的软件都被视为神秘的黑匣子，它们只是工作。仅仅了解水面是不足以揭示隐藏在下面的危险的。不了解软件开发中的更深层次的东西将限制你创造出杰出作品的能力。
- en: Reinventing the wheel and getting it wrong is more valuable than nailing it
    first time. There are lessons learned from trial and error that have an emotional
    component to them that reading a technical book alone just cannot deliver!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 重新发明轮子并搞砸它比第一次就搞定它更有价值。从试错中学到的经验教训有一种情感成分，仅仅通过阅读技术书籍是无法传达的！
- en: Learned facts and book smarts are crucial, but becoming a great programmer is
    as much about acquiring experience as it is about collecting facts. Reinventing
    the wheel is as important to a developer's education and skill as weight lifting
    is to a body builder.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 学到的事实和书本知识是至关重要的，但成为一名优秀的程序员与获取经验同样重要。重新发明轮子对开发者的教育和技能同样重要，就像举重对健美运动员一样。
- en: By [Jason P Sage](http://programmer.97things.oreilly.com/wiki/index.php/Jason_P_Sage)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：[杰森·P·萨奇](http://programmer.97things.oreilly.com/wiki/index.php/Jason_P_Sage)
