- en: Image processing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像处理
- en: To process images such as photos, we need to be able to load photo files into
    an image object, read and set pixels values of the image, and save the image back
    into a photo file.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理诸如照片之类的图像，我们需要能够将照片文件加载到图像对象中，读取和设置图像的像素值，并将图像保存回照片文件。
- en: 'We use the class [java.awt.image.BufferedImage](http://docs.oracle.com/javase/7/docs/api/java/awt/image/BufferedImage.html)
    to store image data. You can create such an object by saying:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用类 [java.awt.image.BufferedImage](http://docs.oracle.com/javase/7/docs/api/java/awt/image/BufferedImage.html)
    存储图像数据。你可以通过以下方式创建这样的对象：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Or you can load an image from a file using:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你可以使用以下方式从文件加载图像：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The result of this call is a again a BufferedImage object. You can find the
    width and height of this image using the following methods:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此调用的结果是一个 BufferedImage 对象。你可以使用以下方法找到此图像的宽度和高度：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can save an image object into a file using:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下方式将图像对象保存到文件中：
- en: '[PRE3]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'or, if you prefer PNG format:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果你更喜欢 PNG 格式：
- en: '[PRE4]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The pixels of a BufferedImage object can be read and changed using the getRGB
    and setRGB methods, see below.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: BufferedImage 对象的像素可以使用 getRGB 和 setRGB 方法读取和更改，见下文。
- en: Example script
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例脚本
- en: 'The following small script reads a file photo.jpg, get its dimensions, creates
    a new empty image of the same size, copies the pixels from the old image img to
    the new image out (by mirroring them horizontally), draws a red line diagonally
    across the photo, and finally saves the new image in a file test.jpg ([image.kts](https://github.com/otfried/cs109-kotlin/raw/master/tutorial/90-image/image.kts)):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 以下小脚本读取一个名为 photo.jpg 的文件，获取其尺寸，创建一个新的大小相同的空图像，将旧图像 img 中的像素复制到新图像 out 中（通过水平镜像），在照片上对角画一条红线，最后将新图像保存在一个名为
    test.jpg 的文件中（[image.kts](https://github.com/otfried/cs109-kotlin/raw/master/tutorial/90-image/image.kts)）：
- en: '[PRE5]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Colors
  id: totrans-16
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 颜色
- en: 'The method getRGB(x: Int, y: Int): Int returns the color of the pixel at position
    (x, y), the method setRGB(x: Int, y: Int, color: Int) sets the color of this pixel.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '方法 getRGB(x: Int, y: Int): Int 返回位置 (x, y) 处像素的颜色，方法 setRGB(x: Int, y: Int,
    color: Int) 设置此像素的颜色。'
- en: 'Colors are represented as Int objects. The three components red, green, and
    blue are "packed" together into one integer. Each component has 8 bits, and therefore
    can have a value between 0 and 255\. The packed color is a 32-bit integer, whose
    bits look like this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色以整数对象表示。红色、绿色和蓝色三个组件被"打包"成一个整数。每个组件有 8 位，因此其值可以在 0 和 255 之间。打包的颜色是一个 32 位整数，其位如下所示：
- en: '[PRE6]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The top 8 bits are either zero, or represent the "transparency" of the pixel.
    We will not use these transparency bits. The next 8 bits represent red, the next
    8 bits represent green, and the last 8 bits represent blue. This is why this representation
    is called "RGB".
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 前 8 位要么为零，要么表示像素的"透明度"。我们不会使用这些透明度位。接下来的 8 位表示红色，再接下来的 8 位表示绿色，最后的 8 位表示蓝色。这就是为什么这种表示称为"RGB"。
- en: 'Given red, green, and blue components with values in the range 0 to 255, we
    can pack them together like this:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 给定值范围在 0 到 255 之间的红色、绿色和蓝色分量，我们可以像这样将它们打包在一起：
- en: '[PRE7]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Given a packed integer color, we can extract the three components as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个打包的整数颜色，我们可以按如下方式提取三个分量：
- en: '[PRE8]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: (The and operator here is the bitwise-and operator. It makes sure that only
    the bits we are interested in are used.)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: （这里的与运算符是按位与运算符。它确保只使用我们感兴趣的位。）
