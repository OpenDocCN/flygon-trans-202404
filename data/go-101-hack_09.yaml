- en: “nil slice” vs “nil map”
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: “nil切片” vs “nil映射”
- en: “nil slice” vs “nil map”
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: “nil切片” vs “nil映射”
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Slice and map are all reference types in `Go`, and their default values are
    `nil`:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Go`中，切片和映射都是引用类型，它们的默认值是`nil`：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The result is like this：
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'When a slice''s value is `nil`, you could also do operations on it, such as
    `append`:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当切片的值为`nil`时，你也可以对其进行操作，比如`append`：
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The result is like this：
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'A caveat you should notice is the length of both `nil` and empty slice is `0`:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该注意的一个警告是`nil`和空切片的长度都是`0`：
- en: '[PRE4]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The result is like this：
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE5]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: So you should compare the slice's value with `nil` to check whether it is a
    `nil`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你应该将切片的值与`nil`进行比较，以检查它是否为`nil`。
- en: 'Accessing a `nil` map is OK, but storing a `nil` map cause program panic:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 访问`nil`映射是可以的，但存储`nil`映射会导致程序崩溃：
- en: '[PRE6]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The result is like this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下：
- en: '[PRE7]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'So the best practice is to initialize a `map` before using it, like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所以最佳实践是在使用之前初始化一个`映射`，就像这样：
- en: '[PRE8]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'BTW, you should use the following pattern to check whether there is an element
    in map or not:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一句，你应该使用以下模式来检查映射中是否存在元素：
- en: '[PRE9]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Reference:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：
- en: '[The Go Programming Language](http://www.gopl.io/).'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[《Go编程语言》](http://www.gopl.io/)。'
