- en: Lecture 28 - Demos, Reservations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第28讲 - 演示，预订
- en: Public Service Annoucements
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公共服务公告
- en: 'Final exam date: 9.00 August 7 to 11.30 August 9'
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 期末考试日期：8月7日上午9点至8月9日上午11点30分
- en: '* * *'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Pathologies
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 病理
- en: As we go down this list both pathology detection and the length of the edit-compile-test
    cycle grow without bound.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们逐渐深入这个列表，病理检测和编辑-编译-测试周期的长度会无限增长。
- en: 1\. Deadlock
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1. 死锁
- en: One or more tasks will never run again. For example
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一个或多个任务将永远不会再次运行。例如
- en: 'Task sends to itself (local: rest of system keeps running, task itself will
    never run)'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务发送给自己（本地：系统的其余部分继续运行，任务本身永远不会运行）
- en: 'Every task does Receive( ) (global: nothing is running)'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个任务都执行Receive()（全局：没有任何任务在运行）
- en: 'Cycle of tasks sending around the cycle (local: other tasks keep running)'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务在循环中发送（本地：其他任务继续运行）
- en: Kernel can detect such things
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 内核可以检测到这些问题
- en: What does it do?
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是做什么的？
- en: Potential deadlock can be detected at compile time
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 潜在死锁可以在编译时检测到
- en: cycle in the send graph of all sends that could happen
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有可能发生的发送图中的循环
- en: remember implicit sends
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记住隐式发送
- en: doesn't necessarily occur at run-time
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不一定发生在运行时
- en: that is, it's a necessary but not sufficient condition.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 也就是说，这是一个必要但不充分的条件。
- en: It's worse,
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更糟糕的是，
- en: It doesn't happen when tests are short
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当测试很短的时候不会发生
- en: It appears near the end when tests run for longer
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当测试运行时间较长时，它出现在最后
- en: Changes in a critical race can make a potential deadlock reveal itself.
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关键竞争中的变化可能导致潜在死锁显现出来。
- en: Solutions
  id: totrans-22
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 解决方案
- en: Gating
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 门控
- en: Most common example is initialization, where the send/receive pattern may be
    different than FOREVER
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最常见的例子是初始化，其中发送/接收模式可能与FOREVER不同
- en: Gate the end of initialization
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 门控初始化结束
- en: Define four types of task
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义四种任务类型
- en: 'Administatrer (A), including servers of all kinds: only receives'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理员（A），包括各种服务器：只接收
- en: 'Worker (W), including notifiers: only sends'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作者（W），包括通知者：只发送
- en: 'Client (C): only sends'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端（C）：只发送
- en: 'Notifier (N): only sends to its administrator'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通知者（N）：只发送给其管理员
- en: Two A tasks cannot communicate directly; two W/C tasks cannot communicate directly.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个A任务不能直接通信；两个W/C任务也不能直接通信。
- en: For W/C/N tasks`Send` appears in two flavours
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于W/C/N任务，`Send`有两种不同的形式
- en: C tasks
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: C任务
- en: '[PRE0]'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: W tasks
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: W任务
- en: '[PRE1]'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: N tasks
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: N任务
- en: '[PRE2]'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The Receives corresponding to W, C & N tasks are normally the same.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对应于W、C和N任务的接收通常是相同的。
- en: N is effectively a W task
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: N实际上是一个W任务
- en: The important difference is that while W & C tasks are lower priority than the
    A task, N tasks are higher priority.
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重要的区别在于，虽然W和C任务的优先级低于A任务，但N任务的优先级更高。
- en: C, W & N requests and results must have compatible data types.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: C、W和N的请求和结果必须具有兼容的数据类型。
- en: The request might be effectively a union
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求可能实际上是一个联合
- en: The payload is interpreted differently at run-time,
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负载在运行时以不同方式解释，
- en: using different cases of the switch on message type.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用消息类型开关的不同情况。
- en: A courier is W-type to one A-task, C-type to the other
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个信使对一个A任务是W类型，对另一个是C类型
- en: '[PRE3]'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Occasionally, but not often, two A-tasks, are synchronized in a way that makes
    it possible to communicate in two directions through one server.
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 偶尔，但不经常，两个A任务以一种使得通过一个服务器可以双向通信的方式同步。
- en: Then two couriers are used
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后使用两个信使
- en: 2\. Livelock (Deadly Embrace)
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2. 活锁（致命拥抱）
- en: Definition
  id: totrans-51
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 定义
- en: Two or more tasks are READY. For each task, the state of the other tasks prevents
    progress being made regardless of which task is ACTIVE.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 两个或更多任务处于READY状态。对于每个任务，其他任务的状态阻止了进展，无论哪个任务是ACTIVE。
- en: A higher level of coordination is required.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 需要更高级别的协调。
- en: Two types of livelock exist
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 存在两种类型的活锁
- en: Ones that are the result of bad coding
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由糟糕编码导致的结果
- en: Find bug and remove it.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到错误并将其移除。
- en: Ones that are inherent in the application definition
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序定义中固有的病理
- en: Detect livelock and work around it.
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测活锁并解决它。
- en: Looking for solutions we prefer ones that avoid a central planner. Why?
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在寻找解决方案时，我们更喜欢避免中央计划者的解决方案。为什么？
- en: In the twentieth century there were a collection of political systems relying
    on central planners
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在二十世纪，有一系列依赖中央计划者的政治体系
- en: Most no longer exist
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数已经不存在
- en: Livelock usually occurs in the context of resource contention
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 活锁通常发生在资源争用的情况下
- en: Livelock that's Really Deadlock
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 真正的死锁是活锁
- en: client1 needs resource1 & resource2;
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: client1需要resource1和resource2；
- en: obtains resource1 from proprietor1;
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从proprietor1获取resource1；
- en: asks proprietor2 for resource2
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向proprietor2请求resource2
- en: client2 needs resource1 & resource2;
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: client2需要resource1和resource2；
- en: obtains resource2 from proprietor2;
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从proprietor2获取resource2；
- en: asks proprietor1 for resource1
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向proprietor1请求resource1
- en: possible code
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能的代码
- en: Client 1
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端1
- en: '[PRE4]'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Client 2
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端2
- en: '[PRE5]'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Proprietor
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有者
- en: '[PRE6]'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'state:'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 状态：
- en: 'client1, client2: REPLY-BLOCKED - can''t release resources'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: client1，client2：REPLY-BLOCKED - 无法释放资源
- en: 'proprietor1, proprietor2: SEND-BLOCKED - waiting for release'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: proprietor1，proprietor2：SEND-BLOCKED - 等待释放
- en: this is a true deadlock -- none of the four tasks will ever run again -- even
    though there are no cycles in the call graph.
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个真正的死锁--四个任务永远都不会再次运行--即使调用图中没有循环。
- en: The dependencies lie elsewhere. Where?
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖关系在其他地方。在哪里？
- en: (You can find on the internet arguments about terminology just as intense as
    anything you will ever see in vi vs emacs or Apple vs Microsoft.)
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: （你可以在互联网上找到与vi vs emacs或Apple vs Microsoft一样激烈的术语争论。）
- en: Solutions
  id: totrans-83
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 解决方案
- en: Make a single compound resourse, BUT
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 制作一个单一的复合资源，但是
- en: all clients may not need both
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有客户端可能都不需要这两个
- en: some resources simply cannot be compounded
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有些资源根本不能合并
- en: Impose a global order on resource requests that all clients must follow.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对所有客户端必须遵循的资源请求施加全局顺序。
- en: unsafe against malicious or incompetent programmers
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对恶意或无能的程序员不安全
- en: some resources don't admit strong enough ordering, e.g. pieces of track in the
    train set
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些资源没有足够强的排序，例如火车集的轨道段
- en: Create a mega-server that handles all resource requests
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个处理所有资源请求的超级服务器
- en: clients request all at once, mega-server provides an optimal solution to resource
    use in the presence of hundreds of deadlines.
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端一次性请求所有资源，超级服务器在存在数百个截止日期时提供资源使用的最佳解决方案。
- en: client might not know that A is needed until processing with B is well-advanced
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端可能不知道需要A直到处理B进行到很高的程度
- en: Real Livelock
  id: totrans-93
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 真实的活锁
- en: Proprietor1 & proprietor2 fail the requests
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 所有者1和所有者2拒绝了请求
- en: Proprietor
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有者
- en: '[PRE7]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Polling is the most likely result. Typical client code.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轮询是最有可能的结果。典型的客户端代码。
- en: '[PRE8]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: And the problem is that this code usually works as long as the tests are relatively
    short
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题在于这段代码通常只有在测试相对较短时才能正常工作
- en: Livelock that's Really a Critical Race
  id: totrans-100
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 真正是关键竞争的活锁
- en: We could try to make the clients a little more considerate
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以试着让客户端更加体谅
- en: '[PRE9]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Inherent Livelock
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 固有的活锁
- en: Remember the example where two trains come face to face, each waiting for the
    other to move. They will wait facing each other until the demo is over, probably
    polling.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 记得那个两列火车正面相对的例子吗，每一列都在等待另一列移动。它们会一直等待着彼此，直到演示结束，可能会轮询。
- en: What's hard about solving this problem?
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题有什么困难吗？
- en: Neither driver knows what the other driver is trying to do.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两位司机都不知道另一位司机在试图做什么。
- en: In real life,
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实生活中，
- en: the drivers would communicate, but
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 驱动程序会进行通信，但是
- en: in your software that's neither easy
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的软件中，这既不容易
- en: How many different `conversations' might need to be available?
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能需要多少不同的“对话”？
- en: nor desirable
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 既不是可取的
- en: What is the effect on other trains of the two drivers' special arrangement?
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两位司机特殊安排对其他列车的影响是什么？
- en: What's most easy for you to do is to programme each driver with
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 对你来说最容易的是为每个驱动程序编写程序
- en: detection, e.g.,
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检测，例如，
- en: Delay a random time
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 延迟随机时间
- en: Request again
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 再次请求
- en: If turned down, work around
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果被拒绝了，就想办法解决。
- en: work around, e.g.,
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决方法，例如，
- en: Recommence working on goal as though track is blocked.
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新开始按照目标工作，就像轨道被堵住了一样。
- en: 3\. Critical Races
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.关键竞争
- en: Example
  id: totrans-121
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 例子
- en: Two tasks, A & B, at the same priority
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两个任务，A和B，优先级相同
- en: A is doing a lot of debugging IO
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: A正在进行大量的调试输入/输出。
- en: B always reserves a section of track before A, and all is fine.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: B总是在A之前保留一节轨道，一切都很好。
- en: Debugging IO is removed
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调试输入/输出已移除。
- en: A reserves the section before B can get it, and execution collapses.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: A在B之前保留了一个部分，执行崩溃了。
- en: Lower priority of A to the same level as C.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将A的优先级降低到与C相同的级别。
- en: Now C executes faster and gets a resource before D .
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在C执行得更快，并在D之前获取了资源。
- en: You shuffle priorities forever, eventually reverting, to put back in the debugging
    IO.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你永远都在调整优先级，最终恢复，重新插入调试输入/输出。
- en: Definition
  id: totrans-130
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 定义
- en: The order in which computation is done is an important factor in determining
    whether or not it is successful.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 计算执行的顺序是确定其是否成功的重要因素。
- en: Critical races, like Livelock can be
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 关键竞争，就像活锁一样
- en: internal to the program, like the one above, or
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是程序内部的，就像上面的那个，或者
- en: external to the program but inherent in the application domain
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不是程序外部的，而是应用程序领域内在的
- en: Symptoms
  id: totrans-135
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 症状
- en: Small changes in priorities change execution unpredictably, and drastically.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优先级的微小改变会不可预测地改变执行，并且会发生重大变化。
- en: Debugging output changes execution drastically.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调试输出会严重改变执行。
- en: Changes in train speeds change execution drastically.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列车速度的变化会极大地改变执行。
- en: Example from several terms ago
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几个学期前的例子
- en: '`Drastically'' usually means chaos in both senses of the term'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '`极端''通常意味着混乱，从两个意义上讲'
- en: 'Sense one: a small change in the initial conditions produces an exponentially
    growing divergence in the execution.'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一感觉：初始条件的微小变化会导致执行中指数增长的分歧。
- en: 'Sense two: exercise for the reader.'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二个感觉：读者的练习。
- en: Solutions
  id: totrans-143
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 解决方案
- en: Explicit synchronization
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显式同步
- en: but you then have to know the orders in which things are permitted to occur
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是你必须知道允许事件发生的顺序
- en: e.g. Try listing all the orders in which events can occur in your system
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如 尝试列出系统中事件发生的所有顺序
- en: and then notice that just arriving in the same order is often not enough
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后注意到仅仅按照相同的顺序到达通常是不够的
- en: Gating is a technique of global synchronization
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 门控是一种全局同步技术
- en: which can be provided by a detective/coordinator
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这可以由侦探/协调员提供
- en: 4\. Performance
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4\. 性能
- en: Changes in performance of one task with respect to another often give rise to
    critical races
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 一个任务相对于另一个任务性能的变化经常导致关键竞争
- en: The hardest problem to solve
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 最难解决的问题
- en: You just don't know what is possible
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你只是不知道什么是可能的
- en: 'Ask a question like:'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提出一个问题，比如：
- en: Is my kernel code at the limit of what is possible in terms of performance?
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的内核代码是否在性能方面达到了可能的极限？
- en: We can compare the performance on message passing, etc., because two kernels
    are pretty much the same.
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以比较消息传递等的性能，因为两个内核几乎相同。
- en: Compare a lot of kernels and you should be able to find a lower limit
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较很多内核，你应该能够找到一个下限
- en: Can't do the same thing for train applications
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不能为火车应用做同样的事情
- en: In practice, how do you know you have performance problems? Problems I have
    seen
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，你如何知道你有性能问题？我见过的问题
- en: Priority
  id: totrans-160
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 优先级
- en: The hardest thing to get right
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 最难做到正确的事情
- en: NP-hard for the human brain
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人类大脑的NP难题
- en: Practical method starts with all priorities the same, then adjusts
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实用方法从所有优先级相同开始，然后调整
- en: symptoms of good priority assignment
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 良好优先级分配的症状
- en: The higher the priority, the more likely the ready queue is to be empty
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优先级越高，就越有可能就绪队列为空
- en: The shorter the run time in practice the higher the priority
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实践中，实际运行时间越短，优先级越高
- en: Problems with priority
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 优先级问题
- en: Priority inversion
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 优先级反转
- en: One resource, many clients
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个资源，多个客户端
- en: Tasks try to do too much
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务试图做太多事情
- en: Congestion
  id: totrans-171
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 拥塞
- en: Too many tasks
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 太多任务
- en: blocked tasks don't count,
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻塞任务不计入，
- en: lowest priority tasks almost don't count
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最低优先级任务几乎不算
- en: Layered abstraction are costly
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 分层抽象是昂贵的
- en: e.g. Notifier -> SerialServer -> InputAccumulater -> Parser -> TrackServer
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 例如 通知器 -> 串行服务器 -> 输入累加器 -> 解析器 -> 轨道服务器
- en: Output
  id: totrans-177
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 输出
- en: Too much terminal output interferes with train controller communication
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 太多终端输出会干扰列车控制器的通信
- en: Don't redraw the entire screen
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要重绘整个屏幕
- en: Requests to poll the sensors get backed up in the serial server, or whoever
    provides output buffering.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请求轮询传感器的请求在串行服务器中积压，或者提供输出缓冲的人。
- en: Hardware
  id: totrans-181
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 硬件
- en: Turn on optimization, but be careful
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开优化，但要小心
- en: There are places where you have done register allocation by hand
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有些地方你已经手动分配了寄存器
- en: Turn on caches
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开缓存
- en: locking is possible
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锁定是可能的
- en: Size & align calibration tables by size & alignment of cache lines
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 根据缓存行的大小和对齐方式校准大小和对齐校准表
- en: linker command script
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链接器命令脚本
- en: I think that this is stretching it.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我认为这有点牵强。
- en: '* * *'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Return to:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到：
- en: '[Bill Cowan''s lecture notes for CS452 in s12](index.html)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩2012年春季CS452讲义](index.html)'
- en: '[Bill Cowan''s Spring 2012 CS452 page](../index.html)'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩2012年春季CS452页面](../index.html)'
- en: '[Bill Cowan''s CS452 page](../../index.html)'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的CS452页面](../../index.html)'
- en: '[Bill Cowan''s teaching page](../../../index.html)'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的教学页面](../../../index.html)'
- en: '[Bill Cowan''s home page](../../../../index.html)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的主页](../../../../index.html)'
