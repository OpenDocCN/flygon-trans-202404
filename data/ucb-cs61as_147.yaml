- en: Python Homework
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python作业
- en: Due by April 28th, 2016 at 11:59PM PST
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 截止日期为2016年4月28日晚上11:59（太平洋时间）
- en: (but you should probably do this before/during Project 4)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: （但你可能应该在项目4之前/期间完成这个）
- en: Template
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模板
- en: Download [here](https://drive.google.com/open?id=0Bx-YJoc_dDDGQjhHSnNlRDNkaTg).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在此处下载[链接](https://drive.google.com/open?id=0Bx-YJoc_dDDGQjhHSnNlRDNkaTg)。
- en: Autograder
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动评分程序
- en: Sorry! There's no autograder as of now. Just test your work as best you can,
    you'll be graded pretty leniently. A for effort. It'll be in the works if time
    permits.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 抱歉！目前还没有自动评分程序。尽量测试你的作业，你将会被宽容地评分。为了努力而给你A。如果时间允许，将会有自动评分程序。
- en: Exercises
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: '**Homework Problem 1: Naughty Strings**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 1: 淘气字符串**'
- en: What is the error message returned when you improperly use quotes inside of
    strings?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在字符串内部不正确使用引号时返回的错误消息是什么？
- en: Provide an example and explain the error message.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 提供一个例子并解释错误信息。
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Homework Problem 2: Fruits and Vegetables**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 2: 水果和蔬菜**'
- en: '`x = ["apple", "banana", "carrot"]`'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`x = ["apple", "banana", "carrot"]`'
- en: Write one line of code that when executed returns "apples bananas and carrots".
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 写一行代码，当执行时返回“apples bananas and carrots”。
- en: '* * *'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Homework Problem 3: Fizz Buzz**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 3: Fizz Buzz**'
- en: Write a program that prints the integers from 1 to n (n is an argument to the
    procedure). But for multiples of three print "Fizz" instead of the number, and
    for the multiples of five print "Buzz". For numbers which are multiples of both
    three and five print "FizzBuzz".
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个程序，打印从1到n（n是该过程的参数）的整数。但对于三的倍数，打印“Fizz”而不是数字，对于五的倍数，打印“Buzz”。对于既是三的倍数又是五的倍数的数字，打印“FizzBuzz”。
- en: '* * *'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Homework Problem 4: Snow White and the Seven Dwarves**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 4: 白雪公主和七个小矮人**'
- en: Write a program called `snow_white` that takes in two numbers as arguments,
    the first is the `num_chants`, the second is the `max_sing`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个名为`snow_white`的程序，它接受两个数字作为参数，第一个是`num_chants`，第二个是`max_sing`。
- en: 'The program: 1\. prints "heigh" "ho" alternatingly 2\. prints "its off to work
    we go" after `num_chants` of "heigh" or "ho" 3\. stops printing after having "it''s
    off to work we go" `max_sing` times'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 该程序：1. 交替打印“heigh”“ho” 2. 在“heigh”或“ho”的`num_chants`后打印“我们去工作” 3. 在打印“it's off
    to work we go” `max_sing`次后停止打印
- en: 'EXAMPLE: should print it''s off to work we go between every `5` alternating
    his and hos, for a maximum of `2` times.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：应该在每`5`次交替他和他之间打印"我们去工作"。
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Use a while loop (and possibly control statements) to accomplish this behavior.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用while循环（可能还有控制语句）来实现这种行为。
- en: '* * *'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Homework Problem 5: Push First Odd Back (taken from CS10)**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 5: 将第一个奇数推回（取自CS10）**'
- en: 'Write a function called `push_first_odd_back` that takes in a list as an argument
    This function should place the first odd number at the back of the input list.
    Do not return a new list - in fact this function shouldn''t return anything, it
    should only modify the input list. (Hint: use the while loop)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个名为`push_first_odd_back`的函数，它接受一个列表作为参数。该函数应该将第一个奇数放在输入列表的末尾。不要返回一个新列表 -
    实际上，这个函数不应该返回任何东西，它只应该修改输入列表。（提示：使用while循环）
- en: '* * *'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Homework Problem 6: Cats and Dogs**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 6: 猫和狗**'
- en: Write a program that return True if the string "cat" and "dog" appear the same
    number of times in the given string.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个程序，在给定的字符串中，如果字符串"cat"和"dog"出现的次数相同，则返回True。
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '* * *'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Homework Problem 7: Character Frequencies**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 7: 字符频率**'
- en: Write a function `char_freq()` that takes a string and builds a frequency listing
    of the characters contained in it. Represent the frequency listing as a Python
    dictionary with each letter as a key that stores the number of times that letter
    appears.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个名为`char_freq()`的函数，它接受一个字符串并构建其中包含的字符的频率列表。将频率列表表示为一个Python字典，其中每个字母作为一个键，存储该字母出现的次数。
- en: Try it with something like `char_freq("abbabcbdbabdbdbabababcbcbab")`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试使用类似`char_freq("abbabcbdbabdbdbabababcbcbab")`的东西。
- en: '* * *'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Homework Problem 8.1: Caesar''s Ciphers**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 8.1: 凯撒密码**'
- en: Write a function `rotate_letters()` that takes in a number and creates a new
    mapping of lower case letters offset by that number. Return the new mapping as
    a dictionary such that the original letter is mapped to the shifted letter. For
    example, `rotate_letters(2)` would map `'a'`->`'c'`, `'b'`->`'d'`, `'c'`->`'e'`
    and so on.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个名为`rotate_letters()`的函数，它接受一个数字并创建一个新的映射，将小写字母偏移该数字。将新的���射作为字典返回，原始字母映射到移位后的字母。例如，`rotate_letters(2)`将映射`'a'`->`'c'`，`'b'`->`'d'`，`'c'`->`'e'`等等。
- en: '**Homework Problem 8.2: Caesar''s Ciphers**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 8.2: 凯撒密码**'
- en: Write a function `decode_cipher()` that takes in a dictionary of letter mappings
    and a cipher string (of only lower case letters). Return the decoded string that
    is created when every character is replaced by its mapping from the dictionary
    For example, `decode_cipher(rotate_letters(2), "abc")` should return `"cde"`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个函数`decode_cipher()`，它接受一个字母映射的字典和一个密码字符串（仅包含小写字母）。返回通过字典中的映射替换每个字符而创建的解码字符串。例如，`decode_cipher(rotate_letters(2),
    "abc")`应返回`"cde"`。
- en: Use this function to decode `"jbj fpurzr vf terng"` given that the letters had
    been shifted by 13.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个函数解码`"jbj fpurzr vf terng"`，假设字母已经被移动了13位。
- en: '* * *'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Homework Problem 9: Memoized Factorial**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 9: 记忆化阶乘**'
- en: Write a memoized accumulated factorial procedure in a similar fashion to `memo_fib`.
    You MUST use recursion.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以类似于`memo_fib`的方式编写一个记忆化累积阶乘过程。你必须使用递归。
- en: Accumulated Factorial of 5 = 5! * 4! * 3! * 2! * 1!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 累积阶乘5 = 5! * 4! * 3! * 2! * 1!
- en: '* * *'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**Homework Problem 10: Growing Pains (Exponentially)**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**作业问题 10: 成长的痛苦（指数增长）**'
- en: Write a generator `gen_exp()` that takes a number n and generates (for eternity)
    the exponential of n to the n to the n starting at n. For example the first few
    elements of `gen_exp(2)` should be 2, (2^2), ((2^2)^ 2), (((2^2)^ 2) ^ 2)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个生成器`gen_exp()`，它接受一个数字n，并生成（永远）从n开始的n的n的n的指数。例如，`gen_exp(2)`的前几个元素应该是2，(2^2)，((2^2)^
    2)，(((2^2)^ 2) ^ 2)
- en: '* * *'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Submit Your Homework!
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提交你的作业！
- en: Submit as python_hw instead of hw12\. Please submit on/after April 1, 2016 (not
    earlier)!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 请将作业提交为python_hw而不是hw12。请在2016年4月1日之后（而不是之前）提交！
- en: For instructions, see [this guide](../submit.html). It covers basic terminal
    commands and assignment submission.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[此指南](../submit.html)获取说明。它涵盖了基本的终端命令和作业提交。
- en: If you have any trouble submitting, do not hesitate to ask a TA!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在提交作业时遇到任何问题，请不要犹豫向助教求助！
