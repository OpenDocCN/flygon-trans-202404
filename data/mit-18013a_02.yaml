- en: 'Chapter 1: Philosophy, Numbers and Functions'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章：哲学、数字和函数
- en: Introduction
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: 'We consider the basic context in which our efforts will be concentrated: the
    realms of numbers and functions. We describe "standard functions" which are those
    that will appear most often in your world, and inverse functions'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们考虑我们的努力将集中在的基本上下文：数字和函数的领域。我们描述了“标准函数”，这些函数在你的世界中最常出现，并且逆函数
- en: Topics
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主题
- en: 1.1  [Philosophy](section01.html)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 1.1  [哲学](section01.html)
- en: 1.2  [Numbers](section02.html)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 1.2  [数字](section02.html)
- en: 1.3  [Functions](section03.html)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3  [函数](section03.html)
- en: 1.4  [Standard Functions](section04.html)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 1.4  [标准函数](section04.html)
- en: 1.5  [Other Functions](section05.html)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5  [其他函数](section05.html)
- en: 1.6  [Inverse Functions](section06.html)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 1.6  [反函数](section06.html)
- en: 1.7  [Implicit Functions](section07.html)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 1.7  [隐式函数](section07.html)
- en: 1.1 Philosophy
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.1 哲学
- en: We will not dwell on philosophy but merely list some features we hope to encorporate
    in the course.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会深入探讨哲学，只是列出一些我们希望在课程中融入的特点。
- en: '**Philosophy of the Course**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**课程的哲学**'
- en: 1\. Use computers as much as possible.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 尽可能多地使用计算机。
- en: 2\. Use spreadsheets.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 使用电子表格。
- en: 3\. Encourage active learning rather than passive; try to make you think about
    the material.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 鼓励积极学习而不是被动学习；试图让你思考材料。
- en: 4\. Integrate one variable calculus into multivariable calculus so that they
    are treated together rather than one after the other.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 将一元微积分与多元微积分结合起来，使它们一起处理而不是一个接一个地处理。
- en: 5\. Ask you to submit homework electronically via email to me when appropriate.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 在适当时通过电子邮件向我提交作业。
- en: 6\. Make you redo homework until it is correct.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. 让你重新做作业直到正确为止。
- en: 7\. Feedback an important part of required activity.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 7\. 反馈是所需活动的重要组成部分。
- en: '**Philosophy of Learning**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**学习的哲学**'
- en: 1\. Amount learned is proportional to time put in.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 学到的东西与投入的时间成正比。
- en: 2\. Best way to learn is to figure out ideas yourself or teach them to someone
    else.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 学习的最佳方式是自己想出想法或将其教给别人。
- en: 3\. Second best is to do so with hints from others like your friends or us.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 第二好的方法是通过朋友或我们这样的人的提示来做。
- en: 4\. Third best is to get the ideas from reading; but pause in your reading to
    think about them.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 第三好的是从阅读中获取思想；但在阅读中停下来思考它们。
- en: '5\. Fourth best: unacceptable: don''t get them at all.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 第四好的：不可接受的：根本不了解它们。
- en: 6\. The object of� a lecture is not so much to inform you of important facts,
    but rather to stimulate you to try to learn about some concept.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. 一个讲座的目的不是告诉你重要的事实，而是激发你尝试学习某个概念。
- en: 7\. The object of the course is to empower you to use the concepts of calculus
    in any context.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 7\. 课程的目标是使您能够在任何情境中使用微积分的概念。
- en: 1.2 Numbers
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2 数字
- en: '**We start with the basic concept of a number. The Natural Numbers, denoted
    as N,** are the numbers 1,2,3,... These are closed under Addition.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们从数字的基本概念开始。自然数，表示为N**，是数字1,2,3,...，在加法下是封闭的。'
- en: '**A set that can be put in** [correspondence](definition01.html) **with N or
    a subset of N is called countable.**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**能够与N或N的子集建立一一对应关系的集合称为可数集。** [对应](definition01.html)'
- en: Introducing the notion of subtraction makes us enlarge N to get� the **Integers,
    denoted as Z,** positive or negative or 0, so that our numbers are closed under
    the operation of substraction.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 引入减法的概念使我们将N扩大到得到**整数，表示为Z**，正数、负数或0，使得我们的数字在减法运算下是封闭的。
- en: '**Exercise 1.1 Is Z countable?** [Solution](exercise01.html)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习1.1 Z可数吗？** [解答](exercise01.html)'
- en: Z is closed under multiplication; which is to say that the product of two integers
    is an integer.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Z在乘法下是封闭的；也就是说，两个整数的乘积是一个整数。
- en: 'To obtain a set of numbers closed under Division: we must enlarge Z to get
    the **Rational Numbers Q,** which are fractions of the form ![](../Images/07a9bf071fac73cce46767170ea9cd5e.jpg)
    where a is in Z and b is in N.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要得到一个在除法下封闭的数字集合：我们必须将Z扩大以得到**有理数Q**，其形式为 ![](../Images/07a9bf071fac73cce46767170ea9cd5e.jpg)，其中a是Z中的数，b是N中的数。
- en: '**Exercises:**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：**'
- en: '**1.2 Is Q countable?** (See picture for hint.) [Solution](exercise02.html)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.2 Q可数吗？**（参见图片提示。） [解答](exercise02.html)'
- en: '![](../Images/741df25d3b57dc5cbe66975e9dba8e67.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/741df25d3b57dc5cbe66975e9dba8e67.jpg)'
- en: '**1.3 Prove or disprove: a countable set of countable sets is countable.**
    [Solution](exercise03.html)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.3 证明或反驳：可数集的可数子集是可数的。** [解答](exercise03.html)'
- en: '**Decimal form of numbers**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**数字的十进制形式**'
- en: The numbers between 0 and 1 can each be represented as a decimal point followed
    by an infinite string of digits, each digit being one of 1, 2, 3, ..., 9, 0.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 0 到 1 之间的数可以表示为小数点后跟着无限位数字的形式，每个数字为 1、2、3、...、9、0 中的一个。
- en: 'Rational numbers repeat themselves endlessly after some point: (for example
    1 / 4 is .250* or also .249* where the star means that you repeat the starred
    digit endlessly) 1 / 3 is .3*, 1 / 7 = .(142857)*, 57 / 100 = .570*.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 有理数在某一点之后无休止地重复自己：（例如 1 / 4 是 .250* 或者 .249*，星号表示你无休止地重复星号后的数字）1 / 3 是 .3*，1
    / 7 = .(142857)*，57 / 100 = .570*。
- en: Irrational numbers do not do so.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 无理数不会这样做。
- en: '**Exercises:**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：**'
- en: '**1.4 Prove that rational numbers repeat the same finite sequence of digits
    endlessly, and that irrational numbers do not.** [Solution](exercise04.html)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.4 证明有理数无休止地重复相同的有限数字序列，而无理数不会。** [解答](exercise04.html)'
- en: '**1.5 Are there non-rational decimal digit sequences?** [Solution](exercise05.html)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.5 是否存在非有理小数位序列？** [解答](exercise05.html)'
- en: '**1.6 Are all such sequences countable?** (See picture for hint.) [Solution](exercise06.html)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.6 所有这样的序列都可数吗？**（查看图片以获取提示。）[解答](exercise06.html)'
- en: '![](../Images/5927803d403b844ae2993696f96c9d3f.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5927803d403b844ae2993696f96c9d3f.jpg)'
- en: '**A number which differs from the number in the k-th position on the list in
    its k-th decimal digit, cannot be in any position on the list of numbers!**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**一个数，其第 k 位小数与列表中第 k 位数不同，不能在任何位置上！**'
- en: '**Algebraic numbers** are solutions to polynomial equations, with integer coefficients.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**代数数**是整系数多项式方程的解。'
- en: '**Exercise 1.7 Are algebraic numbers countable?** [Solution](exercise07.html)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 1.7 代数数可数吗？** [解答](exercise07.html)'
- en: The **Real Numbers R** are **all distinct infinite sequences of digits, having
    a sign and a finite number of digits in front of the decimal point.**
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**实数 R**是**所有不同的无限数字序列，有一个符号和有限位数的小数点前的数字。**'
- en: You can add subtract multiply and divide them except dividing by 0 is not allowed.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以对它们进行加减乘除，但不允许除以 0。
- en: '**Are there other sets that we might dignify by calling numbers?**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**还有其他我们可能称之为数的集合吗？**'
- en: '**Yes! There are "Numbers mod x". These are remainders of Z or Q or R obtained
    when you divide by x.**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**是的！有“模 x 的数”。这些是当你除以 x 时得到的 Z、Q 或 R 的余数。**'
- en: '**There are also complex numbers, which form the set C. These are expressions
    of the form a + ib where i² = -1, a and b are in R, and multiplication and division
    are as in R with the additional rule above.**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**还有复数，形成集合 C。这些是形如 a + ib 的表达式，其中 i² = -1，a 和 b 在 R 中，乘法和除法与 R 中的规则相同，附加规则如上。**'
- en: '[**Comment - More on Complex Numbers**](comment01.html)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[**评论 - 更多关于复数的内容**](comment01.html)'
- en: 1.3 Functions
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.3 函数
- en: 'A **Set** is a primitive notion. We start with set (or another word for it:
    **collection**) as a basic notion.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**集合**是一个基本概念。我们以集合（或者另一个称呼：**集合**）作为基本概念。'
- en: An Ordered Countable Set is also called a **sequence.** 1, 2, 3, ... is a sequence.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有序可数集也被称为**序列**。1, 2, 3, ... 就是一个序列。
- en: If it has two elements it is called an **ordered pair.** (3, 4) is such a pair.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有两个元素，它被称为**有序对**。（3, 4）就是这样一个对。
- en: A **function** is a collection of ordered pairs whose first elements are all
    different.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**函数**是一组有序对的集合，其第一个元素都不相同。'
- en: The first elements are called **arguments** the second **values.**
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个元素称为**参数**，第二个称为**值**。
- en: The set of arguments is called its **domain.**
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 参数的集合称为其**定义域**。
- en: The set of values is called its **range.**
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 值的集合称为其**值域**。
- en: We describe each pair in the function f� by **f(argument) = value.**
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过**f(参数) = 值**来描述函数 f 中的每一对。
- en: '**![](../Images/1f5f96dd551bdfa9be58fb4e48900025.jpg)**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](../Images/1f5f96dd551bdfa9be58fb4e48900025.jpg)**'
- en: 'It is perfectly OK for f to have the same value for two different arguments:
    say for f(d) and f(e) to be identical.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 当 f 对两个不同的参数具有相同的值时，比如对 f(d) 和 f(e) 的值相同，这是完全可以的。
- en: 'We can describe a function by listing its pairs, or by drawing a graph of representative
    pairs in the usual way: if **f(a) = b** *put a point at the intersection of the
    vertical line through a on the x axis and the horizontal line through b on the
    y axis*.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过列出其对或者通过通常方式绘制代表性对的图形来描述一个函数：如果**f(a) = b**，*在 x 轴上通过 a 的垂直线和 y 轴上通过 b
    的水平线的交点处放一个点*。
- en: However we cannot list all the pairs in any function having an infinite or huge
    domain.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们无法列出具有无限或巨大定义域的任何函数中的所有对。
- en: Instead we define such a function by giving a procedure you can use to construct
    its value for any argument you choose in its domain. This procedure is often called
    a "formula" for the function.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们定义这样一个函数，通过提供一个你可以用来构建其值的过程，你可以选择其定义域中的任意参数。这个过程通常被称为函数的“公式”。
- en: 1.4 Standard Functions
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.4 标准函数
- en: A **standard function** is one defined on an interval of R that is obtained
    by a finite sequence of **standard operations** starting from any combination
    of **three basic functions**.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**标准函数** 是在 R 的一个区间上定义的，它通过从任意**三个基本函数**的任意组合开始的有限序列的**标准操作**获得。'
- en: '**What are the basic functions**?'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**基本函数是什么**？'
- en: '**The identity function f(x) = x**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**恒等函数 f(x) = x**'
- en: '![](../Images/60b82fe2a684942f21881e0dbb8f67af.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/60b82fe2a684942f21881e0dbb8f67af.jpg)'
- en: '**The** [exponential function](../chapter02/section01.html) **f(x) = exp(x)**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**[指数函数](../chapter02/section01.html) **f(x) = exp(x)**'
- en: '![](../Images/1a00852bf1a6c7f85201e4bce1e20d25.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1a00852bf1a6c7f85201e4bce1e20d25.jpg)'
- en: '**The** [sine function](../chapter02/section02.html) **f(x) = sin(x)**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**[正弦函数](../chapter02/section02.html) **f(x) = sin(x)**'
- en: '**![](../Images/8647f623b4575cd7f59f5c867ea9158c.jpg)**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**![](../Images/8647f623b4575cd7f59f5c867ea9158c.jpg)**'
- en: '**What are the standard operations?**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**标准操作是什么？**'
- en: '*Multiplication by a number in R, addition, subtraction, multiplication, division,
    substitution of the value of one function as argument of another, and taking the
    "inverse".*'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '*实数中的乘法、加法、减法、乘法、除法、将一个函数的值代入另一个函数作为参数，并进行“逆运算”。*'
- en: Most of the functions we encounter will be standard functions.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们遇到的大多数函数将是标准函数。
- en: 'Examples: 4x², x sin(x), ![](../Images/d81d612e77a2121b4d39ed65ffee050b.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：4x²，x sin(x)，![](../Images/d81d612e77a2121b4d39ed65ffee050b.jpg)
- en: You can enter your favorite standard functions, f and g, in the following applet,
    and observe the effects of combining f and g in various ways, and also look at
    the inverse function to f.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在下面的小程序中输入你喜欢的标准函数 f 和 g，并观察以各种方式组合 f 和 g 的效果，还可以查看 f 的逆函数。
- en: Note that when f has the same value for more than one argument, you must decide
    which of these arguments you want to call the value of the inverse function.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当 f 对于多个参数具有相同的值时，你必须决定你想将哪个参数称为逆函数的值。
- en: <applet code="OperationsOnFunctions" codebase="../applets/" archive="operationsOnFunctions.jar,mk_lib.jar,parser_math.jar,jcbwt363.jar"
    width="760" height="450"></applet>
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: <applet code="OperationsOnFunctions" codebase="../applets/" archive="operationsOnFunctions.jar,mk_lib.jar,parser_math.jar,jcbwt363.jar"
    width="760" height="450"></applet>
- en: 1.5 Other Functions
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.5 其他函数
- en: '**Are there other functions?**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**还有其他函数吗？**'
- en: Yes but we will mostly be concerned with standard functions.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，但我们主要关注标准函数。
- en: '**What are the other functions we may meet?**'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们可能会遇到哪些其他函数？**'
- en: '**Piecewise standard functions:** these are functions that are standard in
    subintervals of their domains but not necessarily the same standard function in
    all of them. The function that is 0 for any negative argument and 1 for positive
    arguments is an example. This is called a step function.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**分段标准函数:** 这些是在其定义域的子区间上是标准函数的函数，但在所有子区间中不一定是相同的标准函数。对于任何负参数为 0，对于正参数为 1 的函数是一个例子。这被称为阶梯函数。'
- en: The absolute value of x, which is -x for negative argument x and +x for positive
    x is another. Its graph looks like a V centered at the origin in x.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: x 的绝对值，对于负参数 x 是 -x，对于正 x 是 +x，是另一个例子。它的图像在 x 轴原点处呈 V 形。
- en: '**Functions defined by infinite series:** in particular by a series of powers
    x^n with coefficients that are standard functions of the powers. A simple and
    fundamental example is the geometric series, defined by g(x) = 1 + x + x² + ...
    + x^k + ...'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**通过无限级数定义的函数:** 特别是通过一系列幂 x^n 和系数是幂的标准函数。一个简单而基础的例子是几何级数，由 g(x) = 1 + x +
    x² + ... + x^k + ... 定义。'
- en: '**Functions defined using the operations of calculus:** these are typically
    functions defined as derivatives or integrals of standard functions. Such definitions
    can easily be made once those concepts are defined.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用微积分运算定义的函数:** 这些通常是由标准函数的导数或积分定义的函数。一旦这些概念被定义，这样的定义就很容易。'
- en: '**A sequence can be considered a function defined with N or a subset of N as
    its domain.**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**序列可以被看作是以 N 或 N 的子集为其定义域的函数。**'
- en: '**Functions defined recursively or implicitly:** a recursive definition of
    a function is one that describes it by a procedure for constructing its values
    that requires repeated application in order to define them over its entire domain.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**递归或隐式定义的函数：**函数的递归定义是通过一个需要重复应用的过程来构造其值的过程来描述的，以便在整个定义域上定义它们。'
- en: 'For example, the Fibonacci numbers, f(n) form a sequence according to the following
    rules: f(0) = f(1) = 1; f(n) = f(n - 1) + f(n - 2) for integers n greater than
    1.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，斐波那契数 f(n) 根据以下规则形成一个序列：f(0) = f(1) = 1；对于大于 1 的整数 n，f(n) = f(n - 1) + f(n
    - 2)。
- en: This is a recursive definition of this sequence.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这是这个序列的递归定义。
- en: Implicitly defined functions will be discussed in detail in [section 1.7](section07.html).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 隐式定义的函数将在[第1.7节](section07.html)中详细讨论。
- en: '**Functions that arise from real phenomena:** these usually start off being
    unknown. They may be anything. It is remarkable how well we can do by treating
    them as if they were standard functions, or as if they were in one of the other
    classes of functions described above.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**来自真实现象的函数：**这些通常起初是未知的。它们可能是任何东西。令人惊讶的是，我们将它们视为标准函数，或者视为上述其他类别中的一个函数时，我们的表现有多么出色。'
- en: '**Why consider standard functions?**'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么考虑标准函数？**'
- en: They are available on calculators and computers.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 它们可在计算器和电脑上使用。
- en: They have only isolated singularities.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 它们只有孤立的奇点。
- en: They are infinitely differentiable over most of their domains, except at certain
    singular points which are usually easy to locate.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 除了通常很容易定位的某些奇异点外，它们在大部分定义域上都是无限可微的。
- en: They can be defined in the complex plane.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 它们可以在复平面上定义。
- en: They are immensely useful.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 它们非常有用。
- en: We can **add, subtract** or **multiply** any *sequences*, or *functions* that
    are defined on the same domain (whether they are standard or not), and **divide**
    one by another wherever the one divided by is not 0\. To do so, at each argument
    in their domain, add, subtract, multiply or divide their values.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对任何在同一定义域上定义的 *序列* 或 *函数* 进行**加、减**或**乘**，并且在其中一个被除的地方，只要不是 0，就可以**除**另一个。为此，在它们的定义域中的每个自变量处，加、减、乘或除它们的值。
- en: 1.6 Inverse Functions
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.6 反函数
- en: What are **inverse functions?**
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是**反函数**？
- en: 'Take a function f: draw its graph in the usual way; interchange x and y axes,
    and you have the graph of the inverse function f ^(-1).'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 取一个函数 f：按照通常的方式画出它的图形；交换 x 和 y 轴，然后你就得到了反函数 f^(-1) 的图形。
- en: y = f(x) means x = f ^(-1)(y).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: y = f(x) 意味着 x = f^(-1)(y)。
- en: This can be accomplished with a drawing on a piece of paper by turning the paper
    over, orienting so that the old first quadrant appears in the upper right corner,
    and looking through the paper at the old graph.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过在纸上画图，将纸翻转过来，使旧的第一象限出现在右上角，并透过纸看旧图形来完成。
- en: Do not confuse the inverse with the reciprocal function; they are completely
    different concepts. Careless people may use notation that is the same for both.
    This is a bad thing to do since it promotes confusion.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 不要混淆反函数与倒数函数；它们是完全不同的概念。粗心的人可能会使用相同的符号表示法。这样做是错误的，因为它会引起混淆。
- en: Notice that if you substitute x = f ^(-1)(y) into y = f(x) you get x = f ^(-1)(f(x)).
    This last equation can be used as an alternate definition of the inverse function
    to f.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果将 x = f^(-1)(y) 替换到 y = f(x) 中，你会得到 x = f^(-1)(f(x))。这最后一个方程可用作 f 的反函数的替代定义。
- en: There is a problem with defining inverse functions. A function can have only
    one ordered pair for each argument, while the same value can occur many times.
    This means that interchanging arguments and values which is what we do in creating
    an inverse, will create a non-function, unless the original function takes on
    each value exactly once.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 定义反函数存在问题。对于每个自变量，一个函数只能有一个有序对，而同样的值可以出现多次。这意味着交换自变量和值（这是我们在创建反函数时所做的），会产生一个非函数，除非原始函数确实每次都采用每个值。
- en: When a function takes a value more than once, we have to do extra work to define
    an inverse function for it. Namely, we have to select one of its values to be
    the new argument and throw away the others. This can be done in many different
    ways when f is not single valued, so that there is always some arbitrariness in
    the definition of f^(-1) when f is not single valued.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个函数多次取值时，我们必须额外工作来为其定义一个反函数。换句话说，我们必须选择一个值作为新的自变量，并且放弃其他值。当 f 不是单值时，可以用许多不同的方式来做到这一点，因此在定义
    f^(-1) 时总会存在某种任意性。
- en: 'The clearest example for this is the function x². It takes on each positive
    value twice. Both 4 and -4 have the same square. The standard thing to do for
    this function is to define its inverse, x^(1/2), to be the positive square root,
    ignoring the negative one. (The negative square root is then denoted by -x^(1/2).)
    This definition has two virtues: one is that positive numbers are more positive
    than negative ones. The other is, that with this definition (and not had we chosen
    the negative root as inverse) the square root of a product is the product of the
    square roots of its factors.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这方面最清晰的例子是函数 x²。它每个正值都有两个对应值。4 和 -4 都有相同的平方。对于这个函数的标准做法是定义其逆函数，x^(1/2)，为正平方根，忽略负平方根。（然后负平方根用
    -x^(1/2) 表示。）这个定义有两个优点：一个是正数比负数更正。另一个是，用这个定义（而不是选择负根作为逆函数），乘积的平方根是其因子的平方根的乘积。
- en: In general, you can make the choice of what you want to call the inverse of
    f by looking at the graph of f, selecting a domain on which f is single-valued,
    and making that the range of f ^(-1).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，你可以通过查看 f 的图像，在 f 是单值的定义域上进行选择，并将其作为 f ^(-1) 的值域来选择 f 的逆。
- en: Some interesting pairs:����� ���
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一些有趣的配对：����� ���
- en: '|   |  |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '![](../Images/39ddb231ae27620154e8a099c2b5364c.jpg)                   ![](../Images/053378fb5c692490e406e266d91a0663.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/39ddb231ae27620154e8a099c2b5364c.jpg)                   ![](../Images/053378fb5c692490e406e266d91a0663.jpg)'
- en: '![](../Images/83b80149068106d026e78eae0341ae46.jpg)                  ![](../Images/c095811b16567767933f452b7f73dc53.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/83b80149068106d026e78eae0341ae46.jpg)                  ![](../Images/c095811b16567767933f452b7f73dc53.jpg)'
- en: '**Exercises 1.8 For what values can you define the inverse of the function
    cos(sin x). (Hint: set f = cos(sin x) look at its inverse and figure out the answer.)**
    [Solution](exercise08.html)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 1.8 对于哪些值可以定义函数 cos(sin x) 的逆函数。(提示：设 f = cos(sin x)，看看它的逆函数并找出答案。)**
    [解答](exercise08.html)'
- en: <applet code="OperationsOnFunctions" codebase="../applets/" archive="operationsOnFunctions.jar,mk_lib.jar,parser_math.jar,jcbwt363.jar"
    width="760" height="450"></applet>
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: <applet code="OperationsOnFunctions" codebase="../applets/" archive="operationsOnFunctions.jar,mk_lib.jar,parser_math.jar,jcbwt363.jar"
    width="760" height="450"></applet>
- en: 1.7 Implicit Functions
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.7 隐式函数
- en: An implicit definition of a function is one which does not present an explicit
    formula for its values but rather defines it by giving conditions that it satisfies.
    Thus its values must be inferred as consequences of the definition, so it is defined
    "by implication".
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的隐式定义是指没有给出其值的显式公式，而是通过给出其满足的条件来定义它。因此，其值必须被推断为定义的结果，因此它是“通过暗示”定义的。
- en: 'An example is: define y(x) by x² + y² =1 and y > 0.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是：通过 x² + y² =1 和 y > 0 来定义 y(x)。
- en: Defining a function as the inverse is another example of an implicit definition.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个函数定义为其逆函数是隐式定义的另一个例子。
- en: Notice that you can produce a formula for y(x) in the example here; that formula
    represents an explicit definition of this same function.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在这个例子中你可以得到一个关于 y(x) 的公式；该公式表示了这个相同函数的显式定义。
- en: '**Exercises:**'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习：**'
- en: '**1.9 How much of this was familiar to you?**'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.9 这些内容对你来说有多熟悉？**'
- en: '**1.10 The statement cos x is ![](../Images/11483568453085185de1d28fdaaedb24.jpg)implies
    what about arccos y and arcsin y?** [Solution](exercise10.html)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.10 陈述 cos x 是 ![](../Images/11483568453085185de1d28fdaaedb24.jpg) 意味着什么关于
    arccos y 和 arcsin y？** [解答](exercise10.html)'
- en: '**1.11 Invent a problem to go here.**'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.11 想出一个可以放在这里的问题。**'
