- en: Lecture 11 - Hardware Interrupts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 11 讲 - 硬件中断
- en: Public Service Annoucements
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公共服务公告
- en: Next week's classes
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下周的课程
- en: context switch from programming to listening
  id: totrans-3
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从编程切换到监听的上下文切换
- en: Assignment 2
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作业 2
- en: due date
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 截止日期
- en: 'performance:'
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能：
- en: there is a 40-bit clock that counts cycles
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个计数周期的 40 位时钟
- en: respect the exact CPU conditions
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尊重确切的 CPU 条件
- en: measure a few times and average
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量几次并取平均值
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Servers
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务器
- en: What is a server?
  id: totrans-12
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 什么是服务器？
- en: a task that provides service to a client task
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为客户端任务提供服务的任务
- en: tasks requesting service, clients, must know the Tid of the server
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求服务的任务，客户端，必须知道服务器的 Tid
- en: a task that owns a resource and provides synchronized access to it.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有资源并提供同步访问的任务。
- en: above,
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上面，
- en: '`a task'' owns the interface'
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`一个任务'' 拥有接口'
- en: other tasks may do the work
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他任务可能会完成工作
- en: How are servers implemented?
  id: totrans-19
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 服务器是如何实现的？
- en: Receive is the key
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接收是关键
- en: Receive a request
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接收请求
- en: Reply the response
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回复响应
- en: Sender (client, task that is making the request) blocks until the response is
    available. That is, sender, in effect, is running at the priority of the server
    between the request and its reponse
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送方（客户端，发出请求的任务）会一直阻塞，直到响应可用。也就是说，在请求和响应之间，发送方实际上是以服务器的优先级运行的。
- en: Server priority should be set according to the importance of the service it
    supplies.
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器的优先级应根据其提供的服务的重要性来设置。
- en: But client priority should be considered by the server. For example,
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但服务器应该考虑客户端的优先级。例如，
- en: One set of instructions for higher priority client
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为较高优先级客户端准备一组指令
- en: One set of instructions for lower priority client
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为较低优先级客户端准备一组指令
- en: '* * *'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Name Server
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 名称服务器
- en: Why Do We Need a Name Server
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么我们需要一个名称服务器
- en: '| Names | constant across applications & executions | interface | Associated
    with a set of services (an API) |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 在应用程序和执行过程中保持不变 | 接口 | 与一组服务相关联（一个 API） |'
- en: '| Task Ids | vary across applications & executions | implementation | Associated
    with a particular set of instructions and data (an execution) |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 任务 ID | 在应用程序和执行过程中变化 | 实现 | 与特定指令和数据集相关联（一个执行） |'
- en: Possible to have multiple names per task, but
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 可能每个任务有多个名称，但
- en: not possible to have several tasks per name.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可能有多个任务使用同一个名称。
- en: Name Server Implementation
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 名称服务器实现
- en: Choose whether to block or Reply.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 选择是阻塞还是回复。
- en: '* * *'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Hardware Interrupts
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件中断
- en: What is a Hardware Interrupt?
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是硬件中断？
- en: In the CPU
  id: totrans-40
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 在 CPU 中
- en: Test interrupt signal before fetching the next instruction
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在获取下一条指令之前测试中断信号
- en: actually AND of INT and the IRQ bit in the CPSR
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上是 CPSR 中 INT 和 IRQ 位的 AND 运算
- en: If asserted, change mode to IRQ
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果断言，将模式更改为 IRQ
- en: Disable interrupt in CPSR
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 CPSR 中禁用中断
- en: Execute instruction at 0x18
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在地址 0x18 处执行指令
- en: In the Interrupt Control Unit (ICU)
  id: totrans-46
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 在中断控制单元（ICU）中
- en: Several interrupts may be present when an interrupt occurs
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当中断发生时，可能存在多个中断
- en: One is chosen, by a priority mechanism
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过优先级机制选择一个
- en: Put in a special place
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 放在一个特殊的位置
- en: Software can choose to ignore priority mechanism in ICU
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件可以选择忽略 ICU 中的优先级机制
- en: Clearing one interrupt may just expose another one
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清除一个中断可能只会暴露另一个中断
- en: In the Peripheral Hardware
  id: totrans-52
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 在外围硬件中
- en: Several interrupts may be present
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当中断发生时可能存在多个中断
- en: ORed in peripheral hardware
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在外围硬件中进行 OR 运算
- en: ORed in glue hardware
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在粘合硬件中进行 OR 运算
- en: Rare that there is a priority mechanism
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 很少有优先级机制存在
- en: Clearing one interrupt can expose another one
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清除一个中断可能会暴露另一个中断
- en: When two interrupts are present
  id: totrans-58
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 当存在两个中断时
- en: May have been two present when interrupt processing started
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当中断处理开始时可能存在两个
- en: in which case interrupt occurring now is known to be of lower priority
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这种情况下，现在发生的中断被认为是较低优先级的
- en: May have occurred since interrupt processing started
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 可能在中断处理开始后发生
- en: in which case interrupt occurring now may be of higher priority
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这种情况下，现在发生的中断可能是较高优先级的
- en: What happens next?
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来会发生什么？
- en: Kernel executes with interrupts disabled
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 内核在中断禁用的情况下执行
- en: Context switch into user task turns on interrupts
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到用户任务的上下文切换会打开中断
- en: Before fetching the first user task instruction test interrupt signal
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在获取第一个用户任务指令之前测试中断信号
- en: If asserted, re-initiate interrupt processing
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果断言，重新启动中断处理
- en: '* * *'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Context Switches for Interrupts
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用于中断的上下文切换
- en: Difference from Software Interrupts
  id: totrans-70
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 与软件中断的区别
- en: It is impossible to predict where they occur
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 不可能预测它们发生的位置
- en: You may have made some assumptions about when they occur
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可能对它们何时发生有一些假设
- en: Assymmetry between User Task and Kernel
  id: totrans-73
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 用户任务和内核之间的不对称性
- en: Scratch Registers must be saved
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 必须保存Scratch寄存器
- en: including the IP
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括IP
- en: Two Link Registers
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 两个链接寄存器
- en: One to return from interrupt
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个用于从中断返回
- en: In the registers of the interrupt handling code
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在中断处理代码的寄存器中
- en: To return to the interrupted task in the right place
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回到正确位置的中断任务
- en: One to move to the caller's stack frame
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个用于移动到调用者的堆栈帧
- en: In the registers of the interrupted task
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在中断任务的寄存器中
- en: To return to whatever started in interrupted task
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回到中断任务中启动���任何内容
- en: Helpful Features of the ICU
  id: totrans-83
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: ICU的有用功能
- en: Several places where you can read state
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几个地方可以读取状态
- en: Several places where you can block interrupt flow
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几个地方可以阻止中断流
- en: Trigger hardware interrupt from software
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从软件触发硬件中断
- en: What makes interrupts hard is that you are doing two semi-hard things at once
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中断难的地方在于您同时进行两个半难的事情
- en: Making the hardware produce the interrupt
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使硬件产生中断
- en: Responding to the interrupt
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 响应中断
- en: This allows you to separate them in developing/debugging
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这使您可以在开发/调试中将它们分开
- en: '* * *'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: The Hardware in the Trains Lab
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列车实验室中的硬件
- en: 32-bit Timer
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 32位定时器
- en: 'Base address: `0x80810080`'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 基地址：`0x80810080`
- en: 'Three registers:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 三个寄存器：
- en: '| Offset | Function | R/W | Bits | Comments |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| Offset | Function | R/W | Bits | Comments |'
- en: '| 0x0 | Timer3Load | R/W | 32: <Load/Reload Value> |  |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 0x0 | Timer3Load | R/W | 32: <Load/Reload Value> |  |'
- en: '| 0x4 | Timer3Value | R | 32:<Current value> | Set when Load is written, even
    when counting |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 0x4 | Timer3Value | R | 32:<当前值> | 在写入Load时设置，即使在计数时也是如此 |'
- en: '| 0x8 | Timer3Control | R/W | 3:xxx<CLKSEL>xx<MODE><ENABLE> | <CLKSEL>: 0,
    2KHz clock; 1, 508KHz <MODE>: 1, count continuously; 0, count once'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '| 0x8 | Timer3Control | R/W | 3:xxx<CLKSEL>xx<MODE><ENABLE> | <CLKSEL>: 0，2KHz时钟；1，508KHz
    <MODE>: 1，连续计数；0，仅计数一次'
- en: '<ENABLE>: Clock turned on'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '<ENABLE>: 时钟打开'
- en: '|'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| 0xc | Timer3Clear | W | 32: | Writing anything clears the interrupt |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| 0xc | Timer3Clear | W | 32: | 写入任何内容都会清除中断 |'
- en: Interrupt Control Unit (ICU)
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 中断控制单元（ICU）
- en: The actual device is the ARM PL190
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 实际设备是ARM PL190
- en: The logic in this design is completely asynchronous, so it functions when the
    CPU clock is turned off.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 此设计中的逻辑完全异步，因此在关闭CPU时它可以正常工作。
- en: Important (= essential) for low power operation.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对低功耗操作至关重要。
- en: All input signals are
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 所有输入信号都是
- en: active high
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高电平
- en: level sensitive
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电平敏感
- en: Base addresses
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 基地址
- en: 'VIC1: `0x800B0000`'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VIC1：`0x800B0000`
- en: 'VIC2: `0``x800C0000`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VIC2：`0``x800C0000`
- en: Basic Operation
  id: totrans-113
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 基本操作
- en: VIC powers up with
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: VIC上电
- en: all vectored interrupts disabled.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有向量中断已禁用。
- en: all interrupts masked
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有中断屏蔽
- en: all interrupts giving IRQ
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有中断都给予IRQ
- en: Procedure
  id: totrans-118
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 过程
- en: Initialization
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化
- en: leave protection off
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持保护关闭
- en: enable in VICxIntEnable when you are ready to handle the interrupt
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当准备处理中断时，在VICxIntEnable中启用
- en: On an interrupt
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在中断时
- en: Read VICxIRQStatus
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取VICxIRQStatus
- en: Choose which interrupt you wish to handle
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要处理的中断
- en: Clear the interrupt source in the device
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除设备中的中断源
- en: For debugging
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 用于调试
- en: Use VICxSoftInt and VICxSoftIntClear to turn interrupt sources off and on in
    software
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用VICxSoftInt和VICxSoftIntClear在软件中关闭和打开中断源
- en: Hardware Definitions
  id: totrans-128
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 硬件定义
- en: '**Registers for Basic Operation**'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**基本操作寄存器**'
- en: '| Register Name | Offset | R/W | Description |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| 寄存器名称 | 偏移 | R/W | 描述 |'
- en: '| VICxIRQStatus | 0x00 | RO | One bit for each interrupt source1 if interrupt
    is asserted and enabled |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| VICxIRQStatus | 0x00 | RO | 每个中断源的一位，如果中断被断言并启用则为1 |'
- en: '| VICxFIQStatus | 0x04 | RO | As above for FIQ |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| VICxFIQStatus | 0x04 | RO | 与FIQ相同 |'
- en: '| VICxRawIntr | 0x08 | RO | As above but not masked |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| VICxRawIntr | 0x08 | RO | 与上述相同但未屏蔽 |'
- en: '| VICxIntSelect | 0x0c | R/W | 0: IRQ, 1: FIQ |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| VICxIntSelect | 0x0c | R/W | 0：IRQ，1：FIQ |'
- en: '| VICxIntEnable | 0x10 | R/W | 0: Masked, 1: Enabled |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| VICxIntEnable | 0x10 | R/W | 0：屏蔽，1：启用 |'
- en: '| VICxIntEnClear | 0x14 | WO | Clears bits in VICxIntEnable |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| VICxIntEnClear | 0x14 | WO | 清除VICxIntEnable中的位 |'
- en: '| VICxSoftInt | 0x18 | R/W | Asserts interrupt from software |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| VICxSoftInt | 0x18 | R/W | 从软件断言中断 |'
- en: '| VICxSoftIntClear | 0x1c | WO | Clears interrupt from software |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| VICxSoftIntClear | 0x1c | WO | 清除软件中的中断 |'
- en: '| VICxProtection | 0x20 | R/W | Bit 0 enables protection from user mode access
    |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| VICxProtection | 0x20 | R/W | 位0启用用户模式访问保护 |'
- en: '| VICxVectAddr | 0x30 | R/W | Enables priority hardwareSee documentation. |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| VICxVectAddr | 0x30 | R/W | 启用优先级硬件请参阅文档。 |'
- en: Helpful Features of the ICU
  id: totrans-141
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: ICU的有用功能
- en: Several places where you can read state
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几个地方可以读取状态
- en: Several places where you can block interrupt flow
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几个地方可以阻止中断流
- en: Trigger hardware interrupt from softwareonce
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从软件触发硬件中断一次
- en: What makes interrupts hard is that you are doing two semi-hard things at once
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 中断难的地方在于您同时进行两个半难的事情
- en: Making the hardware produce the interrupt
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使硬件产生中断
- en: Responding to the interrupt
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应中断
- en: Software interrupt generation allows you to separate them in developing/debugging
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 软件中断生成允许您在开发/调试中将它们分开
- en: '* * *'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Non-vectored Operation
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 非向量操作
- en: Initialization
  id: totrans-151
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 初始化
- en: Enable interrupt in device
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设备中启用中断
- en: Enable interrupt in ICU
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ICU中启用中断
- en: Enable interrupt in CPU, usually by MOVS
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在CPU中启用中断，通常通过MOVS
- en: Interrupt occurs
  id: totrans-155
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 中断发生
- en: AND of IRQ and NOT( IRQ disabled ) is checked before each instruction fetch.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每次指令获取之前检查IRQ和NOT（禁用IRQ）的AND。
- en: If set IRQ exception is taken in place of next instruction fetch.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果设置IRQ异常，则在下一条指令获取的位置执行
- en: Possibly zero instructions of active task are executed.
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能会执行零条活动任务指令。
- en: Make sure that this case works
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保这种情况能够运行
- en: Context switch into kernel
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到内核上下文
- en: '* * *'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '* * *'
- en: Context switch novelties
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_H5
  type: TYPE_NORMAL
  zh: 上下文切换的新奇之处
- en: Difference from Software Interrupts
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与软件中断的区别
- en: It is impossible to predict where they occur
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可能预测它们发生的位置
- en: You may inadvertently have made some assumptions about when they occur
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可能会误以为它们发生的时间
- en: Scratch Registers must be saved
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须保存Scratch寄存器
- en: r0-3
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: r0-3
- en: IP -- used only very occasionally by gcc
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP -- 由gcc极少使用
- en: Two Link Registers
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个链接寄存器
- en: One to return from interrupt
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从中断返回的一个
- en: One to return from the interrupted task to whatever called it
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从被中断的任务返回到调用它的位置
- en: '* * *'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '* * *'
- en: Turn off interrupt in device
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭设备中的中断
- en: Should turn off interrupt in ICU
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应该关闭ICU中的中断
- en: What about IRQ?
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: IRQ是什么？
- en: You are now ready to process the interrupt in the kernel
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经准备好在内核中处理中断
- en: Vectored Operation
  id: totrans-177
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 向量操作
- en: Procedure
  id: totrans-178
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 过程
- en: Initialization
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化
- en: Write kernel entry point into VICxDefVectAddr
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将内核入口点写入VICxDefVectAddr
- en: If desired write special entry point into VICxVectAddry
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，将特殊入口点写入VICxVectAddry
- en: When ready to accept interrupts write source and enable into VICxVectCntl
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当准备接受中断时，将源和使能写入VICxVectCntl
- en: When an interrupt occurs
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 当中断发生时
- en: Read VICxVectAddr to find address
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取VICxVectAddr以找到地址
- en: Move result to PC
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将结果移动到PC
- en: When service is complete write VICxVectAddr to rerun priority hardware
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当服务完成时，将VICxVectAddr写入重新运行优先级硬件
- en: '| Register Name | Offset | R/W | Description |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| 寄存器名称 | 偏移 | 读/写 | 描述 |'
- en: '| VICxVectAddr | 0x030 | R/W | Read: address of vector for highest priority
    interruptWrite: service complete, enable priority hardware |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| VICxVectAddr | 0x030 | 读/写 | 读取：最高优先级中断的向量地址写入：服务完成，启用优先级硬件 |'
- en: '| VICxDefVectAddr | 0x034 | R/W | Default vector address |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: VICxDefVectAddr | 0x034 | 读/写 | 默认向量地址 |
- en: '| VICxVectAddry | 0x100+4y | R/W | Vector address for interrupt y |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| VICxVectAddry | 0x100+4y | 读/写 | 中断y的向量地址 |'
- en: '| VICxVectCntly | 0x200+4y | R/W | Control register for interrupt yBit[0-4]:
    interrupt source for interrupt yBit[5]: enable vectored interrupt y |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| VICxVectCntly | 0x200+4y | 读/写 | 中断y的控制寄存器位[0-4]：中断y的中断源位[5]：启用向量中断y |'
- en: '* * *'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Return to:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到：
- en: '[Bill Cowan''s lecture notes for CS452 in s12](index.html)'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩在s12学期的CS452讲座笔记](index.html)'
- en: '[Bill Cowan''s Spring 2012 CS452 page](../index.html)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩2012年春季CS452页面](../index.html)'
- en: '[Bill Cowan''s CS452 page](../../index.html)'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的CS452页面](../../index.html)'
- en: '[Bill Cowan''s teaching page](../../../index.html)'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的教学页面](../../../index.html)'
- en: '[Bill Cowan''s home page](../../../../index.html)'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比尔·考恩的个人主页](../../../../index.html)'
