- en: '| [![](../Images/c35793514ec5d8bbeb86056093ad381f.jpg)](/http://philip.greenspun.com/images/pcd0088/graceland-piano-32.tcl)
    |'
  id: totrans-0
  prefs: []
  type: TYPE_TB
  zh: '| [![](../Images/c35793514ec5d8bbeb86056093ad381f.jpg)](/http://philip.greenspun.com/images/pcd0088/graceland-piano-32.tcl)
    |'
- en: Indexing and Tuning
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 索引和调优
- en: part of [SQL for Web Nerds](index.html) by [Philip Greenspun](http://philip.greenspun.com/)
    |
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[SQL for Web Nerds](index.html) 的一部分，作者是 [Philip Greenspun](http://philip.greenspun.com/)
    |'
- en: '* * *'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[![Downtown Las Vegas (Fremont Street) by night.](../Images/76b707811196a52d4379e39119a7dfaa.jpg)](/http://philip.greenspun.com/images/pcd2898/las-vegas-downtown-at-night-18.tcl)
    One of the great dividends of investing in an RDBMS is that you don''t have to
    think too much about the computer''s inner life. You''re the programmer and say
    what kinds of data you want. The computer''s job is to fetch it and you don''t
    really care how.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[![夜晚的拉斯维加斯市中心（弗里蒙特街）。](../Images/76b707811196a52d4379e39119a7dfaa.jpg)](/http://philip.greenspun.com/images/pcd2898/las-vegas-downtown-at-night-18.tcl)
    投资于关系数据库管理系统的一个巨大回报是您不必过多考虑计算机的内部运行。您是程序员，说出您想要的数据类型。计算机的工作是获取它，您并不真正关心如何获取。'
- en: Maybe you'll start caring after that $500,000 database server has been grinding
    away on one of your queries for two solid hours...
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 也许在您的查询在$500,000的数据库服务器上连续运行两个小时后，您会开始关心...
- en: While software is being developed, it is rare for tables to contain more than
    a handful of rows. Nobody wants to sit in SQL*Plus or at Web forms and type in
    test data. After the application launches and tables begin to fill up, people
    eventually notice that a particular section of the site is slow. Here are the
    steps that you must take
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件开发过程中，表中很少包含大量行。没有人想要在SQL*Plus或Web表单中输入测试数据。应用程序启动后，表开始填充，人们最终会注意到站点的某个部分运行缓慢。以下是您必须采取的步骤
- en: Find a URL that is running too slowly.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到运行速度太慢的URL。
- en: If possible, enable query logging from your Web or application server. What
    you want is for the Web server to write every SQL query and transaction into a
    single file so that you can see exactly what the database management system was
    told to do and when. This the kind of feature that makes a Web programming environment
    truly productive that it is tough to advertise it to the Chief Technology Officer
    types who select Web programming environment (i.e., if you're stuck using some
    closed-source Web connectivity middleware/junkware you might not be able to do
    this).
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果可能的话，请从您的Web或应用服务器启用查询日志记录。您希望的是Web服务器将每个SQL查询和事务写入单个文件，以便您可以准确查看数据库管理系统被告知要做什么以及何时。这是使Web编程环境真正高效的功能，很难向选择Web编程环境的首席技术官类型进行宣传（即，如果您被迫使用某些闭源的Web连接中间件/垃圾软件，则可能无法执行此操作）。
- en: With AOLserver, enable query logging by setting `Verbose=On` in the `[ns/db/pool/**poolname**]`
    section of your .ini file. The queries will show up in the error log ("/home/nsadmin/log/server.log"
    by default).
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用AOLserver，在您的.ini文件的`[ns/db/pool/**poolname**]`部分设置`Verbose=On`以启用查询日志记录。查询将显示在错误日志中（默认为"/home/nsadmin/log/server.log"）。
- en: Request the problematic URL from a Web browser.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Web浏览器请求有问题的URL。
- en: fire up Emacs and load the query log into a buffer; spawn a shell and run sqlplus
    from the shell, logging in with the same username/password as used by the Web
    server
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Emacs并将查询日志加载到缓冲区中；从shell中运行sqlplus，使用与Web服务器相同的用户名/密码登录
- en: you can now cut (from server.log) and paste (into sqlplus) the queries performed
    by the script backing the slow URL. However, first you must turn on tracing so
    that you can see what Oracle is doing.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以从服务器日志中剪切并粘贴（到sqlplus）由支持慢URL的脚本执行的查询。但是，首先您必须打开跟踪，以便查看Oracle正在执行的操作。
- en: '[PRE0]'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Oops! It turns out that Oracle is unhappy about just writing to standard output.
    For each user that wants to trace queries, you need to feed sqlplus the file $ORACLE_HOME/rdbms/admin/utlxplan.sql
    which contains a single table definition:'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 糟糕！事实证明Oracle对于仅写入标准输出并不满意。对于每个想要跟踪查询的用户，您需要向sqlplus提供包含单个表定义的文件$ORACLE_HOME/rdbms/admin/utlxplan.sql：
- en: '[PRE1]'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Type "set autotrace on" again (it should work now; if you get an error about
    the PLUSTRACE role then tell your dbadmin to run $ORACLE_HOME/sqlplus/admin/plustrce.sql
    as SYS then GRANT your user that role).
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次输入"set autotrace on"（现在应该可以工作了；如果出现关于PLUSTRACE角色的错误，请告诉您的dbadmin以SYS身份运行$ORACLE_HOME/sqlplus/admin/plustrce.sql，然后授予您的用户该角色）。
- en: Type "set timing on" (you'll get reports of elapsed time)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入"set timing on"（您将获得经过时间的报告）
- en: cut and paste the query of interest.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 剪切并粘贴感兴趣的查询。
- en: Now that we're all set up, let's look at a few examples.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了，让我们看几个例子。
- en: A simple B-Tree Index
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个简单的B-Tree索引
- en: 'Suppose that we want to ask "Show me the users who''ve requested a page within
    the last few minutes". This can support a nice "Who''s online now?" page, like
    what you see at [http://www.photo.net/shared/whos-online](http://www.photo.net/shared/whos-online).
    Here''s the source code to find users who''ve requested a page within the last
    10 minutes (600 seconds):'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想要询问"显示最近几分钟内请求页面的用户"。这可以支持一个漂亮的"谁现在在线？"页面，就像你在[http://www.photo.net/shared/whos-online](http://www.photo.net/shared/whos-online)看到的那样。这里是查找在最近
    10 分钟内请求页面的用户的源代码（600 秒）：
- en: '[PRE2]'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We''re querying the users table:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在查询用户表：
- en: '[PRE3]'
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Suppose that we ask for information about User #37\. Oracle need not scan the
    entire table because the declaration that `user_id` be the table''s primary key
    implicitly causes an index to be constructed. The `last_visit` column, however,
    is not constrained to be unique and therefore Oracle will not build an index on
    its own. Searching for the most recent visitors at photo.net will require scanning
    all 60,000 rows in the `users` table. We can add a B-Tree index, for many years
    the only kind available in any database management system, with the following
    statement:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '假设我们要查询关于用户 #37 的信息。Oracle 不需要扫描整个表，因为声明`user_id`为表的主键隐式导致构建索引。然而，`last_visit`列并没有被约束为唯一，因此
    Oracle 不会自动构建索引。在 photo.net 上搜索最近访问者将需要扫描`users`表中的所有 60,000 行。我们可以添加一个 B-Tree
    索引，多年来任何数据库管理系统中唯一可用的索引类型，使用以下语句：'
- en: '[PRE4]'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now Oracle can simply check the index first and find pointers to rows in the
    `users` table with small values of `last_visit`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 Oracle 可以简单地首先检查索引，并找到具有小`last_visit`值的`users`表中的行的指针。
- en: 'Tracing/Tuning Case 1: did we already insert the message? The SQL here comes
    from an ancient version of the bulletin board system in the ArsDigita Community
    System (see [http://www.photo.net/bboard/](http://www.photo.net/bboard/) for an
    example). In the bad old days when we were running the Illustra relational database
    management system, it took so long to do an INSERT that users would keep hitting
    "Reload" on their browsers. When they were all done, there were three copies of
    a message in the bulletin board. So we modified the insertion script to check
    the `bboard` table to see if there was already a message with exactly the same
    values in the `one_line` and `message` columns. Because `message` is a CLOB column,
    you can''t just do the obvious "=" comparison and need to call the PL/SQL function
    `dbms_lob.instr`, part of Oracle''s built-in DBMS_LOB package.'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跟踪/调优案例 1：我们已经插入了消息吗？这里的 SQL 来自 ArsDigita Community System 中一个古老版本的公告板系统（参见[http://www.photo.net/bboard/](http://www.photo.net/bboard/)作为示例）。在我们运行
    Illustra 关系数据库管理系统的糟糕时代，执行插入操作需要很长时间，用户会不断点击浏览器上的"重新加载"。当他们都完成时，公告板中会有三份消息的副本。因此，我们修改了插入脚本，检查`bboard`表，看看是否已经存在具有`one_line`和`message`列中完全相同值的消息。因为`message`是一个
    CLOB 列，你不能简单地进行"="比较，需要调用 PL/SQL 函数`dbms_lob.instr`，这是 Oracle 内置的 DBMS_LOB 包的一部分。
- en: 'Here''s a SQL*Plus session looking for an already-posted message with a subject
    line of "foo" and a body of "bar":'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个 SQL*Plus 会话，查找已发布主题为"foo"且内容为"bar"的消息：
- en: '[PRE5]'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Note the "10,299 physical reads". Disk drives are very slow. You don''t really
    want to be doing more than a handful of physical reads. Let''s look at the heart
    of the query plan:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到"10,299 个物理读取"。磁盘驱动器非常慢。你真的不想做超过少数物理读取。让我们看一下查询计划的核心：
- en: '[PRE6]'
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Looks as though Oracle is hitting the `bboard_by_topic` index for the ROWIDs
    of "just the rows that have a topic of ''photo.net''". It is then using the ROWID,
    an internal Oracle pointer, to pull the actual rows from the BBOARD table. Presumably
    Oracle will then count up just those rows where the ONE_LINE and MESSAGE columns
    are appropriate. This might not actually be so bad in an installation where there
    were 500 different discussion groups. Hitting the index would eliminate 499/500
    rows. But BBOARD_BY_TOPIC isn''t a very selective index. Let''s investigate the
    selectivity with the query `select topic, count(*) from bboard group by topic
    order by count(*) desc`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来 Oracle 正在命中`bboard_by_topic`索引，用于"仅有主题为'photo.net'的行的 ROWID"。然后使用 ROWID，一个内部的
    Oracle 指针，从 BBOARD 表中提取实际的行。据推测，Oracle 将仅计算那些 ONE_LINE 和 MESSAGE 列适当的行。在一个有 500
    个不同讨论组的安装中，这可能并不那么糟糕。命中索引将消除 499/500 行。但 BBOARD_BY_TOPIC 不是一个非常有选择性的索引。让我们用查询`select
    topic, count(*) from bboard group by topic order by count(*) desc`来调查选择性：
- en: '| topic | count(*) |'
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 主题 | 计数(*) |'
- en: '| photo.net | 14159 |'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| photo.net | 14159 |'
- en: '| Nature Photography | 3289 |'
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 自然摄影 | 3289 |'
- en: '| Medium Format Digest | 1639 |'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 中画幅摘要 | 1639 |'
- en: '| Ask Philip | 91 |'
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 向Philip询问 | 91 |'
- en: '| web/db | 62 |'
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 网页/数据库 | 62 |'
- en: 'The `bboard` table only has about 19,000 rows and the photo.net topic has 14,000
    of them, about 75%. So the index didn''t do us much good. In fact, you''d have
    expected Oracle not to use the index. A full table scan is generally faster than
    an index scan if more than 20% of the rows need be examined. Why didn''t Oracle
    do the full table scan? Because the table hadn''t been "analyzed". There were
    no statistics for the cost-based optimizer so the older rule-based optimizer was
    employed. You have to periodically tell Oracle to build statistics on tables if
    you want the fancy cost-based optimizer:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`bboard`表只有大约19,000行，而photo.net主题有14,000行，大约占了75%。因此，索引对我们没什么好处。实际上，你本来希望Oracle不使用索引。如果需要检查的行数超过20%，则全表扫描通常比索引扫描快。为什么Oracle没有进行全表扫描？因为表尚未"分析"。对于基于成本的优化器没有统计信息，所以使用了较旧的基于规则的优化器。如果想使用高级的基于成本的优化器，你必须定期告诉Oracle为表建立统计信息：'
- en: '[PRE7]'
  id: totrans-41
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The final numbers don't look much better. But at least the cost-based optimizer
    has figured out that the topic index won't be worth much. Now we're just scanning
    the full `bboard` table. While transferring 20,000 rows from Illustra to Oracle
    during a photo.net upgrade, we'd not created any indices. This speeded up loading
    but then we were so happy to have the system running deadlock-free that we forgot
    to recreate an index that we'd been using on the Illustra system expressly for
    the purpose of making this query fast.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的数字看起来并不好。但至少成本优化器已经发现主题索引不值多少钱。现在我们只是在扫描整个`bboard`表。在将20,000行从Illustra转移到Oracle期间的photo.net升级过程中，我们没有创建任何索引。这加快了加载速度，但随后我们非常高兴地看到系统无死锁地运行，忘记了为了使这个查询快速而在Illustra系统上明确使用的索引。
- en: '[PRE8]'
  id: totrans-43
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Bboard postings are now indexed by subject line, which should be a very selective
    column because it is unlikely that many users would choose to give their question
    the same title. This particular query will be faster now but inserts and updates
    will be slower. Why? Every INSERT or UPDATE will have to update the `bboard` table
    blocks on the hard drive and also the `bboard_index_by_one_line` blocks, to make
    sure that the index always has up-to-date information on what is in the table.
    If we have multiple physical disk drives we can instruct Oracle to keep the index
    in a separate tablespace, which the database administrator has placed on a separate
    disk:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Bboard帖子现在按主题行索引，这应该是一个非常有选择性的列，因为不太可能有许多用户选择给他们的问题相同的标题。现在，这个特定的查询将会更快，但插入和更新将会变慢。为什么？每次插入或更新都必须更新硬盘上的`bboard`表块和`bboard_index_by_one_line`块，以确保索引始终具有关于表中内容的最新信息。如果我们有多个物理磁盘驱动器，我们可以指示Oracle将索引保留在单独的表空间中，数据库管理员已将其放置在单独的磁盘上：
- en: '[PRE9]'
  id: totrans-45
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now the index will be kept in a different tablespace (`philgidx`) from the
    main table. During inserts and updates, data will be written on two separate disk
    drives in parallel. Let''s try the query again:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在索引将被保存在不同的表空间（`philgidx`）中，与主表不同。在插入和更新期间，数据将并行写入两个单独的磁盘驱动器。让我们再试一次这个查询：
- en: '[PRE10]'
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We''ve brought physical reads down from 12266 to 3\. Oracle is checking the
    index on `one_line` and then poking at the main table using the ROWIDs retrieved
    from the index. It might actually be better to build a concatenated index on two
    columns: the user ID of the person posting and the subject line, but at this point
    you might make the engineering decision that 3 physical reads is acceptable.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已将物理读取次数从12266降至3。Oracle正在检查`one_line`上的索引，然后使用从索引中检索到的ROWID在主表中查找。建立两列的连接索引可能会更好：发布者的用户ID和主题行，但在这一点上，你可能会做出3次物理读取是可以接受的工程决策。
- en: 'Tracing/Tuning Case 2: new questions'
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跟踪/调优案例2：新问题
- en: At the top of each forum page, e.g., [http://www.photo.net/bboard/q-and-a.tcl?topic=photo.net](http://www.photo.net/bboard/q-and-a.tcl?topic=photo.net),
    the ArsDigita Community System shows questions asked in the last few days (configurable,
    but the default is 7 days). After the forum filled up with 30,000 messages, this
    page was perceptibly slow.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个论坛页面的顶部，例如[http://www.photo.net/bboard/q-and-a.tcl?topic=photo.net](http://www.photo.net/bboard/q-and-a.tcl?topic=photo.net)，ArsDigita社区系统显示了最近几天（可配置，但默认为7天）提出的问题。论坛积累了30,000条消息后，此页面变得明显缓慢。
- en: '[PRE11]'
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'A full table scan and 12,071 physical reads just to get 61 rows! It was time
    to get medieval on this query. Since the query''s WHERE clause contains topic,
    refers_to, and posting_time, the obvious thing to try is building a concatenated
    index on all three columns:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获取61行数据，需要进行全表扫描和12,071次物理读取！是时候对这个查询进行改进了。由于查询的WHERE子句包含topic、refers_to和posting_time，显而易见的尝试是在所有三列上构建一个连接索引：
- en: '[PRE12]'
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 60 reads is better than 12,000\. One bit of clean-up, though. There is no reason
    to have a BBOARD_BY_TOPIC index if we are going to keep this BBOARD_FOR_NEW_QUESTIONS
    index, whose first column is TOPIC. The query optimizer can use BBOARD_FOR_NEW_QUESTIONS
    even when the SQL only restricts based on the TOPIC column. The redundant index
    won't cause any services to fail, but it will slow down inserts.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 60次读取比12,000次好。但是有一个清理工作要做。如果我们要保留这个BBOARD_FOR_NEW_QUESTIONS索引，而这个索引的第一列是TOPIC，那么就没有理由再保留BBOARD_BY_TOPIC索引了。即使SQL只基于TOPIC列进行限制，查询优化器也可以使用BBOARD_FOR_NEW_QUESTIONS。冗余的索引不会导致任何服务失败，但会减慢插入速度。
- en: '[PRE13]'
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We were so pleased with ourselves that we decided to drop an index on `bboard`
    by the `refers_to` column, reasoning that nobody ever queries `refers_to` without
    also querying on `topic`. Therefore they could just use the first two columns
    in the `bboard_for_new_questions` index. Here''s a query looking for unanswered
    questions:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对自己感到非常满意，所以决定在`bboard`的`refers_to`列上建立一个索引，理由是没有人会单独查询`refers_to`而不查询`topic`。因此他们可以直接使用`bboard_for_new_questions`索引的前两列。以下是一个寻找未回答问题的查询：
- en: '[PRE14]'
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Ouch! 497,938 physical reads. Let''s try it with the index in place:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 糟糕！497,938次物理读取。让我们尝试使用索引：
- en: '[PRE15]'
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This is still a fairly expensive query, but 200 times faster than before and
    it executes in a fraction of a second. That's probably fast enough considering
    that this is an infrequently requested page.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这仍然是一个相当昂贵的查询，但比以前快了200倍，执行时间只需几秒钟。考虑到这是一个不经常请求的页面，这可能已经足够快了。
- en: 'Tracing/Tuning Case 3: forcing Oracle to cache a full table scan'
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 追踪/调优案例3：强制Oracle缓存全表扫描
- en: 'You may have a Web site that is basically giving users access to a huge table.
    For maximum flexibility, it might be the case that this table needs to be sequentially
    scanned for every query. In general, Oracle won''t cache blocks retrieved during
    a full table scan. The Oracle tuning guide helpfully suggests that you include
    the following cache hints in your SQL:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能有一个网站，基本上为用户提供对一个巨大表的访问。为了最大灵活性，可能需要对每个查询进行顺序扫描这个表。一般来说，Oracle不会缓存在全表扫描期间检索的块。Oracle调优指南建议在你的SQL中包含以下缓存提示：
- en: '[PRE16]'
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You will find, however, that this doesn't work if your buffer cache (controlled
    by db_block_buffers; see above) isn't large enough to contain the table. Oracle
    is smart and ignores your hint. After you've reconfigured your Oracle installation
    to have a larger buffer cache, you'll probably find that Oracle is *still* ignoring
    your cache hint. That's because you also need to
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 但是你会发现，如果你的缓冲区缓存（由db_block_buffers控制；见上文）不足以容纳整个表，这种方法是行不通的。Oracle很聪明，会忽略你的提示。在重新配置Oracle安装以拥有更大的缓冲区缓存后，你可能会发现Oracle仍然在忽略你的缓存提示。这是因为你还需要
- en: '[PRE17]'
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE17]'
- en: and then Oracle will work as advertised in the tuning guide. It makes sense
    when you think about it because Oracle can't realistically start stuffing things
    into the cache unless it knows roughly how large the table is.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然后Oracle将按照调优指南的要求工作。如果你仔细考虑一下，这是有道理的，因为除非Oracle大致知道表有多大，否则它不可能开始将东西塞入缓存。
- en: If it is still too slow
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果仍然太慢
- en: '[![The Samaritans.  Dublin, Ireland.](../Images/c59cd0e592a3493354c3c40e9e0b4310.jpg)](/http://philip.greenspun.com/images/pcd1120/dublin-samaritans-18.tcl)
    If your application is still too slow, you need to talk to the database administrator.
    If you *are* the database administrator as well as the programmer, you need to
    hire a database administrator ("dba").'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[![撒玛利亚人。爱尔兰都柏林。](../Images/c59cd0e592a3493354c3c40e9e0b4310.jpg)](/http://philip.greenspun.com/images/pcd1120/dublin-samaritans-18.tcl)
    如果你的应用程序仍然太慢，你需要与数据库管理员交谈。如果你既是数据库管理员又是程序员，你需要雇佣一个数据库管理员（"dba"）。'
- en: A professional dba is great at finding queries that are pigs and building indices
    to make them faster. The dba might be able to suggest that you partion your tables
    so that infrequently used data are kept on a separate disk drive. The dba can
    make you extra tablespaces on separate physical disk drives. By moving partitions
    and indices to these separate disk drives, the dba can speed up your application
    by factors of 2 or 3.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一位专业的数据库管理员擅长找出那些效率低下的查询，并建立索引使其更快。数据库管理员可能会建议您对表进行分区，以便将不经常使用的数据保存在单独的磁盘驱动器上。数据库管理员可以为您在单独的物理磁盘驱动器上创建额外的表空间。通过将分区和索引移动到这些单独的磁盘驱动器上，数据库管理员可以将您的应用程序的速度提高2到3倍。
- en: 'A factor of 2 or 3? Sounds pretty good until you reflect on the fact that moving
    information from disk into RAM would speed things up by a factor of 100,000\.
    This isn''t really possible for database updates, which must be recorded in a
    durable medium (exception: fancy EMC disk arrays, which contain write caches and
    batteries to ensure durability of information in the write cache). However, it
    is relatively easy for queries. As a programmer, you can add indices and supply
    optimizer hints to increase the likelihood that your queries will be satisfied
    from Oracle''s block cache. The dba can increase the amount of the server''s RAM
    given over to Oracle. If that doesn''t work, the dba can go out and order more
    RAM!'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 2到3倍的提速？听起来不错，直到你想到将信息从磁盘移到RAM会使速度提高10万倍。这对于数据库更新来说并不是真正可能的，因为必须将其记录在持久介质上（例外情况：高级EMC磁盘阵列，其中包含写入缓存和电池以确保写入缓存中的信息的持久性）。但是，对于查询来说相对容易。作为程序员，您可以添加索引并提供优化提示，以增加您的查询从Oracle块缓存中得到满足的可能性。数据库管理员可以增加分配给Oracle的服务器RAM的数量。如果这样做不起作用，数据库管理员可以外出并订购更多的RAM！
- en: '*In 1999, Oracle running on a typical ArsDigita server gets 1 GB of RAM.*'
  id: totrans-71
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*1999年，运行在典型ArsDigita服务器上的Oracle获得1 GB的RAM。*'
- en: Reference
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参考
- en: Guy Harrison's [Oracle SQL High-Performance Tuning](http://www.amazon.com/exec/obidos/ASIN/0136142311/pgreenspun-20)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Guy Harrison的[Oracle SQL高性能调优](http://www.amazon.com/exec/obidos/ASIN/0136142311/pgreenspun-20)
- en: '[Oracle8 Server Tuning](http://www.oradoc.com/keyword/tuning)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Oracle8服务器调优](http://www.oradoc.com/keyword/tuning)'
- en: 'Next: [data warehousing](data-warehousing.html)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步：[数据仓库](data-warehousing.html)
- en: '* * *'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[philg@mit.edu](http://philip.greenspun.com/)[Add a comment](/comments/add?page_id=3515)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '[philg@mit.edu](http://philip.greenspun.com/)[添加评论](/comments/add?page_id=3515)'
