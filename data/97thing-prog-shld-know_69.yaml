- en: Put the Mouse Down and Step Away from the Keyboard
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 放下鼠标，远离键盘
- en: Put the Mouse Down and Step Away from the Keyboard
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 放下鼠标，远离键盘
- en: You've been focused for hours on some gnarly problem and there's no solution
    in sight. So you get up to stretch your legs, or to hit the vending machines,
    and on the way back the answer suddenly becomes obvious.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经专注于某个棘手的问题几个小时了，但看不到解决方案。于是你站起来伸展一下，或者去买点东西吃，回来的路上突然就想到了答案。
- en: Does this scenario sound familiar? Ever wonder why it happens? The trick is
    that while you're coding, the logical part of your brain is active and the creative
    side is shut out. It can't present anything to you until the logical side takes
    a break.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这种情况听起来熟悉吗？曾经想过为什么会发生吗？诀窍在于当你编码时，你的逻辑大脑活跃，而创造性的一面被排斥在外。直到逻辑一侧休息，它才能向你呈现任何东西。
- en: 'Here''s a real-life example: I was cleaning up some legacy code and ran into
    an ''interesting'' method. It was designed to verify that a string contained a
    valid time using the format *hh:mm:ss xx*, where *hh* represents the hour, *mm*
    represents minutes, *ss* represents seconds, and *xx* is either *AM* or *PM*.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个真实的例子：我正在整理一些遗留代码，遇到了一个“有趣”的方法。它旨在验证一个字符串是否符合 *hh:mm:ss xx* 格式的有效时间，其中 *hh*
    表示小时，*mm* 表示分钟，*ss* 表示秒，*xx* 是 *AM* 或 *PM*。
- en: 'The method used the following code to convert two characters (representing
    the hour) into a number, and verify it was within the proper range:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法使用以下代码将两个字符（表示小时）转换为一个数字，并验证它是否在适当的范围内：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The same code appeared twice more, with appropriate changes to the character
    offset and upper limit, to test the minutes and seconds. The method ended with
    these lines to check for AM and PM:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的代码再出现两次，通过适当更改字符偏移和上限，来测试分钟和秒。该方法以以下代码结束，用于检查上午和下午：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If none of this series of comparisons failed, returning false, the method returned
    true.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这一系列比较都没有失败，返回 false，那么该方法就返回 true。
- en: If the preceding code seems wordy and difficult to follow, don't worry. I thought
    so too — which meant I'd found something worth cleaning up. I refactored it and
    wrote a few unit tests, just to make sure it still worked.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前面的代码看起来啰嗦且难以理解，不要担心。我也是这么认为的 — 这意味着我找到了值得整理的东西。我重构了它并写了几个单元测试，只是为了确保它仍然有效。
- en: When I finished, I felt pleased with the results. The new version was easy to
    read, half the size, and more accurate because the original code tested only the
    upper boundary for the hours, minutes, and seconds.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当我完成时，我对结果感到满意。新版本易于阅读，大小减半，更准确，因为原始代码仅测试了小时、分钟和秒的上限。
- en: 'While getting ready for work the next day, an idea popped in my head: Why not
    validate the string using a regular expression? After a few minutes typing, I
    had a working implementation in just one line of code. Here it is:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备第二天上班时，我脑子里突然冒出一个想法：为什么不使用正则表达式验证字符串呢？几分钟后，我只用了一行代码就实现了一个可工作的实现。这就是它：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The point of this story is not that I eventually replaced over thirty lines
    of code with just one. The point is that until I got away from the computer, I
    thought my first attempt was the best solution to the problem.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个故事的重点不在于我最终用一行代码替换了超过三十行的代码。重点是，在我远离电脑之前，我认为我的第一次尝试是解决问题的最佳方案。
- en: So the next time you hit a nasty problem, do yourself a favor. Once you really
    understand the problem go do something involving the creative side of your brain
    — sketch out the problem, listen to some music, or just take a walk outside. Sometimes
    the best thing you can do to solve a problem is to put the mouse down and step
    away from the keyboard.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所以下次遇到棘手问题时，请自己一个忙。一旦你真正理解了问题，做一些涉及你大脑创造性一面的事情 —— 梳理问题，听些音乐，或者出去散步。有时解决问题最好的方法就是放下鼠标，远离键盘。
- en: By [BurkHufnagel](http://programmer.97things.oreilly.com/wiki/index.php/BurkHufnagel)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：[BurkHufnagel](http://programmer.97things.oreilly.com/wiki/index.php/BurkHufnagel)
