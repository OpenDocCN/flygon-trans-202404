- en: Initialization and Default
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 初始化和默认
- en: Initialization
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初始化
- en: 'Glance through the `penguin` class:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览`penguin`类：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'A penguin has 2 instance variables: its `hunger` and `weight`. The penguin
    class has 2 class variables: its favorite food which is `tuna`, and `all-penguin`
    which is a list of all names of penguins ever created. Currently, `all-penguin`
    is never updated. On some occassions like this, we want our objects to do a certain
    thing when it is created. We can do this with the **`initialize`** clause.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 企鹅有2个实例变量：它的`hunger`和`weight`。企鹅类有2个类变量：它的最爱食物是`tuna`，以及`all-penguin`，它是一个包含所有已创建企鹅名称的列表。当前，`all-penguin`从不更新。在某些情况下，比如这种情况，我们希望我们的对象在创建时执行某个特定的操作。我们可以使用**`initialize`**子句来实现这一点。
- en: '![](http://wikimotive.com/wp-content/uploads/sites/2/2013/05/Cute-Penguin-
    Wallpaper-2013.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![图片](http://wikimotive.com/wp-content/uploads/sites/2/2013/05/Cute-Penguin-
    Wallpaper-2013.jpg)'
- en: Right After Instantiate
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在实例化后
- en: 'As soon as a Penguin object is instantiated, we want him to:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦企鹅对象被实例化，我们希望它：
- en: Say his name and
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 说出他的名字并且
- en: 'add himself to the `all-penguin` list. Here is how we do it with the initialize
    clause:'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将自己添加到`all-penguin`列表中。这是我们如何使用初始化子句来做到的：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The Default Method
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 默认方法
- en: 'So this is our definition of the Penguin class that we have so far:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这是迄今为止我们对企鹅类的定义：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s say we call the following methods:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们假设我们调用了以下方法：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'It looks like `jack` doesn''t know how to `back-flip`. Our penguins only know
    a handful of messages right now, but as the designer of the penguin class, we
    don''t want them to throw an error for every other message. Instead, if a penguin
    sees a message it doesn''t understand we want them to eat instead. We can do this
    with the **default-method** clause. Take a look at the addition to our Penguin
    class:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来`jack`不知道如何进行`back-flip`。目前我们的企鹅只知道一小部分消息，但作为企鹅类的设计者，我们不希望它们对每条其他消息都抛出错误。相反，如果一个企鹅看到它不理解的消息，我们希望它吃东西。我们可以使用**default-method**子句来实现这一点。看看我们企鹅类的添加：
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And now we call these methods:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们调用这些方法：
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/e939e754b584aa6534cb464fcf312b2b.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/e939e754b584aa6534cb464fcf312b2b.jpg)'
- en: Message and Args
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 消息和参数
- en: Notice that in the default-method above, we used message to find out what message
    we passed in to our object. Similarly, we can also use args to find out what other
    arguments are passed as a list.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在上面的default-method中，我们使用消息来找出我们传递给对象的消息是什么。类似地，我们也可以使用args来找出其他参数被传递为列表的情况。
- en: For example, if we call
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们调用
- en: '[PRE6]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Then, the variable `message` will point to `'do-math`, while the variable `args`
    will point to `(1 2 5 10)`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，变量`message`将指向`'do-math`，而变量`args`将指向`(1 2 5 10)`。
