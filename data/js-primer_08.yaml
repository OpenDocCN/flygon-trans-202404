- en: コメント
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: コメント
- en: 原文：[https://jsprimer.net/basic/comments/](https://jsprimer.net/basic/comments/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://jsprimer.net/basic/comments/](https://jsprimer.net/basic/comments/)
- en: コメントはプログラムとして評価されないため、ソースコードの説明を書くために利用されています。 この書籍でも、JavaScriptのソースコードを解説するためにコメントを使っていきます。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: コメントはプログラムとして評価されないため、ソースコードの説明を書くために利用されています。 この書籍でも、JavaScriptのソースコードを解説するためにコメントを使っていきます。
- en: コメントの書き方には、一行コメントと複数行コメントの2種類があります。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: コメントの書き方には、一行コメントと複数行コメントの2種類があります。
- en: '[](#single-line-comment)*一行コメント*'
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#single-line-comment)*一行コメント*'
- en: '*一行コメントは名前のとおり、一行ずつコメントを書く際に利用します。 `//` 以降から行末までがコメントとして扱われるため、プログラムとして評価されません。'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*一行コメントは名前のとおり、一行ずつコメントを書く際に利用します。 `//` 以降から行末までがコメントとして扱われるため、プログラムとして評価されません。'
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[](#multi-line-comment)*複数行コメント*'
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#multi-line-comment)*複数行コメント*'
- en: '*複数行コメントは名前のとおり、複数行のコメントを書く際に利用します。 一行コメントとは違い複数行をまとめて書けるので、長い説明を書く際に利用されています。'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*複数行コメントは名前のとおり、複数行のコメントを書く際に利用します。 一行コメントとは違い複数行をまとめて書けるので、長い説明を書く際に利用されています。'
- en: '`/*` と `*/`で囲まれた範囲がコメントとして扱われるため、プログラムとして評価されません。'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`/*` と `*/`で囲まれた範囲がコメントとして扱われるため、プログラムとして評価されません。'
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 複数行コメントの中に、複数行コメントを書くことはできません。 次のように、複数行のコメントをネストして書いた場合は構文エラーとなります。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 複数行コメントの中に、複数行コメントを書くことはできません。 次のように、複数行のコメントをネストして書いた場合は構文エラーとなります。
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[](#html-like-comment)*[ES2015] HTML-likeコメント*'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#html-like-comment)*[ES2015] HTML-likeコメント*'
- en: '*ECMAScript 2015（ES2015）から後方互換性のための仕様として**HTML-likeコメント**が追加されています。 このHTML-likeコメントは、ブラウザの実装に合わせた後方互換性のための仕様として定義されています。'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*ECMAScript 2015（ES2015）から後方互換性のための仕様として**HTML-likeコメント**が追加されています。 このHTML-likeコメントは、ブラウザの実装に合わせた後方互換性のための仕様として定義されています。'
- en: HTML-likeコメントは名前のとおり、HTMLのコメントと同じ表記です。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: HTML-likeコメントは名前のとおり、HTMLのコメントと同じ表記です。
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: ここでは、 `<!--` と `-->` がそれぞれ一行コメントとして認識されます。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ここでは、 `<!--` と `-->` がそれぞれ一行コメントとして認識されます。
- en: JavaScriptをサポートしていないブラウザでは、`<script>`タグを正しく認識できないために書かれたコードが表示されていました。 それを避けるために`<script>`の中をHTMLコメントで囲み、表示はされないが実行されるという回避策が取られていました。
    今は`<script>`タグをサポートしていないブラウザはないため、この回避策は不要です。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScriptをサポートしていないブラウザでは、`<script>`タグを正しく認識できないために書かれたコードが表示されていました。 それを避けるために`<script>`の中をHTMLコメントで囲み、表示はされないが実行されるという回避策が取られていました。
    今は`<script>`タグをサポートしていないブラウザはないため、この回避策は不要です。
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 一方、`<script>`タグ内、つまりJavaScript内にHTMLコメントが書かれているサイトは残っています。 このようなサイトでもJavaScriptが動作するという、後方互換性のための仕様として追加されています。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一方、`<script>`タグ内、つまりJavaScript内にHTMLコメントが書かれているサイトは残っています。 このようなサイトでもJavaScriptが動作するという、後方互換性のための仕様として追加されています。
- en: '[歴史的経緯](https://dev.mozilla.jp/2016/03/es6-in-depth-arrow-functions/ "ES6 In
    Depth: Arrow functions | Mozilla Developer Street (modest)")は別として、ECMAScriptではこのように後方互換性が慎重に取り扱われます。
    ECMAScriptは一度入った仕様が使えなくなることはほとんどないため、基本文法で覚えたことが使えなくなることはありません。 一方で、仕様が更新されるたびに新しい機能が増えるため、それを学び続けることには変わりありません。'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[歴史的経緯](https://dev.mozilla.jp/2016/03/es6-in-depth-arrow-functions/ "ES6 In
    Depth: Arrow functions | Mozilla Developer Street (modest)")は別として、ECMAScriptではこのように後方互換性が慎重に取り扱われます。
    ECMAScriptは一度入った仕様が使えなくなることはほとんどないため、基本文法で覚えたことが使えなくなることはありません。 一方で、仕��が更新されるたびに新しい機能が増えるため、それを学び続けることには変わりありません。'
- en: '[](#conclusion)*まとめ*'
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#conclusion)*まとめ*'
- en: '*この章では、ソースコードに説明を書けるコメントについて学びました。'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*この章では、ソースコードに説明を書けるコメントについて学びました。'
- en: '`//` 以降から行末までが一行コメント'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`//` 以降から行末までが一行コメント'
- en: '`/*` と `*/`で囲まれた範囲が複数行コメント'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/*` と `*/`で囲まれた範囲が複数行コメント'
- en: HTML-likeコメントは後方互換性のためだけに存在する****
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML-likeコメントは後方互換性のためだけに存在する****
