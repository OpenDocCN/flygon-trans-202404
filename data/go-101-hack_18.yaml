- en: Conversion between array and slice
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数组和切片之间的转换
- en: Conversion between array and slice
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数组和切片之间的转换
- en: 'In `Go`, array is a fixed length of continuous memory with specified type,
    while slice is just a reference which points to an underlying array. Since they
    are different types, they can''t assign value each other directly. See the following
    example:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Go`中，数组是具有指定类型的固定长度连续内存，而切片只是一个指向底层数组的引用。由于它们是不同类型，不能直接互相赋值。请看下面的例子：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Because `copy` only accepts slice argument, we can use the `[:]` to create
    a slice from array. Check next code:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 因为`copy`只接受切片参数，我们可以使用`[:]`从数组创建一个切片。查看下面的代码：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The running output is:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 运行输出为：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The above example is copying value from slice to array, and the opposite operation
    is similar:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的例子是从切片复制值到数组，相反的操作类似：
- en: '[PRE3]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The execution result is:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 执行结果为：
- en: '[PRE4]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'References:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料：
- en: '[In golang how do you convert a slice into an array](http://stackoverflow.com/questions/19073769/in-golang-how-do-you-convert-a-slice-into-an-array);'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[在 golang 中如何将切片转换为数组](http://stackoverflow.com/questions/19073769/in-golang-how-do-you-convert-a-slice-into-an-array);'
- en: '[Arrays, slices (and strings): The mechanics of ''append''](https://blog.golang.org/slices).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[数组、切片（和字符串）：''append'' 的机制](https://blog.golang.org/slices).'
