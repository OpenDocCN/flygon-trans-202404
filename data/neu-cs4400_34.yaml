- en: Evaluating with Substitution CachesTuesday, February 7th
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用替换缓存进行评估星期二，2月7日
- en: 'Implementing the new `eval` is easy now — it is extended in the same way that
    the formal `eval` rule is extended:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在实现新的`eval`很容易——它的扩展方式与正式的`eval`规则扩展方式相同：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Again, note that we don’t need `subst` anymore, but the rest of the code (the
    data type definition, parsing, and `arith-op`) is exactly the same.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 再次注意，我们不再需要`subst`，但代码的其余部分（数据类型定义、解析和`arith-op`）完全相同。
- en: 'Finally, we need to make sure that `eval` is initially called with an empty
    cache. This is easy to change in our main `run` entry point:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要确保最初使用空缓存调用`eval`。这在我们的主要`run`入口点中很容易更改：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The full code (including the same tests, but not including formal rules for
    now) follows. Note that one test does not pass.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的代码（包括相同的测试，但暂时不包括正式规则）如下。请注意，一个测试未通过。
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
