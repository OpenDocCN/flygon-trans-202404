- en: Considering Portability
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 考虑可移植性
- en: Considering Portability
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 考虑可移植性
- en: Know Your Types
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解你的类型
- en: Most portability issues that generate warnings are because we are not careful
    about our types. Standard library and arrays are indexed with `size_t`. Standard
    container sizes are reported in `size_t`. If you get the handling of `size_t`
    wrong, you can create subtle lurking 64-bit issues that arise only after you start
    to overflow the indexing of 32-bit integers. char vs unsigned char.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数生成警告的可移植性问题是因为我们对类型不够小心。标准库和数组使用`size_t`进行索引。标准容器的大小以`size_t`报告。如果你对`size_t`的处理出错，就可能会出现只有在开始溢出32位整数的索引后才出现的微妙潜在64位问题。char与unsigned
    char。
- en: '[http://www.viva64.com/en/a/0010/](http://www.viva64.com/en/a/0010/)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.viva64.com/en/a/0010/](http://www.viva64.com/en/a/0010/)'
- en: Other Concerns
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他考虑
- en: Most of the other concerns in this document ultimately come back to portability
    issues. [Avoid statics](07-Considering_Threadability.html#statics) is particularly
    of note.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文档中的其他大多数问题最终都可以追溯到可移植性问题。[避免静态](07-Considering_Threadability.html#statics)值得特别注意。
