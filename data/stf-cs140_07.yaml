- en: Locks and Condition Variables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 锁和条件变量
- en: Lecture Notes for CS 140
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: CS 140 课程笔记
- en: Spring 2014
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 2014 年春季
- en: John Ousterhout
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 约翰·奥斯特豪特
- en: 'Readings for this topic from *Operating Systems: Principles and Practice*:
    Sections 5.2-5.4.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*操作系统：原理与实践* 中有关此主题的阅读材料：5.2-5.4 节。'
- en: 'Needed: higher-level synchronization mechanism that provides'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要：提供更高级别的同步机制，以提供
- en: 'Mutual exclusion: easy to create critical sections'
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互斥：易于创建临界区
- en: 'Scheduling: block thread until some desired event occurs'
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调度：阻塞线程直到发生某个期望的事件
- en: Locks
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 锁
- en: '*Lock*: an object that can only be owned by a single thread at any given time.
    Basic operations on a lock:'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*锁*：只能由单个线程在任何给定时间拥有的对象。锁的基本操作：'
- en: 'acquire: mark the lock as owned by the current thread; if some other thread
    already owns the lock then first wait until the lock is free. Lock typically includes
    a queue to keep track of multiple waiting threads.'
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: acquire：将锁标记为当前线程所拥有；如果其他线程已经拥有锁，则首先等待锁被释放。锁通常包含一个队列来跟踪多个等待线程。
- en: 'release: mark the lock as free (it must currently be owned by the calling thread).'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: release：将锁标记为自由状态（它目前必须由调用线程拥有）。
- en: 'Too much milk solution with locks (using Pintos APIs):'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Pintos API 的带有锁的过多牛奶解决方案：
- en: '[PRE0]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'A more complex example: producer/consumer.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更复杂的例子：生产者/消费者。
- en: Producers add characters to a buffer
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产者向缓冲区中添加字符
- en: Consumers remove characters from the buffer
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消费者从缓冲区中移除字符
- en: Characters will be removed in the same order added
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符将以添加的相同顺序被移除
- en: 'Version 1:'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本 1：
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Version 2 (handle empty/full cases):'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本 2（处理空/满情况）：
- en: '[PRE2]'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Condition Variables
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条件变量
- en: Synchronization mechanisms need more than just mutual exclusion; also need a
    way to wait for another thread to do something (e.g., wait for a character to
    be added to the buffer)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同步机制不仅需要互斥，还需要一种等待另一个线程执行某些操作的方法（例如等待将字符添加到缓冲区中）
- en: '*Condition variables*: used to wait for a particular condition to become true
    (e.g. characters in buffer).'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*条件变量*：用于等待特定条件变为真（例如缓冲区中的字符）。'
- en: 'wait(condition, lock): release lock, put thread to sleep until condition is
    signaled; when thread wakes up again, re-acquire lock before returning.'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: wait(condition, lock)：释放锁，使线程进入睡眠状态，直到条件被信号激活；当线程再次唤醒时，在返回之前重新获取锁。
- en: 'signal(condition, lock): if any threads are waiting on condition, wake up one
    of them. Caller must hold lock, which must be the same as the lock used in the
    wait call.'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: signal(condition, lock)：如果有任何线程在条件上等待，则唤醒其中一个。调用者必须持有锁，该锁必须与 wait 调用中使用的锁相同。
- en: 'broadcast(condition, lock): same as signal, except wake up all waiting threads.'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: broadcast(condition, lock)：与 signal 相同，唤醒所有等待的线程。
- en: 'Note: after signal, signaling thread keeps lock, waking thread goes on the
    queue waiting for the lock.'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意：在发出信号后，发出信号的线程保留锁，被唤醒的线程进入等待锁的队列。
- en: 'Warning: when a thread wakes up after cond_wait there is no guarantee that
    the desired condition still exists: another thread might have snuck in.'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 警告：在 cond_wait 后，线程唤醒时不能保证所需的条件仍然存在：另一个线程可能已经偷偷地进入。
- en: 'Producer/Consumer, version 3 (with condition variables):'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产者/消费者，第三版（带有条件变量）：
- en: '[PRE3]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Monitors
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监视器
- en: 'When locks and condition variables are used together like this, the result
    is called a *monitor* :'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当锁和条件变量一起使用时，结果被称为*监视器*：
- en: A collection of procedures manipulating a shared data structure.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一组操作共享数据结构的过程。
- en: One lock that must be held whenever accessing the shared data (typically each
    procedure acquires the lock at the very beginning and releases the lock before
    returning).
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须在访问共享数据时持有的一个锁（通常每个过程在开始时获取锁，在返回之前释放锁）。
- en: One or more condition variables used for waiting.
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个或多个条件变量用于等待。
- en: There are other synchronization mechanisms besides locks and condition variables.
    Be sure to read about semaphores in the book or in the Pintos documentation.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了锁和条件变量之外，还有其他的同步机制。一定要阅读书籍或 Pintos 文档中关于信号量的内容。
