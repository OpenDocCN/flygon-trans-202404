- en: Introducing Racket’s `lambda`Tuesday, January 31st
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Racket的`lambda`，周二，1月31日
- en: '`fun` & `lambda` difference between lambda and simple values not being able
    to do recursive functions with `let` let* as a derived form let with lambda in
    Racket –> can be a derived form how `if` can be used to implement `and` and `or`
    as derived forms'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '`fun`和`lambda`之间的区别，lambda和简单值之间不能使用`let`进行递归函数，`let*`作为带有lambda的派生形式在Racket中的let
    –> 可以是一个派生形式`if`如何用来实现`and`和`or`作为派生形式'
- en: Newtonian syntax vs. a lambda expression.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 牛顿式语法与lambda表达式。
- en: 'Don’t be fooled into making a bogus connection between Racket’s syntax, and
    its `unique` powers… The fact is that it is not the only language that has this
    capability. For example, this:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不要被误导，认为Racket的语法与其`unique`功能之间存在虚假的联系... 事实上，它不是唯一具有此功能的语言。例如，这个：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Can be written in JavaScript like this:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 可以像这样用JavaScript写：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In Perl:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在Perl中：
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In Ruby:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ruby中：
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: etc. Even [Java has lambda expressions](http://www.drdobbs.com/jvm/lambda-expressions-in-java-8/240166764),
    and recently [C++ added them too](http://www.cprogramming.com/c++11/c++11-lambda-closures.html).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 等等。即使[Java也有lambda表达式](http://www.drdobbs.com/jvm/lambda-expressions-in-java-8/240166764)，最近[C++也添加了它们](http://www.cprogramming.com/c++11/c++11-lambda-closures.html)。
