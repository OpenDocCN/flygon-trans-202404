- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍。
- en: '6.824 2015 Lecture 1: Introduction'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6.824 2015 年第 1 讲：介绍。
- en: '**Note:** These lecture notes were slightly modified from the ones posted on
    the 6.824 [course website](http://nil.csail.mit.edu/6.824/2015/schedule.html)
    from Spring 2015.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**这些讲座笔记是从 6.824 [课程网站](http://nil.csail.mit.edu/6.824/2015/schedule.html)
    2015 年春季发布的笔记稍作修改的。'
- en: Distributed systems
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分布式系统。
- en: What is a distributed system?
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是分布式系统？
- en: multiple networked cooperating computers
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个网络协作计算机。
- en: '*Example:* Internet E-Mail, Athena file server, Google MapReduce, Dropbox,
    etc.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*示例：* 互联网电子邮件，Athena 文件服务器，Google MapReduce，Dropbox 等。'
- en: Why distribute?
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么要分布？
- en: to connect physically separate entities
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接物理上分离的实体。
- en: to achieve security via physical isolation
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过物理隔离实现安全性。
- en: to tolerate faults via replication at separate sites
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在不同地点复制来容忍故障。
- en: to increase performance via parallel CPUs/mem/disk/net
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过并行 CPU/内存/磁盘/网络来提高性能。
- en: '...but:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '...但是：'
- en: complex, hard to debug
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复杂，难以调试。
- en: new classes of problems, e.g. partial failure (did he accept my e-mail?)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的问题类别，例如部分故障（他接受了我的电子邮件吗？）。
- en: 'Leslie Lamport: *"A distributed system is one in which the failure of a computer
    you didn''t even know existed can render your own computer unusable."*'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Leslie Lamport：“*一个分布式系统是指你甚至都不知道存在的计算机的故障可能会使你自己的计算机无法使用。”*
- en: '*Advice:* don''t distribute if a central system will work'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*建议：*如果中心化系统可以解决问题，则不要进行分发。'
- en: Why take this course?
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么要选择这门课程？
- en: interesting -- hard problems, non-obvious solutions
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有趣的——难题，非显而易见的解决方案。
- en: active research area -- lots of progress + big unsolved problems
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 活跃的研究领域——取得了很多进展，但也存在一些尚未解决的大问题。
- en: used by real systems -- unlike 10 years ago -- driven by the rise of big Web
    sites
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 10 年前不同，实际系统使用了更多技术——主要是由于大型网站的兴起。
- en: hands-on -- you'll build a real system in the labs
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实践操作——你将在实验室中构建一个真实的系统。
- en: Course structure
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 课程结构。
- en: See the course [website](http://pdos.csail.mit.edu/6.824).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 查看课程[网站](http://pdos.csail.mit.edu/6.824)。
- en: Course components
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 课程组成部分。
- en: Lectures about big ideas, papers, labs
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于重要思想、论文和实验的讲座。
- en: 'Readings: research papers as case studies'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读：研究论文作为案例研究。
- en: please read papers before class
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请在课前阅读论文。
- en: 'paper for today: [MapReduce paper](papers/mapreduce.pdf)'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 今天的论文：[MapReduce 论文](papers/mapreduce.pdf)
- en: each paper has a question for you to answer and one for you to ask (see web
    site)
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每篇论文都有一个问题需要你回答，还有一个问题需要你提问（参见网站）。
- en: submit question & answer before class, one or two paragraphs
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在课堂前提交问题和答案，一两段即可。
- en: Mid-term quiz in class, and final exam
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 课堂上的期中测验和期末考试。
- en: 'Labs: build increasingly sophisticated fault-tolerant services'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验室：构建越来越复杂的容错服务。
- en: First lab is due on Monday
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个实验室作业于星期一截止。
- en: 'Project: design and build a distributed system of your choice or the system
    we pose in the last month of the course'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目：设计并构建你选择的分布式系统或者我们在课程最后一个月提出的系统。
- en: teams of two or three
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两三人小组。
- en: project meetings with course staff
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与课程教职员工的项目会议。
- en: demo in last class meeting
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在最后一次课程会议上进行演示。
- en: Main topics
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主要主题。
- en: '*Example:*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*示例：*'
- en: a shared file system, so users can cooperate, like Dropbox
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享文件系统，使用户可以像Dropbox一样合作。
- en: but this lecture isn't about dropbox specifically
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是这节课不是特指Dropbox。
- en: just an example goal to get feel for distributed system problems
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅仅是为了感受分布式系统问题的一个目标示例。
- en: lots of client computers
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多客户计算机。
- en: Architecture
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 架构。
- en: Choice of interfaces
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接口的选择。
- en: Monolithic file server?
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单olithic 文件服务器？
- en: Block server(s) -> FS logic in clients?
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 块服务器 -> 客户端中的文件系统逻辑？
- en: Separate naming + file servers?
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单独的命名+文件服务器？
- en: Separate FS + block servers?
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单独的文件系统+块服务器？
- en: Single machine room or unified wide area system?
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个机房还是统一的广域系统？
- en: Wide-area dramatically more difficult.
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广域网络明显更加困难。
- en: Client/server or peer-to-peer?
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端/服务器还是点对点？
- en: Interact w/ performance, security, fault behavior.
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与性能、安全性、故障行为交互。
- en: Implementation
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施。
- en: How do clients/servers communicate?
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端/服务器如何通信？
- en: Direct network communication is pretty painful
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直接的网络通信相当痛苦。
- en: Want to hide network stuff from application logic
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 希望将网络内容隐藏在应用逻辑中。
- en: Most systems organize distribution with some structuring framework(s)
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数系统使用一些结构化框架来组织分发。
- en: RPC, RMI, DSM, MapReduce, etc.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RPC、RMI、DSM、MapReduce 等。
- en: Performance
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 性能。
- en: 'Distribution can hurt: network b/w and latency bottlenecks'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分发可能会带来问题：网络带宽和延迟瓶颈。
- en: Lots of tricks, e.g. caching, threaded servers
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多技巧，如缓存、多线程服务器。
- en: 'Distribution can help: parallelism, pick server near client'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分发可以帮助：并行性，选择靠近客户端的服务器。
- en: 'Idea: scalable design'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 想法：可扩展的设计。
- en: We would like performance to scale linearly with the addition of machines
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望性能能够随机器的增加呈线性增长。
- en: '`N x` servers `-> N x` total performance'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`N x` 个服务器 `-> N x` 总性能'
- en: Need a way to divide the load by N
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要一种方法将负载按照 N 来划分
- en: divide the state by N
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按照 N 来划分状态
- en: split by user
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按用户划分
- en: split by file name
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按文件名划分
- en: '"sharding" or "partitioning"'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"分片"或"分区"'
- en: Rarely perfect `->` only scales so far
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 很少是完美的 `->` 只能扩展到一定程度
- en: Global operations, e.g. search
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全局操作，例如搜索
- en: Load imbalance
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负载不平衡
- en: One very active user
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个非常活跃的用户
- en: One very popular file
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个非常受欢迎的文件
- en: '`->` one server 100%, added servers mostly idle'
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`->` 一个服务器 100%，添加的服务器大部分时间处于空闲状态'
- en: '`-> N x` servers `->` `1 x` performance'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-> N x` 个服务器 `->` `1 x` 性能'
- en: Fault tolerance
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 容错性
- en: 'Dropbox: ~10,000 servers; [some fail](http://www.datacenterknowledge.com/archives/2013/10/23/how-dropbox-stores-stuff-for-200-million-users/)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Dropbox: ~10,000 个服务器；[一些失败](http://www.datacenterknowledge.com/archives/2013/10/23/how-dropbox-stores-stuff-for-200-million-users/)'
- en: Can I use my files if there's a failure?
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有故障，我能使用我的文件吗？
- en: Some part of network, some set of servers
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络的某些部分，一些服务器集合
- en: 'Maybe: replicate the data on multiple servers'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或许：在多个服务器上复制数据
- en: Perhaps client sends every operation to both
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或许客户端将每个操作都发送到两者
- en: Maybe only needs to wait for one reply
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或许只需要等待一个回复
- en: '*Opportunity:* operate from two "replicas" independently if partitioned?'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*机会:* 如果分区了，可以从两个 "副本" 独立运行吗？'
- en: '*Opportunity:* can 2 servers yield 2x availability **AND** 2x performance?'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*机会:* 两台服务器能否产生 2 倍的可用性 **和** 2 倍的性能？'
- en: Consistency
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一致性
- en: Contract w/ apps/users about meaning of operations
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与应用程序/用户约定操作的含义
- en: e.g. "read yields most recently written value"
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如："读取返回最近写入的值"
- en: hard due to partial failure, replication/caching, concurrency
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于部分故障、复制/缓存、并发性而变得困难
- en: '*Problem:* keep replicas identical'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*问题:* 保持副本一致'
- en: If one is down, it will miss operations
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一个服务器宕机，它将错过操作
- en: Must be brought up to date after reboot
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须在重启后更新到最新状态
- en: If net is broken, *both* replicas maybe live, and see different ops
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果网络中断，*两个*副本可能仍然存活，并且看到不同的操作
- en: Delete file, still visible via other replica
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除文件，仍然可以通过其他副本看到
- en: '*"split brain"* -- usually bad'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*"分裂大脑"* -- 通常不好'
- en: '*Problem:* clients may see updates in different orders'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*问题:* 客户端可能以不同的顺序看到更新'
- en: Due to caching or replication
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于缓存或复制
- en: I make `grades.txt` unreadable, then TA writes grades to it
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我把 `grades.txt` 变得无法阅读，然后助教给它写入成绩
- en: What if the operations run in different order on different replicas?
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果操作在不同副本上以不同顺序运行会怎么样？
- en: Consistency often hurts performance (communication, blocking)
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一致性通常会损害性能（通信、阻塞）
- en: Many systems cut corners -- "relaxed consistency"
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多系统采取了捷径 -- "放松一致性"
- en: Shifts burden to applications
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将负担转移到应用程序上
- en: Labs
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实验室
- en: 'Focus: fault tolerance and consistency -- central to distributed systems.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 焦点：容错和一致性 -- 分布式系统的核心。
- en: 'lab 1: MapReduce'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验室 1：MapReduce
- en: 'labs 2/3/4: storage servers'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验室 2/3/4：存储服务器
- en: progressively more sophisticated (tolerate more kinds of faults)
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渐进地变得更加复杂（容忍更多类型的故障）
- en: progressively harder too!
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 越来越难！
- en: patterned after real systems, e.g. MongoDB
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模仿真实系统，例如 MongoDB
- en: Lab 4 has core of a real-world design for 1000s of servers
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验室 4 具有一个用于数千台服务器的真实设计的核心
- en: 'What you''ll learn from the labs:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 你将从实验室学到什么：
- en: easy to listen to lecture / read paper and think you understand
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 听讲座或阅读论文时很容易以为你理解了
- en: building forces you to really understand
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建过程迫使你真正理解
- en: '*"I hear and I forget, I see and I remember, I do and I understand"* (Confucius?)'
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*"我听见了，我忘记了；我看见了，我记住了；我做了，我理解了"*（孔子？）'
- en: you'll have to do some design yourself
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将不得不自己设计一些东西
- en: we supply skeleton, requirements, and tests
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们提供框架、需求和测试
- en: but we leave you substantial scope to solve problems your own way
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是我们会给你留下很大的空间，让你用自己的方法解决问题
- en: you'll get experience debugging distributed systems
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将获得调试分布式系统的经验
- en: 'Test cases simulate failure scenarios:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 测试用例模拟故障场景：
- en: 'distributed systems are tricky to debug: concurrency and failures'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分布式系统很难调试：并发和故障
- en: many client and servers operating in parallel
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多客户端和服务器并行操作
- en: test cases make servers fail at the "most" inopportune time
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试用例在最不合适的时候使服务器失败
- en: '*think first* before starting to code!'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*先想一想*再开始编码！'
- en: otherwise your solution will be a mess
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则你的解决方案会一团糟
- en: and/or, it will take you a lot of time
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者，这将花费你很多时间
- en: code review
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码审查
- en: learn from others
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向他人学习
- en: judge other solutions
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评判其他解决方案
- en: 'We''ve tried to ensure that the hard problems have to do w/ distributed systems:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们试图确保困难的问题与分布式系统有关：
- en: not e.g. fighting against language, libraries, etc.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不是例如与语言、库等对抗。
- en: thus Go (type-safe, garbage collected, slick RPC library)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此 Go（类型安全、垃圾回收、精巧的 RPC 库）
- en: thus fairly simple services (MapReduce, key/value store)
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此，相当简单的服务（MapReduce、键值存储）
- en: 'Lab 1: MapReduce'
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实验 1：MapReduce
- en: help you get up to speed on Go and distributed programming
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助您快速掌握 Go 和分布式编程
- en: first exposure to some fault tolerance
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一次接触到一些容错机制
- en: motivation for better fault tolerance in later labs
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为后续实验提供更好的容错动机
- en: motivating app for many papers
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多论文的激励应用
- en: popular distributed programming framework
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流行的分布式编程框架
- en: many descendants frameworks
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多后代框架
- en: Computational model
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计算模型
- en: aimed at document processing
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旨在处理文档的
- en: split doc `-> K1 k, list<V1> values`
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分割文档 `-> K1 k, list<V1> values`
- en: run `Map(K1 key, list<V1> values)` on each split `-> list<K2, V2> kvps`
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每个分片上运行 `Map(K1 key, list<V1> values)` -> list<K2, V2> kvps
- en: run `Reduce(K2 key, list<V2> values)` on each partition `-> list<V2>`
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每个分区上运行 `Reduce(K2 key, list<V2> values)` -> list<V2>
- en: merge result
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并结果
- en: write a map function and reduce function
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写映射函数和减少函数
- en: framework takes care of parallelism, distribution, and fault tolerance
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 框架负责并行性、分布性和容错性
- en: 'some computations are not targeted, such as:'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些计算不是针对的，比如：
- en: anything that updates a document
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何更新文档的事情
- en: 'Example: `wc`'
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例：`wc`
- en: word count
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单词计数
- en: 'In Go''s implementation, we have:'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Go 的实现中，我们有：
- en: '`func Map(value string) *list.List`'
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`func Map(value string) *list.List`'
- en: the input is *a split* of the file `wc` is called on
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入是文件 `wc` 被调用的一个分片
- en: a split is just a partion of the file, as decided by MapReduce's splitter (can
    be customized, etc.)
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个分片只是文件的一部分，由 MapReduce 的分割器决定（可以自定义等等）
- en: returns a list of *key-value pairs*
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回一个 *键值对* 列表
- en: the key is the word (like 'pen')
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关键是单词（比如 'pen'）
- en: the value is 1 (to indicate 'pen' occurred once)
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值为 1（表示 'pen' 出现了一次）
- en: '**Note:** there will be multiple `<''pen'', 1>` entries in the list if ''pen''
    shows up more times'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注意：**如果 ''pen'' 出现多次，列表中将会有多个 `< ''pen'', 1 >` 条目'
- en: '`func Reduce(key string, values *list.List) string`'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`func Reduce(key string, values *list.List) string`'
- en: the input is a key and a list of (all? ) the values mapped to that key in the
    `Map()` phase
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入是一个键和该键在 `Map()` 阶段映射到的所有（？）值的列表
- en: so here, we would expect a `Reduce('pen', [1,1,1,1])` call if pen appeared 4
    times in the input file
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因此，在这里，我们期望一个 `Reduce('pen', [1,1,1,1])` 调用，如果 'pen' 在输入文件中出现了 4 次
- en: '**TODO**: not clear if it''s also possible to get three reduce calls as follows:'
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**待办事项：**不清楚是否也可以按照以下方式获得三个减少调用：'
- en: '`Reduce(''pen'', [1,1]) -> 2` + `Reduce(''pen'', [1,1]) -> 2`'
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Reduce(''pen'', [1,1]) -> 2` + `Reduce(''pen'', [1,1]) -> 2`'
- en: '`Reduce(''pen'', [2,2])`'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Reduce(''pen'', [2,2])`'
- en: the paper seems to indicate `Reduce`'s return value is just a list of values
    and so it seems that the association of those values with the key 'pen' in this
    case would be lost, which would prevent the 3rd `Reduce('pen')` call
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这篇论文似乎表明 `Reduce` 的返回值只是一个值列表，因此在这种情况下，这些值与关键字 'pen' 的关联将丢失，这将阻止第三次 `Reduce('pen')`
    调用
- en: 'Example: `grep`'
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例：`grep`
- en: map phase
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 映射阶段
- en: master splits input in `M` partitions
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主节点将输入分割成 `M` 个分区
- en: calls Map on each partition
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每个分区上调用 Map
- en: '`map(partition) -> list(k1,v1)`'
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`map(partition) -> list(k1,v1)`'
- en: search partition for word
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为单词搜索分区
- en: produce a list with one item if word shows up, `nil` if not
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果单词出现，生成一个具有一个项的列表，如果不是，则为 `nil`
- en: partition results among `R` reducers
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将结果分区到 `R` 个减少器中
- en: reduce phase
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少阶段
- en: Reduce job collects 1/R output from each Map job
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少工作，从每个 Map 作业中收集 1/R 输出
- en: all map jobs have completed!
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有映射作业已完成！
- en: '`reduce(k1, v1) -> v2`'
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reduce(k1, v1) -> v2`'
- en: 'identity function: `v1` in, `v1` out'
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标识函数：`v1` 进，`v1` 出
- en: merge phase
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并阶段
- en: master merges `R` outputs
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主节点合并 `R` 个输出
- en: Performance
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 性能
- en: 'number of jobs: `M x R` map jobs'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作业数量：`M x R` 个映射作业
- en: how much speed up do we get on `N` machines?
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在 `N` 台机器上能获得多少加速？
- en: 'ideally: `N`'
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理想情况：`N`
- en: 'bottlenecks:'
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 瓶颈：
- en: stragglers
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 落后者
- en: network calls to collect a Reduce partition
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络调用以收集 Reduce 分区
- en: network calls to interact with FS
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 FS 交互的网络调用
- en: disk I/O calls
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘 I/O 调用
- en: Fault tolerance model
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 容错模型
- en: master is not fault tolerant
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主节点不具备容错性
- en: '*assumption:* this single machine won''t fail during running a MapReduce app'
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*假设:* 在运行 MapReduce 应用程序时，这台单机不会出错'
- en: but many workers, so have to handle their failures
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是有很多工作进程，所以必须处理它们的故障
- en: 'assumption: workers are fail stop'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设：工作进程是故障停止的
- en: they fail and stop (e.g., don't send garbled weird packets after a failure)
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们失败并停止（例如，在故障后不发送乱码的奇怪数据包）
- en: they may reboot
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们可能会重新启动
- en: What kinds of faults might we want to tolerate?
  id: totrans-200
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 我们想要容忍什么样的故障？
- en: 'network:'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络：
- en: lost packets
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 丢失数据包
- en: duplicated packets
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复数据包
- en: temporary network failure
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 临时网络故障
- en: server disconnected
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器断开连接
- en: network partitioned
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络分区
- en: 'server:'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器：
- en: server crash+restart (master versus worker?)
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器崩溃+重启（主服务器还是工作者？）
- en: server fails permanently (master versus worker?)
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器永久失败（主服务器还是工作者？）
- en: all servers fail simultaneously -- power/earthquake
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有服务器同时失败 -- 电源/地震
- en: 'bad case: crash mid-way through complex operation'
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 糟糕的情况：在复杂操作中间崩溃
- en: what happens if we fail in the middle of map or reduce?
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在 map 或 reduce 中间失败会发生什么？
- en: bugs -- but not in this course
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误 -- 但不在这门课上
- en: what happens when bug in map or reduce?
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 map 或 reduce 中出现 bug 时会发生什么？
- en: same bug in Map over and over?
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Map 中反复出现相同的 bug？
- en: management software kills app
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理软件终止应用
- en: malice -- but not in this course
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恶意 -- 但不在这门课上
- en: Tools for dealing with faults?
  id: totrans-218
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 处理故障的工具？
- en: '**retry** -- e.g. if packet is lost, or server crash+restart'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重试** -- 例如如果数据包丢失，或服务器崩溃+重启'
- en: packets (TCP) and MapReduce jobs
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据包（TCP）和 MapReduce 作业
- en: 'may execute MapReduce job twice: must account for this'
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能会执行 MapReduce 作业两次：必须考虑这一点
- en: '**replicate** -- e.g. if one server or part of net has failed'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复制** -- 例如如果一个服务器或网络的一部分失败了'
- en: next labs
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下一个实验室
- en: '**replace** -- for long-term health'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**替换** -- 为了长期健康'
- en: e.g., worker
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，工作者
- en: Retry jobs
  id: totrans-226
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 重试作业
- en: 'network falure: oops execute job twice'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络故障：糟糕的情况下执行两次作业
- en: ok for MapReduce, because `map()/reduce()` produces same output
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 MapReduce 来说没问题，因为 `map()/reduce()` 产生相同的输出
- en: '`map()/reduce()` are "functional" or "deterministic"'
  id: totrans-229
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`map()/reduce()` 是“功能性”的或“确定性”的'
- en: how about intermediate files?
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中间文件怎么样？
- en: atomic rename
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原子重命名
- en: 'worker failure: may have executed job or not'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作者故障：可能已执行作业，也可能未执行
- en: so, we may execute job more than once!
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所以，我们可能会执行作业多次！
- en: but ok for MapReduce as long as `map()` and `reduce()` functions are deterministic
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是对于 MapReduce 来说没问题，只要 `map()` 和 `reduce()` 函数是确定性的
- en: what would make `map() or reduce()` not deterministic?
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么会使 `map() 或 reduce()` 不确定？
- en: is executing a request twice in general ok?
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常执行请求两次可以吗？
- en: no. in fact, often not.
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不。实际上，通常不会。
- en: unhappy customer if you execute one credit card transaction several times
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你执行一笔信用卡交易多次，客户会不高兴
- en: adding servers
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加服务器
- en: easy in MapReduce -- just tell master
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 MapReduce 中很容易 -- 只需告诉主节点
- en: hard in general
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常很难
- en: server may have lost state (need to get new state)
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可能已经丢失状态（需要获取新状态）
- en: server may have rebooted quickly
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可能已经快速重新启动
- en: may need to recognize that to bring server up to date
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能需要认识到这一点以使服务器更新
- en: server may have a new role after reboot (e.g., not the primary)
  id: totrans-245
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器在重新启动后可能会有新角色（例如，不是主服务器）
- en: these harder issues you would have to deal with to make the MapReduce master
    fault tolerant
  id: totrans-246
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些更难的问题你将不得不处理以使 MapReduce 主节点具有容错能力
- en: topic of later labs
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以后实验室的主题
- en: Lab 1 code
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实验 1 代码
- en: 'The lab 1 app (see `main/wc.go`):'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 实验 1 的应用（见 `main/wc.go`）：
- en: stubs for `map() and reduce()`
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`map() 和 reduce()` 的存根'
- en: you fill them out to implement word count (wc)
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你填写它们来实现单词计数（wc）
- en: how would you write grep?
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你会怎样写 grep？
- en: 'The lab 1 sequential implementation (see `mapreduce/mapreduce.go`):'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 实验 1 的顺序实现（见 `mapreduce/mapreduce.go`）：
- en: 'demo: `run wc.go`'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演示：`run wc.go`
- en: code walk through start with `RunSingle()`
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码审查从 `RunSingle()` 开始
- en: 'The lab 1 worker (see `mapreduce/worker.go`):'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 实验 1 的工作者（见 `mapreduce/worker.go`）：
- en: the remote procedure calls (RPCs) arguments and replies (see `mapreduce/common.go`).
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程过程调用（RPCs）参数和回复（见 `mapreduce/common.go`）。
- en: Server side of RPC
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RPC 的服务器端
- en: RPC handlers have a particular signature
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RPC 处理程序具有特定的签名
- en: '`DoJob`'
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DoJob`'
- en: '`Shutdown`'
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Shutdown`'
- en: '`RunWorker`'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RunWorker`'
- en: '`rpcs.Register`: register named handlers -- so Call() can find them'
  id: totrans-263
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rpcs.Register`：注册命名处理程序 -- 这样 Call() 可以找到它们'
- en: '`Listen`: create socket on which to listen for RPC requests'
  id: totrans-264
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Listen`：创建用于监听 RPC 请求的套接字'
- en: for distributed implementation, replace "unix" w. "tcp"
  id: totrans-265
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于分布式实现，将 "unix" 替换为 "tcp"
- en: replace "me" with a `<dns,port>` tuple name
  id: totrans-266
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用 `<dns,port>` 元组名称替换 "me"
- en: '`ServeConn`: runs in a separate thread (why?)'
  id: totrans-267
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ServeConn`：在单独的线程中运行（为什么？）'
- en: serve RPC concurrently
  id: totrans-268
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并发地提供 RPC
- en: a RPC may block
  id: totrans-269
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RPC 可能会阻塞
- en: Client side of RPC
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RPC 的客户端
- en: '`Register()`'
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Register()`'
- en: '`call()` (see `common.go`)'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`call()`（见 `common.go`）'
- en: make an RPC
  id: totrans-273
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发起一个 RPC
- en: lab code dials for each request
  id: totrans-274
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验代码为每个请求拨号
- en: typical code uses a network connection for several requests
  id: totrans-275
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 典型的代码使用网络连接进行多个请求
- en: but, real must be prepared to redial anyway
  id: totrans-276
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是，实际上必须准备好重新拨号
- en: a network connection failure, doesn't imply a server failure!
  id: totrans-277
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络连接失败，并不意味着服务器失败！
- en: we also do this to introduce failure scenarios easily
  id: totrans-278
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还这样做是为了轻松地引入失败场景
- en: intermittent network failures
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 间歇性的网络故障
- en: just loosing the reply, but not the request
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只是丢失了回复，但没有请求
- en: The lab 1 master (see mapreduce/master.go)
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 实验 1 的主节点（见 `mapreduce/master.go`）
- en: You write it
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你写它
- en: You will have to deal with distributing jobs
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将不得不处理分发作业
- en: You will have to deal with worker failures
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将不得不处理工人的失败。
