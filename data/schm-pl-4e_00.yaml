- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Scheme was introduced in 1975 by Gerald J. Sussman and Guy L. Steele Jr. [[28](bibliography.html#g246),[29](bibliography.html#g247)],
    and was the first dialect of Lisp to fully support lexical scoping, first-class
    procedures, and continuations. In its earliest form it was a small language intended
    primarily for research and teaching, supporting only a handful of predefined syntactic
    forms and procedures. Scheme is now a complete general-purpose programming language,
    though it still derives its power from a small set of key concepts. Early implementations
    of the language were interpreter-based and slow, but some current Scheme implementations
    boast sophisticated compilers that generate code on par with code generated by
    the best optimizing compilers for lower-level languages such as C and Fortran.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Scheme于1975年由Gerald J. Sussman和Guy L. Steele Jr.引入[[28](bibliography.html#g246),[29](bibliography.html#g247)]，是第一个完全支持词法作用域、一级过程和延续的Lisp方言。最初，它是一个小型语言，主要用于研究和教学，仅支持少量预定义的句法形式和过程。Scheme现在是一种完整的通用编程语言，尽管它仍从一小组关键概念中获得力量。该语言的早期实现是基于解释器的，速度较慢，但一些当前的Scheme实现拥有生成代码与C和Fortran等低级语言最佳优化编译器生成的代码相媲美的复杂编译器。
- en: This book is intended to provide an introduction to the Scheme programming language
    but not an introduction to programming in general. The reader is expected to have
    had some experience programming and to be familiar with terms commonly associated
    with computers and programming languages. Readers unfamiliar with Scheme or Lisp
    should also consider reading *The Little Schemer* [[13](bibliography.html#g231)]
    to become familiar with the concepts of list processing and recursion. Readers
    new to programming should begin with an introductory text on programming.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在介绍Scheme编程语言，而不是一般编程的介绍。读者应具有一定的编程经验，并熟悉与计算机和编程语言常见相关术语。对于不熟悉Scheme或Lisp的读者，还应考虑阅读*The
    Little Schemer*[[13](bibliography.html#g231)]，以熟悉列表处理和递归的概念。对编程新手应从编程入门文本开始。
- en: Scheme has been standardized both formally and informally. The *IEEE Standard
    for the Scheme Programming Language* [[18](bibliography.html#g236)], describes
    a formal ANSI/IEEE Standard for Scheme but dates back to 1991. A related series
    of reports, the "Revised Reports on the Algorithmic Language Scheme," document
    an evolving informal standard that most implementations support. The current report
    in this series is the "Revised⁶ Report on the Algorithmic Language Scheme" [[24](bibliography.html#g242)],
    which was completed in 2007.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Scheme已经得到正式和非正式的标准化。*Scheme编程语言的IEEE标准*[[18](bibliography.html#g236)]描述了一个正式的ANSI/IEEE标准的Scheme，但可以追溯到1991年。一系列相关报告，“算法语言Scheme的修订报告”，记录了大多数实现支持的演变中的非正式标准。该系列中的当前报告是“算法语言Scheme的修订⁶报告”[[24](bibliography.html#g242)]，于2007年完成。
- en: This book covers the language of the Revised⁶ Report. It is not intended to
    supplant the Revised⁶ Report but rather to provide a more comprehensive introduction
    and reference manual for the language, with more explanatory text and examples,
    suitable more for users than for implementors. Features specific to particular
    implementations of Scheme are not included. In particular, features specific to
    the author's Chez Scheme and Petite Chez Scheme implementations are described
    separately in the *Chez Scheme User's Guide* [[9](bibliography.html#g227)]. On
    the other hand, no book on Scheme would be complete without some coverage of the
    interactive top level, since nearly every Scheme system supports interactive use
    in one form or another, even though the behavior is not standardized by the Revised⁶
    Report. Chapters 2 and 3 are thus written assuming that the reader has available
    a Scheme implementation that supports an interactive top level, with behavior
    consistent with the description of the top-level environment in earlier reports
    and the IEEE/ANSI standard.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书涵盖了修订⁶报告的语言。它并不意图取代修订⁶报告，而是为语言提供更全面的介绍和参考手册，其中包含更多的解释性文本和示例，更适合用户而不是实现者。不包括特定于Scheme特定实现的功能。特别是，作者的Chez
    Scheme和Petite Chez Scheme实现的特定功能在*Chez Scheme用户指南*中单独描述[[9](bibliography.html#g227)]。另一方面，没有一本关于Scheme的书籍会完整，而不涵盖交互式顶层，因为几乎每个Scheme系统都支持以某种形式进行交互使用，即使行为不受修订⁶报告的标准化。因此，第2章和第3章的撰写假定读者有一个支持交互式顶层的Scheme实现，其行为与早期报告和IEEE/ANSI标准中对顶层环境的描述一致。
- en: A large number of small- to medium-sized examples are spread throughout the
    text, and one entire chapter is dedicated to the presentation of a set of longer
    examples. Many of the examples show how a standard Scheme syntactic form or procedure
    might be implemented; others implement useful extensions. All of the examples
    can be entered directly from the keyboard into an interactive Scheme session.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 散布在全文中的许多小到中等规模的示例，以及一个完整的章节专门介绍了一组更长的示例。许多示例展示了如何实现标准的 Scheme 语法形式或过程；其他示例实现了有用的扩展。所有示例都可以直接从键盘输入到交互式
    Scheme 会话中。
- en: This book is organized into twelve chapters, plus back matter. Chapter [1](intro.html#g0)
    describes the properties and features of Scheme that make it a useful and enjoyable
    language to use. Chapter [1](intro.html#g0) also describes Scheme's notational
    conventions and the typographical conventions employed in this book.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书分为十二章，还有附录部分。第[1](intro.html#g0)章描述了使 Scheme 成为一种有用且令人愉快的语言的特性和特点。第[1](intro.html#g0)章还描述了
    Scheme 的符号约定以及本书中采用的排版约定。
- en: Chapter [2](start.html#g4) is an introduction to Scheme programming for the
    novice Scheme programmer that leads the reader through a series of examples, beginning
    with simple Scheme expressions and working toward progressively more difficult
    ones. Each section of Chapter [2](start.html#g4) introduces a small set of related
    features, and the end of each section contains a set of exercises for further
    practice. The reader will learn the most from Chapter [2](start.html#g4) by sitting
    at the keyboard and typing in the examples and trying the exercises.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第[2](start.html#g4)章是为初学 Scheme 编程的新手 Scheme 程序员而编写的介绍，引导读者通过一系列示例，从简单的 Scheme
    表达式开始，逐渐向更难的表达式发展。第[2](start.html#g4)章的每个部分介绍了一小组相关特性，每个部分的末尾都包含了一组练习以供进一步练习。读者通过亲自动手输入示例并尝试练习，可以从第[2](start.html#g4)章中学到最多。
- en: Chapter [3](further.html#g49) continues the introduction but covers more advanced
    features and concepts. Even readers with prior Scheme experience may wish to work
    through the examples and exercises found there.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第[3](further.html#g49)章延续了介绍，但涵盖了更高级的特性和概念。即使是有 Scheme 经验的读者也可能希望通过那里找到的示例和练习进行学习。
- en: Chapters [4](binding.html#g88) through [11](exceptions.html#g147) make up the
    reference portion of the text. They present each of Scheme's primitive procedures
    and syntactic forms in turn, grouping them into short sections of related procedures
    and forms. Chapter [4](binding.html#g88) describes operations for creating procedures
    and variable bindings; Chapter [5](control.html#g96), program control operations;
    Chapter [6](objects.html#g106), operations on the various object types (including
    lists, numbers, and strings); Chapter [7](io.html#g121), input and output operations;
    Chapter [8](syntax.html#g133), syntactic extension; Chapter [9](records.html#g138),
    record-type definitions; Chapter [10](libraries.html#g142), libraries and top-level
    programs; and Chapter [11](exceptions.html#g147), exceptions and conditions.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第[4](binding.html#g88)章至第[11](exceptions.html#g147)章构成了本文的参考部分。它们依次介绍了 Scheme
    的每个原始过程和语法形式，将它们分组为一组相关的短节。第[4](binding.html#g88)章描述了用于创建过程和变量绑定的操作；第[5](control.html#g96)章，程序控制操作；第[6](objects.html#g106)章，各种对象类型的操作（包括列表、数字和字符串）；第[7](io.html#g121)章，输入和输出操作；第[8](syntax.html#g133)章，语法扩展；第[9](records.html#g138)章，记录类型定义；第[10](libraries.html#g142)章，库和顶层程序；以及第[11](exceptions.html#g147)章，异常和条件。
- en: Chapter [12](examples.html#g151) contains a collection of example procedures,
    libraries, and programs, each with a short overview, some examples of its use,
    the implementation with brief explanation, and a set of exercises for further
    work. Each of these programs demonstrates a particular set of features, and together
    they illustrate an appropriate style for programming in Scheme.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第[12](examples.html#g151)章包含了一系列示例过程、库和程序，每个都有简短的概述、其使用示例、实现及简要解释，以及一组进一步工作的练习。这些程序中的每一个都展示了一组特定的特性，它们共同展示了在
    Scheme 中编程的适当风格。
- en: Following Chapter [12](examples.html#g151) are bibliographical references, answers
    to selected exercises, a detailed description of the formal syntax of Scheme programs
    and data, a concise summary of Scheme syntactic forms and procedures, and the
    index. The summary of forms and procedures is a useful first stop for programmers
    unsure of the structure of a syntactic form or the arguments expected by a primitive
    procedure. The page numbers appearing in the summary of forms and procedures and
    the italicized page numbers appearing in the index indicate the locations in the
    text where forms and procedures are defined.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 [12](examples.html#g151) 章之后是参考文献、选定练习的答案、Scheme 程序和数据的正式语法的详细描述、Scheme 语法形式和过程的简要摘要，以及索引。形式和过程摘要是程序员们不确定一个语法形式的结构或者原始过程所需参数的结构的有用首选。形式和过程摘要中出现的页码以及索引中出现的斜体页码表示文本中定义形式和过程的位置。
- en: Because the reference portion describes a number of aspects of the language
    not covered by the introductory chapters along with a number of interesting short
    examples, most readers will find it profitable to read through most of the material
    to become familiar with each feature and how it relates to other features. Chapter [6](objects.html#g106)
    is lengthy, however, and may be skimmed and later referenced as needed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 因为参考部分描述了语言的许多方面，这些方面在引言章节中未涉及，并且提供了许多有趣的简短示例，大多数读者会发现阅读大部分材料是有益的，以熟悉每个特性以及其与其他特性的关系。然而，第
    [6](objects.html#g106) 章比较冗长，可以略读，以后如有需要可以查阅。
- en: An online version of this book is available at *http://www.scheme.com/tspl/*.
    The summary of forms and index in the online edition include page numbers for
    the printed version and are thus useful as searchable indexes.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的在线版本可在 *http://www.scheme.com/tspl/* 上获得。在线版中的形式摘要和索引包括印刷版本的页码，因此可作为可搜索的索引。
- en: '*About the illustrations:* The cover illustration and the illustration at the
    front of each chapter are algorithmic line fields created by artist Jean-Pierre
    Hébert, based on an idea inspired by the writings of John Cage. Each line field
    is created by the composition of any number of grids of parallel lines. The grids
    are regular, but they are not. For instance, the lines are of irregular length,
    which creates ragged edges. Their tone and thickness vary slightly. They are not
    exactly equidistant. They intersect with each other at a certain angle. When this
    angle is small, patterns of interference develop. The lines are first steeped
    into various scalar fields that perturb their original straight shape, then projected
    on the plane of the paper. Masks introduce holes in some layers. For the cover
    illustration, the grids are colored in different hues.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*关于插图：* 封面插图和每个章节开头的插图都是由艺术家让-皮埃尔·埃贝尔创作的算法线场，灵感来自约翰·凯奇的著作。每个线场是通过任意数量的平行线网格的组合而创建的。这些网格是规则的，但也不是。例如，线的长度不规则，导致了不整齐的边缘。它们的色调和粗细略有变化。它们不是完全等距的。它们在一定角度上相交。当这个角度很小时，干涉图案就会产生。线首先被浸入各种标量场中，扭曲其原始的直线形状，然后投影在纸张的平面上。蒙版在一些层次上引入了孔洞。对于封面插图，网格被着以不同的色调。'
- en: All the images are created by a single Scheme program that makes most of the
    decisions, based heavily on chance. The artist controls only canvas size, aspect
    ratio, the overall palette of colors, and levels of chance and fuzziness. The
    task of the artist is to introduce just enough chance at the right place so that
    the results are at the same time surprising, interesting, and in line with the
    artist's sense of aesthetics. This is a game of uncertainty, chaos, and harmony.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的图片都是由一个单独的 Scheme 程序创建的，该程序主要依赖于偶然性做出决定。艺术家只控制画布大小、长宽比、整体色板以及偶然性和模糊度的水平。艺术家的任务是在正确的位置引入足够多的偶然性，以便结果既令人惊讶、有趣，又符合艺术家的审美感。这是一场不确定性、混沌和和谐的游戏。
- en: '*Acknowledgments:* Many individuals contributed in one way or another to the
    preparation of one or more editions of this book, including Bruce Smith, Eugene
    Kohlbecker, Matthias Felleisen, Dan Friedman, Bruce Duba, Phil Dybvig, Guy Steele,
    Bob Hieb, Chris Haynes, Dave Plaisted, Joan Curry, Frank Silbermann, Pavel Curtis,
    John Wait, Carl Bruggeman, Sam Daniel, Oscar Waddell, Mike Ashley, John LaLonde,
    John Zuckerman, John Simmons, Bob Prior, Bob Burger, and Aziz Ghuloum. Many others
    have offered minor corrections and suggestions. Oscar Waddell helped create the
    typesetting system used to format the printed and online versions of this book.
    A small amount of text and a few examples have been adapted from the Revised⁶
    Report for this book, for which credit goes to the editors of that report and
    many others who contributed to it. Finally and most importantly, my wife, Susan
    Dybvig, suggested that I write this book in the first place and lent her expertise
    and assistance to the production and publication of this and the previous editions.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*致谢：* 许多人以各种方式为本书的一版或多版的准备做出了贡献，包括布鲁斯·史密斯，尤金·科尔贝克，马蒂亚斯·费勒森，丹·弗里德曼，布鲁斯·杜巴，菲尔·戴比维格，盖伊·斯蒂尔，鲍勃·希布，克里斯·海恩斯，戴夫·普莱斯特德，琼·库里，弗兰克·席尔伯曼，帕维尔·柯蒂斯，约翰·韦特，卡尔·布鲁格曼，萨姆·丹尼尔，奥斯卡·沃德尔，迈克·阿什利，约翰·拉隆德，约翰·祖克曼，约翰·西蒙斯，鲍勃·普赖尔，鲍勃·伯格，以及阿齐兹·古卢姆。
    还有许多其他人提供了小的修正和建议。 奥斯卡·沃德尔帮助创建了用于格式化本书印刷版和在线版本的排版系统。 少量文本和一些示例已从《修订⁶报告》中改编为本书，对于这本报告的编辑和为其做出贡献的许多其他人，我们表示感谢。
    最后但最重要的是，我的妻子苏珊·戴比维格建议我首先写这本书，并在本书和以前版本的制作和出版过程中提供了她的专业知识和帮助。'
