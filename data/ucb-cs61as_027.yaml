- en: Variables and Environments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 变量和环境
- en: Defining Variables
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义变量
- en: We use `define` to assign values to variables.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`define`来为变量赋值。
- en: 'For example, `(define x 2)` assigns the value `2` to `x`:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`(define x 2)`将值`2`赋给`x`：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After calling `(define x 2)`, we say that `x` is *bound* to `2`. Variable bindings
    are stored in *environments*, which we'll talk more about in Unit 3.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在调用`(define x 2)`之后，我们说`x`被*绑定*到`2`。变量绑定存储在*环境*中，我们将在第三单元更详细地讨论。
- en: Check for Understanding
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查理解
- en: 'Suppose the following is typed into the Racket interpreter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 假设以下内容被输入到Racket解释器中：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: What would `area` evaluate to? What would `circumference` evaluate to?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`area`会评估为什么？`circumference`会评估为什么？'
