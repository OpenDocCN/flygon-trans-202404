- en: 'ユースケース: Todoアプリ'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用例：Todo应用
- en: 原文：[https://jsprimer.net/use-case/todoapp/](https://jsprimer.net/use-case/todoapp/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://jsprimer.net/use-case/todoapp/](https://jsprimer.net/use-case/todoapp/)
- en: ここではブラウザで動作するウェブアプリケーション（以下アプリ）のユースケースとして、Todoアプリを作成していきます。 ここで作成するTodoアプリは、タスクを入力し、そのタスクの完了状態をチェックボックスで管理するというアプリです。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将创建一个在浏览器中运行的Web应用程序（以下简称应用）的用例，即Todo应用。 我们将创建的Todo应用允许输入任务，并通过复选框管理任务的完成状态。
- en: '[Ajax通信](../ajaxapp/)のユースケースではGitHubからデータを取得して表示するだけであったため、状態を管理する部分はほとんどありませんでした。
    しかし、このTodoアプリはタスクの状態管理をするため、アプリとしての状態を管理する必要があります。 このユースケースを通して、どのように状態を管理し、表示や処理を変更するかといったアプリを作るにあたり必要になる設計や考え方について見ていきます。'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在[Ajax通信](../ajaxapp/)的用例中，仅从GitHub获取数据并显示，因此几乎没有管理状态的部分。 但是，这个Todo应用需要管理任务的状态，因此需要管理应用的状态。
    通过这个用例，我们将看到如何管理状态，以及创建应用所需的设计和思维方式，包括如何更改显示和处理。
- en: 作成するアプリは次の要件を満たすものとします。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 创建的应用需满足以下要求：
- en: Todoアイテムを追加できる
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以添加Todo项目
- en: Todoアイテムの完了状態を更新できる
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以更新Todo项目的完成状态
- en: Todoアイテムを削除できる
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以删除Todo项目
- en: '[](#summary)*目次*'
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#summary)*目录*'
- en: '*### [](#entrypoint)*[エントリーポイント](entrypoint/)*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*### [](#entrypoint)*[入口点](entrypoint/)*'
- en: '*HTMLとJavaScriptモジュールを使って、アプリケーションで一番最初に呼び出されるエントリーポイントを作成します。'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用HTML和JavaScript模块创建应用程序中最初调用的入口点。'
- en: '[](#app-structure)*[アプリの構成要素](app-structure/)*'
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#app-structure)*[应用的结构要素](app-structure/)*'
- en: '*これから実装するTodoアプリの機能と構成要素を見ていきます。'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们将查看即将实现的Todo应用的功能和组件。'
- en: '[](#form-event)*[Todoアイテムの追加を実装する](form-event/)*'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#form-event)*[实现Todo项目的添加](form-event/)*'
- en: '*TodoアプリへTodoアイテムを追加するフォームを作成していきます。フォームに入力された内容と送信イベントをどのようにハンドリングしていくかを見ていきます。'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*创建一个表单，用于向Todo应用添加Todo项目。我们将看到如何处理输入内容和提交事件。'
- en: '[](#event-model)*[イベントとモデル](event-model/)*'
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#event-model)*[事件和模型](event-model/)*'
- en: '*操作と更新が密結合になってしまい変更がしにくくなる問題を「モデル」と「イベント」を用いて改善する方法を見ていきます。'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们将探讨如何使用“模型”和“事件”来改善操作和更新之间紧密耦合导致难以更改的问题。'
- en: '[](#update-delete)*[Todoアイテムの更新と削除を実装する](update-delete/)*'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#update-delete)*[实现Todo项目的更新和删除](update-delete/)*'
- en: '*Todoアプリの残りの機能である「Todoアイテムの更新」と「Todoアイテムの削除」を実装していきます。'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们将实现Todo应用的剩余功能，即“更新Todo项目”和“删除Todo项目”。'
- en: '[](#final)*[Todoアプリのリファクタリング](final/)*'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#final)*[Todo应用的重构](final/)*'
- en: '*1つのファイルに処理が集中するとメンテナンス性が低下するため、Todoアプリの表示要素をコンポーネントという単位に分割するリファクタリングをしていきます。*******'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*由于将处理集中在一个文件中会降低可维护性，因此我们将对Todo应用的显示元素进行重构，将其分割为组件。*******'
