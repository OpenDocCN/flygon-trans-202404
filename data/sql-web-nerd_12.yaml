- en: '| [![Out for the evening in San Diege, California.](../Images/b87ecea6de3f3d6f8363e2db5ce4a003.jpg)](/http://philip.greenspun.com/images/pcd1647/out-for-the-evening-18.tcl)
    |'
  id: totrans-0
  prefs: []
  type: TYPE_TB
  zh: '| [![在加利福尼亚州圣迭戈度过的晚上。](../Images/b87ecea6de3f3d6f8363e2db5ce4a003.jpg)](/http://philip.greenspun.com/images/pcd1647/out-for-the-evening-18.tcl)
    |'
- en: Dates
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日期
- en: part of [SQL for Web Nerds](index.html) by [Philip Greenspun](http://philip.greenspun.com/),
    updated June 13, 2003 |
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 部分来自[SQL for Web Nerds](index.html)的内容，作者是[Philip Greenspun](http://philip.greenspun.com/)，更新于2003年6月13日。
- en: '* * *'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[![Harry and Katerina''s wedding.  Lake Placid.  September 4, 1999.](../Images/3598f2e8670917b09f206c747027750b.jpg)](/http://philip.greenspun.com/images/pcd2898/harry-and-katerina-wedding-81.tcl)
    When representing date-time information in Oracle it becomes absolutely critical
    to know with which version of the Oracle server you are working. From version
    9 onwards it is possible to represent points in time and time intervals using
    ANSI SQL data types such as `timestamp` and `interval`. Earlier versions of Oracle
    represented points in time with the `date` datatype, which is precise to within
    one second, and time intervals as numbers (where 1 = one day).'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[![哈利和卡特琳娜的婚礼。普莱西德湖。1999年9月4日。](../Images/3598f2e8670917b09f206c747027750b.jpg)](/http://philip.greenspun.com/images/pcd2898/harry-and-katerina-wedding-81.tcl)
    在Oracle中表示日期时间信息时，非常重要的是要知道你正在使用的Oracle服务器版本。从第9版开始，可以使用ANSI SQL数据类型如`timestamp`和`interval`来表示时间点和时间间隔。较早版本的Oracle使用`date`数据类型表示时间点，精确到一秒，并将时间间隔表示为数字（其中1
    = 一天）。'
- en: We strongly recommend that you use the newly available ANSI data types when
    building new applications. These are cleaner and more powerful than the older
    Oracle-specific way of doing things and further will make it easier to port your
    application to another RDBMS if necessary.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈建议在构建新应用程序时使用新提供的ANSI数据类型。这些比较干净且更强大，比较老式的Oracle特定方式更容易移植应用程序到其他RDBMS（关系数据库管理系统）。
- en: If you are stuck using an older version of Oracle or are writing queries and
    transactions to an older data model, please visit [http://philip.greenspun.com/sql/dates-pre-9](/sql/dates-pre-9).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你被迫使用较旧版本的Oracle或者在为较旧的数据模型编写查询和事务，请访问[http://philip.greenspun.com/sql/dates-pre-9](/sql/dates-pre-9)。
- en: Querying by Date
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按日期查询
- en: 'Suppose that we have the following table to record user registrations:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有以下表来记录用户注册情况：
- en: '[PRE0]'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let''s query for people who registered during the last day:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查询注册在最后一天的人：
- en: '[PRE1]'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Note how the registration date comes out in a non-standard format that won''t
    sort lexicographically and that does not have a full four digits for the year.
    You should curse your database administrator at this point for not configuring
    Oracle with a more sensible default. You can fix the problem for yourself right
    now, however:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 注意注册日期以非标准格式显示，无法按字典顺序排序，并且年份不是四位数。此时，你应该责备你的数据库管理员没有以更合理的默认设置配置Oracle。不过，你现在可以自己解决这个问题：
- en: '[PRE2]'
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can query for shorter time intervals:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查询更短的时间间隔：
- en: '[PRE3]'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can be explicit about how you''d like the timestamps formatted:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以明确指定时间戳的格式：
- en: '[PRE4]'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Oops. Oracle pads some of these fields by default so that reports will be lined
    up and neat. We''ll have to trim the strings ourselves:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 糟糕。Oracle默认会填充某些字段，以便报告能够整齐排列。我们必须自己修剪字符串：
- en: '[PRE5]'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Some Very Weird Things
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一些非常奇怪的事情
- en: One reason that Oracle may have resisted ANSI date-time datatypes and arithmetic
    is that they can make life very strange for the programmer.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle可能抵制ANSI日期时间数据类型和算术的一个原因是，它们可能让程序员的生活变得非常奇怪。
- en: '[PRE6]'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Some Profoundly Painful Things
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一些极其痛苦的事情
- en: Calculating time intervals between rows in a table can be very painful because
    there is no way in standard SQL to refer to "the value of this column from the
    previous row in the report". You can do this easily enough in an imperative computer
    language, e.g., C#, Java, or Visual Basic, that is reading rows from an SQL database
    but doing it purely in SQL is tough.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在表中计算行之间的时间间隔可能非常痛苦，因为标准SQL中没有办法引用“报告中上一行的这一列的值”。在命令式计算机语言（如C＃，Java或Visual Basic）中，读取来自SQL数据库的行时可以很容易地做到这一点，但在纯SQL中做到这一点很困难。
- en: Let's add a few more rows to our users table to see how this works.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们向用户表中再添加几行，看看这是如何工作的。
- en: '[PRE7]'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Suppose that we''re interested in the average length of time between registrations.
    With so few rows we could just query all the data out and eyeball it:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们对注册之间的平均时间长度感兴趣。由于行数很少，我们可以将所有数据查询出来并直接查看：
- en: '[PRE8]'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If we have a lot of data, however, we'll need to do a self-join.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果我们有大量数据，我们需要进行自连接。
- en: '[PRE9]'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Notice that to find the "next row" for the pairing we are using the `user_id`
    column, which we know to be sequential and unique, rather than the registration_date
    column, which may not be unique because two users could register at exactly the
    same time.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，为了找到配对的“下一行”，我们使用了 `user_id` 列，我们知道它是连续且唯一的，而不是使用 registration_date 列，因为两个用户可能恰好在同一时间注册。
- en: 'Now that we have information from adjacent rows paired up in the same report
    we can begin to calculate intervals:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们从同一报告中的相邻行的信息开始配对，可以开始计算间隔了：
- en: '[PRE10]'
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The interval for each row of the report has come back as days, hours, minutes,
    and seconds. At this point you''d expect to be able to average the intervals:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 报告的每一行的间隔都返回为天、小时、分钟和秒。在这一点上，你期望能够对间隔进行平均计算：
- en: '[PRE11]'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Oops. Oracle isn't smart enough to aggregate time intervals. And sadly there
    doesn't seem to be an easy way to turn a time interval into a number of seconds,
    for example, that would be amenable to averaging. If you figure how out to do
    it, please let me know!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 糟糕。Oracle 不够聪明，不能聚合时间间隔。而且可悲的是，似乎没有一种简单的方法将时间间隔转换为秒数，例如，适合平均计算。如果你找到了解决方法，请告诉我！
- en: 'Should we give up? If you have a strong stomach you can convert the timestamps
    to old-style Oracle dates through character strings before creating the intervals.
    This will give us a result as a fraction of a day:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该放弃吗？如果你有很强的胃口，你可以在创建间隔之前将时间戳转换为旧式的 Oracle 日期字符。这将给我们一个作为一天的一部分的结果：
- en: '[PRE12]'
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If we''re going to continue using this ugly query we ought to create a view:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要继续使用这个丑陋的查询，我们应该创建一个视图：
- en: '[PRE13]'
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now we can calculate the average time interval in minutes:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以计算平均时间间隔（以分钟为单位）：
- en: '[PRE14]'
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Reporting
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 报告
- en: 'Here''s an example of using the `to_char` function an GROUP BY to generate
    a report of sales by calendar quarter:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是使用 `to_char` 函数和 GROUP BY 生成销售报告的示例，按日历季度分组：
- en: '[PRE15]'
  id: totrans-45
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This is a hint that Oracle has all kinds of fancy date formats (covered in their
    online documentation). We're using the "Q" mask to get the calendar quarter. We
    can see that this product started shipping in Q2 1998 and that revenues trailed
    off in Q4 1998.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明 Oracle 有各种花哨的日期格式（在他们的在线文档中介绍）。我们使用 “Q” 掩码来获取日历季度。我们可以看到该产品在 1998 年第二季度开始发货，收入在
    1998 年第四季度下降。
- en: More
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多
- en: '["New Datatypes, New Possibilities"](http://www.oreillynet.com/lpt/a/2992)
    by Steven Feuerstein'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '["新数据类型，新可能性"](http://www.oreillynet.com/lpt/a/2992) by Steven Feuerstein'
- en: 'Next: [limits](limits.html)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步：[限制](limits.html)
- en: '* * *'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[philg@mit.edu](http://philip.greenspun.com/)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[philg@mit.edu](http://philip.greenspun.com/)'
- en: Reader's Comments
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 读者评论
- en: 'You state: >> no way in standard SQL to refer to "the value of this column
    from the previous row in the report".'
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你说：>> 在标准 SQL 中没有办法引用“报告中上一行的此列的值”。
- en: ''
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: At least in Oracle 8i SQL, there is a way in to refer to this, I'm sure it isn't
    standard, but useful nonetheless, and so I present it here.
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 至少在 Oracle 8i SQL 中，有一种方式可以引用这个，我肯定它不是标准的，但仍然有用，所以我在这里呈现它。
- en: ''
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: It is called an Analytic Function. There are several, but the one demonstrated
    in this example is LAST_VALUE.
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 它被称为 Analytic Function。有几个，但在这个示例中演示的是 LAST_VALUE。
- en: ''
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: SELECT r1, r2, r2 - r1 reg_gap FROM (SELECT u1.update_date AS r1, LAST_VALUE
    (update_date) OVER (ORDER BY update_date ASC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING)
    AS r2 FROM users u1 WHERE u1.user_id > 100000) WHERE r1 <> r2 ORDER BY r1
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: SELECT r1, r2, r2 - r1 reg_gap FROM (SELECT u1.update_date AS r1, LAST_VALUE
    (update_date) OVER (ORDER BY update_date ASC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING)
    AS r2 FROM users u1 WHERE u1.user_id > 100000) WHERE r1 <> r2 ORDER BY r1
- en: ''
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: From the inside out, I take the update_date from the users table, and using
    the LAST_VALUE function, I ask for the last update_date value, including in the
    window the current row and the next chronologically ordered row.
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从内向外，我从用户表中获取 update_date，并使用 LAST_VALUE 函数，要求包括当前行和下一个按时间顺序排列的行在内的最后一个 update_date
    值。
- en: ''
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I used a higher level query to do the difference simply to avoid repeating the
    long function, but I could have done it in one.
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我使用了更高级别的查询来做差，只是为了避免重复使用冗长的函数，但我本可以一次完成。
- en: ''
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'The results are the same:'
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 结果是一样的：
- en: ''
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '"R1" "R2" "REG_GAP" 11/10/2003 5:19:00 PM 11/10/2003 8:23:24 PM 0.128055555555556
    11/10/2003 8:23:24 PM 11/12/2003 7:53:10 AM 1.47900462962963 11/12/2003 7:53:10
    AM 2/13/2004 3:44:47 PM 93.3275115740741'
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"R1" "R2" "REG_GAP" 11/10/2003 5:19:00 PM 11/10/2003 8:23:24 PM 0.128055555555556
    11/10/2003 8:23:24 PM 11/12/2003 7:53:10 AM 1.47900462962963 11/12/2003 7:53:10
    AM 2/13/2004 3:44:47 PM 93.3275115740741'
- en: ''
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Although, as I said, I'm using 8i so I don't have the interval type.
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 尽管如我所说，我使用的是 8i，所以我没有间隔类型。
- en: ''
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: To find out more about Analytic Functions, check out the Oracle Documentation
    SQL Reference.
  id: totrans-71
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要了解更多关于分析函数的信息，请查看 Oracle 文档 SQL 参考。
- en: ''
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: KSF
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: KSF
- en: ''
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [K SF](/shared/community-member?user_id=261669), September 1, 2004
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [K SF](/shared/community-member?user_id=261669)，2004年9月1日
- en: '"Some Profoundly Painful Things -- Calculating time intervals between rows
    in a table" is very useful, thank you. Some people may need the following technique
    to establish a sequential numeric identifier. (In the example you assume "user_id
    column, which we know to be sequential and unique")'
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"一些深刻痛苦的事情--计算表中行之间的时间间隔"非常有用，谢谢。有些人可能需要以下技术来建立一个顺序数字标识符。（在示例中，你假设了“user_id”列，我们知道它是顺序且唯一的）'
- en: ''
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: declare @tmp (registration_date datetime)
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 声明 @tmp (registration_date datetime)
- en: ''
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: insert @tmp
  id: totrans-80
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 插入 @tmp
- en: ''
  id: totrans-81
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'select identity(int,1,1) as Sequence, registration_date into #x from users
    order by registration_date'
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '从用户中选择 identity(int,1,1) as Sequence, registration_date into #x order by registration_date'
- en: ''
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '... (now use #x instead of users in the example)'
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '...（现在在示例中使用 #x 而不是 users）'
- en: ''
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'drop table #x'
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '删除表 #x'
- en: ''
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Steve Davis](/shared/community-member?user_id=268429), January 29, 2006
  id: totrans-88
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [Steve Davis](/shared/community-member?user_id=268429)，2006年1月29日
- en: 'You say: "Oops. Oracle pads some of these fields by default so that reports
    will be lined up and neat. We''ll have to trim the strings ourselves." Not quite:
    one can use FM modifier in format string to instruct Oracle to trim whitespace
    from resulting string automatically, like this:'
  id: totrans-89
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你说：“糟糕。Oracle 默认填充一些字段，以便报告整齐排列。我们必须自己修剪字符串。” 不完全正确：可以在格式字符串中使用 FM 修饰符指示 Oracle
    自动修剪结果字符串中的空格，就像这样：
- en: ''
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-91
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE16]'
- en: ''
  id: totrans-92
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note that FM is a switch - second FM in format string negates the effect of
    the first.
  id: totrans-93
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请注意，FM 是一个开关 - 格式字符串中的第二个 FM 取消了第一个的效果。
- en: ''
  id: totrans-94
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Vladimir Zakharychev](/shared/community-member?user_id=271169), May 22,
    2006
  id: totrans-95
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [Vladimir Zakharychev](/shared/community-member?user_id=271169)，2006年5月22日
- en: Not pretty at all but it works...
  id: totrans-96
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一点也不漂亮，但它起作用...
- en: ''
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE17]'
- en: ''
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Andre Mostert](/shared/community-member?user_id=271769), June 20, 2006
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [Andre Mostert](/shared/community-member?user_id=271769)，2006年6月20日
- en: 1.Find the first monday on every quater based on date ? **Select Next_day(trunc(to_date(sysdate,'DD-MON-YYYY'),
    'Q')-1,'Monday') from dual**
  id: totrans-101
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 1.根据日期找到每个季度的第一个星期一？**选择 Next_day(trunc(to_date(sysdate,'DD-MON-YYYY'), 'Q')-1,'Monday')
    from dual**
- en: ''
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Mohamed Kaleel](/shared/community-member?user_id=281113), April 13, 2007
  id: totrans-103
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [Mohamed Kaleel](/shared/community-member?user_id=281113)，2007年4月13日
- en: 'Computing number of seconds in an interval:'
  id: totrans-104
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算间隔中的秒数：
- en: ''
  id: totrans-105
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: FUNCTION seconds_from_interval(invInterval IN INTERVAL DAY TO SECOND) RETURN
    NUMBER IS BEGIN
  id: totrans-106
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 函数 seconds_from_interval(invInterval IN INTERVAL DAY TO SECOND) 返回 NUMBER IS
    BEGIN
- en: ''
  id: totrans-107
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: RETURN EXTRACT (DAY FROM invInterval) * 86400 +
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回 EXTRACT (DAY FROM invInterval) * 86400 +
- en: ''
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: EXTRACT (HOUR FROM invInterval) * 3600 +
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从 invInterval 中提取（HOUR）* 3600 +
- en: ''
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: EXTRACT (MINUTE FROM invInterval) * 60 +
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从 invInterval 中提取（MINUTE）* 60 +
- en: ''
  id: totrans-113
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: EXTRACT (SECOND FROM invInterval);
  id: totrans-114
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从 invInterval 中提取（SECOND）;
- en: ''
  id: totrans-115
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: END seconds_from_interval;
  id: totrans-116
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: END seconds_from_interval;
- en: ''
  id: totrans-117
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: -- [Bob Jarvis](/shared/community-member?user_id=288915), March 4, 2008
  id: totrans-118
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: -- [Bob Jarvis](/shared/community-member?user_id=288915)，2008年3月4日
- en: '[Add a comment](/comments/add?page_id=3513)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[添加评论](/comments/add?page_id=3513)'
