- en: defer
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: defer
- en: defer
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: defer
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'The `defer` statement is used to postpone a function call executed immediately
    before the surrounding function returns. The common uses of `defer` include releasing
    resources (i.e., unlock the mutex, close file handle.), do some tracing(i.e.,
    record the running time of function), etc. E.g., an ordinary accessing global
    variable exclusively is like this:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`defer`语句用于延迟在周围函数返回之前立即执行的函数调用。`defer`的常见用途包括释放资源（例如解锁互斥锁，关闭文件句柄），进行一些跟踪（例如记录函数的运行时间）等。例如，一个普通的独占访问全局变量的方式如下：'
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'An equivalent but concise format using `defer` is as follow:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`defer`的等效但更简洁的格式如下：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can see this style is more simpler and easier to comprehend.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到这种风格更简单、更易于理解。
- en: 'The `defer` statements are executed in Last-In-First-Out sequence, which means
    the functions in latter `defer` statements run before their previous buddies.
    Check the following example:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`defer`语句按照后进先出的顺序执行，这意味着后面的`defer`语句中的函数会在前面的函数之前运行。请查看以下示例：'
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The running result is here:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 运行结果如下：
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Although the function in `defer` statement runs very late, the parameters of
    the function are evaluated when the `defer` statement is executed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管`defer`语句中的函数运行得很晚，但函数的参数在执行`defer`语句时就会被评估。
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The running result is here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 运行结果如下：
- en: '[PRE5]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Besides, if the deferred function is a function literal, it can also modify
    the return value:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果延迟执行的函数是函数文字，它也可以修改返回值：
- en: '[PRE6]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The value printed is `1000`, not `100`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 打印的值是`1000`，而不是`100`。
- en: 'References:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料：
- en: '[The Go Programming Language](http://www.gopl.io/);'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[Go编程语言](http://www.gopl.io/)；'
- en: '[Defer, Panic, and Recover](https://blog.golang.org/defer-panic-and-recover).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[延迟、恐慌和恢复](https://blog.golang.org/defer-panic-and-recover)。'
