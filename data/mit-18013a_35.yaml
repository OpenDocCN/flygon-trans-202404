- en: 'Chapter A: Series Summing Magic'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第A章：级数求和魔法
- en: Suppose we have a sum of the form
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个形如
- en: '![](../Images/f084c6353eeba6a43adc2630eba5ed15.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f084c6353eeba6a43adc2630eba5ed15.jpg)'
- en: or more generally
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 或更一般地说
- en: '![](../Images/771173e7e43ba286136bd1bd182ed118.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/771173e7e43ba286136bd1bd182ed118.jpg)'
- en: for
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于
- en: '![](../Images/58ce73c2c216bd9ee0a4ece06f3525f1.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/58ce73c2c216bd9ee0a4ece06f3525f1.jpg)'
- en: and want to find its sum.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 并想找出它的总和。
- en: How should we go about it?
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该怎么做呢？
- en: 'Another question: using the first 5 terms in the series only, or the first
    25, how accurately can we sum it?'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个问题：仅使用系列的前5项，或前25项，我们可以有多精确地求和？
- en: The answer is quite amazing. You can get the answer to better than three decimal
    places from the first five terms alone, and to ten decimal places from the first
    25! And with ridiculous ease. (And you can get further accuracy similarly with
    more terms.)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 答案相当惊人。你仅从前五项就可以得到比三位小数更精确的答案，而从前25项可以得到十位小数的答案！而且轻而易举。（通过增加更多项也可以获得更高的精度。）
- en: How?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如何？
- en: Obviously it is not enough to compute the partial sums of the series up to the
    fifth or twenty fifth term and estimate the series sum as the fifth or twenty
    fifth partial sum. But it is enough to compute these partial sums and estimate
    the sum from them.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，仅计算系列的前五项或前25项的部分和并将系列总和估算为第五项或第25项的部分和是不够的。但计算这些部分和并从中估算总和是足够的。
- en: How?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如何？
- en: You can calculate the partial sums easily with a spreadsheet. (Put A3=A2+1,
    and put B1=your value for x, C1= your y, B3=-(-$B$1)^A3)/(A3)^$C$1 and C3=C2+B3,
    and copy A3, B3 and C3 downward and you will have your partial sums in column
    C.)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用电子表格轻松计算部分和。（将A3=A2+1，B1= x 的值，C1= y 的值，B3=-(-$B$1)^A3)/(A3)^$C$1，以及C3=C2+B3，并向下复制A3、B3和C3，你就能在C列得到你的部分和。）
- en: Once you have them, you will see that the odd partial sums form a decreasing
    sequence, while the even ones form form an increasing one. The sequence sum is
    therefore trapped between any pair of successive values of the partial sums. Thus,
    the odd ones partial sums give upper bounds on the sequence sum, while the even
    ones give lower bounds; these bounds get better and better, though rather slowly
    for x = 1, y = 1.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了它们，你会发现奇数部分和形成一个递减序列，而偶数部分和形成一个递增序列。因此，序列和被任意一对连续部分和的值所夹住。因此，奇数部分和给出了序列和的上限，而偶数部分和给出了下限；尽管对于x
    = 1，y = 1来说这些边界会变得越来越好，但是增长速度相当缓慢。
- en: This means that if you take the average of two adjacent partial sums, you get
    closer to the answer than the worse of them, since one definitely lies above the
    answer and one below.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着如果你取相邻部分和的平均值，你会比它们中较差的更接近答案，因为一个明显在答案上方，一个在下方。
- en: 'The curious property possessed by these particular series, and some others,
    is that after averaging the adjacent partial sums, the same property: that the
    odd terms are decreasing and the even terms increasing still holds true when the
    terms are averages of successive partial sums (or averages of averages, etc.,
    of successive partial sums) just as when they are partial sums.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这些特定系列以及其他一些系列所拥有的奇特属性是，在对相邻部分和求平均后，相同的属性仍然成立：奇数项递减，偶数项递增，就像当项是相邻部分和（或相邻部分和的平均值，等等）的平均值时一样。
- en: This means if you average these you get closer to the answer, and if you continue
    to average, you get still closer, forever, or until you have the answer to the
    accuracy of your machine.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着如果你对这些进行平均，你会更接近答案，如果你继续平均，你会永远更接近，或者直到你的机器的精度达到答案。
- en: How can you do all this averaging? Just enter D3=(C3+C4)/2 and copy D3 into
    the rectangle with corners D3 and AE30.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如何进行所有这些平均计算？只需输入D3=(C3+C4)/2，然后将D3复制到以D3和AE30为角的矩形中即可。
- en: You can estimate the sum from your entries in row 3\. Of course the estimates
    improve as you go downward, but each time you go down one you use one further
    partial sum, so if you only want to use information up to the k-th partial sum,
    you might as well just go across the third row k - 1 steps from row C. (You actually
    can do a bit better, but who cares.)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从第3行的条目中估算总和。当然，随着你向下进行，估计会变得更好，但每次向下移动一次，你就使用一个更进一步的部分和，因此如果你只想使用信息到第k个部分和，你可能就从第C行向右移动k
    - 1步了。 （你实际上可以做得更好，但谁在乎呢。）
- en: You can do slightly better by averaging this result with its predecessor on
    the same diagonal. Thus, instead of using say G3 as estimate, you do a bit better
    by using (G3+F4)/2\. Both of these use information in E5 and hence D6 and C7 which
    uses information from the first five terms in the series only.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过将该结果与同一对角线上的前一个结果平均来稍微提高一点。因此，与其使用 G3 作为估计值，不如使用 (G3+F4)/2\. 这两种方法都利用了
    E5 中的信息，因此 D6 和 C7 中的信息来自于序列中的前五项。
- en: For the original sum, x = 1, y = 1, the best estimates we get using only the
    first k terms in the sequence are as follows
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于原始求和，x = 1，y = 1，在仅使用序列中的前 k 项的情况下，我们得到的最佳估计如下
- en: '| k value | Estimate | Source of estimate | True answer | % error |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| k 值 | 估计值 | 估计值来源 | 真实答案 | % 误差 |'
- en: '| 1 | 1 | C3 | 0.693147... | 44.27 |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 1 | C3 | 0.693147... | 44.27 |'
- en: '| 2 | 0.625 | D3/2+C4/2 | 0.693147 | 9.8316 |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 0.625 | D3/2+C4/2 | 0.693147 | 9.8316 |'
- en: '| 3 | 0.6825 | E3/2+D4/2 | 0.693147 | 0.8147 |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 0.6825 | E3/2+D4/2 | 0.693147 | 0.8147 |'
- en: '| 4 | 0.692708 | F3/2+E4/2 | 0.693147 | 0.0633 |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 0.692708 | F3/2+E4/2 | 0.693147 | 0.0633 |'
- en: '| 5 | 0.693229 | G3/2+F4/2 | 0.693147 | 0.0118 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 0.693229 | G3/2+F4/2 | 0.693147 | 0.0118 |'
- en: In other words, the error in estimating this sum as noted from its first 5 terms
    is on the order of one hundredth of a percent.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，从前 5 项估算这个和的误差约为百分之一百分之一。
- en: When k is larger you are better off with a slightly different estimate (in a
    higher row; that is, sum several terms, then start averaging), and you can get
    accuracy here to one part in 10^(10) looking only at the first 20 terms of the
    sequence.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当 k 较大时，最好使用稍微不同的估计值（在更高的行中；即，对几项求和，然后开始平均），你可以仅查看序列的前 20 项即可将精度提高到 10^(10)
    中的一部分。
- en: Roughly the same or better accuracy appears to be possible for **any** x and
    y in the indicated range.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 粗略地说，在指定范围内，对于**任意** x 和 y，可能都可以获得几乎相同或更好的精度。
- en: '**Exercise A.1 Have a friend pick a value of x and y and compute the first
    five terms in the series whose j-th term is ![](../Images/2698c0e0146e801cb59d83afa039a4ef.jpg).'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习 A.1 让朋友选择一个 x 和 y 的值，并计算序列的前五项，其中第 j 项为 ![](../Images/2698c0e0146e801cb59d83afa039a4ef.jpg)。'
- en: Use the method described above to estimate the sum of the series using only
    this information. Then let the friend determine the sum to high accuracy by using
    the indicated method and a k value of 50, and find the error in your estimate.
    (With any kind of luck your answer will be accurate to better than one part in
    a thousand, and your friend will be willing to bet that you cannot achieve such
    accuracy from only five terms.)**
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上述描述的方法仅使用此信息估算序列的和。然后让朋友使用指定的方法和 k 值为 50 来确定和的高精度，并找出你的估计误差。（如果运气好的话，你的答案将准确到千分之一，你的朋友将愿意打赌你无法仅从五项中获得这样的精度。）**
