- en: Operators - Observable in an Observable
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作符 - 一个可观察对象中的可观察对象
- en: Observable in an Observable
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个可观察对象中的可观察对象
- en: Quite often you come to a point where you start with one type of Observable
    and you want it to turn into something else.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 很多时候，你会遇到这样一种情况，你从一个类型的可观察对象开始，然后希望它变成另一种类型。
- en: Example
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: So here we have a case of starting with values 1,2,3 and wanting those to lead
    up to an ajax call each
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在这里，我们有一个情况，从值1,2,3开始，希望它们分别对应一个ajax调用
- en: --1------2-----3------> --json-- json--json -->
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --1------2-----3------> --json-- json--json -->
- en: The reason for us NOT doing it like this with a `.map()` operator
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不使用`.map()`操作符的原因是
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'is that it would not give the result we want instead the result would be:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 它不会给出我们想要的结果，而是结果会是：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: because we have created a list of observables, so three different streams. The
    `flatMap()` operator however is able to flatten these three streams into one stream
    called a `metastream`. There is however another interesting operator that we should
    be using when dealing with ajax generally and it's called `switchMap()`. Read
    more about it here [Cascading calls](cascading-calls.html)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们已经创建了一个可观察对象列表，所以有三个不同的流。然而，`flatMap()` 操作符能够将这三个流展平成一个称为`metastream`的流。然而，在处理ajax时，还有另一个有趣的操作符我们应该使用，它被称为`switchMap()`。在这里阅读更多关于它的信息
    [级联调用](cascading-calls.html)
