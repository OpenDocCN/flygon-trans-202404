- en: Know Your Next Commit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 知道你的下一个提交
- en: Know Your Next Commit
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 知道你的下一个提交
- en: I tapped three programmers on their shoulders and asked what they were doing.
    "I am refactoring these methods," the first answered. "I am adding some parameters
    to this web action," the second answered. The third answered, "I am working on
    this user story."
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我拍了拍三位程序员的肩膀，问了他们在做什么。“我正在重构这些方法，”第一位回答道。“我正在为这个 Web 操作添加一些参数，”第二位回答道。第三位回答说：“我正在处理这个用户故事。”
- en: It might seem that the first two were engrossed in the details of their work
    while only the third could see the bigger picture, and that the latter had the
    better focus. However, when I asked when and what they would commit, the picture
    changed dramatically. The first two where pretty clear over what files would be
    involved and would be finished within an hour or so. The third programmer answered,
    "Oh, I guess I will be ready within a few days. I will probably add a few classes
    and might change those services in some way."
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 或许看起来前两位程序员沉迷于他们工作的细节，而只有第三位能够看到更大的画面，并且后者拥有更好的专注力。然而，当我问他们什么时候以及他们会提交什么时，情况截然不同。前两位对哪些文件将涉及和大约在一个小时内完成的事情非常清楚。第三位程序员回答说：“哦，我猜我会在几天内准备好。我可能会添加几个类，并可能以某种方式更改那些服务。”
- en: The first two did not lack a vision of the overall goal. They had selected tasks
    they thought led in a productive direction, and could be finished within a couple
    of hours. Once they had finished those tasks, they would select a new feature
    or refactoring to work on. All the code written was thus done with a clear purpose
    and a limited, achievable goal in mind.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 前两位程序员并不缺乏对整体目标的远见。他们选择了他们认为朝着有生产力方向发展并且可以在几个小时内完成的任务。一旦完成了这些任务，他们就会选择一个新的功能或重构来工作。因此，编写的所有代码都是有明确目的和有限、可实现的目标。
- en: The third programmer had not been able to decompose the problem and was working
    on all aspects at once. He had no idea of what it would take, basically doing
    speculative programming, hoping to arrive at some point where he would be able
    to commit. Most probably the code written at the start of this long session was
    poorly matched for the solution that came out in the end.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 第三位程序员无法分解问题，同时处理所有方面。他不知道需要多长时间，基本上是在进行投机性编程，希望最终能够提交。很可能在这次漫长的工作开始时编写的代码与最终出现的解决方案不匹配。
- en: What would the first two programmers do if their tasks took more than two hours?
    After realizing they had taken on too much, they would most likely throw away
    their changes, define smaller tasks, and start over. To keep working would have
    lacked focus and led to speculative code entering the repository. Instead, changes
    would be thrown away, but the insights kept.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前两位程序员的任务超过两个小时，他们会怎么做？在意识到他们承担了太多任务后，他们很可能会放弃更改，定义更小的任务，并重新开始。继续工作将缺乏重点，并导致投机性代码进入存储库。相反，更改将被抛弃，但洞察力将被保留。
- en: The third programmer might keep on guessing and desperately try to patch together
    his changes into something that could be committed. After all, you cannot throw
    away code changes you have done — that would be wasted work, wouldn't it? Unfortunately,
    not throwing the code away leads to slightly odd code that lacks a clear purpose
    entering the repository.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第三位程序员可能会继续猜测，拼命试图将他的更改拼凑成可以提交的东西。毕竟，你不能丢弃已经做过的代码更改——那将是浪费的工作，不是吗？不幸的是，不抛弃代码会导致略显奇怪、缺乏明确目的的代码进入存储库。
- en: 'At some point even the commit-focused programmers might fail to find something
    useful they thought could be finished in two hours. Then, they would go directly
    into speculative mode, playing around with the code and, of course, throwing away
    the changes whenever some insight led them back on track. Even these seemingly
    unstructured hacking sessions have purpose: to learn about the code to be able
    to define a task that would constitute a productive step.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是专注于提交的程序员，有时也可能无法找到他们认为在两小时内可以完成的有用内容。然后，他们会直接进入投机模式，玩弄代码，并在某些想法将他们带回正轨时抛弃更改。即使这些看似无结构的黑客会话也有其目的：了解代码，以便能够定义构成有生产力步骤的任务。
- en: Know your next commit. If you cannot finish, throw away your changes, then define
    a new task you believe in with the insights you have gained. Do speculative experimentation
    whenever needed, but do not let yourself slip into speculative mode without noticing.
    Do not commit guesswork into your repository.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 知道你的下一个提交。如果你无法完成，那么放弃你的更改，然后根据你所获得的见解定义一个你相信的新任务。在必要时进行推测性实验，但不要让自己不知不觉地陷入推测模式。不要将猜测性工作提交到你的仓库中。
- en: By [Dan Bergh Johnsson](http://programmer.97things.oreilly.com/wiki/index.php/Dan_Bergh_Johnsson)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：[丹·伯格·约翰逊](http://programmer.97things.oreilly.com/wiki/index.php/Dan_Bergh_Johnsson)
