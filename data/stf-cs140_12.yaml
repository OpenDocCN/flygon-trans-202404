- en: Deadlock
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 死锁
- en: Lecture Notes for CS 140
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: CS 140课堂笔记
- en: Spring 2014
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 2014年春季
- en: John Ousterhout
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: John Ousterhout
- en: 'Readings for this topic from *Operating Systems: Principles and Practice*:
    Sections 6.1-6.2.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从*操作系统：原理与实践*中关于此主题的阅读：第6.1-6.2节。
- en: 'The deadlock problem:'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 死锁问题：
- en: Threads often need to hold multiple locks at the same time.
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线程经常需要同时持有多个锁。
- en: 'Simple example:'
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单示例：
- en: '[PRE0]'
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Deadlock definition:'
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 死锁定义：
- en: A collection of threads are all blocked.
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一组线程都被阻塞了。
- en: Each thread is waiting for a resource owned by one of the other threads.
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个线程都在等待另一个线程拥有的资源。
- en: Since all threads are blocked, none can release their resources.
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于所有线程都被阻塞，没有一个能释放它们的资源。
- en: 'Four conditions for deadlock:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 死锁的四个条件：
- en: 'Limited access: resources cannot be shared.'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有限访问：资源不能共享。
- en: No preemption. Once given, a resource cannot be taken away.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无抢占。一旦分配，资源就不能被收回。
- en: 'Multiple independent requests: threads don''t ask for resources all at once
    (hold resources while waiting).'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个独立请求：线程不会一次性请求所有资源（在等待时持有资源）。
- en: A circularity in the graph of requests and ownership.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求和所有权图中的循环性。
- en: 'Complexities:'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复杂性：
- en: 'Deadlock can occur over anything that causes waiting:'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 死锁可能发生在任何导致等待的事物上：
- en: Locks
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锁
- en: Network messages
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络消息
- en: Disk drive
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘驱动器
- en: Memory space exhausted
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存空间耗尽
- en: Deadlock can occur over distinct resources (e.g. locks) or pieces of a single
    resource (pages of memory).
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 死锁可能发生在不同的资源（例如锁）或单个资源的部分（内存页）上。
- en: In general, don't know in advance which resources a thread will need.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般来说，不知道线程将需要哪些资源。
- en: 'Solution #1: deadlock detection'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案＃1：死锁检测
- en: Determine when system is deadlocked
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定系统何时发生死锁
- en: Break the deadlock by terminating one of the threads
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过终止其中一个线程来打破死锁
- en: Usually not practical in operating systems, but often used in database systems
    where a transaction can be retried
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在操作系统中通常不实用，但在数据库系统中经常使用，其中事务可以重试
- en: 'Solution #2: deadlock prevention: eliminate one of the necessary conditions
    for deadlock'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案＃2：死锁预防：消除死锁的必要条件之一
- en: Don't allow exclusive access? Not reasonable for most applications.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许独占访问？对大多数应用程序来说不合理。
- en: Create enough resources so that they never run out? May work for things like
    disk space, but locks for synchronization are intentionally limited in number.
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建足够的资源，使其永远不会用完？对于像磁盘空间这样的东西可能有效，但用于同步的锁数量是有意限制的。
- en: Allow preemption? Works for some resources but not others (e.g., can't preempt
    a lock).
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许抢占？对一些资源有效，但对另一些资源无效（例如，无法抢占锁）。
- en: Require threads to request all resources at the same time; either get them all
    or wait for them all.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求线程同时请求所有资源；要么全部获取，要么全部等待。
- en: 'Tricky to implement: must wait for several things without locking any of them.'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现起来有些棘手：必须等待几个事物而不锁定任何一个。
- en: 'Inconvenient for thread: hard to predict needs in advance. May require thread
    to over-allocate just to be safe.'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对线程不方便：难以提前预测需求。可能需要线程过度分配资源以确保安全。
- en: 'Break the circularity: all threads request resources in the same order (e.g.,
    always lock l1 before l2). This is the most common approach used in operating
    systems.'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打破循环性：所有线程按相同顺序请求资源（例如，总是先锁l1再锁l2）。这是操作系统中最常用的方法。
