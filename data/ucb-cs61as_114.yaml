- en: Homework 9
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 作业 9
- en: Template
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模板
- en: 'Type the following command at the terminal to copy the template file to the
    current directory (note the period at the end):'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端上键入以下命令将模板文件复制到当前目录（注意末尾的句点）：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Or you can download the template [here](http://inst.eecs.berkeley.edu/~cs61as/templates/hw9.scm).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 或者您可以在此处下载模板[here](http://inst.eecs.berkeley.edu/~cs61as/templates/hw9.scm)。
- en: Exercise 1
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 1
- en: Suppose that the following definitions have been provided.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 假设已提供以下定义。
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A CS 61AS student, intending to change the value of `x` to a pair with `car`
    equal to `1` and `cdr` equal to `2`, types the expression `(set! (cdr x) y)` instead
    of `(set-cdr! x y)` and gets an error. Explain why.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一位 CS 61AS 学生打算将`x`的值更改为一个`car`等于`1`且`cdr`等于`2`的对，他输入表达式`(set! (cdr x) y)`而不是`(set-cdr!
    x y)`，结果出现错误。请解释原因。
- en: Exercise 2
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 2
- en: '**a)** Provide the arguments for the two `set-cdr!` operations in the blanks
    below to produce the indicated effect on `list1` and `list2`. Do not create any
    new pairs; just rearrange the pointers to the existing ones.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**a)** 在下面的空白处为两个`set-cdr!`操作提供参数，以产生对`list1`和`list2`的指定效果。不要创建任何新对；只重新排列现有对的指针。'
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**b)** After filling in the blanks in the code above and producing the specified
    effect on `list1` and `list2`, draw a box-and-pointer diagram that explains the
    effect of evaluating the expression `(set-car! (cdr list1) (cadr list2))`.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**b)** 在填写上述代码中的空白并对`list1`和`list2`产生指定效果后，绘制一个解释表达式`(set-car! (cdr list1)
    (cadr list2))`求值效果的框和指针图。'
- en: Exercise 3
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 3
- en: Complete exercises [3.13 and 3.14](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.13)
    in Abelson & Sussman.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 完成阿贝尔森和苏斯曼的[3.13和3.14练习](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.13)。
- en: Exercise 4
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 4
- en: Complete exercises [3.16, 3.17](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.16),
    [3.21](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.21),
    [3.25, and 3.27](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.25)
    in Abelson & Sussman.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在阿贝尔森和苏斯曼的[3.16, 3.17](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.16)、[3.21](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.21)、[3.25和3.27](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.25)中完成练习。
- en: '**Note:** You do not need to draw the environment diagram for exercise 3.27;
    use the `trace` procedure to provide the requested explanations. Treat the table
    procedures `lookup` and `insert!` as primitive; i.e. don''t trace the procedures
    they call. Also, assume that those procedures work in constant time. We''re interested
    to know about the number of times `memo-fib` is invoked.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 您不需要为练习 3.27 绘制环境图；使用`trace`过程提供所请求的解释。将表过程`lookup`和`insert!`视为原始；即不要跟踪它们调用的过程。此外，假设这些过程在常数时间内工作。我们对`memo-fib`被调用的次数感兴趣。'
- en: Exercise 5
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 5
- en: Write `vector-append`, which takes two vectors as arguments and returns a new
    vector containing the elements of both arguments, analogous to `append` for lists.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 编写`vector-append`，它接受两个向量作为参数，并返回一个包含两个参数元素的新向量，类似于列表的`append`。
- en: '**Don''t use a list as an intermediate value. (That is, don''t convert the
    vectors to lists at any time!)**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**不要将列表用作中间值。（也就是说，任何时候都不要将向量转换为列表！）**'
- en: Exercise 6
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 6
- en: 'Write `vector-filter`, which takes a predicate function and a vector as arguments,
    and returns a new vector containing only those elements of the argument vector
    for which the predicate returns `true`. The new vector should be exactly big enough
    for the chosen elements. Compare the running time of your program to this version:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 编写`vector-filter`，它接受一个谓词函数和一个向量作为参数，并返回一个仅包含谓词返回`true`的参数向量元素的新向量。新向量应该正好足够容纳所选元素。将您的程序的运行时间与此版本进行比较：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Don''t use a list as an intermediate value. (That is, don''t convert the
    vectors to lists at any time!)**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**不要将列表用作中间值。（也就是说，任何时候都不要将向量转换为列表！）**'
- en: Exercise 7
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习 7
- en: 'Sorting a vector:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对向量进行排序：
- en: '**a)** Write `bubble-sort!`, which takes a vector of numbers and rearranges
    them to be in increasing order. (You''ll modify the argument vector; do not create
    a new one.) Use the following algorithm for your definition: 1\. Go through the
    array, looking at two adjacent elements at a time, starting with elements 0 and
    If the earlier element is larger than the later element, swap them. Then look
    at the next overlapping pair (0 and 1, then 1 and 2, etc.). 2\. Recursively `bubble-sort`
    all but the last element (which is now the largest element). 3\. Stop when you
    have only one element to sort.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**a)** 编写`bubble-sort!`，它接受一个数字向量并重新排列为递增顺序。（你将修改参数向量；不要创建新的。）使用以下算法进行定义：1\.
    遍历数组，一次查看两个相邻的元素，从元素0开始。如果较早的元素大于较晚的元素，则交换它们。然后查看下一个重叠的对（0和1，然后1和2，依此类推）。2\. 递归地`bubble-sort`除了最后一个元素之外的所有元素（现在是最大的元素）。3\.
    当只有一个元素需要排序时停止。'
- en: '**b)** Prove that this algorithm really does sort the vector. **Hint:** Prove
    the parenthetical claim in step 2.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**b)** 证明这个算法确实对向量进行了排序。**提示：证明第2步中的括号声明。**'
- en: '**c)** What is the order of growth of the running time of this algorithm?'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**c)** 这个算法的运行时间增长顺序是多少？'
- en: '**Don''t use a list as an intermediate value. (That is, don''t convert the
    vectors to lists at any time!)**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**不要使用列表作为中间值。（也就是说，任何时候都不要将向量转换为列表！）**'
- en: 'Extra for Experts: Exercise 8'
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 专家级额外练习：练习8
- en: '**Do this if you want to. This is NOT for credit.**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你愿意的话可以做这个。这不计入学分。**'
- en: Abelson & Sussman, exercises [3.19](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.19)
    and [3.23](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.23).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Abelson & Sussman，练习[3.19](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.19)和[3.23](http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_thm_3.23)。
- en: Exercise 3.19 is especially challenging, so props to you if you solve it. You'll
    need to look at some of the other exercises you may have skipped in this section.
    Exercise 3.23 is slightly easier, but be careful about the Θ(1) running time requirement.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 练习3.19尤为具有挑战性，所以如果你解决了它，那就太棒了。你需要查看一些你可能在本节中跳过的其他练习。练习3.23稍微容易一些，但要注意Θ(1)运行时间要求。
- en: 'Extra for Experts: Exercise 9'
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 专家级额外练习：练习9
- en: '**Do this if you want to. This is NOT for credit.**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你愿意的话可以做这个。这不计入学分。**'
- en: 'Write the procedure `cxr-name`. Its argument will be a function made by composing
    `cars` and `cdrs`. It should return the appropriate name for that function:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 编写过程`cxr-name`。它的参数将是由`cars`和`cdrs`组合而成的函数。它应返回该函数的适当名称：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Submit Your Homework!
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提交你的作业！
- en: For instructions, see [this guide](../submit.html). It covers basic terminal
    commands and assignment submission.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有关说明，请参阅[此指南](../submit.html)。它涵盖了基本的终端命令和作业提交。
- en: If you have any trouble submitting, do not hesitate to ask a TA!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提交时遇到任何问题，请不要犹豫向助教求助！
