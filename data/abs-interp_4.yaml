- en: 4  Examples of abstract-interpretation-based static analyses
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4 基于抽象解释的静态分析示例
- en: 4.1  Numerical Analysis
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.1 数值分析
- en: Contrary to dataflow analyses on lattices satisfying the ascending/descending
    chain condition in the seventies, the generalization to precise static analyses
    using numerical domains such as intervals [[21](#CousotCousot76-1-ISOP)], octagons
    [[83](#Mine01-pado2)] or polyhedra are in infinite abstract domains whence required
    the introduction of new widening-based iteration convergence acceleration methods
    to become effective.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与七十年代满足升/降链条件的格上数据流分析相反，使用数值域（如区间 [[21](#CousotCousot76-1-ISOP)]、八边形 [[83](#Mine01-pado2)]
    或多边形）进行精确静态分析的泛化位于无限抽象域中，因此需要引入新的基于扩展的迭代收敛加速方法才能变得有效。
- en: 4.2  Interval analysis
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2 区间分析
- en: The analysis of the interval in which the values of variables do range [[21](#CousotCousot76-1-ISOP),[22](#CousotCousot77-1-POPL)].
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 分析变量值范围内的区间 [[21](#CousotCousot76-1-ISOP),[22](#CousotCousot77-1-POPL)]。
- en: 4.3  Octagonal analysis
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.3 八边形分析
- en: The analysis of the octagon in which the values of pairs of variables do range
    (that is the determination of constraints of the form +/-*x*+/-*y* ≤ *c* where
    *x* and *y* are variables and *c* a rational constant automatically discovered
    by the analysis) [[83](#Mine01-pado2),[84](#Mine02-sas),[85](#Mine-HOSC06)].
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 分析八边形，其中变量对的值的范围（即通过分析自动发现的形式为 +/-*x*+/-*y* ≤ *c* 的约束，其中 *x* 和 *y* 是变量，*c* 是有理常数）[[83](#Mine01-pado2),[84](#Mine02-sas),[85](#Mine-HOSC06)]。
- en: 4.4  Polyhedral analysis
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.4 多边形分析
- en: The analysis of the polyhedron in which the values of tuples of variables do
    range. This abstract interpretation can be used for the automatic discovery of
    invariant linear inequalities among numerical variables of a program [[44](#CousotHalbwachs78-1-POPL)].Delay
    analysis in synchronous programs [[64](#Halbwachs93-1)], safety analysis of reactive
    systems [[65](#Halbwachs94-1)], quantitative time properties of synchronous programs,
    and linear hybrid systems [[66](#HalbwachsProyRoumanoff97-1)] are among the many
    applications.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 分析多边形，在这个多边形中变量元组的值的范围。这种抽象解释可用于程序数值变量之间的不变线性不等式的自动发现 [[44](#CousotHalbwachs78-1-POPL)]。在同步程序中进行延迟分析
    [[64](#Halbwachs93-1)]，对反应系统进行安全性分析 [[65](#Halbwachs94-1)]，同步程序的定量时间特性，以及线性混合系统
    [[66](#HalbwachsProyRoumanoff97-1)] 等是许多应用之一。
- en: 4.5  Congruence analysis
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.5 同余分析
- en: The analysis of the congruence invariants satisfied by the values of one [[62](#Granger89-1)]
    or several numerical variables [[84](#Mine02-sas)].
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对一个或多个数值变量的值满足的同余不变量进行分析 [[62](#Granger89-1)]。
- en: 4.6  Roundoff error analysis
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.6 舍入误差分析
- en: The analysis of the origin of roundoff errors in floating point computations
    [[60](#GoubaultMartelPutot02-ESOP),[77](#Martel-VMCAI05)].
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 分析浮点计算中舍入误差的来源 [[60](#GoubaultMartelPutot02-ESOP),[77](#Martel-VMCAI05)]。
- en: 4.7  Symbolic analysis
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.7 符号分析
- en: The analysis of symbolic properties of programs, usually as opposed to numerical
    program properties e.g. heap reachability analysis [[23](#CousotCousot77-2),[24](#CousotCousot77-3)].
    Also understood as the symbolic representation of abstract domains, which is almost
    always the case, since abstract properties cannot generally be simplistically
    represented as the set of concrete values which have this property (except in
    enumerative model-checking [[10](#ClarkeGrumbergPeled99-1)]).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 分析程序的符号属性，通常是与数值程序属性相对的，例如堆可达性分析 [[23](#CousotCousot77-2),[24](#CousotCousot77-3)]。也被理解为抽象域的符号表示，这几乎总是情况，因为抽象属性通常不能简单地表示为具有该属性的具体值的集合（除了在枚举模型检验中
    [[10](#ClarkeGrumbergPeled99-1)]）。
- en: 4.8  Strictness and comportment analysis
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.8 严格性和行为分析
- en: Strictness analysis determines whether a parameter in a lazy language is always
    evaluated in a procedure call or this call does not terminate. This information
    is useful to replace a call-by-need by a more efficient call by value [[91](#Mycroft80-1)].
    Introduced by Alan Mycroft [[92](#Mycroft81-1)], this analysis was at the origin
    of the use of abstract interpretation in the functional language community [[1](#AbramskyHankin87-1),[73](#JonesNielson95-1)].
    Strictness analysis [[8](#BurnHankinAbramsky86-1),[95](#Nielson-POPL87)] can be
    embedded in the lattice of comportment analyses [[33](#CousotCousot94-1-ICCL)].
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 严格性分析确定惰性语言中参数是否总是在过程调用中求值，或者此调用是否不终止。 此信息对于将按需调用替换为更有效的按值调用很有用[[91](#Mycroft80-1)]。
    由Alan Mycroft引入[[92](#Mycroft81-1)]，这项分析是在函数语言社区中使用抽象解释的起源[[1](#AbramskyHankin87-1),[73](#JonesNielson95-1)]。
    严格性分析[[8](#BurnHankinAbramsky86-1),[95](#Nielson-POPL87)]可以嵌入到行为分析的格中[[33](#CousotCousot94-1-ICCL)]。
- en: 4.9  Mode inference/groundness/sharing analysis
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.9  模式推断/groundness/sharing分析
- en: The necessity of optimizing Prolog implementations, in particular the occur
    checks during unification, is at the origin of the use of abstract interpretation
    for the static analysis of Prolog [[80](#Mellish86-1),[45](#DebrayWarren86-2),[107](#Sondergaard86-1),[75](#MannilaUkkonen87-1),[76](#MarriottSondergaard88-1),[90](#MuthukumarHermenegildo89-1),[7](#Bruynooghe91-1),[12](#CortesiFile91-1),[2](#BarbutiEtAl93-1)],
    [[29](#CousotCousot92-2-JLP)].
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对Prolog实现进行优化的必要性，特别是在统一过程中的出现检查，导致了将抽象解释用于Prolog的静态分析[[80](#Mellish86-1),[45](#DebrayWarren86-2),[107](#Sondergaard86-1),[75](#MannilaUkkonen87-1),[76](#MarriottSondergaard88-1),[90](#MuthukumarHermenegildo89-1),[7](#Bruynooghe91-1),[12](#CortesiFile91-1),[2](#BarbutiEtAl93-1)],
    [[29](#CousotCousot92-2-JLP)]。
- en: 4.10  Aliasing and pointer analysis
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.10  别名和指针分析
- en: The static analysis of imperative programs must take accesses and side effects
    through aliases and pointers into account [[23](#CousotCousot77-2)]. The profuse
    literature on pointer analysis is surveyed in [[46](#Deutsch95-1),[68](#Hind-PASTE01)].
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对命令式程序的静态分析必须考虑通过别名和指针进行的访问和副作用[[23](#CousotCousot77-2)]。 关于指针分析的大量文献在[[46](#Deutsch95-1),[68](#Hind-PASTE01)]中进行了调查。
- en: 4.11  Escape analysis
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.11  逃逸分析
- en: Escape analysis is a static analysis that determines whether the lifetime of
    data exceeds its static scope [[96](#ParkGoldberg-PLDI92),[47](#Deutsch97-1)],
    [[4](#Blanchet-TOPLAS03)].
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 逃逸分析是一种静态分析，确定数据的生命周期是否超过其静态范围[[96](#ParkGoldberg-PLDI92),[47](#Deutsch97-1)],
    [[4](#Blanchet-TOPLAS03)]。
- en: 4.12  Heap analysis
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.12  堆分析
- en: Heap analysis consists in overapproximating the sets of sequences of graphs
    representing the memory heap at all time instants during execution. Applications
    range from *memory leak detection* to *shape analysis* that is the determination
    of the shape of data structures allocated on the heap [[103](#SagivRepsWilhelm00-CC),[102](#RinetzkyEtAl-POPL05)].
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 堆分析包括在执行期间所有时间点上对内存堆表示的图序列集合进行过度近似。 应用范围从*内存泄漏检测*到*形状分析*，即确定堆上分配的数据结构的形状[[103](#SagivRepsWilhelm00-CC),[102](#RinetzkyEtAl-POPL05)]。
- en: 4.13  Concurrency analysis
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.13  并发分析
- en: The static analysis of concurrent programs from shared-memory [[28](#CousotCousot84-1-BiermannGuihoKodratoff)]
    to [a]synchronous communication [[27](#CousotCousot80-1-ICALP)], a vast and difficult
    subject, with few analyses that do scale up.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 从共享内存的并发程序的静态分析[[28](#CousotCousot84-1-BiermannGuihoKodratoff)]到[异步通信](#CousotCousot80-1-ICALP)，这是一个广泛而困难的主题，很少有分析可以扩展。
- en: 4.14  Mobility analysis
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.14  移动性分析
- en: The analysis of dynamically allocated mobile processes (such as the pi-calculus).
    This involves the overapproximation of the set of sequences of graphs representing
    the process allocations and communications at all time instants during execution
    [[109](#Venet98-1),[51](#Feret-SAS01)].
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对动态分配的移动进程（如pi-演算）的分析。 这涉及到在执行期间对进程分配和通信的图序列集合进行过度近似[[109](#Venet98-1),[51](#Feret-SAS01)]。
- en: 4.15  Control flow analysis (CFA)
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.15  控制流分析（CFA）
- en: Control flow analysis aims at determining the possible flows of computation
    in higher-order functional languages [[70](#Jones-ICALP81),[106](#Shivers-Signot04)].
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 控制流分析旨在确定高阶函数语言中计算的可能流程[[70](#Jones-ICALP81),[106](#Shivers-Signot04)]。
- en: 4.16  Probabilistic analysis
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.16  概率分析
- en: The static analysis of probabilistic programs [[86](#Monniaux-SAS-00),[88](#Monniaux_POPL01),[89](#Monniaux_ESOP01)],
    [[48](#DiPierroHankinWiklicky-JLC05)].
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对概率程序的静态分析[[86](#Monniaux-SAS-00),[88](#Monniaux_POPL01),[89](#Monniaux_ESOP01)],
    [[48](#DiPierroHankinWiklicky-JLC05)]。
- en: 4.17  WCET analysis
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.17  WCET分析
- en: The static determination of the worst-case execution time [[49](#FerdinandHeckmannEtAL01-EMSOFT)]
    which involves the analysis of the cache behavior [[50](#FerdinandEtAl-SCP99)],
    the pipelines, etc.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对最坏情况执行时间的静态确定[[49](#FerdinandHeckmannEtAL01-EMSOFT)]涉及对缓存行为[[50](#FerdinandEtAl-SCP99)]、流水线等的分析。
- en: 4.18  Hardware analysis
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.18  硬件分析
- en: The static analysis of hardware formal descriptions such as asynchronous circuits
    [[108](#ThompsonMycroft-SAS04)].
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对硬件形式描述的静态分析，例如异步电路[[108](#ThompsonMycroft-SAS04)]。
